	.text
	.syntax unified
	.eabi_attribute	67, "2.09"
	.cpu	cortex-m7
	.eabi_attribute	6, 13
	.eabi_attribute	7, 77
	.eabi_attribute	8, 0
	.eabi_attribute	9, 2
	.fpu	fpv5-sp-d16
	.eabi_attribute	27, 1
	.eabi_attribute	36, 1
	.eabi_attribute	34, 1
	.eabi_attribute	17, 1
	.eabi_attribute	20, 1
	.eabi_attribute	21, 0
	.eabi_attribute	23, 3
	.eabi_attribute	24, 1
	.eabi_attribute	25, 1
	.eabi_attribute	28, 1
	.eabi_attribute	38, 1
	.eabi_attribute	14, 0
	.file	"thermostat_eem.8b4afdda-cgu.0"
	.section	.text._ZN4core3ops8function6FnOnce9call_once17h4b33d2a68af58905E,"ax",%progbits
	.p2align	1
	.type	core::ops::function::FnOnce::call_once::h4b33d2a68af58905,%function
	.code	16
	.thumb_func
core::ops::function::FnOnce::call_once::h4b33d2a68af58905:
.Lfunc_begin0:
	.fnstart
	.cfi_sections .debug_frame
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r11}
	str	r11, [sp, #-4]!
	.cfi_offset r11, -24
	bl	__primask_r
	and	r6, r0, #1
	bl	__cpsid
	movw	r0, :lower16:.L_MergedGlobals
	movt	r0, :upper16:.L_MergedGlobals
	ldrd	r1, r2, [r0, #64]
	eor	r1, r1, #1
	orrs	r1, r2
	bne	.LBB0_4
	movw	r1, #57360
	movt	r1, #57344
	ldr	r1, [r1]
	lsls	r1, r1, #15
	ldrd	r4, r5, [r0, #72]
	bmi	.LBB0_5
	cbz	r6, .LBB0_6
.LBB0_3:
	mov	r0, r4
	mov	r1, r5
	ldr	r11, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.LBB0_4:
	movs	r4, #0
	movs	r5, #0
	cmp	r6, #0
	bne	.LBB0_3
	b	.LBB0_6
.LBB0_5:
	adds	r4, #1
	adc	r5, r5, #0
	strd	r4, r5, [r0, #72]
	cmp	r6, #0
	bne	.LBB0_3
.LBB0_6:
	bl	__cpsie
	mov	r0, r4
	mov	r1, r5
	ldr	r11, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.Lfunc_end0:
	.size	core::ops::function::FnOnce::call_once::h4b33d2a68af58905, .Lfunc_end0-core::ops::function::FnOnce::call_once::h4b33d2a68af58905
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN4core3ptr25drop_in_place$LT$bool$GT$17h0b92a80a750bd66fE","ax",%progbits
	.p2align	1
	.type	core::ptr::drop_in_place<bool>::h0b92a80a750bd66f,%function
	.code	16
	.thumb_func
core::ptr::drop_in_place<bool>::h0b92a80a750bd66f:
.Lfunc_begin1:
	.fnstart
	.cfi_startproc
	bx	lr
.Lfunc_end1:
	.size	core::ptr::drop_in_place<bool>::h0b92a80a750bd66f, .Lfunc_end1-core::ptr::drop_in_place<bool>::h0b92a80a750bd66f
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN6minimq2de11deserialize14ReceivedPacket13parse_message17h034bbc7cb83704e5E,"ax",%progbits
	.p2align	2
	.type	minimq::de::deserialize::ReceivedPacket::parse_message::h034bbc7cb83704e5,%function
	.code	16
	.thumb_func
minimq::de::deserialize::ReceivedPacket::parse_message::h034bbc7cb83704e5:
.Lfunc_begin2:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10}
	push.w	{r8, r9, r10}
	.cfi_offset r10, -24
	.cfi_offset r9, -28
	.cfi_offset r8, -32
	.pad	#680
	sub.w	sp, sp, #680
	mov	r5, r1
	ldr	r1, [r1, #12]
	cmp	r1, #0
	bne.w	.LBB2_55
	mov	r4, r0
	ldr	r0, [r5, #4]
	cmp	r0, #1
	mov.w	r0, #-1
	str	r0, [r5, #12]
	bne.w	.LBB2_37
	ldr	r0, [r5, #16]
	ldr	r2, [r5, #8]
	adds	r1, r0, #1
	cmp	r1, r2
	bls	.LBB2_4
.LBB2_3:
	movs	r0, #1
	b	.LBB2_38
.LBB2_4:
	cmp.w	r0, #512
	bhi.w	.LBB2_56
	beq.w	.LBB2_57
	add	r0, r5
	ldrb	r6, [r0, #20]
	movs	r0, #0
	strd	r0, r1, [r5, #12]
	mov	r0, r5
	bl	minimq::de::packet_reader::PacketReader<_>::read_variable_length_integer::hc402570f88d76cbb
	lsls	r2, r0, #31
	bne	.LBB2_11
	lsrs	r0, r6, #4
	movs	r2, #0
.LBB2_8:
	cmp	r2, #16
	bhi	.LBB2_12
	subs	r3, r2, #1
	adds	r2, #1
	uxtb	r3, r3
	cmp	r3, r0
	bne	.LBB2_8
	ldr	r2, [r5, #4]
	cmp	r2, #1
	beq	.LBB2_13
	b	.LBB2_45
.LBB2_11:
	lsrs	r0, r0, #8
	orr.w	r0, r0, r1, lsl #24
	b	.LBB2_39
.LBB2_12:
	movs	r0, #255
	ldr	r2, [r5, #4]
	cmp	r2, #1
	bne.w	.LBB2_45
.LBB2_13:
	ldr	r2, [r5, #12]
	mvn	r3, #-2147483648
	cmp	r2, r3
	bhs.w	.LBB2_58
	ldr	r2, [r5, #8]
	ldr	r3, [r5, #16]
	subs	r2, r2, r3
	cmp	r2, r1
	bne.w	.LBB2_45
	sxtb	r0, r0
	subs	r0, #2
	cmp	r0, #11
	bhi.w	.LBB2_40
	and	r2, r6, #15
.LCPI2_0:
	tbb	[pc, r0]
.LJTI2_0:
	.byte	(.LBB2_18-(.LCPI2_0+4))/2
	.byte	(.LBB2_21-(.LCPI2_0+4))/2
	.byte	(.LBB2_28-(.LCPI2_0+4))/2
	.byte	(.LBB2_40-(.LCPI2_0+4))/2
	.byte	(.LBB2_40-(.LCPI2_0+4))/2
	.byte	(.LBB2_40-(.LCPI2_0+4))/2
	.byte	(.LBB2_40-(.LCPI2_0+4))/2
	.byte	(.LBB2_41-(.LCPI2_0+4))/2
	.byte	(.LBB2_40-(.LCPI2_0+4))/2
	.byte	(.LBB2_40-(.LCPI2_0+4))/2
	.byte	(.LBB2_40-(.LCPI2_0+4))/2
	.byte	(.LBB2_44-(.LCPI2_0+4))/2
	.p2align	1
.LBB2_18:
	cmp	r2, #0
	bne.w	.LBB2_45
	add	r6, sp, #508
	mov	r1, r5
	mov	r0, r6
	bl	minimq::de::deserialize::parse_connack::hb7212ae54fa3b408
	ldrb.w	r0, [sp, #508]
	cmp	r0, #0
	bne.w	.LBB2_43
	add.w	r0, sp, #338
	adds	r1, r6, #4
	adds	r5, r0, #2
	movs	r2, #168
	mov	r0, r5
	bl	__aeabi_memcpy
	add.w	r0, r4, #8
	movs	r2, #168
	mov	r1, r5
	bl	__aeabi_memcpy
	movs	r0, #0
	str	r0, [r4, #4]
	strb	r0, [r4]
	add.w	sp, sp, #680
	pop.w	{r8, r9, r10}
	pop	{r4, r5, r6, r7, pc}
.LBB2_21:
	add	r0, sp, #508
	mov	r1, r5
	bl	minimq::de::packet_reader::PacketReader<_>::read_utf8_string::hd700b0b0ed6ab82e
	ldrb.w	r0, [sp, #508]
	cmp	r0, #0
	bne.w	.LBB2_43
	add	r6, sp, #508
	mov	r1, r5
	mov	r0, r6
	ldrd	r8, r9, [sp, #512]
	bl	minimq::de::packet_reader::PacketReader<_>::read_properties::hf2ea26764b522615
	ldrb.w	r0, [sp, #508]
	cmp	r0, #0
	bne.w	.LBB2_43
	add.w	r0, sp, #338
	adds	r1, r6, #4
	adds	r6, r0, #2
	movs	r2, #164
	mov	r0, r6
	bl	__aeabi_memcpy
	add	r0, sp, #172
	movs	r2, #164
	mov	r1, r6
	bl	__aeabi_memcpy
	ldr	r1, [r5, #12]
	mvn	r0, #-2147483648
	cmp	r1, r0
	bhs.w	.LBB2_60
	ldr	r0, [r5, #4]
	cmp	r0, #1
	add.w	r0, r1, #1
	str	r0, [r5, #12]
	bne.w	.LBB2_54
	ldr	r0, [r5, #16]
	ldr	r3, [r5, #8]
	cmp	r3, r0
	blo.w	.LBB2_61
	cmp.w	r3, #512
	bhi.w	.LBB2_62
	adds	r2, r5, r0
	sub.w	r10, r3, r0
	add.w	r6, r2, #20
	str	r1, [r5, #12]
	add.w	r0, r4, #16
	add	r1, sp, #172
	movs	r2, #164
	bl	__aeabi_memcpy4
	adds	r1, r4, #4
	movs	r0, #1
	strd	r6, r10, [r4, #180]
	stm.w	r1, {r0, r8, r9}
	b	.LBB2_53
.LBB2_28:
	mov	r0, r5
	bl	minimq::de::packet_reader::PacketReader<_>::read_u16::h557d607ffb28ea51
	mov	r6, r0
	lsls	r0, r0, #31
	bne	.LBB2_47
	ldr	r0, [r5, #4]
	ldr	r1, [r5, #8]
	cmp	r0, #1
	it	eq
	cmpeq	r1, #4
	beq	.LBB2_49
	ldr	r2, [r5, #12]
	cmp	r2, #0
	bne.w	.LBB2_55
	cmp	r0, #1
	mov.w	r0, #-1
	str	r0, [r5, #12]
	bne	.LBB2_37
	ldr	r0, [r5, #16]
	adds	r2, r0, #1
	cmp	r2, r1
	bhi.w	.LBB2_3
	cmp.w	r0, #512
	bhi.w	.LBB2_56
	beq.w	.LBB2_57
	add	r0, r5
	add.w	r8, sp, #508
	mov	r1, r5
	ldrb.w	r9, [r0, #20]
	movs	r0, #0
	strd	r0, r2, [r5, #12]
	mov	r0, r8
	bl	minimq::de::packet_reader::PacketReader<_>::read_properties::hf2ea26764b522615
	ldrb.w	r0, [sp, #508]
	cbnz	r0, .LBB2_43
	add.w	r0, sp, #338
	add.w	r1, r8, #4
	adds	r5, r0, #2
	movs	r2, #164
	mov	r0, r5
	bl	__aeabi_memcpy
	add	r0, sp, #172
	movs	r2, #164
	adds	r0, #2
	mov	r1, r5
	bl	__aeabi_memcpy
	b	.LBB2_50
.LBB2_37:
	movs	r0, #5
.LBB2_38:
	movs	r1, #0
	str	r1, [r5, #12]
.LBB2_39:
	strb	r0, [r4, #1]
	movs	r0, #1
	strb	r0, [r4]
	add.w	sp, sp, #680
	pop.w	{r8, r9, r10}
	pop	{r4, r5, r6, r7, pc}
.LBB2_40:
	movw	r0, #2049
	b	.LBB2_46
.LBB2_41:
	cbnz	r2, .LBB2_45
	add	r6, sp, #508
	mov	r1, r5
	mov	r0, r6
	bl	minimq::de::deserialize::parse_suback::h127122dbbbe03438
	ldrb.w	r0, [sp, #508]
	cbz	r0, .LBB2_51
.LBB2_43:
	ldrb.w	r0, [sp, #509]
	b	.LBB2_39
.LBB2_44:
	cmp	r2, #0
	it	eq
	cmpeq	r1, #0
	beq	.LBB2_48
.LBB2_45:
	movw	r0, #1281
.LBB2_46:
	strh	r0, [r4]
	add.w	sp, sp, #680
	pop.w	{r8, r9, r10}
	pop	{r4, r5, r6, r7, pc}
.LBB2_47:
	lsrs	r0, r6, #8
	b	.LBB2_39
.LBB2_48:
	movs	r0, #4
	b	.LBB2_52
.LBB2_49:
	add	r0, sp, #172
	movs	r1, #164
	adds	r0, #2
	bl	__aeabi_memclr
	mov.w	r9, #0
.LBB2_50:
	add.w	r2, sp, #6
	add	r0, sp, #172
	adds	r5, r2, #2
	adds	r1, r0, #2
	movs	r2, #164
	mov	r0, r5
	lsrs	r6, r6, #16
	bl	__aeabi_memcpy
	add.w	r0, r4, #8
	movs	r2, #164
	mov	r1, r5
	bl	__aeabi_memcpy
	movs	r0, #2
	str	r0, [r4, #4]
	strh.w	r6, [r4, #172]
	strb.w	r9, [r4, #174]
	b	.LBB2_53
.LBB2_51:
	add.w	r0, sp, #338
	adds	r1, r6, #4
	adds	r5, r0, #2
	movs	r2, #168
	mov	r0, r5
	bl	__aeabi_memcpy
	add.w	r0, r4, #8
	movs	r2, #168
	mov	r1, r5
	bl	__aeabi_memcpy
	movs	r0, #3
.LBB2_52:
	str	r0, [r4, #4]
.LBB2_53:
	movs	r0, #0
	strb	r0, [r4]
	add.w	sp, sp, #680
	pop.w	{r8, r9, r10}
	pop	{r4, r5, r6, r7, pc}
.LBB2_54:
	str	r1, [r5, #12]
	movs	r0, #5
	b	.LBB2_39
.LBB2_55:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.11
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.352
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.362
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.11
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.352
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.362
	add	r2, sp, #508
	movs	r1, #16
	str	r6, [sp]
	bl	core::result::unwrap_failed::he67be68ddf63c991
	.inst.n	0xdefe
.LBB2_56:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.12
	mov.w	r1, #512
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.12
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB2_57:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.12
	movs	r0, #1
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.12
	movs	r1, #0
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB2_58:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.15
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.15
.LBB2_59:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.351
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.361
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.351
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.361
	add	r2, sp, #508
	movs	r1, #24
	str	r6, [sp]
	bl	core::result::unwrap_failed::he67be68ddf63c991
	.inst.n	0xdefe
.LBB2_60:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.9
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.9
	b	.LBB2_59
.LBB2_61:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.10
	mov	r1, r3
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.10
	bl	core::slice::index::slice_index_order_fail::h8a53f055fb6ee074
	.inst.n	0xdefe
.LBB2_62:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.10
	mov.w	r1, #512
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.10
	mov	r0, r3
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.Lfunc_end2:
	.size	minimq::de::deserialize::ReceivedPacket::parse_message::h034bbc7cb83704e5, .Lfunc_end2-minimq::de::deserialize::ReceivedPacket::parse_message::h034bbc7cb83704e5
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN6minimq2de11deserialize13parse_connack17hb7212ae54fa3b408E,"ax",%progbits
	.p2align	1
	.type	minimq::de::deserialize::parse_connack::hb7212ae54fa3b408,%function
	.code	16
	.thumb_func
minimq::de::deserialize::parse_connack::hb7212ae54fa3b408:
.Lfunc_begin3:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r11}
	push.w	{r8, r9, r11}
	.cfi_offset r11, -24
	.cfi_offset r9, -28
	.cfi_offset r8, -32
	.pad	#344
	sub	sp, #344
	ldr	r2, [r1, #12]
	cmp	r2, #0
	bne	.LBB3_17
	mov	r4, r0
	ldr	r0, [r1, #4]
	cmp	r0, #1
	mov.w	r0, #-1
	str	r0, [r1, #12]
	bne	.LBB3_4
	ldr	r0, [r1, #16]
	ldr	r3, [r1, #8]
	adds	r2, r0, #1
	cmp	r2, r3
	bls	.LBB3_7
	movs	r0, #1
	b	.LBB3_5
.LBB3_4:
	movs	r0, #5
.LBB3_5:
	movs	r2, #0
	str	r2, [r1, #12]
.LBB3_6:
	strb	r0, [r4, #1]
	movs	r0, #1
	strb	r0, [r4]
	add	sp, #344
	pop.w	{r8, r9, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB3_7:
	cmp.w	r0, #512
	bhi	.LBB3_19
	beq	.LBB3_18
	adds	r6, r1, r0
	movs	r5, #0
	ldrb	r6, [r6, #20]
	str	r5, [r1, #12]
	str	r2, [r1, #16]
	cmp	r6, #2
	bhs	.LBB3_12
	adds	r0, #2
	cmp	r0, r3
	mov.w	r3, #-1
	str	r3, [r1, #12]
	bls	.LBB3_13
	movs	r0, #0
	str	r0, [r1, #12]
	movw	r0, #257
	strh	r0, [r4]
	add	sp, #344
	pop.w	{r8, r9, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB3_12:
	movw	r0, #1281
	strh	r0, [r4]
	add	sp, #344
	pop.w	{r8, r9, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB3_13:
	cmp.w	r2, #512
	beq	.LBB3_18
	add	r2, r1
	add	r5, sp, #176
	mov.w	r9, #0
	ldrb.w	r8, [r2, #20]
	strd	r9, r0, [r1, #12]
	mov	r0, r5
	bl	minimq::de::packet_reader::PacketReader<_>::read_properties::hf2ea26764b522615
	ldrb.w	r0, [sp, #176]
	cbz	r0, .LBB3_16
	ldrb.w	r0, [sp, #177]
	b	.LBB3_6
.LBB3_16:
	add.w	r0, sp, #10
	adds	r1, r5, #4
	adds	r5, r0, #2
	movs	r2, #164
	mov	r0, r5
	bl	__aeabi_memcpy
	adds	r0, r4, #4
	movs	r2, #164
	mov	r1, r5
	bl	__aeabi_memcpy
	strb.w	r6, [r4, #168]
	strb.w	r8, [r4, #169]
	strb.w	r9, [r4]
	add	sp, #344
	pop.w	{r8, r9, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB3_17:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.352
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.362
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.11
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.352
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.362
	add	r2, sp, #176
	movs	r1, #16
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.11
	str	r6, [sp]
	bl	core::result::unwrap_failed::he67be68ddf63c991
	.inst.n	0xdefe
.LBB3_18:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.12
	movs	r0, #1
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.12
	movs	r1, #0
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB3_19:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.12
	mov.w	r1, #512
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.12
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.Lfunc_end3:
	.size	minimq::de::deserialize::parse_connack::hb7212ae54fa3b408, .Lfunc_end3-minimq::de::deserialize::parse_connack::hb7212ae54fa3b408
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN6minimq2de11deserialize12parse_suback17h127122dbbbe03438E,"ax",%progbits
	.p2align	1
	.type	minimq::de::deserialize::parse_suback::h127122dbbbe03438,%function
	.code	16
	.thumb_func
minimq::de::deserialize::parse_suback::h127122dbbbe03438:
.Lfunc_begin4:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r11}
	push.w	{r8, r9, r11}
	.cfi_offset r11, -24
	.cfi_offset r9, -28
	.cfi_offset r8, -32
	.pad	#504
	sub	sp, #504
	mov	r4, r0
	mov	r0, r1
	mov	r5, r1
	bl	minimq::de::packet_reader::PacketReader<_>::read_u16::h557d607ffb28ea51
	mov	r6, r0
	lsls	r0, r0, #31
	bne	.LBB4_3
	add.w	r8, sp, #336
	mov	r1, r5
	mov	r0, r8
	bl	minimq::de::packet_reader::PacketReader<_>::read_properties::hf2ea26764b522615
	ldrb.w	r0, [sp, #336]
	cbz	r0, .LBB4_4
	ldrb.w	r0, [sp, #337]
	b	.LBB4_10
.LBB4_3:
	lsrs	r0, r6, #8
	b	.LBB4_10
.LBB4_4:
	add.w	r0, sp, #170
	add.w	r1, r8, #4
	add.w	r8, r0, #2
	movs	r2, #164
	mov	r0, r8
	bl	__aeabi_memcpy
	add	r0, sp, #4
	movs	r2, #164
	mov	r1, r8
	bl	__aeabi_memcpy
	ldr	r0, [r5, #12]
	cbnz	r0, .LBB4_14
	ldr	r0, [r5, #4]
	cmp	r0, #1
	mov.w	r0, #-1
	str	r0, [r5, #12]
	bne	.LBB4_8
	ldr	r0, [r5, #16]
	ldr	r2, [r5, #8]
	adds	r1, r0, #1
	cmp	r1, r2
	bls	.LBB4_11
	movs	r0, #1
	b	.LBB4_9
.LBB4_8:
	movs	r0, #5
.LBB4_9:
	movs	r1, #0
	str	r1, [r5, #12]
.LBB4_10:
	strb	r0, [r4, #1]
	movs	r0, #1
	strb	r0, [r4]
	add	sp, #504
	pop.w	{r8, r9, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB4_11:
	cmp.w	r0, #512
	bhi	.LBB4_15
	beq	.LBB4_16
	add	r0, r5
	mov.w	r9, #0
	movs	r2, #164
	lsrs	r6, r6, #16
	ldrb.w	r8, [r0, #20]
	adds	r0, r4, #4
	strd	r9, r1, [r5, #12]
	add	r1, sp, #4
	bl	__aeabi_memcpy4
	strh.w	r6, [r4, #168]
	strb.w	r8, [r4, #170]
	strb.w	r9, [r4]
	add	sp, #504
	pop.w	{r8, r9, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB4_14:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.352
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.362
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.11
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.352
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.362
	add	r2, sp, #336
	movs	r1, #16
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.11
	str	r6, [sp]
	bl	core::result::unwrap_failed::he67be68ddf63c991
	.inst.n	0xdefe
.LBB4_15:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.12
	mov.w	r1, #512
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.12
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB4_16:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.12
	movs	r0, #1
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.12
	movs	r1, #0
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.Lfunc_end4:
	.size	minimq::de::deserialize::parse_suback::h127122dbbbe03438, .Lfunc_end4-minimq::de::deserialize::parse_suback::h127122dbbbe03438
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN80_$LT$num_enum..TryFromPrimitiveError$LT$Enum$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hbf382f91c07847b4E","ax",%progbits
	.p2align	1
	.type	<num_enum::TryFromPrimitiveError<Enum> as core::fmt::Debug>::fmt::hbf382f91c07847b4,%function
	.code	16
	.thumb_func
<num_enum::TryFromPrimitiveError<Enum> as core::fmt::Debug>::fmt::hbf382f91c07847b4:
.Lfunc_begin5:
	.fnstart
	.cfi_startproc
	.save	{r4, r6, r7, lr}
	push	{r4, r6, r7, lr}
	.cfi_def_cfa_offset 16
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r4, -16
	.setfp	r7, sp, #8
	add	r7, sp, #8
	.cfi_def_cfa r7, 8
	.pad	#16
	sub	sp, #16
	mov	r3, r1
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.2
	mov	r4, r0
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.2
	movs	r2, #21
	mov	r0, r3
	bl	core::fmt::Formatter::debug_struct::h410abba8da9e6590
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.4
	movs	r2, #6
	strd	r0, r1, [sp, #8]
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.4
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.3
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.3
	add	r0, sp, #8
	str	r3, [sp]
	mov	r3, r4
	bl	core::fmt::builders::DebugStruct::field::hf57541a1df3c3ba1
	bl	core::fmt::builders::DebugStruct::finish::h13801c6cd64a79cd
	add	sp, #16
	pop	{r4, r6, r7, pc}
.Lfunc_end5:
	.size	<num_enum::TryFromPrimitiveError<Enum> as core::fmt::Debug>::fmt::hbf382f91c07847b4, .Lfunc_end5-<num_enum::TryFromPrimitiveError<Enum> as core::fmt::Debug>::fmt::hbf382f91c07847b4
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN6minimq2de13packet_reader21PacketReader$LT$_$GT$28read_variable_length_integer17hc402570f88d76cbbE","ax",%progbits
	.p2align	1
	.type	minimq::de::packet_reader::PacketReader<_>::read_variable_length_integer::hc402570f88d76cbb,%function
	.code	16
	.thumb_func
minimq::de::packet_reader::PacketReader<_>::read_variable_length_integer::hc402570f88d76cbb:
.Lfunc_begin6:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r7, lr}
	push	{r4, r5, r7, lr}
	.cfi_def_cfa_offset 16
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r5, -12
	.cfi_offset r4, -16
	.setfp	r7, sp, #8
	add	r7, sp, #8
	.cfi_def_cfa r7, 8
	.pad	#8
	sub	sp, #8
	ldr	r1, [r0, #4]
	cmp	r1, #1
	ldr	r1, [r0, #12]
	bne	.LBB6_4
	cmp	r1, #0
	bne	.LBB6_20
	ldr.w	lr, [r0, #16]
	mov.w	r1, #-1
	ldr.w	r12, [r0, #8]
	add.w	r3, lr, #1
	cmp	r3, r12
	str	r1, [r0, #12]
	bls	.LBB6_7
.LBB6_3:
	movs	r3, #1
	b	.LBB6_6
.LBB6_4:
	cmp	r1, #0
	bne	.LBB6_20
	movs	r3, #5
.LBB6_6:
	movs	r1, #0
	str	r1, [r0, #12]
	movs	r2, #1
	orr.w	r0, r2, r3, lsl #8
	add	sp, #8
	pop	{r4, r5, r7, pc}
.LBB6_7:
	cmp.w	lr, #512
	bhi	.LBB6_22
	beq	.LBB6_21
	add.w	r1, r0, lr
	movs	r2, #0
	ldrsb.w	r1, [r1, #20]
	str	r2, [r0, #12]
	str	r3, [r0, #16]
	cmp.w	r1, #-1
	and	r1, r1, #127
	ble	.LBB6_11
.LBB6_10:
	movs	r3, #6
	orr.w	r0, r2, r3, lsl #8
	add	sp, #8
	pop	{r4, r5, r7, pc}
.LBB6_11:
	add.w	r4, lr, #2
	mov.w	r2, #-1
	cmp	r4, r12
	str	r2, [r0, #12]
	bhi	.LBB6_3
	cmp.w	r3, #512
	beq	.LBB6_21
	adds	r2, r0, r3
	ldrsb.w	r3, [r2, #20]
	movs	r2, #0
	str	r2, [r0, #12]
	and	r5, r3, #127
	cmp.w	r3, #-1
	str	r4, [r0, #16]
	orr.w	r1, r1, r5, lsl #7
	bgt	.LBB6_10
	add.w	r3, lr, #3
	mov.w	r2, #-1
	cmp	r3, r12
	str	r2, [r0, #12]
	bhi	.LBB6_3
	cmp.w	r4, #512
	beq	.LBB6_21
	adds	r2, r0, r4
	ldrsb.w	r4, [r2, #20]
	movs	r2, #0
	str	r2, [r0, #12]
	and	r5, r4, #127
	cmp.w	r4, #-1
	str	r3, [r0, #16]
	orr.w	r1, r1, r5, lsl #14
	bgt	.LBB6_10
	add.w	r2, lr, #4
	mov.w	r5, #-1
	cmp	r2, r12
	str	r5, [r0, #12]
	bhi	.LBB6_3
	cmp.w	r3, #512
	beq	.LBB6_21
	add	r3, r0
	movs	r4, #0
	ldrb	r3, [r3, #20]
	strd	r4, r2, [r0, #12]
	and	r5, r3, #127
	lsrs	r2, r3, #7
	orr.w	r1, r1, r5, lsl #21
	movs	r3, #6
	orr.w	r0, r2, r3, lsl #8
	add	sp, #8
	pop	{r4, r5, r7, pc}
.LBB6_20:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.352
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.362
	movw	r5, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.11
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.352
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.362
	add	r2, sp, #4
	movs	r1, #16
	movt	r5, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.11
	str	r5, [sp]
	bl	core::result::unwrap_failed::he67be68ddf63c991
	.inst.n	0xdefe
.LBB6_21:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.12
	movs	r0, #1
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.12
	movs	r1, #0
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB6_22:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.12
	mov.w	r1, #512
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.12
	mov	r0, lr
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.Lfunc_end6:
	.size	minimq::de::packet_reader::PacketReader<_>::read_variable_length_integer::hc402570f88d76cbb, .Lfunc_end6-minimq::de::packet_reader::PacketReader<_>::read_variable_length_integer::hc402570f88d76cbb
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN8cortex_m9interrupt7disable17hb29bc2bb0325fad7E,"ax",%progbits
	.p2align	1
	.type	cortex_m::interrupt::disable::hb29bc2bb0325fad7,%function
	.code	16
	.thumb_func
cortex_m::interrupt::disable::hb29bc2bb0325fad7:
.Lfunc_begin7:
	.fnstart
	.cfi_startproc
	b	__cpsid
.Lfunc_end7:
	.size	cortex_m::interrupt::disable::hb29bc2bb0325fad7, .Lfunc_end7-cortex_m::interrupt::disable::hb29bc2bb0325fad7
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN6minimq2de13packet_reader21PacketReader$LT$_$GT$16read_utf8_string17hd700b0b0ed6ab82eE","ax",%progbits
	.p2align	1
	.type	minimq::de::packet_reader::PacketReader<_>::read_utf8_string::hd700b0b0ed6ab82e,%function
	.code	16
	.thumb_func
minimq::de::packet_reader::PacketReader<_>::read_utf8_string::hd700b0b0ed6ab82e:
.Lfunc_begin8:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r11}
	str	r11, [sp, #-4]!
	.cfi_offset r11, -24
	.pad	#24
	sub	sp, #24
	mov	r4, r0
	mov	r0, r1
	mov	r5, r1
	bl	minimq::de::packet_reader::PacketReader<_>::read_u16::h557d607ffb28ea51
	lsls	r1, r0, #31
	bne	.LBB8_3
	movw	r1, #65535
	movt	r1, #512
	cmp	r0, r1
	bls	.LBB8_4
	movw	r0, #257
	strh	r0, [r4]
	add	sp, #24
	ldr	r11, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.LBB8_3:
	lsrs	r0, r0, #8
	b	.LBB8_10
.LBB8_4:
	ldr	r1, [r5, #12]
	cbnz	r1, .LBB8_16
	ldr	r1, [r5, #4]
	cmp	r1, #1
	mov.w	r1, #-1
	str	r1, [r5, #12]
	bne	.LBB8_8
	lsrs	r2, r0, #16
	ldr	r0, [r5, #16]
	ldr	r1, [r5, #8]
	adds	r3, r0, r2
	cmp	r3, r1
	bls	.LBB8_11
	movs	r0, #1
	b	.LBB8_9
.LBB8_8:
	movs	r0, #5
.LBB8_9:
	movs	r1, #0
	str	r1, [r5, #12]
.LBB8_10:
	strb	r0, [r4, #1]
	movs	r0, #1
	strb	r0, [r4]
	add	sp, #24
	ldr	r11, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.LBB8_11:
	cmp.w	r0, #512
	bhi	.LBB8_17
	rsb.w	r1, r0, #512
	cmp	r1, r2
	blo	.LBB8_18
	add	r0, r5
	movs	r6, #0
	add.w	r1, r0, #20
	add	r0, sp, #8
	str	r6, [r5, #12]
	str	r3, [r5, #16]
	bl	core::str::converts::from_utf8::h12390dae7acf1b60
	ldr	r0, [sp, #8]
	cbz	r0, .LBB8_15
	movw	r0, #1281
	strh	r0, [r4]
	add	sp, #24
	ldr	r11, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.LBB8_15:
	ldr	r0, [sp, #12]
	str	r0, [r4, #4]
	ldr	r0, [sp, #16]
	str	r0, [r4, #8]
	strb	r6, [r4]
	add	sp, #24
	ldr	r11, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.LBB8_16:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.352
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.362
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.13
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.352
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.362
	add	r2, sp, #20
	movs	r1, #16
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.13
	str	r6, [sp]
	bl	core::result::unwrap_failed::he67be68ddf63c991
	.inst.n	0xdefe
.LBB8_17:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.14
	mov.w	r1, #512
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.14
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB8_18:
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.14
	mov	r0, r2
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.14
	mov	r2, r3
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.Lfunc_end8:
	.size	minimq::de::packet_reader::PacketReader<_>::read_utf8_string::hd700b0b0ed6ab82e, .Lfunc_end8-minimq::de::packet_reader::PacketReader<_>::read_utf8_string::hd700b0b0ed6ab82e
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN6minimq2de13packet_reader21PacketReader$LT$_$GT$16read_binary_data17h50471739a6cfcd92E","ax",%progbits
	.p2align	1
	.type	minimq::de::packet_reader::PacketReader<_>::read_binary_data::h50471739a6cfcd92,%function
	.code	16
	.thumb_func
minimq::de::packet_reader::PacketReader<_>::read_binary_data::h50471739a6cfcd92:
.Lfunc_begin9:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r7, lr}
	push	{r4, r5, r7, lr}
	.cfi_def_cfa_offset 16
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r5, -12
	.cfi_offset r4, -16
	.setfp	r7, sp, #8
	add	r7, sp, #8
	.cfi_def_cfa r7, 8
	.pad	#8
	sub	sp, #8
	mov	r4, r0
	mov	r0, r1
	mov	r5, r1
	bl	minimq::de::packet_reader::PacketReader<_>::read_u16::h557d607ffb28ea51
	lsls	r1, r0, #31
	bne	.LBB9_5
	ldr	r1, [r5, #12]
	cbnz	r1, .LBB9_11
	ldr	r1, [r5, #4]
	cmp	r1, #1
	mov.w	r1, #-1
	str	r1, [r5, #12]
	bne	.LBB9_6
	lsrs	r0, r0, #16
	ldr	r3, [r5, #16]
	ldr	r1, [r5, #8]
	adds	r2, r3, r0
	cmp	r2, r1
	bls	.LBB9_7
	movs	r0, #1
	strb	r0, [r4, #1]
	b	.LBB9_10
.LBB9_5:
	lsrs	r0, r0, #8
	strb	r0, [r4, #1]
	movs	r0, #1
	strb	r0, [r4]
	add	sp, #8
	pop	{r4, r5, r7, pc}
.LBB9_6:
	movs	r0, #5
	strb	r0, [r4, #1]
	movs	r0, #1
	b	.LBB9_10
.LBB9_7:
	cmp.w	r3, #512
	bhi	.LBB9_12
	rsb.w	r1, r3, #512
	cmp	r1, r0
	blo	.LBB9_13
	adds	r1, r5, r3
	str	r2, [r5, #16]
	adds	r1, #20
	strd	r1, r0, [r4, #4]
	movs	r0, #0
.LBB9_10:
	strb	r0, [r4]
	movs	r0, #0
	str	r0, [r5, #12]
	add	sp, #8
	pop	{r4, r5, r7, pc}
.LBB9_11:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.352
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.362
	movw	r5, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.13
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.352
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.362
	add	r2, sp, #4
	movs	r1, #16
	movt	r5, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.13
	str	r5, [sp]
	bl	core::result::unwrap_failed::he67be68ddf63c991
	.inst.n	0xdefe
.LBB9_12:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.14
	mov.w	r1, #512
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.14
	mov	r0, r3
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB9_13:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.14
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.14
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.Lfunc_end9:
	.size	minimq::de::packet_reader::PacketReader<_>::read_binary_data::h50471739a6cfcd92, .Lfunc_end9-minimq::de::packet_reader::PacketReader<_>::read_binary_data::h50471739a6cfcd92
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN6minimq2de13packet_reader21PacketReader$LT$_$GT$8read_u3217h7e1088d9f3552124E","ax",%progbits
	.p2align	1
	.type	minimq::de::packet_reader::PacketReader<_>::read_u32::h7e1088d9f3552124,%function
	.code	16
	.thumb_func
minimq::de::packet_reader::PacketReader<_>::read_u32::h7e1088d9f3552124:
.Lfunc_begin10:
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	.pad	#8
	sub	sp, #8
	ldr	r1, [r0, #12]
	cbnz	r1, .LBB10_9
	ldr	r1, [r0, #4]
	cmp	r1, #1
	mov.w	r1, #-1
	str	r1, [r0, #12]
	bne	.LBB10_4
	ldr	r3, [r0, #16]
	ldr	r2, [r0, #8]
	adds	r1, r3, #4
	cmp	r1, r2
	bls	.LBB10_6
	movs	r2, #1
	b	.LBB10_5
.LBB10_4:
	movs	r2, #5
.LBB10_5:
	movs	r1, #0
	str	r1, [r0, #12]
	movs	r3, #1
	orr.w	r0, r3, r2, lsl #8
	add	sp, #8
	pop	{r7, pc}
.LBB10_6:
	cmp.w	r3, #512
	bhi	.LBB10_10
	cmp.w	r3, #508
	bhi	.LBB10_11
	adds	r2, r0, r3
	movs	r3, #0
	ldr	r2, [r2, #20]
	strd	r3, r1, [r0, #12]
	rev	r1, r2
	orr.w	r0, r3, r2, lsl #8
	add	sp, #8
	pop	{r7, pc}
.LBB10_9:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.352
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.362
	movw	r12, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.11
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.352
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.362
	add	r2, sp, #4
	movs	r1, #16
	movt	r12, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.11
	str.w	r12, [sp]
	bl	core::result::unwrap_failed::he67be68ddf63c991
	.inst.n	0xdefe
.LBB10_10:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.12
	mov.w	r1, #512
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.12
	mov	r0, r3
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB10_11:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.12
	rsb.w	r1, r3, #512
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.12
	movs	r0, #4
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.Lfunc_end10:
	.size	minimq::de::packet_reader::PacketReader<_>::read_u32::h7e1088d9f3552124, .Lfunc_end10-minimq::de::packet_reader::PacketReader<_>::read_u32::h7e1088d9f3552124
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN6minimq2de13packet_reader21PacketReader$LT$_$GT$8read_u1617h557d607ffb28ea51E","ax",%progbits
	.p2align	1
	.type	minimq::de::packet_reader::PacketReader<_>::read_u16::h557d607ffb28ea51,%function
	.code	16
	.thumb_func
minimq::de::packet_reader::PacketReader<_>::read_u16::h557d607ffb28ea51:
.Lfunc_begin11:
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	.pad	#8
	sub	sp, #8
	ldr	r1, [r0, #12]
	cbnz	r1, .LBB11_9
	ldr	r1, [r0, #4]
	cmp	r1, #1
	mov.w	r1, #-1
	str	r1, [r0, #12]
	bne	.LBB11_4
	ldr	r3, [r0, #16]
	ldr	r1, [r0, #8]
	adds	r2, r3, #2
	cmp	r2, r1
	bls	.LBB11_6
	mov.w	r1, #256
	b	.LBB11_5
.LBB11_4:
	mov.w	r1, #1280
.LBB11_5:
	movs	r2, #0
	str	r2, [r0, #12]
	movs	r0, #1
	orrs	r1, r2
	orrs	r0, r1
	add	sp, #8
	pop	{r7, pc}
.LBB11_6:
	cmp.w	r3, #512
	bhi	.LBB11_10
	cmp.w	r3, #510
	bhi	.LBB11_11
	adds	r1, r0, r3
	ldrh	r3, [r1, #20]
	movs	r1, #0
	strd	r1, r2, [r0, #12]
	movw	r2, #65535
	rev	r0, r3
	bic.w	r2, r0, r2
	movs	r0, #0
	orrs	r1, r2
	orrs	r0, r1
	add	sp, #8
	pop	{r7, pc}
.LBB11_9:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.352
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.362
	movw	r12, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.11
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.352
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.362
	add	r2, sp, #4
	movs	r1, #16
	movt	r12, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.11
	str.w	r12, [sp]
	bl	core::result::unwrap_failed::he67be68ddf63c991
	.inst.n	0xdefe
.LBB11_10:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.12
	mov.w	r1, #512
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.12
	mov	r0, r3
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB11_11:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.12
	rsb.w	r1, r3, #512
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.12
	movs	r0, #2
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.Lfunc_end11:
	.size	minimq::de::packet_reader::PacketReader<_>::read_u16::h557d607ffb28ea51, .Lfunc_end11-minimq::de::packet_reader::PacketReader<_>::read_u16::h557d607ffb28ea51
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN6minimq2de13packet_reader21PacketReader$LT$_$GT$15read_properties17hf2ea26764b522615E","ax",%progbits
	.p2align	2
	.type	minimq::de::packet_reader::PacketReader<_>::read_properties::hf2ea26764b522615,%function
	.code	16
	.thumb_func
minimq::de::packet_reader::PacketReader<_>::read_properties::hf2ea26764b522615:
.Lfunc_begin12:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#204
	sub	sp, #204
	mov	r5, r1
	mov	r4, r0
	add	r0, sp, #28
	movs	r1, #164
	bl	__aeabi_memclr4
	mov	r0, r5
	bl	minimq::de::packet_reader::PacketReader<_>::read_variable_length_integer::hc402570f88d76cbb
	lsls	r2, r0, #31
	mov	r10, r1
	bne.w	.LBB12_109
	cmp.w	r10, #0
	beq.w	.LBB12_112
	movw	r6, :lower16:.Lswitch.table._ZN6minimq2de13packet_reader21PacketReader$LT$_$GT$15read_properties17hf2ea26764b522615E
	mov.w	r9, #0
	movt	r6, :upper16:.Lswitch.table._ZN6minimq2de13packet_reader21PacketReader$LT$_$GT$15read_properties17hf2ea26764b522615E
	mov.w	r11, #0
.LBB12_3:
	mov	r0, r5
	bl	minimq::de::packet_reader::PacketReader<_>::read_variable_length_integer::hc402570f88d76cbb
	lsls	r2, r0, #31
	bne.w	.LBB12_113
	movs	r0, #0
.LBB12_5:
	cmp	r0, #27
	bhi.w	.LBB12_110
	ldr.w	r2, [r6, r0, lsl #2]
	adds	r0, #1
	cmp	r2, r1
	bne	.LBB12_5
	subs	r1, #1
	movs	r0, #2
	cmp	r1, #41
	bhi.w	.LBB12_111
.LCPI12_0:
	tbh	[pc, r1, lsl #1]
.LJTI12_0:
	.short	(.LBB12_10-(.LCPI12_0+4))/2
	.short	(.LBB12_16-(.LCPI12_0+4))/2
	.short	(.LBB12_18-(.LCPI12_0+4))/2
	.short	(.LBB12_111-(.LCPI12_0+4))/2
	.short	(.LBB12_111-(.LCPI12_0+4))/2
	.short	(.LBB12_111-(.LCPI12_0+4))/2
	.short	(.LBB12_111-(.LCPI12_0+4))/2
	.short	(.LBB12_20-(.LCPI12_0+4))/2
	.short	(.LBB12_22-(.LCPI12_0+4))/2
	.short	(.LBB12_111-(.LCPI12_0+4))/2
	.short	(.LBB12_24-(.LCPI12_0+4))/2
	.short	(.LBB12_111-(.LCPI12_0+4))/2
	.short	(.LBB12_111-(.LCPI12_0+4))/2
	.short	(.LBB12_111-(.LCPI12_0+4))/2
	.short	(.LBB12_111-(.LCPI12_0+4))/2
	.short	(.LBB12_111-(.LCPI12_0+4))/2
	.short	(.LBB12_27-(.LCPI12_0+4))/2
	.short	(.LBB12_29-(.LCPI12_0+4))/2
	.short	(.LBB12_31-(.LCPI12_0+4))/2
	.short	(.LBB12_111-(.LCPI12_0+4))/2
	.short	(.LBB12_33-(.LCPI12_0+4))/2
	.short	(.LBB12_35-(.LCPI12_0+4))/2
	.short	(.LBB12_37-(.LCPI12_0+4))/2
	.short	(.LBB12_43-(.LCPI12_0+4))/2
	.short	(.LBB12_45-(.LCPI12_0+4))/2
	.short	(.LBB12_51-(.LCPI12_0+4))/2
	.short	(.LBB12_111-(.LCPI12_0+4))/2
	.short	(.LBB12_53-(.LCPI12_0+4))/2
	.short	(.LBB12_111-(.LCPI12_0+4))/2
	.short	(.LBB12_111-(.LCPI12_0+4))/2
	.short	(.LBB12_55-(.LCPI12_0+4))/2
	.short	(.LBB12_111-(.LCPI12_0+4))/2
	.short	(.LBB12_62-(.LCPI12_0+4))/2
	.short	(.LBB12_64-(.LCPI12_0+4))/2
	.short	(.LBB12_66-(.LCPI12_0+4))/2
	.short	(.LBB12_68-(.LCPI12_0+4))/2
	.short	(.LBB12_74-(.LCPI12_0+4))/2
	.short	(.LBB12_80-(.LCPI12_0+4))/2
	.short	(.LBB12_83-(.LCPI12_0+4))/2
	.short	(.LBB12_85-(.LCPI12_0+4))/2
	.short	(.LBB12_91-(.LCPI12_0+4))/2
	.short	(.LBB12_97-(.LCPI12_0+4))/2
	.p2align	1
.LBB12_10:
	ldr	r0, [r5, #12]
	cmp	r0, #0
	bne.w	.LBB12_120
	ldr	r0, [r5, #4]
	ldr.w	r8, [sp, #24]
	cmp	r0, #1
	mov.w	r0, #-1
	str	r0, [r5, #12]
	bne.w	.LBB12_116
	ldr	r0, [r5, #16]
	ldr	r2, [r5, #8]
	adds	r3, r0, #1
	cmp	r3, r2
	bhi.w	.LBB12_117
	cmp.w	r0, #512
	bhi.w	.LBB12_121
	beq.w	.LBB12_122
	add	r0, r5
	mov.w	r12, #0
	mov.w	lr, #2
	ldrb	r1, [r0, #20]
	strd	r12, r3, [r5, #12]
	b	.LBB12_60
.LBB12_16:
	mov	r0, r5
	bl	minimq::de::packet_reader::PacketReader<_>::read_u32::h7e1088d9f3552124
	lsls	r2, r0, #31
	bne.w	.LBB12_113
	str	r1, [sp, #16]
	mov.w	lr, #5
	mov.w	r12, #1
	b	.LBB12_58
.LBB12_18:
	add	r0, sp, #192
	mov	r1, r5
	bl	minimq::de::packet_reader::PacketReader<_>::read_utf8_string::hd700b0b0ed6ab82e
	ldrb.w	r0, [sp, #192]
	cmp	r0, #0
	bne.w	.LBB12_115
	ldr	r0, [sp, #196]
	str	r0, [sp, #16]
	ldr	r0, [sp, #200]
	mov.w	r12, #2
	b	.LBB12_57
.LBB12_20:
	add	r0, sp, #192
	mov	r1, r5
	bl	minimq::de::packet_reader::PacketReader<_>::read_utf8_string::hd700b0b0ed6ab82e
	ldrb.w	r0, [sp, #192]
	cmp	r0, #0
	bne.w	.LBB12_115
	ldr	r0, [sp, #196]
	str	r0, [sp, #16]
	ldr	r0, [sp, #200]
	mov.w	r12, #3
	b	.LBB12_57
.LBB12_22:
	add	r0, sp, #192
	mov	r1, r5
	bl	minimq::de::packet_reader::PacketReader<_>::read_binary_data::h50471739a6cfcd92
	ldrb.w	r0, [sp, #192]
	cmp	r0, #0
	bne.w	.LBB12_115
	ldr	r0, [sp, #196]
	str	r0, [sp, #16]
	ldr	r0, [sp, #200]
	mov.w	r12, #4
	b	.LBB12_57
.LBB12_24:
	mov	r0, r5
	bl	minimq::de::packet_reader::PacketReader<_>::read_variable_length_integer::hc402570f88d76cbb
	lsls	r2, r0, #31
	bne.w	.LBB12_113
	cmp	r1, #128
	str	r1, [sp, #16]
	bhs.w	.LBB12_103
	mov.w	lr, #1
	mov.w	r12, #5
	b	.LBB12_58
.LBB12_27:
	mov	r0, r5
	bl	minimq::de::packet_reader::PacketReader<_>::read_u32::h7e1088d9f3552124
	lsls	r2, r0, #31
	bne.w	.LBB12_113
	str	r1, [sp, #16]
	mov.w	lr, #5
	mov.w	r12, #6
	b	.LBB12_58
.LBB12_29:
	add	r0, sp, #192
	mov	r1, r5
	bl	minimq::de::packet_reader::PacketReader<_>::read_utf8_string::hd700b0b0ed6ab82e
	ldrb.w	r0, [sp, #192]
	cmp	r0, #0
	bne.w	.LBB12_115
	ldr	r0, [sp, #196]
	str	r0, [sp, #16]
	ldr	r0, [sp, #200]
	mov.w	r12, #7
	b	.LBB12_57
.LBB12_31:
	mov	r0, r5
	bl	minimq::de::packet_reader::PacketReader<_>::read_u16::h557d607ffb28ea51
	lsls	r1, r0, #31
	bne.w	.LBB12_119
	lsrs	r0, r0, #16
	str	r0, [sp, #8]
	mov.w	lr, #3
	mov.w	r12, #8
	b	.LBB12_58
.LBB12_33:
	add	r0, sp, #192
	mov	r1, r5
	bl	minimq::de::packet_reader::PacketReader<_>::read_utf8_string::hd700b0b0ed6ab82e
	ldrb.w	r0, [sp, #192]
	cmp	r0, #0
	bne.w	.LBB12_115
	ldr	r0, [sp, #196]
	str	r0, [sp, #16]
	ldr	r0, [sp, #200]
	mov.w	r12, #9
	b	.LBB12_57
.LBB12_35:
	add	r0, sp, #192
	mov	r1, r5
	bl	minimq::de::packet_reader::PacketReader<_>::read_binary_data::h50471739a6cfcd92
	ldrb.w	r0, [sp, #192]
	cmp	r0, #0
	bne.w	.LBB12_115
	ldr	r0, [sp, #196]
	str	r0, [sp, #16]
	ldr	r0, [sp, #200]
	mov.w	r12, #10
	b	.LBB12_57
.LBB12_37:
	ldr	r0, [r5, #12]
	cmp	r0, #0
	bne.w	.LBB12_120
	ldr	r0, [r5, #4]
	ldr.w	r8, [sp, #24]
	cmp	r0, #1
	mov.w	r0, #-1
	str	r0, [r5, #12]
	bne.w	.LBB12_116
	ldr	r0, [r5, #16]
	ldr	r2, [r5, #8]
	adds	r3, r0, #1
	cmp	r3, r2
	bhi.w	.LBB12_117
	cmp.w	r0, #512
	bhi.w	.LBB12_121
	beq.w	.LBB12_122
	add	r0, r5
	mov.w	lr, #2
	mov.w	r12, #11
	ldrb	r1, [r0, #20]
	movs	r0, #0
	strd	r0, r3, [r5, #12]
	b	.LBB12_60
.LBB12_43:
	mov	r0, r5
	bl	minimq::de::packet_reader::PacketReader<_>::read_u32::h7e1088d9f3552124
	lsls	r2, r0, #31
	bne.w	.LBB12_113
	str	r1, [sp, #16]
	mov.w	lr, #5
	mov.w	r12, #12
	b	.LBB12_58
.LBB12_45:
	ldr	r0, [r5, #12]
	cmp	r0, #0
	bne.w	.LBB12_120
	ldr	r0, [r5, #4]
	ldr.w	r8, [sp, #24]
	cmp	r0, #1
	mov.w	r0, #-1
	str	r0, [r5, #12]
	bne.w	.LBB12_116
	ldr	r0, [r5, #16]
	ldr	r2, [r5, #8]
	adds	r3, r0, #1
	cmp	r3, r2
	bhi.w	.LBB12_117
	cmp.w	r0, #512
	bhi.w	.LBB12_121
	beq.w	.LBB12_122
	add	r0, r5
	mov.w	lr, #2
	mov.w	r12, #13
	ldrb	r1, [r0, #20]
	movs	r0, #0
	strd	r0, r3, [r5, #12]
	b	.LBB12_60
.LBB12_51:
	add	r0, sp, #192
	mov	r1, r5
	bl	minimq::de::packet_reader::PacketReader<_>::read_utf8_string::hd700b0b0ed6ab82e
	ldrb.w	r0, [sp, #192]
	cmp	r0, #0
	bne.w	.LBB12_115
	ldr	r0, [sp, #196]
	str	r0, [sp, #16]
	ldr	r0, [sp, #200]
	mov.w	r12, #14
	b	.LBB12_57
.LBB12_53:
	add	r0, sp, #192
	mov	r1, r5
	bl	minimq::de::packet_reader::PacketReader<_>::read_utf8_string::hd700b0b0ed6ab82e
	ldrb.w	r0, [sp, #192]
	cmp	r0, #0
	bne.w	.LBB12_115
	ldr	r0, [sp, #196]
	str	r0, [sp, #16]
	ldr	r0, [sp, #200]
	mov.w	r12, #15
	b	.LBB12_57
.LBB12_55:
	add	r0, sp, #192
	mov	r1, r5
	bl	minimq::de::packet_reader::PacketReader<_>::read_utf8_string::hd700b0b0ed6ab82e
	ldrb.w	r0, [sp, #192]
	cmp	r0, #0
	bne.w	.LBB12_115
	ldr	r0, [sp, #196]
	str	r0, [sp, #16]
	ldr	r0, [sp, #200]
	mov.w	r12, #16
.LBB12_57:
	add.w	lr, r0, #3
	str	r0, [sp, #12]
.LBB12_58:
	ldr.w	r8, [sp, #24]
.LBB12_59:
	ldr	r1, [sp, #20]
.LBB12_60:
	cmp.w	r9, #7
	bhi.w	.LBB12_114
	add.w	r2, r9, r9, lsl #2
	add	r0, sp, #28
	add	r11, lr
	str	r1, [sp, #20]
	add.w	r3, r0, r2, lsl #2
	strb.w	r12, [r0, r2, lsl #2]
	ldr	r0, [sp, #8]
	cmp	r11, r10
	strh	r0, [r3, #2]
	ldr	r0, [sp, #16]
	str	r0, [r3, #4]
	ldr	r0, [sp, #12]
	strb	r1, [r3, #1]
	str	r0, [r3, #8]
	ldr	r0, [sp, #4]
	str	r0, [r3, #12]
	ldr	r0, [sp, #188]
	add.w	r9, r0, #1
	str.w	r8, [sp, #24]
	str.w	r8, [r3, #16]
	str.w	r9, [sp, #188]
	bne.w	.LBB12_3
	b	.LBB12_112
.LBB12_62:
	mov	r0, r5
	bl	minimq::de::packet_reader::PacketReader<_>::read_u16::h557d607ffb28ea51
	lsls	r1, r0, #31
	bne.w	.LBB12_119
	lsrs	r0, r0, #16
	str	r0, [sp, #8]
	mov.w	lr, #3
	mov.w	r12, #17
	b	.LBB12_58
.LBB12_64:
	mov	r0, r5
	bl	minimq::de::packet_reader::PacketReader<_>::read_u16::h557d607ffb28ea51
	lsls	r1, r0, #31
	bne.w	.LBB12_119
	lsrs	r0, r0, #16
	str	r0, [sp, #8]
	mov.w	lr, #3
	mov.w	r12, #18
	b	.LBB12_58
.LBB12_66:
	mov	r0, r5
	bl	minimq::de::packet_reader::PacketReader<_>::read_u16::h557d607ffb28ea51
	lsls	r1, r0, #31
	bne.w	.LBB12_119
	lsrs	r0, r0, #16
	str	r0, [sp, #8]
	mov.w	lr, #3
	mov.w	r12, #19
	b	.LBB12_58
.LBB12_68:
	ldr	r0, [r5, #12]
	cmp	r0, #0
	bne.w	.LBB12_120
	ldr	r0, [r5, #4]
	ldr.w	r8, [sp, #24]
	cmp	r0, #1
	mov.w	r0, #-1
	str	r0, [r5, #12]
	bne.w	.LBB12_116
	ldr	r0, [r5, #16]
	ldr	r2, [r5, #8]
	adds	r3, r0, #1
	cmp	r3, r2
	bhi.w	.LBB12_117
	cmp.w	r0, #512
	bhi.w	.LBB12_121
	beq.w	.LBB12_122
	add	r0, r5
	mov.w	lr, #2
	mov.w	r12, #20
	ldrb	r1, [r0, #20]
	movs	r0, #0
	strd	r0, r3, [r5, #12]
	b	.LBB12_60
.LBB12_74:
	ldr	r0, [r5, #12]
	cmp	r0, #0
	bne.w	.LBB12_120
	ldr	r0, [r5, #4]
	ldr.w	r8, [sp, #24]
	cmp	r0, #1
	mov.w	r0, #-1
	str	r0, [r5, #12]
	bne.w	.LBB12_116
	ldr	r0, [r5, #16]
	ldr	r2, [r5, #8]
	adds	r3, r0, #1
	cmp	r3, r2
	bhi.w	.LBB12_117
	cmp.w	r0, #512
	bhi.w	.LBB12_121
	beq.w	.LBB12_122
	add	r0, r5
	mov.w	lr, #2
	mov.w	r12, #21
	ldrb	r1, [r0, #20]
	movs	r0, #0
	strd	r0, r3, [r5, #12]
	b	.LBB12_60
.LBB12_80:
	add	r0, sp, #192
	mov	r1, r5
	bl	minimq::de::packet_reader::PacketReader<_>::read_utf8_string::hd700b0b0ed6ab82e
	ldrb.w	r0, [sp, #192]
	cmp	r0, #0
	bne.w	.LBB12_115
	ldr	r0, [sp, #196]
	str	r0, [sp, #16]
	add	r0, sp, #192
	mov	r1, r5
	ldr.w	r8, [sp, #200]
	bl	minimq::de::packet_reader::PacketReader<_>::read_utf8_string::hd700b0b0ed6ab82e
	ldrb.w	r0, [sp, #192]
	cmp	r0, #0
	bne.w	.LBB12_115
	mov	r1, r8
	str	r1, [sp, #12]
	ldrd	r0, r8, [sp, #196]
	str	r0, [sp, #4]
	add.w	r0, r8, r1
	add.w	lr, r0, #5
	mov.w	r12, #22
	b	.LBB12_59
.LBB12_83:
	mov	r0, r5
	bl	minimq::de::packet_reader::PacketReader<_>::read_u32::h7e1088d9f3552124
	lsls	r2, r0, #31
	bne.w	.LBB12_113
	str	r1, [sp, #16]
	mov.w	lr, #5
	mov.w	r12, #23
	b	.LBB12_58
.LBB12_85:
	ldr	r0, [r5, #12]
	cmp	r0, #0
	bne.w	.LBB12_120
	ldr	r0, [r5, #4]
	ldr.w	r8, [sp, #24]
	cmp	r0, #1
	mov.w	r0, #-1
	str	r0, [r5, #12]
	bne.w	.LBB12_116
	ldr	r0, [r5, #16]
	ldr	r2, [r5, #8]
	adds	r3, r0, #1
	cmp	r3, r2
	bhi.w	.LBB12_117
	cmp.w	r0, #512
	bhi.w	.LBB12_121
	beq.w	.LBB12_122
	add	r0, r5
	mov.w	lr, #2
	mov.w	r12, #24
	ldrb	r1, [r0, #20]
	movs	r0, #0
	strd	r0, r3, [r5, #12]
	b	.LBB12_60
.LBB12_91:
	ldr	r0, [r5, #12]
	cmp	r0, #0
	bne.w	.LBB12_120
	ldr	r0, [r5, #4]
	ldr.w	r8, [sp, #24]
	cmp	r0, #1
	mov.w	r0, #-1
	str	r0, [r5, #12]
	bne	.LBB12_116
	ldr	r0, [r5, #16]
	ldr	r2, [r5, #8]
	adds	r3, r0, #1
	cmp	r3, r2
	bhi	.LBB12_117
	cmp.w	r0, #512
	bhi.w	.LBB12_121
	beq.w	.LBB12_122
	add	r0, r5
	mov.w	lr, #2
	mov.w	r12, #25
	ldrb	r1, [r0, #20]
	movs	r0, #0
	strd	r0, r3, [r5, #12]
	b	.LBB12_60
.LBB12_97:
	ldr	r0, [r5, #12]
	cmp	r0, #0
	bne	.LBB12_120
	ldr	r0, [r5, #4]
	ldr.w	r8, [sp, #24]
	cmp	r0, #1
	mov.w	r0, #-1
	str	r0, [r5, #12]
	bne	.LBB12_116
	ldr	r0, [r5, #16]
	ldr	r2, [r5, #8]
	adds	r3, r0, #1
	cmp	r3, r2
	bhi	.LBB12_117
	cmp.w	r0, #512
	bhi	.LBB12_121
	beq	.LBB12_122
	add	r0, r5
	mov.w	lr, #2
	mov.w	r12, #26
	ldrb	r1, [r0, #20]
	movs	r0, #0
	strd	r0, r3, [r5, #12]
	b	.LBB12_60
.LBB12_103:
	movw	r0, #32767
	ldr.w	r8, [sp, #24]
	cmp	r1, r0
	bhs	.LBB12_105
	mov.w	lr, #2
	mov.w	r12, #5
	b	.LBB12_59
.LBB12_105:
	movw	r0, #65535
	movt	r0, #127
	cmp	r1, r0
	bhs	.LBB12_107
	mov.w	lr, #3
	mov.w	r12, #5
	b	.LBB12_59
.LBB12_107:
	mvn	r0, #-2147483648
	cmp	r1, r0
	bhs	.LBB12_123
	mov.w	lr, #4
	mov.w	r12, #5
	b	.LBB12_59
.LBB12_109:
	lsrs	r0, r0, #8
	orr.w	r0, r0, r10, lsl #24
	b	.LBB12_111
.LBB12_110:
	movs	r0, #2
.LBB12_111:
	strb	r0, [r4, #1]
	movs	r0, #1
	strb	r0, [r4]
	add	sp, #204
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB12_112:
	adds	r0, r4, #4
	add	r1, sp, #28
	movs	r2, #164
	bl	__aeabi_memcpy4
	movs	r0, #0
	strb	r0, [r4]
	add	sp, #204
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB12_113:
	lsrs	r0, r0, #8
	orr.w	r0, r0, r1, lsl #24
	b	.LBB12_111
.LBB12_114:
	movs	r0, #5
	b	.LBB12_111
.LBB12_115:
	ldrb.w	r0, [sp, #193]
	b	.LBB12_111
.LBB12_116:
	movs	r0, #5
	b	.LBB12_118
.LBB12_117:
	movs	r0, #1
.LBB12_118:
	movs	r1, #0
	str	r1, [r5, #12]
	b	.LBB12_111
.LBB12_119:
	lsrs	r0, r0, #8
	b	.LBB12_111
.LBB12_120:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.352
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.362
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.11
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.352
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.362
	add	r2, sp, #192
	movs	r1, #16
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.11
	str	r6, [sp]
	bl	core::result::unwrap_failed::he67be68ddf63c991
	.inst.n	0xdefe
.LBB12_121:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.12
	mov.w	r1, #512
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.12
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB12_122:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.12
	movs	r0, #1
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.12
	movs	r1, #0
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB12_123:
	movw	r0, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.7
	movw	r2, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.9
	movt	r0, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.7
	movt	r2, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.9
	movs	r1, #15
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.Lfunc_end12:
	.size	minimq::de::packet_reader::PacketReader<_>::read_properties::hf2ea26764b522615, .Lfunc_end12-minimq::de::packet_reader::PacketReader<_>::read_properties::hf2ea26764b522615
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN6minimq2de13packet_reader21PacketReader$LT$_$GT$18probe_fixed_header17h595f40dc1475742dE","ax",%progbits
	.p2align	1
	.type	minimq::de::packet_reader::PacketReader<_>::probe_fixed_header::h595f40dc1475742d,%function
	.code	16
	.thumb_func
minimq::de::packet_reader::PacketReader<_>::probe_fixed_header::h595f40dc1475742d:
.Lfunc_begin13:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r7, lr}
	push	{r4, r5, r7, lr}
	.cfi_def_cfa_offset 16
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r5, -12
	.cfi_offset r4, -16
	.setfp	r7, sp, #8
	add	r7, sp, #8
	.cfi_def_cfa r7, 8
	ldr	r3, [r0]
	cmp	r3, #2
	bhs	.LBB13_2
.LBB13_1:
	movs	r0, #0
	pop	{r4, r5, r7, pc}
.LBB13_2:
	cmp.w	r3, #512
	bhi	.LBB13_22
	ldrsb.w	r2, [r0, #21]
	cmp.w	r2, #-1
	ble	.LBB13_7
	and	r2, r2, #127
	movs	r1, #1
.LBB13_5:
	add	r1, r2
	movs	r3, #1
	adds	r1, #1
	str	r3, [r0, #4]
	str	r1, [r0, #8]
.LBB13_6:
	mov	r0, r3
	pop	{r4, r5, r7, pc}
.LBB13_7:
	sub.w	r12, r3, #1
	cmp.w	r12, #1
	bls	.LBB13_1
	ldrsb.w	lr, [r0, #22]
	cmp.w	lr, #-1
	ble	.LBB13_14
	movs	r1, #2
	movs	r4, #0
	movs	r3, #1
.LBB13_10:
	subs	r5, r1, #1
	cmp	r12, r5
	bls	.LBB13_21
	and	r5, lr, #127
	and	r2, r2, #127
	cmp	r3, #0
	orr.w	r2, r2, r5, lsl #7
	bne	.LBB13_5
	ldrb	r3, [r0, #23]
	cmp	r4, #0
	and	r3, r3, #127
	orr.w	r2, r2, r3, lsl #14
	bne	.LBB13_5
	ldrb	r3, [r0, #24]
	and	r3, r3, #127
	orr.w	r2, r2, r3, lsl #21
	b	.LBB13_5
.LBB13_14:
	cmp.w	r12, #3
	blo	.LBB13_1
	ldrsb.w	r1, [r0, #23]
	cmp.w	r1, #-1
	ble	.LBB13_17
	movs	r1, #3
	movs	r4, #1
	movs	r3, #0
	b	.LBB13_10
.LBB13_17:
	cmp.w	r12, #4
	mov.w	r3, #0
	blo	.LBB13_20
	ldrsb.w	r1, [r0, #24]
	cmp.w	r1, #-1
	ble	.LBB13_6
	movs	r1, #4
	movs	r4, #0
	b	.LBB13_10
.LBB13_20:
	mov	r0, r3
	pop	{r4, r5, r7, pc}
.LBB13_21:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.21
	mov	r0, r12
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.21
	mov	r1, r12
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB13_22:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.20
	mov.w	r1, #512
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.20
	mov	r0, r3
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.Lfunc_end13:
	.size	minimq::de::packet_reader::PacketReader<_>::probe_fixed_header::h595f40dc1475742d, .Lfunc_end13-minimq::de::packet_reader::PacketReader<_>::probe_fixed_header::h595f40dc1475742d
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN7smoltcp5iface9interface24Interface$LT$DeviceT$GT$4poll17he6084df7d1efd02cE","ax",%progbits
	.p2align	2
	.type	smoltcp::iface::interface::Interface<DeviceT>::poll::he6084df7d1efd02c,%function
	.code	16
	.thumb_func
smoltcp::iface::interface::Interface<DeviceT>::poll::he6084df7d1efd02c:
.Lfunc_begin14:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#980
	sub.w	sp, sp, #980
	mov	r10, r0
	adds	r0, #69
	str	r0, [sp, #232]
	add.w	r0, r10, #68
	str	r0, [sp, #392]
	add	r0, sp, #440
	add.w	r1, r0, #65
	str	r1, [sp, #384]
	add.w	r1, r0, #26
	str	r1, [sp, #380]
	strd	r2, r3, [r10]
	add	r1, sp, #576
	add.w	r2, r10, #84
	str	r2, [sp, #280]
	add.w	r2, r1, #26
	str	r2, [sp, #264]
	adds	r2, r0, #4
	str	r2, [sp, #364]
	add.w	r2, r1, #12
	str	r2, [sp, #288]
	add.w	r2, r1, #8
	str	r2, [sp, #296]
	add	r2, sp, #824
	adds	r3, r2, #1
	str	r3, [sp, #396]
	add	r3, sp, #792
	movw	r9, #37160
	adds	r6, r3, #1
	str	r6, [sp, #228]
	adds	r6, r2, #3
	str	r6, [sp, #224]
	add.w	r6, r1, #18
	str	r6, [sp, #292]
	add.w	r6, r1, #14
	str	r6, [sp, #244]
	add.w	r6, r10, #8
	str	r6, [sp, #400]
	add.w	r6, r10, #60
	str	r6, [sp, #388]
	add.w	r6, r0, #77
	str	r6, [sp, #376]
	add.w	r6, r0, #32
	str	r6, [sp, #372]
	add.w	r6, r2, #24
	str	r6, [sp, #300]
	add.w	r6, r2, #18
	str	r6, [sp, #284]
	add.w	r6, r0, #20
	adds	r0, #5
	str	r0, [sp, #236]
	add.w	r0, r2, #23
	str	r0, [sp, #240]
	adds	r3, #5
	str	r3, [sp, #220]
	adds	r3, r1, #1
	str	r6, [sp, #348]
	adds	r6, r2, #4
	str	r3, [sp, #404]
	add.w	r3, r1, #24
	str	r6, [sp, #276]
	add.w	r6, r1, #16
	str	r3, [sp, #272]
	add.w	r3, r1, #19
	adds	r1, #5
	str	r1, [sp, #304]
	adds	r1, r2, #5
	movt	r9, #16386
	str	r1, [sp, #256]
	add.w	r1, r2, #12
	movw	lr, #6224
	str	r6, [sp, #260]
	str	r3, [sp, #268]
	str	r1, [sp, #252]
	add.w	r1, r2, #48
	str	r1, [sp, #248]
	str.w	r10, [sp, #432]
	movs	r0, #0
	b	.LBB14_3
.LBB14_1:
	ldr.w	r10, [sp, #432]
	movw	lr, #6224
.LBB14_2:
	ldr	r0, [sp, #428]
	cmp	r0, #0
	it	ne
	movne	r0, #1
	orrs	r0, r2
	lsls	r0, r0, #31
	mov.w	r0, #1
	beq.w	.LBB14_452
.LBB14_3:
	ldr.w	r11, [r10, #80]
	movw	r1, #12420
	ldr.w	r6, [r11, r1]
	cmp	r6, #3
	bhi.w	.LBB14_453
	str	r0, [sp, #408]
	movs	r0, #0
	add.w	r4, r11, r1
	str	r0, [sp, #428]
	movw	r0, #12420
.LBB14_5:
	add.w	r8, r11, #6208
	add	r0, r11
	str	r0, [sp, #436]
	add.w	r0, r11, r6, lsl #4
	ldr.w	r1, [r0, lr]
	cmp	r1, #0
	bmi.w	.LBB14_180
.LBB14_6:
	movw	r2, #32768
	movt	r2, #28672
	ands	r1, r2
	cmp.w	r1, #805306368
	beq	.LBB14_8
	add.w	r1, r6, r6, lsl #1
	movw	r2, #6212
	add	r2, r11
	lsls	r3, r6, #4
	add.w	r1, r2, r1, lsl #9
	add	r0, lr
	add.w	r5, r2, r6, lsl #4
	adds	r1, #64
	str	r1, [r2, r3]
	movs	r1, #0
	str	r1, [r5, #4]
	str	r1, [r5, #8]
	mov.w	r1, #-1056964608
	str	r1, [r0]
	bl	__dsb
	adds	r0, r6, #1
	movw	lr, #6224
	str.w	r5, [r9]
	and	r6, r0, #3
	str	r6, [r4]
	add.w	r0, r11, r6, lsl #4
	ldr.w	r1, [r0, lr]
	cmp	r1, #0
	bpl	.LBB14_6
	b.w	.LBB14_180
.LBB14_8:
	ldr.w	r0, [r8]
	cmp	r0, #4
	bhs.w	.LBB14_456
	add.w	r0, r11, r0, lsl #4
	ldr	r0, [r0, #12]
	cmp	r0, #0
	bmi.w	.LBB14_180
	ldr	r0, [sp, #436]
	ldr	r0, [r0]
	cmp	r0, #4
	bhs.w	.LBB14_457
	movw	r1, #6212
	add.w	r12, r11, r1
	add.w	r1, r12, r0, lsl #4
	ldr	r1, [r1, #12]
	bfc	r1, #15, #17
	cmp.w	r1, #1536
	it	hs
	movhs.w	r1, #1536
	cmp	r1, #14
	bhs	.LBB14_16
.LBB14_12:
	ldrd	r10, r9, [sp, #412]
.LBB14_13:
	ldr	r0, [sp, #436]
	ldr	r6, [r0]
	cmp	r6, #3
	bhi.w	.LBB14_458
	add.w	r0, r11, r6, lsl #4
	ldr.w	r1, [r0, lr]
	cmp	r1, #0
	bmi.w	.LBB14_464
	add.w	r1, r6, r6, lsl #1
	add	r0, lr
	lsls	r2, r6, #4
	add.w	r1, r12, r1, lsl #9
	add.w	r4, r12, r6, lsl #4
	adds	r1, #64
	str.w	r1, [r12, r2]
	movs	r1, #0
	str	r1, [r4, #4]
	str	r1, [r4, #8]
	mov.w	r1, #-1056964608
	str	r1, [r0]
	bl	__dsb
	movw	r1, #37160
	adds	r0, r6, #1
	movt	r1, #16386
	and	r0, r0, #3
	movw	lr, #6224
	str	r4, [r1]
	ldr	r2, [sp, #436]
	str.w	r10, [sp, #412]
	str.w	r9, [sp, #416]
	mov	r9, r1
	str	r0, [r2]
	ldr	r0, [sp, #432]
	movw	r2, #12420
	mov	r10, r0
	ldr.w	r11, [r0, #80]
	movw	r0, #12420
	add.w	r4, r11, r2
	ldr.w	r6, [r11, r2]
	cmp	r6, #4
	blo.w	.LBB14_5
	b.w	.LBB14_453
.LBB14_16:
	add.w	r0, r0, r0, lsl #1
	add.w	r2, r12, r0, lsl #9
	add.w	r10, r2, #64
	ldr.w	r2, [r10]
	lsls	r3, r2, #31
	bne	.LBB14_19
	ldr	r5, [sp, #392]
	ldr	r3, [r5]
	lsls	r6, r3, #31
	beq.w	.LBB14_466
	ldrb	r6, [r5, #6]
	lsrs	r3, r3, #8
	ldrh	r5, [r5, #4]
	orr.w	r6, r5, r6, lsl #16
	ldrh.w	r5, [r10, #4]
	bic	r6, r6, #-16777216
	uxth	r5, r5
	orr.w	r3, r3, r6, lsl #24
	eor.w	r6, r5, r6, lsr #8
	eors	r2, r3
	orrs	r2, r6
	bne	.LBB14_30
.LBB14_19:
	add.w	r4, r11, r0, lsl #9
	movw	r0, #6288
	movw	r2, #34525
	ldrh	r0, [r4, r0]
	rev	r0, r0
	lsrs	r0, r0, #16
	cmp	r0, r2
	beq	.LBB14_37
	movw	r2, #2054
	cmp	r0, r2
	beq	.LBB14_31
	cmp.w	r0, #2048
	bne	.LBB14_12
	sub.w	r0, r1, #14
	cmp	r0, #20
	blo	.LBB14_12
	add.w	r8, r10, #14
	movs	r2, #60
	ldrb.w	r1, [r8]
	and.w	r6, r2, r1, lsl #2
	cmp	r0, r6
	blo.w	.LBB14_12
	movw	r2, #6292
	ldrh	r2, [r4, r2]
	rev	r2, r2
	cmp.w	r6, r2, lsr #16
	bhi.w	.LBB14_12
	lsrs	r3, r2, #16
	cmp	r0, r3
	blo.w	.LBB14_12
	and	r0, r1, #240
	cmp	r0, #64
	bne.w	.LBB14_48
	ldr	r0, [sp, #432]
	ldrb.w	r9, [r0, #44]
	cmp.w	r9, #1
	bhi.w	.LBB14_76
	mov	r0, r8
	mov	r1, r6
	mov	r5, r12
	str	r3, [sp, #424]
	bl	smoltcp::wire::ip::checksum::data::hebb229fc732545ff
	uxth	r0, r0
	movw	r1, #65535
	ldr	r3, [sp, #424]
	mov	r12, r5
	movw	lr, #6224
	cmp	r0, r1
	beq.w	.LBB14_76
	movs	r0, #5
	b	.LBB14_78
.LBB14_30:
	mov.w	r10, #0
	mov.w	r9, #0
	movs	r0, #1
	str	r0, [sp, #428]
	b	.LBB14_13
.LBB14_31:
	subs	r1, #14
	cmp	r1, #8
	blo.w	.LBB14_12
	ldrb.w	r2, [r10, #18]
	ldrb.w	r6, [r10, #19]
	adds	r0, r6, r2
	adds	r0, #4
	lsls	r0, r0, #1
	cmp	r0, r1
	bhi.w	.LBB14_12
	movw	r0, #6292
	str.w	r12, [sp, #424]
	add.w	r12, r10, #14
	ldrh	r0, [r4, r0]
	ldrh.w	r3, [r12]
	rev	r5, r0
	subs.w	r0, r3, #256
	lsr.w	r3, r5, #16
	movw	r5, #34525
	it	ne
	movne	r0, #1
	cmp	r3, r5
	ldr	r5, [sp, #432]
	ldrd	r5, r9, [r5]
	str	r5, [sp, #420]
	beq.w	.LBB14_49
	movw	r5, #2054
	cmp	r3, r5
	beq.w	.LBB14_50
	cmp.w	r3, #2048
	bne.w	.LBB14_51
	movs	r3, #0
	b	.LBB14_52
.LBB14_37:
	sub.w	r0, r1, #14
	cmp	r0, #40
	blo.w	.LBB14_12
	ldrh.w	r1, [r10, #18]
	movs	r2, #40
	rev	r1, r1
	add.w	r2, r2, r1, lsr #16
	cmp	r2, r0
	bhi.w	.LBB14_12
	ldrb.w	r0, [r10, #14]
	str.w	r12, [sp, #424]
	and	r0, r0, #240
	cmp	r0, #96
	bne	.LBB14_45
	movw	r0, #6296
	lsr.w	r9, r1, #16
	ldrb	r0, [r4, r0]
	bl	<smoltcp::wire::ip::Protocol as core::convert::From<u8>>::from::h32c43f1d7a16fe9c
	ldr	r6, [sp, #364]
	ldrb.w	r2, [r10, #21]
	str.w	r9, [sp, #440]
	ldr.w	r3, [r10, #22]
	str	r3, [r6]
	ldr.w	r3, [r10, #26]
	str	r3, [r6, #4]
	ldr.w	r3, [r10, #30]
	str	r3, [r6, #8]
	ldr.w	r3, [r10, #34]
	str	r3, [r6, #12]
	ldr	r6, [sp, #348]
	ldr.w	r3, [r10, #38]
	str	r3, [r6]
	ldr.w	r3, [r10, #42]
	str	r3, [r6, #4]
	ldr.w	r3, [r10, #46]
	str	r3, [r6, #8]
	ldr.w	r3, [r10, #50]
	strb.w	r1, [sp, #477]
	ldrb.w	r1, [sp, #444]
	str	r3, [r6, #12]
	strb.w	r0, [sp, #476]
	cmp	r1, #255
	strb.w	r2, [sp, #478]
	beq	.LBB14_45
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.7
	mov	r8, r0
	movs	r2, #16
	ldr	r0, [sp, #364]
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.7
	bl	memcmp
	cmp	r0, #0
	beq	.LBB14_45
	add	r1, sp, #440
	ldr	r0, [sp, #276]
	ldm	r1!, {r2, r3, r4, r5, r6}
	stm	r0!, {r2, r3, r4, r5, r6}
	ldm.w	r1, {r2, r3, r4, r5, r6}
	stm	r0!, {r2, r3, r4, r5, r6}
	ldr	r0, [sp, #432]
	add.w	r3, r10, #54
	movs	r1, #2
	ldr.w	r10, [sp, #280]
	ldrb.w	r0, [r0, #44]
	add	r4, sp, #824
	strb.w	r1, [sp, #824]
	mov	r1, r10
	mov	r2, r4
	str	r3, [sp, #420]
	str.w	r9, [sp]
	bl	smoltcp::iface::interface::InterfaceInner::raw_socket_filter::h93e48f516552e689
	add	r2, sp, #440
	mov	r12, r4
	mov	r3, r4
	ldm.w	r2!, {r1, r4, r5, r6, lr}
	stm.w	r12!, {r1, r4, r5, r6, lr}
	ldm.w	r2, {r1, r4, r5, r6, lr}
	stm.w	r12, {r1, r4, r5, r6, lr}
	strd	r8, r0, [sp]
	ldr	r0, [sp, #420]
	ldr	r1, [sp, #432]
	strd	r0, r9, [sp, #8]
	add	r0, sp, #576
	mov	r2, r10
	bl	smoltcp::iface::interface::InterfaceInner::process_nxt_hdr::ha5140fab79ee143b
	ldrb.w	r0, [sp, #576]
	cbnz	r0, .LBB14_46
	ldr	r0, [sp, #584]
	cmp	r0, #6
	bne.w	.LBB14_96
	add	r4, sp, #824
	movs	r1, #134
	mov	r0, r4
	bl	__aeabi_memclr4
	movs	r0, #0
	str	r0, [sp, #412]
	movs	r0, #0
	mov.w	r8, #2
	str	r0, [sp, #416]
	movs	r6, #0
	movs	r5, #0
	movs	r0, #0
	str	r0, [sp, #420]
	b	.LBB14_97
.LBB14_45:
	movw	r0, #2049
	strh.w	r0, [sp, #576]
.LBB14_46:
	movs	r0, #1
.LBB14_47:
	ldrd	r10, r9, [sp, #412]
	movw	lr, #6224
	ldr.w	r12, [sp, #424]
	cmp	r0, #0
	bne.w	.LBB14_13
	b	.LBB14_92
.LBB14_48:
	movs	r0, #8
	b	.LBB14_78
.LBB14_49:
	movs	r3, #2
	b	.LBB14_52
.LBB14_50:
	movs	r3, #1
	b	.LBB14_52
.LBB14_51:
	movs	r3, #3
.LBB14_52:
	orrs	r0, r3
	itt	eq
	cmpeq	r2, #6
	cmpeq	r6, #4
	beq	.LBB14_54
	ldrd	r10, r9, [sp, #412]
	ldr.w	r12, [sp, #424]
	b	.LBB14_13
.LBB14_54:
	add.w	r0, r2, #8
	cmp	r0, r1
	bhi.w	.LBB14_474
	adds	r3, r0, r6
	cmp	r3, r1
	bhi.w	.LBB14_475
	add	r3, r2
	cmp	r3, r1
	bhi.w	.LBB14_476
	add.w	r2, r6, r2, lsl #1
	str.w	r9, [sp, #368]
	adds	r2, #8
	adds	r3, r2, r6
	cmp	r3, r1
	bhi.w	.LBB14_477
	movw	r1, #6296
	ldr.w	r5, [r12, r2]
	ldrh.w	r9, [r10, #26]
	ldrh	r6, [r4, r1]
	ldr.w	r4, [r12, r0]
	ldr	r0, [sp, #432]
	mov	r1, r5
	ldr.w	r10, [r10, #22]
	bl	smoltcp::iface::interface::InterfaceInner::has_ip_addr::h39bdf4874bad6135
	cmp	r0, #0
	beq.w	.LBB14_74
	cmp.w	r6, #256
	movw	lr, #6224
	ldr.w	r12, [sp, #424]
	it	ne
	cmpne.w	r6, #512
	bne.w	.LBB14_12
	adds	r0, r4, #1
	beq.w	.LBB14_12
	uxtb	r0, r4
	and	r1, r0, #240
	cmp	r1, #224
	beq.w	.LBB14_12
	cmp	r0, #0
	ldr	r1, [sp, #416]
	beq.w	.LBB14_95
	ands	r0, r10, #1
	bne.w	.LBB14_95
	ldr	r2, [sp, #432]
	movs	r1, #1
	strb.w	r1, [sp, #576]
	ldr	r0, [r2, #56]
	str	r4, [sp, #360]
	str.w	r4, [sp, #577]
	add.w	r1, r0, r0, lsl #3
	ldr	r0, [r2, #52]
	lsls	r4, r1, #1
	str	r5, [sp, #356]
.LBB14_65:
	cmp	r4, #0
	beq.w	.LBB14_98
	add	r1, sp, #576
	add.w	r5, r0, #18
	bl	smoltcp::wire::ip::Cidr::contains_addr::h768e43cd1d234828
	cmp	r0, #0
	sub.w	r4, r4, #18
	mov	r0, r5
	beq	.LBB14_65
	ldr	r0, [sp, #432]
	ldr	r0, [r0, #16]
	cmp	r0, #0
	beq.w	.LBB14_482
	movs	r0, #1
	strb.w	r0, [sp, #576]
	ldr	r0, [sp, #420]
	str	r0, [sp]
	ldr	r0, [sp, #368]
	str	r0, [sp, #4]
	ldr	r0, [sp, #400]
	add	r1, sp, #576
	mov	r2, r10
	mov	r3, r9
	ldr	r4, [sp, #360]
	str.w	r4, [sp, #577]
	bl	smoltcp::iface::neighbor::Cache::fill::hcfe9cbef821d0fb1
	cmp.w	r6, #256
	ldr	r2, [sp, #356]
	bne	.LBB14_74
	ldr	r6, [sp, #432]
	ldrb.w	r0, [r6, #68]
	cmp	r0, #0
	beq.w	.LBB14_483
	ldrh.w	r0, [r6, #69]
	movs	r1, #1
	strh.w	r1, [sp, #576]
	lsls	r0, r0, #16
	str.w	r0, [sp, #578]
	ldr.w	r0, [r6, #71]
	str.w	r0, [sp, #582]
	ldr	r0, [sp, #244]
	str.w	r2, [sp, #586]
	str	r4, [sp, #596]
	strh.w	r9, [r0, #4]
	str.w	r10, [r0]
	ldr.w	r0, [r8]
	cmp	r0, #4
	bhs.w	.LBB14_467
	add.w	r1, r0, r0, lsl #1
	lsls	r2, r0, #4
	add.w	r3, r11, r0, lsl #4
	add.w	r1, r11, r1, lsl #9
	add.w	r0, r1, #64
	str.w	r0, [r11, r2]
	movs	r2, #42
	str	r2, [r3, #8]
	ldrb.w	r2, [r6, #68]
	cbz	r2, .LBB14_73
	ldr	r3, [sp, #232]
	ldrh	r2, [r3, #4]
	ldr	r3, [r3]
	strh	r2, [r0, #10]
	str.w	r3, [r0, #6]
	mov.w	r2, #1544
	str.w	r10, [r0]
	strh.w	r9, [r0, #4]
	adds	r0, #14
	strh.w	r2, [r1, #76]
	add	r1, sp, #824
	str	r0, [sp, #824]
	movs	r0, #28
	str	r0, [sp, #828]
	add	r0, sp, #576
	bl	smoltcp::wire::arp::Repr::emit::h3cd44cb979bfba56
.LBB14_73:
	mov	r0, r11
	bl	stm32h7xx_hal::ethernet::eth::TDesRing<_>::release::h7bafb1196b8ee228
	movs	r0, #1
	str	r0, [sp, #428]
	b	.LBB14_75
.LBB14_74:
	movs	r1, #134
	add	r0, sp, #440
	bl	__aeabi_memclr4
	mov.w	r10, #0
	movs	r0, #1
	str	r0, [sp, #428]
	mov.w	r9, #0
.LBB14_75:
	movw	lr, #6224
	ldr.w	r12, [sp, #424]
	b	.LBB14_13
.LBB14_76:
	movw	r0, #6296
	mvn	r1, #192
	ldrh	r0, [r4, r0]
	tst	r0, r1
	beq	.LBB14_80
	movs	r0, #7
.LBB14_78:
	strb.w	r0, [sp, #577]
	movs	r0, #1
	strb.w	r0, [sp, #576]
	ldrd	r5, r9, [sp, #412]
	cmp	r0, #0
	beq	.LBB14_88
.LBB14_79:
	movs	r0, #1
	mov	r10, r5
	cmp	r0, #0
	bne.w	.LBB14_13
	b	.LBB14_92
.LBB14_80:
	subs	r5, r3, r6
	strd	r9, r12, [sp, #420]
	blo.w	.LBB14_484
	ldrb.w	r0, [r10, #23]
	ldr.w	r4, [r10, #26]
	ldr.w	r9, [r10, #30]
	bl	<smoltcp::wire::ip::Protocol as core::convert::From<u8>>::from::h32c43f1d7a16fe9c
	mov	r2, r0
	ldrb.w	r0, [r10, #22]
	strb.w	r1, [sp, #749]
	adds	r1, r4, #1
	ldr.w	r10, [sp, #432]
	str.w	r9, [sp, #368]
	strd	r5, r4, [sp, #736]
	str.w	r9, [sp, #744]
	strb.w	r2, [sp, #748]
	strb.w	r0, [sp, #750]
	beq	.LBB14_85
	uxtb	r0, r4
	cbz	r0, .LBB14_85
	and	r0, r0, #240
	cmp	r0, #224
	beq	.LBB14_85
	mov	r0, r10
	mov	r1, r4
	str	r5, [sp, #360]
	mov	r4, r2
	bl	smoltcp::iface::interface::InterfaceInner::is_subnet_broadcast::h01a1330f6358acef
	ldr	r2, [sp, #360]
	cmp	r0, #0
	beq.w	.LBB14_99
.LBB14_85:
	movw	r0, #2049
.LBB14_86:
	strh.w	r0, [sp, #576]
	movs	r0, #1
.LBB14_87:
	movw	lr, #6224
	ldr.w	r12, [sp, #424]
	ldrd	r5, r9, [sp, #412]
	cmp	r0, #0
	bne	.LBB14_79
.LBB14_88:
	ldr	r0, [sp, #584]
	str.w	r12, [sp, #424]
	cmp	r0, #6
	bne	.LBB14_90
	add	r4, sp, #824
	movs	r1, #134
	mov	r0, r4
	bl	__aeabi_memclr4
	movs	r5, #0
	mov.w	r8, #2
	mov.w	r9, #0
	movs	r6, #0
	mov.w	r10, #0
	movs	r0, #0
	str	r0, [sp, #420]
	b	.LBB14_91
.LBB14_90:
	str	r0, [sp, #420]
	ldr	r0, [sp, #260]
	add	r4, sp, #824
	movs	r2, #134
	ldrh.w	r9, [r0, #4]
	ldr	r1, [sp, #264]
	ldr	r5, [r0]
	mov	r0, r4
	ldr.w	r10, [sp, #588]
	ldr.w	r6, [sp, #598]
	bl	__aeabi_memcpy
	mov.w	r8, #1
.LBB14_91:
	movs	r2, #134
	add	r0, sp, #440
	mov	r1, r4
	bl	__aeabi_memcpy4
	movs	r0, #0
	movw	lr, #6224
	ldr.w	r12, [sp, #424]
	mov	r1, r10
	mov	r10, r5
	cmp	r0, #0
	bne.w	.LBB14_13
.LBB14_92:
	cmp.w	r8, #2
	beq	.LBB14_94
	ldr	r0, [sp, #420]
	movs	r2, #134
	strd	r0, r1, [sp, #576]
	ldr	r0, [sp, #296]
	add	r1, sp, #440
	str.w	r6, [sp, #590]
	mov	r4, r12
	str.w	r10, [r0]
	strh.w	r9, [r0, #4]
	ldr	r0, [sp, #292]
	bl	__aeabi_memcpy
	ldr	r0, [sp, #432]
	mov	r1, r11
	add	r2, sp, #576
	bl	smoltcp::iface::interface::InterfaceInner::dispatch_ip::h40aab87b8d567aea
	mov	r12, r4
	movw	lr, #6224
.LBB14_94:
	movs	r0, #1
	str	r0, [sp, #428]
	b	.LBB14_13
.LBB14_95:
	ldr.w	r10, [sp, #412]
	mov	r9, r1
	b	.LBB14_13
.LBB14_96:
	str	r0, [sp, #420]
	ldr	r0, [sp, #260]
	add	r4, sp, #824
	movs	r2, #134
	ldrh	r1, [r0, #4]
	ldr	r5, [sp, #588]
	ldr	r0, [r0]
	str	r1, [sp, #416]
	str	r0, [sp, #412]
	mov	r0, r4
	ldr	r1, [sp, #264]
	ldr.w	r6, [sp, #598]
	bl	__aeabi_memcpy
	mov.w	r8, #1
.LBB14_97:
	movs	r2, #134
	add	r0, sp, #440
	mov	r1, r4
	bl	__aeabi_memcpy4
	movs	r0, #0
	mov	r1, r5
	b	.LBB14_47
.LBB14_98:
	ldrd	r10, r9, [sp, #412]
	b	.LBB14_75
.LBB14_99:
	mov	r3, r4
	ldr	r0, [sp, #736]
	ldrd	r1, r4, [sp, #364]
	add.w	r5, r8, r6
	str	r2, [sp]
	str	r0, [r1]
	ldr	r0, [sp, #740]
	str	r0, [r1, #4]
	ldr	r0, [sp, #744]
	str	r0, [r1, #8]
	ldr	r0, [sp, #748]
	str	r0, [r1, #12]
	movs	r0, #1
	strb.w	r0, [sp, #440]
	ldr	r0, [sp, #420]
	ldr	r1, [sp, #280]
	add	r2, sp, #440
	mov	r6, r3
	mov	r3, r5
	bl	smoltcp::iface::interface::InterfaceInner::raw_socket_filter::h93e48f516552e689
	uxtb	r2, r6
	mov	r8, r0
	cmp	r2, #4
	bne	.LBB14_121
	ldrb.w	r0, [r10, #68]
	cmp	r0, #0
	beq	.LBB14_121
	ldr	r1, [sp, #360]
	cmp	r1, #8
	bhs	.LBB14_103
	movs	r0, #4
	movw	lr, #6224
	ldrd	r5, r9, [sp, #412]
	ldr.w	r12, [sp, #424]
	b	.LBB14_107
.LBB14_103:
	ldrh	r0, [r5, #4]
	str	r5, [sp, #356]
	movw	lr, #6224
	ldr.w	r12, [sp, #424]
	ldrd	r5, r9, [sp, #412]
	rev	r0, r0
	cmp.w	r1, r0, lsr #16
	bhs	.LBB14_105
	movs	r0, #4
	b	.LBB14_107
.LBB14_105:
	lsrs	r0, r0, #16
	cmp	r0, #8
	bhs	.LBB14_108
	movs	r0, #8
.LBB14_107:
	strb.w	r0, [sp, #577]
	movs	r0, #1
	strb.w	r0, [sp, #576]
	cmp	r0, #0
	bne.w	.LBB14_79
	b	.LBB14_88
.LBB14_108:
	ldr	r5, [sp, #356]
	ldrh	r0, [r5]
	cmp.w	r0, #17152
	bne	.LBB14_121
	ldr	r0, [sp, #360]
	cmp	r0, #3
	bls.w	.LBB14_485
	ldrh	r0, [r5, #2]
	cmp.w	r0, #17408
	bne	.LBB14_121
	movw	r1, #65144
	ldr.w	r0, [r10, #88]
	movt	r1, #65535
	ldr.w	r12, [r10, #84]
	muls	r0, r1, r0
	movs	r1, #0
.LBB14_112:
	adds	r6, r0, r1
	beq	.LBB14_121
	add.w	r3, r12, r1
	ldr	r5, [r3, #40]
	cmp	r5, #3
	beq.w	.LBB14_163
	cmn.w	r6, #392
	ldr	r5, [sp, #356]
	beq	.LBB14_121
	ldr.w	r5, [r3, #432]
	cmp	r5, #3
	beq.w	.LBB14_164
	cmn.w	r6, #784
	ldr	r5, [sp, #356]
	beq	.LBB14_121
	ldr.w	r5, [r3, #824]
	cmp	r5, #3
	beq.w	.LBB14_165
	cmn.w	r6, #1176
	ldr	r5, [sp, #356]
	beq	.LBB14_121
	ldr.w	r3, [r3, #1216]
	add.w	r1, r1, #1568
	cmp	r3, #3
	bne	.LBB14_112
	add.w	r0, r12, r1
	sub.w	r6, r0, #352
	b	.LBB14_166
.LBB14_121:
	mov	r0, r10
	mov	r1, r4
	str	r2, [sp, #420]
	bl	smoltcp::iface::interface::InterfaceInner::has_ip_addr::h39bdf4874bad6135
	cbnz	r0, .LBB14_124
	adds	r0, r4, #1
	beq	.LBB14_124
	mov	r0, r10
	mov	r1, r4
	bl	smoltcp::iface::interface::InterfaceInner::is_subnet_broadcast::h01a1330f6358acef
	cbz	r0, .LBB14_128
.LBB14_124:
	ldr	r1, [sp, #420]
	cmp	r1, #1
	beq.w	.LBB14_143
.LBB14_125:
	cmp	r1, #3
	add	r0, sp, #824
	beq	.LBB14_136
	cmp	r1, #4
	str	r5, [sp, #356]
	bne	.LBB14_137
	add	r1, sp, #440
	mov	r12, r0
	ldm	r1!, {r2, r3, r4, r5, r6}
	stm.w	r12!, {r2, r3, r4, r5, r6}
	mov	r3, r0
	ldm.w	r1, {r0, r2, r4, r5, r6, lr}
	stm.w	r12, {r0, r2, r4, r5, r6, lr}
	ldr	r0, [sp, #356]
	str	r0, [sp, #4]
	ldr	r0, [sp, #360]
	str	r0, [sp, #8]
	add	r0, sp, #576
	mov	r1, r10
	ldr	r2, [sp, #280]
	str.w	r8, [sp]
	bl	smoltcp::iface::interface::InterfaceInner::process_udp::h5cead8c80c35e914
	b	.LBB14_146
.LBB14_128:
	ldrb.w	r0, [r10, #75]
	cmp	r0, #0
	beq.w	.LBB14_178
	and	r0, r4, #240
	cmp	r0, #224
	beq.w	.LBB14_178
	uxtb	r0, r4
	cmp	r0, #0
	beq.w	.LBB14_178
	movs	r0, #1
	str	r5, [sp, #356]
	strb.w	r0, [sp, #772]
	add	r5, sp, #752
	ldrd	r0, r1, [r10]
	strd	r0, r1, [sp]
	mov	r0, r5
	ldr	r1, [sp, #388]
	add	r2, sp, #772
	str.w	r4, [sp, #773]
	bl	smoltcp::iface::route::Routes::lookup::h2f9b0a604461411e
	ldrb.w	r0, [sp, #752]
	cmp	r0, #3
	beq.w	.LBB14_178
	mov	r0, r5
	add	r2, sp, #792
	ldm	r0!, {r1, r3, r5, r6}
	stm	r2!, {r1, r3, r5, r6}
	ldr.w	r1, [r10, #56]
	ldrb	r0, [r0]
	cmp	r1, #0
	strb	r0, [r2]
	beq.w	.LBB14_178
	ldrb.w	r0, [sp, #792]
	ldr.w	r2, [r10, #52]
	add.w	r1, r1, r1, lsl #3
	cmp	r0, #1
	beq.w	.LBB14_147
	cmp	r0, #2
	bne.w	.LBB14_160
	adds	r6, r2, #1
	lsl.w	r9, r1, #1
	ldr.w	r10, [sp, #432]
	b	.LBB14_140
.LBB14_136:
	add	r1, sp, #440
	mov	r12, r0
	mov	r8, r5
	ldm	r1!, {r2, r3, r4, r5, r6}
	stm.w	r12!, {r2, r3, r4, r5, r6}
	mov	r3, r0
	ldm.w	r1, {r0, r2, r4, r5, r6, lr}
	stm.w	r12, {r0, r2, r4, r5, r6, lr}
	ldr	r0, [sp, #360]
	str	r0, [sp, #4]
	add	r0, sp, #576
	mov	r1, r10
	ldr	r2, [sp, #280]
	str.w	r8, [sp]
	bl	smoltcp::iface::interface::InterfaceInner::process_tcp::h5ff6fe940e837b1a
	b	.LBB14_146
.LBB14_137:
	cmp.w	r8, #0
	beq	.LBB14_144
	movs	r1, #148
	ldr	r0, [sp, #288]
	bl	__aeabi_memclr4
	movs	r0, #6
	str	r0, [sp, #584]
	b	.LBB14_145
.LBB14_139:
	subs.w	r9, r9, #18
	add.w	r6, r6, #18
	beq.w	.LBB14_178
.LBB14_140:
	ldrb	r0, [r6, #-1]
	cmp	r0, #0
	beq	.LBB14_139
	ldr	r0, [sp, #396]
	ldr	r1, [r6, #4]
	ldr	r2, [r6, #8]
	ldr	r5, [r6]
	ldr	r3, [r6, #12]
	str	r2, [r0, #8]
	str	r1, [r0, #4]
	movs	r2, #16
	ldr	r1, [sp, #228]
	str	r3, [r0, #12]
	str	r5, [r0]
	bl	memcmp
	cmp	r0, #0
	bne	.LBB14_139
.LBB14_142:
	ldr	r5, [sp, #356]
	ldr	r1, [sp, #420]
	cmp	r1, #1
	bne.w	.LBB14_125
.LBB14_143:
	add	r2, sp, #824
	add	r1, sp, #440
	mov	r12, r2
	mov	r3, r5
	ldm.w	r1!, {r0, r4, r5, r6, lr}
	stm.w	r12!, {r0, r4, r5, r6, lr}
	ldm.w	r1, {r0, r4, r5, r6, r8, lr}
	stm.w	r12, {r0, r4, r5, r6, r8, lr}
	ldr	r0, [sp, #360]
	str	r0, [sp]
	add	r0, sp, #576
	mov	r1, r10
	bl	smoltcp::iface::interface::InterfaceInner::process_icmpv4::h455ece092990769a
	b	.LBB14_146
.LBB14_144:
	ldr	r6, [sp, #228]
	ldr	r1, [sp, #744]
	ldr	r0, [sp, #748]
	str	r0, [sp, #784]
	str	r0, [r6, #12]
	ldr	r2, [sp, #740]
	ldr	r4, [sp, #360]
	movw	r0, #514
	str	r1, [r6, #8]
	ldr	r3, [sp, #736]
	str	r2, [r6, #4]
	cmp.w	r4, #528
	str	r3, [r6]
	strd	r2, r1, [sp, #776]
	str	r3, [sp, #772]
	mov.w	r2, #17
	it	hs
	movhs.w	r4, #528
	strh.w	r0, [sp, #824]
	ldr	r0, [sp, #224]
	add	r1, sp, #792
	bl	__aeabi_memcpy
	ldr	r0, [sp, #356]
	mov	r1, r10
	strd	r0, r4, [sp, #844]
	ldr	r0, [sp, #296]
	add	r2, sp, #772
	add	r3, sp, #824
	bl	smoltcp::iface::interface::InterfaceInner::icmpv4_reply::haf1573f8e2fbb5a4
.LBB14_145:
	movs	r0, #0
	strb.w	r0, [sp, #576]
.LBB14_146:
	ldrb.w	r0, [sp, #576]
	b	.LBB14_87
.LBB14_147:
	add.w	r0, r2, r1, lsl #1
	ldr.w	r1, [sp, #793]
	adds	r2, #55
	ldr.w	r10, [sp, #432]
	b	.LBB14_149
.LBB14_148:
	adds	r3, #18
	adds	r2, #72
	cmp	r0, r3
	beq.w	.LBB14_178
.LBB14_149:
	mov	r3, r2
	ldrb	r6, [r3, #-55]!
	cbnz	r6, .LBB14_151
	ldr	r6, [r2, #-54]
	cmp	r6, r1
	beq	.LBB14_142
.LBB14_151:
	adds	r3, #18
	cmp	r0, r3
	beq.w	.LBB14_178
	ldrb	r6, [r3]
	cbnz	r6, .LBB14_154
	ldr	r6, [r2, #-36]
	cmp	r6, r1
	beq	.LBB14_142
.LBB14_154:
	adds	r3, #18
	cmp	r0, r3
	beq.w	.LBB14_178
	ldrb	r6, [r3]
	cbnz	r6, .LBB14_157
	ldr	r6, [r2, #-18]
	cmp	r6, r1
	beq	.LBB14_142
.LBB14_157:
	adds	r3, #18
	cmp	r0, r3
	beq.w	.LBB14_178
	ldrb	r6, [r3]
	cmp	r6, #0
	bne	.LBB14_148
	ldr	r6, [r2]
	cmp	r6, r1
	bne	.LBB14_148
	b	.LBB14_142
.LBB14_160:
	lsls	r1, r1, #1
	ldr.w	r10, [sp, #432]
.LBB14_161:
	ldrb	r3, [r2], #18
	cmp	r3, #0
	mov.w	r3, #2
	it	eq
	moveq	r3, #1
	cmp	r3, r0
	beq.w	.LBB14_142
	subs	r1, #18
	bne	.LBB14_161
	b	.LBB14_178
.LBB14_163:
	add.w	r6, r3, #40
	b	.LBB14_166
.LBB14_164:
	add.w	r6, r3, #432
	b	.LBB14_166
.LBB14_165:
	add.w	r6, r3, #824
.LBB14_166:
	ldr	r0, [sp, #448]
	ldr	r2, [sp, #220]
	str.w	r0, [sp, #793]
	movs	r3, #1
	ldrd	r0, r1, [sp, #772]
	str	r0, [r2]
	ldr	r0, [sp, #432]
	strb.w	r3, [sp, #792]
	ldrb.w	r0, [r0, #45]
	str	r1, [r2, #4]
	ldr	r1, [sp, #780]
	str	r1, [r2, #8]
	cmp	r0, #1
	strb.w	r3, [sp, #824]
	ldr	r0, [sp, #452]
	str.w	r0, [sp, #825]
	bhi	.LBB14_174
	ldr	r0, [sp, #360]
	cmp	r0, #5
	bls.w	.LBB14_487
	ldr	r4, [sp, #356]
	movs	r2, #4
	add	r1, sp, #824
	ldrh	r0, [r4, #4]
	rev	r0, r0
	lsrs	r3, r0, #16
	add	r0, sp, #792
	bl	smoltcp::wire::ip::checksum::pseudo_header::ha771da54de6c08b8
	ldrh	r1, [r4, #4]
	ldr	r2, [sp, #360]
	rev	r1, r1
	cmp.w	r2, r1, lsr #16
	lsr.w	r1, r1, #16
	blo.w	.LBB14_486
	mov	r4, r0
	ldr	r0, [sp, #356]
	bl	smoltcp::wire::ip::checksum::data::hebb229fc732545ff
	uxth	r1, r4
	uxtah	r0, r1, r0
	lsrs	r1, r0, #16
	uxtah	r0, r1, r0
	movw	r1, #65535
	add.w	r0, r0, r0, lsr #16
	uxth	r0, r0
	cmp	r0, r1
	beq	.LBB14_174
	ldrb.w	r0, [sp, #792]
	cmp	r0, #1
	bne	.LBB14_173
	ldrb.w	r0, [sp, #824]
	cmp	r0, #1
	bne	.LBB14_173
	ldr	r0, [sp, #356]
	ldrh	r0, [r0, #6]
	cbz	r0, .LBB14_174
.LBB14_173:
	movw	r0, #1281
	b	.LBB14_86
.LBB14_174:
	ldr	r0, [sp, #360]
	cmp	r0, #5
	bls.w	.LBB14_487
	ldr	r0, [sp, #356]
	ldrh	r0, [r0, #4]
	rev	r0, r0
	lsrs	r1, r0, #16
	cmp	r1, #8
	blo.w	.LBB14_488
	ldr	r0, [sp, #360]
	cmp	r0, r1
	blo.w	.LBB14_489
	ldr	r5, [sp, #356]
	subs	r1, #8
	ldrh	r2, [r5, #2]
	ldrh	r0, [r5]
	str	r1, [sp, #8]
	ldr	r1, [sp, #432]
	rev	r2, r2
	rev	r0, r0
	lsrs	r2, r2, #16
	lsrs	r3, r0, #16
	add.w	r0, r6, #8
	add.w	r6, r5, #8
	strd	r2, r6, [sp]
	add	r2, sp, #736
	bl	smoltcp::socket::dhcpv4::Dhcpv4Socket::process::h233a98d8058a82c3
	uxtb	r1, r0
	cmp	r1, #11
	bne	.LBB14_179
.LBB14_178:
	movs	r1, #148
	ldr	r0, [sp, #288]
	bl	__aeabi_memclr4
	movs	r0, #6
	str	r0, [sp, #584]
	movs	r0, #0
	strb.w	r0, [sp, #576]
	b	.LBB14_87
.LBB14_179:
	strb.w	r0, [sp, #577]
	movs	r0, #1
	strb.w	r0, [sp, #576]
	b	.LBB14_87
.LBB14_180:
	ldrd	r8, r0, [r10, #84]
	mov.w	r1, #392
	movs	r2, #0
	mla	r3, r0, r1, r8
.LBB14_181:
	ldr.w	r10, [sp, #432]
.LBB14_182:
	movw	r9, #37160
	mov	r6, r8
	movt	r9, #16386
	movw	lr, #6224
.LBB14_183:
	cmp	r6, r3
	beq.w	.LBB14_2
	ldr	r0, [r6, #40]
	cmp	r0, #4
	add.w	r0, r6, #392
	bne	.LBB14_194
	cmp	r0, r3
	beq.w	.LBB14_2
	ldr.w	r1, [r6, #432]
	add.w	r8, r6, #784
	cmp	r1, #4
	bne	.LBB14_192
	cmp	r8, r3
	beq.w	.LBB14_2
	ldr.w	r0, [r6, #824]
	cmp	r0, #4
	add.w	r0, r6, #1176
	bne	.LBB14_193
	cmp	r0, r3
	beq.w	.LBB14_2
	ldr.w	r0, [r6, #1216]
	add.w	r8, r6, #1568
	cmp	r0, #4
	mov	r6, r8
	beq	.LBB14_183
	sub.w	r6, r8, #392
	b	.LBB14_195
.LBB14_192:
	mov	r6, r0
	b	.LBB14_195
.LBB14_193:
	mov	r6, r8
.LBB14_194:
	mov	r8, r0
.LBB14_195:
	ldrb	r0, [r6]
	str	r2, [sp, #436]
	cmp	r0, #0
	beq	.LBB14_210
	ldrd	r2, r0, [r6, #24]
	adds	r1, r6, #1
	mov	r11, r3
	strd	r2, r0, [sp, #420]
	movs	r2, #17
	add	r0, sp, #824
	ldrd	r5, r4, [r10]
	bl	__aeabi_memcpy
	ldr.w	r0, [r10, #56]
	add.w	r1, r0, r0, lsl #3
	ldr.w	r0, [r10, #52]
	lsl.w	r10, r1, #1
.LBB14_197:
	cmp.w	r10, #0
	beq	.LBB14_200
	add	r1, sp, #824
	add.w	r9, r0, #18
	bl	smoltcp::wire::ip::Cidr::contains_addr::h768e43cd1d234828
	cmp	r0, #0
	sub.w	r10, r10, #18
	mov	r0, r9
	beq	.LBB14_197
	ldrb.w	r0, [sp, #824]
	b	.LBB14_204
.LBB14_200:
	ldrb.w	r0, [sp, #824]
	cmp	r0, #1
	itt	eq
	ldreq.w	r0, [sp, #825]
	addseq.w	r0, r0, #1
	beq	.LBB14_203
	add	r0, sp, #576
	ldr	r1, [sp, #388]
	add	r2, sp, #824
	strd	r5, r4, [sp]
	bl	smoltcp::iface::route::Routes::lookup::h2f9b0a604461411e
	ldrb.w	r0, [sp, #576]
	ldr.w	r10, [sp, #432]
	cmp	r0, #3
	bne	.LBB14_205
	mov	r3, r11
	b	.LBB14_208
.LBB14_203:
	movs	r0, #1
.LBB14_204:
	ldr.w	r10, [sp, #432]
	ldr	r2, [sp, #396]
	b	.LBB14_206
.LBB14_205:
	ldr	r2, [sp, #404]
.LBB14_206:
	ldr	r1, [r2, #12]
	str	r1, [sp, #452]
	ldr	r1, [r2, #8]
	str	r1, [sp, #448]
	ldr	r1, [r2, #4]
	str	r1, [sp, #444]
	ldr	r1, [r2]
	add	r2, sp, #440
	str	r1, [sp, #440]
	ldr	r3, [sp, #404]
	strb.w	r0, [sp, #576]
	ldm	r2, {r0, r1, r2}
	str	r0, [r3]
	ldr.w	r0, [r10, #16]
	cmp	r0, #0
	str	r1, [r3, #4]
	str	r2, [r3, #8]
	ldr	r0, [sp, #452]
	str	r0, [r3, #12]
	beq.w	.LBB14_465
	ldr	r0, [sp, #400]
	add	r1, sp, #576
	mov	r2, r5
	mov	r3, r4
	bl	smoltcp::iface::neighbor::Cache::lookup::hb727a98f0eba979d
	lsls	r0, r0, #24
	mov	r3, r11
	beq	.LBB14_209
.LBB14_208:
	ldr	r0, [sp, #420]
	subs	r0, r5, r0
	ldr	r2, [sp, #436]
	ldr	r0, [sp, #424]
	sbcs.w	r0, r4, r0
	blt.w	.LBB14_182
	b	.LBB14_210
.LBB14_209:
	movs	r0, #0
	strb	r0, [r6]
	ldr	r2, [sp, #436]
.LBB14_210:
	mov	r10, r6
	ldr	r0, [r10, #40]!
.LCPI14_0:
	tbb	[pc, r0]
.LJTI14_0:
	.byte	(.LBB14_212-(.LCPI14_0+4))/2
	.byte	(.LBB14_217-(.LCPI14_0+4))/2
	.byte	(.LBB14_225-(.LCPI14_0+4))/2
	.byte	(.LBB14_228-(.LCPI14_0+4))/2
	.p2align	1
.LBB14_212:
	ldr.w	r9, [r10, #48]
	cmp.w	r9, #0
	beq.w	.LBB14_181
	ldr.w	r1, [r10, #40]
	cmp	r1, #0
	beq.w	.LBB14_460
	ldr.w	r0, [r10, #44]
	cmp	r0, r1
	bhs.w	.LBB14_462
	ldr.w	lr, [r10, #36]
	str	r3, [sp, #424]
	adds	r2, r0, #1
	ldrb.w	r4, [r10, #69]
	add.w	r3, lr, r0, lsl #3
	str	r4, [sp, #420]
	udiv	r5, r2, r1
	ldrb	r3, [r3, #4]
	mls	r12, r5, r1, r2
	ldrb.w	r2, [r10, #70]
	cmp	r3, #0
	str	r2, [sp, #352]
	beq.w	.LBB14_259
	ldrd	r11, r4, [r10, #56]
	ldr.w	r5, [r10, #64]
	mov	r2, r12
	b	.LBB14_282
.LBB14_217:
	ldrb.w	r0, [r10, #88]
	ldrb.w	lr, [r10, #89]
	cmp	r0, #0
	ldr.w	r12, [r10, #48]
	it	eq
	moveq.w	lr, #64
	cmp.w	r12, #0
	beq.w	.LBB14_181
	ldr.w	r9, [r10, #40]
	cmp.w	r9, #0
	beq.w	.LBB14_460
	ldr.w	r0, [r10, #44]
	cmp	r0, r9
	bhs.w	.LBB14_461
	ldr.w	r1, [r10, #36]
	add.w	r5, r0, r0, lsl #1
	str	r3, [sp, #424]
	adds	r2, r0, #1
	add.w	r3, r1, r5, lsl #3
	str	r1, [sp, #420]
	udiv	r4, r2, r9
	ldrb	r3, [r3, #6]
	mls	r1, r4, r9, r2
	ldrh.w	r11, [r10, #68]
	cmp	r3, #3
	strd	r11, lr, [sp, #184]
	bne.w	.LBB14_255
	mov	lr, r1
	ldr.w	r2, [r10, #64]
	ldrd	r1, r0, [r10, #56]
	subs	r4, r1, r0
	cmp	r2, r4
	it	ls
	movls	r4, r2
	adds	r3, r4, r0
	bhs.w	.LBB14_478
	cmp	r3, r1
	bhi.w	.LBB14_479
	ldr	r3, [sp, #420]
	mov	r11, r1
	ldr.w	r3, [r3, r5, lsl #3]
	cmp	r4, r3
	it	lo
	movlo	r3, r4
	cmp	r1, #0
	beq.w	.LBB14_263
	add	r0, r3
	udiv	r4, r0, r11
	mls	r5, r4, r11, r0
	b	.LBB14_264
.LBB14_225:
	ldrb.w	r0, [r6, #338]
	cmp	r0, #0
	beq.w	.LBB14_181
	cmp	r0, #1
	add.w	r9, r6, #336
	bne.w	.LBB14_236
	ldrb.w	r0, [r9, #3]
	cmp	r0, #0
	bne.w	.LBB14_237
	b	.LBB14_181
.LBB14_228:
	ldr	r2, [sp, #392]
	ldr	r0, [r2]
	lsls	r1, r0, #31
	beq.w	.LBB14_455
	ldr.w	r10, [sp, #432]
	movw	r9, #24861
	str	r3, [sp, #424]
	movt	r9, #15417
	ldrd	r1, r12, [r10, #24]
	movw	r3, #64748
	umull	r11, r5, r1, r9
	movt	r3, #47918
	ldrb	r4, [r2, #6]
	mla	lr, r1, r3, r5
	ldrh	r5, [r2, #4]
	movw	r2, #61241
	mul	r1, r12, r9
	movt	r2, #30096
	movs	r3, #29
	adds.w	r2, r2, r11
	orr.w	r12, r5, r4, lsl #16
	adc.w	r1, r1, lr
	lsrs	r0, r0, #8
	strd	r2, r1, [r10, #24]
	lsl.w	lr, r1, #1
	ldr	r4, [sp, #376]
	sub.w	r1, r3, r1, lsr #29
	movs	r3, #0
	eor	r5, r1, #31
	lsr.w	r1, r2, r1
	ldr	r2, [sp, #380]
	lsl.w	r5, lr, r5
	orr.w	r9, r1, r5
	lsr.w	r1, r12, #8
	strh	r1, [r2, #4]
	orr.w	r0, r0, r12, lsl #24
	str	r0, [r2]
	ldr	r2, [sp, #372]
	str	r3, [r4]
	movs	r5, #1
	strd	r3, r3, [r2]
	str	r3, [r2, #8]
	strb	r3, [r2, #12]
	ldr	r2, [sp, #384]
	str	r3, [r4, #4]
	str	r0, [r2]
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.216
	strh	r1, [r2, #4]
	ldrh.w	r1, [r10, #32]
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.216
	str	r0, [sp, #444]
	add.w	r0, r6, #48
	movs	r2, #3
	str	r3, [r4, #8]
	subs	r1, #82
	strh	r3, [r4, #12]
	strb.w	r3, [sp, #489]
	str.w	r3, [sp, #494]
	strh.w	r3, [sp, #498]
	strb.w	r5, [sp, #504]
	strb.w	r3, [sp, #511]
	str	r2, [sp, #448]
	movs	r2, #2
	strb.w	r2, [sp, #516]
	strh.w	r1, [sp, #462]
	ldr	r1, [r0]
	cmp	r1, #0
	strb.w	r3, [sp, #464]
	str.w	r9, [sp, #440]
	strh.w	r5, [sp, #460]
	str	r3, [sp, #452]
	beq.w	.LBB14_248
	cmp	r1, #1
	ldr.w	r12, [r0, #4]
	bne.w	.LBB14_252
	ldrd	r3, r4, [r10]
	ldrd	r5, r2, [r6, #56]
	subs	r3, r3, r5
	sbcs.w	r2, r4, r2
	blt.w	.LBB14_254
	ldrh.w	r11, [r6, #64]
	cmp.w	r11, #4
	bhi.w	.LBB14_256
	movs	r1, #2
	strb.w	r1, [sp, #464]
	ldr.w	r1, [r0, #26]
	ldr.w	r0, [r0, #22]
	add	r4, sp, #440
	str	r0, [sp, #512]
	mov	r0, r4
	movs	r2, #1
	strb.w	r2, [sp, #499]
	str	r1, [sp, #500]
	movs	r1, #1
	str	r1, [sp, #420]
	strb.w	r2, [sp, #511]
	bl	smoltcp::wire::dhcpv4::Repr::buffer_len::hbab4115fcbcda0ba
	adds	r0, #8
	str	r0, [sp, #828]
	movs	r0, #0
	str	r0, [sp, #832]
	mov.w	r0, #-1
	str	r0, [sp, #836]
	movs	r0, #4
	strb.w	r0, [sp, #840]
	movs	r0, #64
	strb.w	r0, [sp, #842]
	movs	r0, #68
	movs	r2, #92
	movt	r0, #67
	str	r0, [sp, #844]
	ldr	r0, [sp, #300]
	mov	r1, r4
	bl	__aeabi_memcpy4
	movs	r0, #5
	str	r0, [sp, #824]
	add	r0, sp, #576
	add	r1, sp, #824
	bl	smoltcp::iface::interface::IpPacket::ip_repr::h34c58f58187ffea8
	ldrb.w	r0, [sp, #576]
	cmp	r0, #0
	beq.w	.LBB14_345
	cmp	r0, #1
	bne.w	.LBB14_346
	ldr	r1, [sp, #288]
	b.w	.LBB14_347
.LBB14_236:
	ldr.w	r0, [r9, #15]
	str	r0, [sp, #588]
	ldr.w	r0, [r9, #11]
	str	r0, [sp, #584]
	ldr.w	r0, [r9, #7]
	str	r0, [sp, #580]
	ldr.w	r0, [r9, #3]
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.7
	str	r0, [sp, #576]
	mov	r4, r2
	movs	r2, #16
	add	r0, sp, #576
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.7
	mov	r5, r3
	bl	memcmp
	mov	r2, r4
	mov	r3, r5
	cmp	r0, #0
	beq.w	.LBB14_181
.LBB14_237:
	ldrh.w	r0, [r9]
	cmp	r0, #0
	beq.w	.LBB14_181
	ldrd	r0, r1, [r6, #152]
	eor	r0, r0, #1
	ldr.w	r10, [sp, #432]
	orrs	r0, r1
	str	r3, [sp, #424]
	beq	.LBB14_240
	movs	r2, #1
	ldrd	r0, r1, [r10]
	str.w	r2, [r6, #152]
	movs	r2, #0
	strd	r2, r0, [r6, #156]
	str.w	r1, [r6, #164]
.LBB14_240:
	ldrd	r0, r1, [r6, #120]
	eor	r0, r0, #1
	add.w	r9, r6, #48
	orrs	r0, r1
	bne	.LBB14_242
	ldrd	r2, r3, [r6, #128]
	ldrd	r5, r4, [r6, #160]
	ldrd	r0, r1, [r10]
	adds	r2, r2, r5
	adcs	r3, r4
	subs	r0, r0, r2
	sbcs.w	r0, r1, r3
	bge.w	.LBB14_323
.LBB14_242:
	mov	r0, r9
	mov	r1, r10
	bl	smoltcp::socket::tcp::TcpSocket::seq_to_transmit::hb33c0196cfeb4773
	cmp	r0, #0
	bne.w	.LBB14_324
	ldr.w	r0, [r9]
	cmp	r0, #2
	beq	.LBB14_246
	cmp	r0, #1
	bne.w	.LBB14_324
	ldrd	r0, r1, [r10]
	ldrd	r2, r3, [r6, #56]
	subs	r0, r0, r2
	sbcs.w	r0, r1, r3
	blt.w	.LBB14_324
.LBB14_246:
	ldr.w	r0, [r6, #272]
	str.w	r0, [r6, #280]
	ldrd	r1, r12, [r10]
	ldr.w	r5, [r6, #144]
	movs	r2, #0
	ldrd	r0, r3, [r6, #136]
	ldr.w	r4, [r6, #148]
	adds	r1, r1, r5
	str	r0, [r6, #56]
	adc.w	r0, r4, r12
	strd	r3, r1, [r6, #60]
	ldrsb.w	r1, [r6, #112]
	str	r0, [r6, #68]
	movs	r0, #1
	str	r2, [r6, #48]
	uqadd8	r0, r1, r0
	str	r2, [r6, #52]
	str	r2, [r6, #72]
	uxtb	r1, r0
	str	r2, [r6, #76]
	cmp	r1, #3
	strb.w	r0, [r6, #112]
	blo.w	.LBB14_324
	ldr	r0, [r6, #96]
	movs	r1, #0
	strb.w	r1, [r6, #112]
	lsls	r1, r0, #1
	movw	r2, #10000
	cmp	r1, r2
	movw	r1, #10000
	it	lo
	lsllo	r1, r0, #1
	str	r1, [r6, #96]
	b	.LBB14_324
.LBB14_248:
	ldrd	r0, r1, [r10]
	ldrd	r2, r3, [r6, #56]
	subs	r0, r0, r2
	sbcs.w	r0, r1, r3
	blt	.LBB14_254
	add	r4, sp, #440
	mov	r0, r4
	bl	smoltcp::wire::dhcpv4::Repr::buffer_len::hbab4115fcbcda0ba
	adds	r0, #8
	str	r0, [sp, #828]
	movs	r0, #0
	str	r0, [sp, #832]
	mov.w	r0, #-1
	str	r0, [sp, #836]
	movs	r0, #4
	strb.w	r0, [sp, #840]
	movs	r0, #64
	strb.w	r0, [sp, #842]
	movs	r0, #68
	movs	r2, #92
	movt	r0, #67
	str	r0, [sp, #844]
	ldr	r0, [sp, #300]
	mov	r1, r4
	bl	__aeabi_memcpy4
	movs	r0, #5
	str	r0, [sp, #824]
	add	r0, sp, #576
	add	r1, sp, #824
	bl	smoltcp::iface::interface::IpPacket::ip_repr::h34c58f58187ffea8
	ldrb.w	r0, [sp, #576]
	cmp	r0, #0
	beq.w	.LBB14_337
	cmp	r0, #1
	bne.w	.LBB14_338
	movs	r0, #1
	str	r0, [sp, #420]
	ldr	r1, [sp, #288]
	b.w	.LBB14_339
.LBB14_252:
	ldrd	r4, r3, [r10]
	ldrd	r2, r5, [r6, #64]
	subs	r2, r4, r2
	sbcs.w	r2, r3, r5
	bge	.LBB14_256
	ldrd	r0, r1, [r6, #56]
	subs	r0, r4, r0
	sbcs.w	r0, r3, r1
	bge.w	.LBB14_320
.LBB14_254:
	movs	r0, #0
	str	r0, [sp, #368]
	movs	r0, #0
	str	r0, [sp, #352]
	movs	r0, #0
	mov.w	r12, #11
	mov.w	r9, #3
	mov.w	lr, #0
	movs	r4, #0
	mov.w	r10, #0
	mov.w	r11, #0
	str	r0, [sp, #360]
	movs	r0, #0
	movs	r5, #0
	movs	r1, #0
	str	r0, [sp, #356]
	movs	r0, #0
	str	r0, [sp, #344]
	ldr	r3, [sp, #424]
	ldr	r2, [sp, #436]
	cmp.w	r12, #11
	beq.w	.LBB14_422
	b.w	.LBB14_448
.LBB14_255:
	ldrd	r11, r5, [r10, #56]
	ldr.w	r4, [r10, #64]
	mov	r9, r1
	b	.LBB14_266
.LBB14_256:
	eor	r1, r1, #2
	ldr	r3, [sp, #424]
	orrs.w	r1, r1, r12
	ldr	r2, [sp, #436]
	bne	.LBB14_258
	movs	r1, #1
	strb.w	r1, [r6, #132]
.LBB14_258:
	mov.w	lr, #0
	str.w	lr, [r0]
	str.w	lr, [r0, #4]
	mov.w	r12, #11
	str.w	lr, [r0, #8]
	mov.w	r9, #3
	str.w	lr, [r0, #12]
	movs	r0, #0
	str	r0, [sp, #368]
	movs	r0, #0
	str	r0, [sp, #352]
	movs	r0, #0
	str	r0, [sp, #360]
	movs	r0, #0
	movs	r4, #0
	mov.w	r10, #0
	mov.w	r11, #0
	str	r0, [sp, #356]
	movs	r0, #0
	str	r0, [sp, #344]
	movs	r5, #0
	b	.LBB14_318
.LBB14_259:
	ldrd	r11, r5, [r10, #56]
	ldr.w	r2, [r10, #64]
	sub.w	r4, r11, r5
	cmp	r2, r4
	it	ls
	movls	r4, r2
	adds	r3, r4, r5
	bhs.w	.LBB14_470
	cmp	r3, r11
	bhi.w	.LBB14_468
	ldr.w	r0, [lr, r0, lsl #3]
	cmp	r4, r0
	it	lo
	movlo	r0, r4
	cmp.w	r11, #0
	beq.w	.LBB14_279
	adds	r3, r0, r5
	udiv	r4, r3, r11
	mls	r4, r4, r11, r3
	b	.LBB14_280
.LBB14_263:
	movs	r5, #0
.LBB14_264:
	subs	r0, r2, r3
	subs.w	r12, r12, #1
	ldr	r3, [sp, #424]
	ldr	r2, [sp, #436]
	str.w	r5, [r10, #60]
	str.w	r0, [r10, #64]
	strd	lr, r12, [r10, #44]
	beq.w	.LBB14_181
	mov	r1, r0
	add.w	r0, lr, #1
	udiv	r2, r0, r9
	mov	r4, lr
	mls	r9, r2, r9, r0
	mov	r0, lr
	mov	r4, r1
.LBB14_266:
	sub.w	r1, r11, r5
	cmp	r4, r1
	it	ls
	movls	r1, r4
	adds	r3, r1, r5
	bhs.w	.LBB14_470
	cmp	r3, r11
	bhi.w	.LBB14_468
	add.w	r0, r0, r0, lsl #1
	ldr	r2, [sp, #420]
	str	r5, [sp, #200]
	add.w	r0, r2, r0, lsl #3
	mov	r2, r0
	ldrb	r3, [r2, #6]!
	cmp	r3, #3
	beq.w	.LBB14_469
	ldr	r5, [r0], #4
	str	r3, [sp, #420]
	cmp	r5, r1
	strd	r4, r11, [sp, #192]
	strd	r9, r12, [sp, #176]
	bhi.w	.LBB14_473
	add.w	r4, r10, #4
	ldrh.w	r9, [r0]
	ldr.w	r11, [r10, #52]
	ldr.w	r0, [r4, #66]
	str	r0, [sp, #824]
	ldr	r0, [sp, #432]
	ldr.w	r3, [r4, #70]
	ldr.w	r12, [r4, #77]
	str	r3, [sp, #828]
	ldr	r1, [r0, #80]
	mov.w	r0, #6208
	ldrh.w	r3, [r4, #81]
	ldr	r0, [r1, r0]
	ldr.w	lr, [r4, #73]
	cmp	r0, #4
	strh.w	r3, [sp, #440]
	str.w	lr, [sp, #831]
	bhs.w	.LBB14_456
	ldrb	r3, [r2, #5]
	add.w	r0, r1, r0, lsl #4
	str	r3, [sp, #204]
	ldrb	r3, [r2, #10]
	str	r3, [sp, #356]
	ldrb	r3, [r2, #11]
	str	r3, [sp, #360]
	ldrb	r3, [r2, #12]
	str	r3, [sp, #208]
	ldrb	r3, [r2, #13]
	str	r3, [sp, #368]
	ldrb	r3, [r2, #15]
	ldrb	r4, [r2, #14]
	str	r3, [sp, #212]
	ldr	r0, [r0, #12]
	ldrb	r3, [r2, #16]
	str	r3, [sp, #216]
	cmp.w	r0, #-1
	ldr.w	r3, [r2, #1]
	ldr.w	lr, [r2, #6]
	str	r3, [sp, #352]
	str.w	lr, [sp, #344]
	ble	.LBB14_274
	ldr	r2, [sp, #304]
	str.w	r12, [sp, #592]
	ldr	r0, [sp, #824]
	strh.w	r9, [sp, #626]
	str	r0, [r2]
	ldr	r0, [sp, #828]
	str	r0, [r2, #4]
	ldr.w	r0, [sp, #831]
	str.w	r0, [r2, #7]
	ldrh.w	r0, [sp, #440]
	strh.w	r0, [sp, #596]
	ldr	r0, [sp, #188]
	strb.w	r0, [sp, #617]
	add.w	r0, r5, #8
	str	r0, [sp, #620]
	ldr	r0, [sp, #184]
	strh.w	r0, [sp, #624]
	ldr	r0, [sp, #200]
	add	r0, r11
	str	r0, [sp, #628]
	movs	r0, #3
	str	r0, [sp, #576]
	movs	r0, #0
	strb.w	r0, [sp, #580]
	ldr	r0, [sp, #420]
	strb.w	r0, [sp, #598]
	mov	r11, r0
	ldr	r0, [sp, #204]
	strb.w	r0, [sp, #603]
	ldr	r0, [sp, #356]
	strb.w	r0, [sp, #608]
	ldr	r0, [sp, #360]
	strb.w	r0, [sp, #609]
	ldr	r0, [sp, #208]
	strb.w	r0, [sp, #610]
	ldr	r0, [sp, #368]
	strb.w	r0, [sp, #611]
	ldr	r0, [sp, #212]
	strb.w	r0, [sp, #613]
	ldr	r0, [sp, #216]
	strb.w	r0, [sp, #614]
	movs	r0, #4
	strb.w	r0, [sp, #615]
	ldr	r0, [sp, #432]
	add	r2, sp, #576
	str.w	r3, [sp, #599]
	str.w	lr, [sp, #604]
	mov	r9, r4
	strb.w	r4, [sp, #612]
	str	r5, [sp, #632]
	bl	smoltcp::iface::interface::InterfaceInner::dispatch_ip::h40aab87b8d567aea
	uxtb.w	r12, r0
	movs	r0, #0
	cmp.w	r12, #11
	mov	r1, r12
	it	ne
	movne	r5, r0
	ldr	r3, [sp, #424]
	ldr	r4, [sp, #196]
	cbz	r4, .LBB14_275
.LBB14_273:
	ldr	r0, [sp, #200]
	add	r0, r5
	udiv	r2, r0, r4
	mls	r0, r2, r4, r0
	b	.LBB14_276
.LBB14_274:
	mov	r9, r4
	movs	r5, #0
	mov.w	r12, #11
	movs	r1, #0
	ldrd	r11, r3, [sp, #420]
	ldr	r4, [sp, #196]
	cmp	r4, #0
	bne	.LBB14_273
.LBB14_275:
	movs	r0, #0
.LBB14_276:
	str.w	r0, [r10, #60]
	ldr	r0, [sp, #192]
	ldr	r2, [sp, #436]
	mov	lr, r9
	mov	r9, r11
	ldr	r4, [sp, #208]
	cmp	r1, #11
	sub.w	r0, r0, r5
	ldr	r5, [sp, #204]
	str.w	r0, [r10, #64]
	bne	.LBB14_278
	ldr	r0, [sp, #180]
	ldr	r1, [sp, #176]
	subs	r0, #1
	strd	r1, r0, [r10, #44]
	movs	r1, #11
.LBB14_278:
	ldrd	r11, r10, [sp, #212]
	cmp.w	r12, #11
	beq.w	.LBB14_422
	b.w	.LBB14_448
.LBB14_279:
	movs	r4, #0
.LBB14_280:
	ldr	r3, [sp, #424]
	subs	r5, r2, r0
	subs.w	r9, r9, #1
	ldr	r2, [sp, #436]
	str.w	r4, [r10, #60]
	str.w	r5, [r10, #64]
	strd	r12, r9, [r10, #44]
	beq.w	.LBB14_181
	add.w	r0, r12, #1
	udiv	r2, r0, r1
	mls	r2, r2, r1, r0
	mov	r0, r12
.LBB14_282:
	sub.w	r1, r11, r4
	cmp	r5, r1
	it	ls
	movls	r1, r5
	adds	r3, r1, r4
	bhs.w	.LBB14_471
	cmp	r3, r11
	bhi.w	.LBB14_468
	add.w	r0, lr, r0, lsl #3
	ldr	r3, [r0], #4
	ldrb	r0, [r0]
	cmp	r0, #0
	beq.w	.LBB14_469
	cmp	r3, r1
	bhi.w	.LBB14_472
	cmp	r3, #0
	beq.w	.LBB14_463
	ldr.w	r0, [r10, #52]
	str	r3, [sp, #368]
	strd	r2, r9, [sp, #176]
	add.w	r9, r0, r4
	str	r4, [sp, #184]
	strd	r5, r11, [sp, #356]
	ldrb.w	r5, [r9]
	lsrs	r0, r5, #4
	cmp	r0, #4
	beq.w	.LBB14_298
	cmp	r0, #6
	bne.w	.LBB14_311
	cmp	r3, #40
	blo.w	.LBB14_311
	ldrh.w	r0, [r9, #4]
	rev.w	r11, r0
	movs	r0, #40
	add.w	r0, r0, r11, lsr #16
	cmp	r0, r3
	bhi.w	.LBB14_311
	ldrb.w	r0, [r9, #6]
	bl	<smoltcp::wire::ip::Protocol as core::convert::From<u8>>::from::h32c43f1d7a16fe9c
	ldr.w	r12, [sp, #420]
	uxtb	r0, r0
	cmp	r0, r12
	bne.w	.LBB14_311
	uxtb	r0, r1
	ldr	r3, [sp, #352]
	subs	r0, r0, r3
	subs.w	r2, r12, #10
	clz	r0, r0
	lsr.w	r0, r0, #5
	it	ne
	movne	r2, #1
	orrs	r0, r2
	cmp	r0, #1
	bne.w	.LBB14_311
	and	r0, r5, #240
	cmp	r0, #96
	bne.w	.LBB14_311
	ldrb.w	r0, [r9, #7]
	ldrb.w	r2, [r9, #17]
	str	r0, [sp, #28]
	ldr.w	r0, [r9, #8]
	str	r0, [sp, #344]
	ldr.w	r0, [r9, #12]
	str	r2, [sp, #352]
	ldrb.w	r2, [r9, #18]
	str	r0, [sp, #216]
	ldrb.w	r0, [r9, #16]
	str	r2, [sp, #212]
	ldr.w	r2, [r9, #19]
	str	r2, [sp, #440]
	ldr	r3, [sp, #236]
	ldrb.w	r2, [r9, #23]
	str.w	r12, [sp, #24]
	strb.w	r2, [sp, #444]
	lsr.w	r4, r11, #16
	ldr.w	r2, [r9, #24]
	str	r2, [r3]
	ldr.w	r2, [r9, #28]
	str	r2, [r3, #4]
	ldr.w	r2, [r9, #32]
	str	r2, [r3, #8]
	add.w	r2, r9, #40
	str	r2, [sp, #204]
	ldr.w	r2, [r9, #36]
	str	r2, [r3, #12]
	movs	r5, #2
	mov	r9, r1
	mov	r11, r0
	str	r4, [sp, #208]
.LBB14_295:
	mov	r0, r5
	bl	smoltcp::wire::ip::Repr::buffer_len::h21a6824b18829e4b
	ldr	r0, [sp, #344]
	str	r0, [sp, #836]
	ldr	r0, [sp, #216]
	str	r0, [sp, #840]
	ldr	r0, [sp, #352]
	strb.w	r0, [sp, #845]
	ldr	r0, [sp, #212]
	strb.w	r0, [sp, #846]
	movs	r2, #21
	ldr	r0, [sp, #240]
	add	r1, sp, #440
	strb.w	r5, [sp, #828]
	str	r4, [sp, #832]
	strb.w	r11, [sp, #844]
	bl	__aeabi_memcpy
	ldr	r0, [sp, #24]
	strb.w	r0, [sp, #868]
	ldr	r0, [sp, #28]
	strb.w	r0, [sp, #870]
	ldr	r0, [sp, #204]
	str	r0, [sp, #872]
	ldr	r0, [sp, #208]
	str	r0, [sp, #876]
	movs	r0, #2
	str	r0, [sp, #824]
	add	r0, sp, #576
	add	r1, sp, #824
	strb.w	r9, [sp, #869]
	bl	smoltcp::iface::interface::IpPacket::ip_repr::h34c58f58187ffea8
	ldrb.w	r0, [sp, #576]
	str.w	r9, [sp, #20]
	cmp	r0, #0
	beq.w	.LBB14_437
	cmp	r0, #1
	ldr	r3, [sp, #424]
	ldr	r5, [sp, #360]
	bne.w	.LBB14_438
	mov.w	r9, #1
	ldr	r1, [sp, #288]
	b.w	.LBB14_439
.LBB14_298:
	cmp	r3, #20
	blo	.LBB14_311
	movs	r0, #60
	and.w	r11, r0, r5, lsl #2
	cmp	r3, r11
	blo	.LBB14_311
	ldrh.w	r0, [r9, #2]
	rev	r0, r0
	cmp.w	r11, r0, lsr #16
	bhi	.LBB14_311
	lsrs	r0, r0, #16
	str	r0, [sp, #344]
	cmp	r3, r0
	blo	.LBB14_311
	ldr	r0, [sp, #432]
	ldrb.w	r0, [r0, #44]
	str	r0, [sp, #216]
	ldrb.w	r0, [r9, #9]
	bl	<smoltcp::wire::ip::Protocol as core::convert::From<u8>>::from::h32c43f1d7a16fe9c
	ldr	r3, [sp, #420]
	ldr.w	r12, [sp, #368]
	uxtb	r0, r0
	cmp	r0, r3
	bne	.LBB14_311
	mov	lr, r11
	mov	r2, r1
	cmp	r3, #10
	bne	.LBB14_305
	uxtb	r0, r2
	ldr	r1, [sp, #352]
	cmp	r0, r1
	bne	.LBB14_311
.LBB14_305:
	ldr	r0, [sp, #216]
	lsls	r0, r0, #31
	mov.w	r0, #0
	strh.w	r0, [r9, #10]
	bne	.LBB14_307
	mov	r0, r9
	mov	r1, lr
	str	r2, [sp, #352]
	bl	smoltcp::wire::ip::checksum::data::hebb229fc732545ff
	mvns	r0, r0
	mov	lr, r11
	ldr	r2, [sp, #352]
	ldr.w	r12, [sp, #368]
	rev	r0, r0
	lsrs	r0, r0, #16
	strh.w	r0, [r9, #10]
.LBB14_307:
	and	r0, r5, #240
	str.w	r9, [sp, #576]
	cmp	r0, #64
	str.w	r12, [sp, #580]
	bne	.LBB14_311
	ldr	r0, [sp, #216]
	cmp	r0, #1
	bhi	.LBB14_310
	mov	r0, r9
	mov	r1, lr
	mov	r5, r2
	bl	smoltcp::wire::ip::checksum::data::hebb229fc732545ff
	uxth	r0, r0
	movw	r1, #65535
	mov	lr, r11
	mov	r2, r5
	cmp	r0, r1
	bne	.LBB14_311
.LBB14_310:
	ldrh.w	r0, [r9, #6]
	mvn	r1, #192
	tst	r0, r1
	beq.w	.LBB14_446
.LBB14_311:
	movs	r0, #3
	movs	r3, #0
	str	r0, [sp, #420]
	movs	r1, #0
	movs	r2, #0
	movs	r0, #0
	mov.w	r9, #0
	mov.w	r11, #0
	str	r3, [sp, #352]
	mov.w	r12, #0
	movs	r3, #0
	mov.w	lr, #0
	movs	r5, #0
.LBB14_312:
	ldr	r4, [sp, #308]
	str	r4, [sp, #212]
	ldr	r4, [sp, #316]
	str	r4, [sp, #208]
	ldr	r4, [sp, #328]
	str	r4, [sp, #216]
	ldr	r4, [sp, #324]
	str	r4, [sp, #344]
	ldr	r4, [sp, #336]
	str	r4, [sp, #200]
	ldr	r4, [sp, #320]
	str	r4, [sp, #196]
	ldr	r4, [sp, #332]
	str	r4, [sp, #192]
	ldr	r4, [sp, #312]
	str	r4, [sp, #204]
	ldr	r4, [sp, #340]
	str	r4, [sp, #188]
	strd	r3, r1, [sp, #316]
	strd	r12, lr, [sp, #308]
	strd	r9, r5, [sp, #324]
	mov.w	r12, #11
	movs	r1, #11
	ldrd	r9, r3, [sp, #420]
	ldr	r5, [sp, #360]
	str	r0, [sp, #340]
	ldr	r4, [sp, #368]
	strd	r2, r11, [sp, #332]
.LBB14_313:
	cbz	r5, .LBB14_315
	ldr	r0, [sp, #184]
	add	r0, r4
	udiv	r2, r0, r5
	mls	r0, r2, r5, r0
	b	.LBB14_316
.LBB14_315:
	movs	r0, #0
.LBB14_316:
	ldr	r2, [sp, #436]
	str.w	r0, [r10, #60]
	cmp	r1, #11
	ldr	r0, [sp, #356]
	sub.w	r0, r0, r4
	str.w	r0, [r10, #64]
	bne	.LBB14_319
	ldr	r0, [sp, #176]
	str.w	r0, [r10, #44]
	ldr	r0, [sp, #180]
	ldr.w	lr, [sp, #320]
	subs	r0, #1
	str.w	r0, [r10, #48]
	ldr	r0, [sp, #332]
	str	r0, [sp, #368]
	ldr	r0, [sp, #188]
	ldr.w	r11, [sp, #336]
	ldr	r4, [sp, #340]
	str	r0, [sp, #340]
	ldr	r0, [sp, #192]
	str	r0, [sp, #332]
	ldr	r0, [sp, #196]
	str	r0, [sp, #320]
	ldr	r0, [sp, #200]
	str	r0, [sp, #336]
	ldr	r0, [sp, #344]
	ldr.w	r10, [sp, #324]
	str	r0, [sp, #324]
	ldr	r0, [sp, #308]
	str	r0, [sp, #360]
	ldr	r0, [sp, #316]
	str	r0, [sp, #356]
	ldr	r0, [sp, #312]
	str	r0, [sp, #344]
	ldr	r0, [sp, #204]
	str	r0, [sp, #312]
	ldr	r0, [sp, #216]
	ldr	r5, [sp, #328]
	str	r0, [sp, #328]
	ldr	r0, [sp, #208]
	str	r0, [sp, #316]
	ldr	r0, [sp, #212]
	str	r0, [sp, #308]
.LBB14_318:
	movs	r1, #11
	cmp.w	r12, #11
	beq.w	.LBB14_422
	b.w	.LBB14_448
.LBB14_319:
	ldr	r0, [sp, #332]
	str	r0, [sp, #368]
	ldr	r0, [sp, #188]
	ldr.w	lr, [sp, #320]
	ldr	r4, [sp, #340]
	str	r0, [sp, #340]
	ldr	r0, [sp, #192]
	str	r0, [sp, #332]
	ldr	r0, [sp, #196]
	str	r0, [sp, #320]
	ldr	r0, [sp, #200]
	ldr.w	r10, [sp, #324]
	ldr.w	r11, [sp, #336]
	str	r0, [sp, #336]
	ldr	r0, [sp, #344]
	str	r0, [sp, #324]
	ldr	r0, [sp, #308]
	str	r0, [sp, #360]
	ldr	r0, [sp, #316]
	str	r0, [sp, #356]
	ldr	r0, [sp, #312]
	str	r0, [sp, #344]
	ldr	r0, [sp, #204]
	str	r0, [sp, #312]
	ldr	r0, [sp, #216]
	ldr	r5, [sp, #328]
	str	r0, [sp, #328]
	ldr	r0, [sp, #208]
	str	r0, [sp, #316]
	ldr	r0, [sp, #212]
	str	r0, [sp, #308]
	cmp.w	r12, #11
	beq.w	.LBB14_422
	b.w	.LBB14_448
.LBB14_320:
	movs	r0, #2
	add.w	r11, sp, #440
	strb.w	r0, [sp, #464]
	mov	r0, r11
	ldr	r4, [r6, #72]
	ldr	r5, [r6, #80]
	str	r5, [sp, #472]
	bl	smoltcp::wire::dhcpv4::Repr::buffer_len::hbab4115fcbcda0ba
	adds	r0, #8
	movs	r2, #92
	strd	r0, r5, [sp, #828]
	movs	r0, #4
	strb.w	r0, [sp, #840]
	movs	r0, #64
	strb.w	r0, [sp, #842]
	movs	r0, #68
	mov	r1, r11
	movt	r0, #67
	str	r0, [sp, #844]
	ldr	r0, [sp, #300]
	str	r4, [sp, #836]
	bl	__aeabi_memcpy4
	movs	r0, #5
	str	r0, [sp, #824]
	add	r0, sp, #576
	add	r1, sp, #824
	bl	smoltcp::iface::interface::IpPacket::ip_repr::h34c58f58187ffea8
	ldrb.w	r0, [sp, #576]
	cmp	r0, #0
	beq.w	.LBB14_352
	cmp	r0, #1
	bne.w	.LBB14_353
	movs	r0, #1
	str	r0, [sp, #420]
	ldr	r1, [sp, #288]
	b	.LBB14_354
.LBB14_323:
	movs	r0, #0
	strb.w	r0, [r9, #310]
.LBB14_324:
	mov	r0, r9
	mov	r1, r10
	bl	smoltcp::socket::tcp::TcpSocket::seq_to_transmit::hb33c0196cfeb4773
	cmp	r0, #0
	bne.w	.LBB14_366
	mov	r0, r9
	bl	smoltcp::socket::tcp::TcpSocket::ack_to_transmit::h6a8624e0a5e08feb
	cbz	r0, .LBB14_328
	ldrd	r0, r1, [r6, #184]
	eor	r0, r0, #1
	orrs	r0, r1
	bne.w	.LBB14_366
	ldrd	r0, r1, [r10]
	ldrd	r2, r3, [r6, #192]
	subs	r0, r0, r2
	sbcs.w	r0, r1, r3
	bge.w	.LBB14_366
.LBB14_328:
	ldrb.w	r0, [r9, #310]
	subs	r1, r0, #2
	cmp	r1, #4
	bhi	.LBB14_332
	ldrb.w	r1, [r6, #379]
	ldr.w	r2, [r6, #244]
	ldr.w	r3, [r6, #252]
	subs	r2, r2, r3
	and	r1, r1, #31
	lsr.w	r1, r2, r1
	movw	r2, #65535
	cmp	r1, r2
	it	hs
	movhs	r1, r2
	ldrh.w	r2, [r6, #356]
	uxth	r1, r1
	cmp	r2, r1
	bhs	.LBB14_332
	ldrd	r1, r2, [r6, #184]
	eor	r1, r1, #1
	orrs	r1, r2
	bne.w	.LBB14_366
	ldrd	r1, r2, [r10]
	ldrd	r3, r5, [r6, #192]
	subs	r1, r1, r3
	sbcs.w	r1, r2, r5
	bge.w	.LBB14_366
.LBB14_332:
	cmp	r0, #0
	beq.w	.LBB14_366
	ldrd	r5, r4, [r6, #48]
	ldrd	r0, r1, [r6, #56]
	orrs.w	r2, r5, r4
	ldrd	lr, r12, [r10]
	itt	eq
	eoreq	r2, r0, #1
	orrseq.w	r2, r2, r1
	beq.w	.LBB14_365
.LBB14_334:
	eor	r2, r5, #3
	ldr	r3, [sp, #424]
	orrs	r2, r4
	ldr	r2, [sp, #436]
	bne.w	.LBB14_181
	subs.w	r0, lr, r0
	sbcs.w	r0, r12, r1
	blt.w	.LBB14_181
	mov	r0, r9
	bl	smoltcp::socket::tcp::TcpSocket::reset::h3eed303dba5cd1e6
	ldr	r2, [sp, #436]
	ldr	r3, [sp, #424]
	b.w	.LBB14_181
.LBB14_337:
	ldrb.w	r0, [sp, #594]
	ldr	r1, [sp, #268]
	str	r0, [sp, #420]
	ldrb.w	r0, [sp, #599]
	str	r0, [sp, #160]
	ldrb.w	r0, [sp, #604]
	str	r0, [sp, #152]
	ldrb.w	r0, [sp, #605]
	str	r0, [sp, #144]
	ldrb.w	r0, [sp, #606]
	str	r0, [sp, #172]
	ldrb.w	r0, [sp, #607]
	str	r0, [sp, #168]
	ldrb.w	r0, [sp, #608]
	str	r0, [sp, #164]
	ldrb.w	r0, [sp, #609]
	str	r0, [sp, #156]
	ldrb.w	r0, [sp, #610]
	str	r0, [sp, #148]
	ldr	r0, [sp, #600]
	str	r0, [sp, #140]
	b	.LBB14_339
.LBB14_338:
	ldrb.w	r0, [sp, #604]
	ldr	r1, [sp, #272]
	str	r0, [sp, #160]
	ldrb.w	r0, [sp, #609]
	str	r0, [sp, #152]
	ldrb.w	r0, [sp, #610]
	str	r0, [sp, #144]
	ldrb.w	r0, [sp, #611]
	str	r0, [sp, #172]
	ldrb.w	r0, [sp, #612]
	str	r0, [sp, #168]
	ldrb.w	r0, [sp, #613]
	str	r0, [sp, #164]
	ldrb.w	r0, [sp, #614]
	str	r0, [sp, #156]
	ldrb.w	r0, [sp, #615]
	str	r0, [sp, #148]
	ldr.w	r0, [sp, #605]
	str	r0, [sp, #140]
	movs	r0, #2
	str	r0, [sp, #420]
.LBB14_339:
	ldr.w	r4, [r10, #80]
	mov.w	r0, #6208
	ldr	r2, [sp, #436]
	ldr	r0, [r4, r0]
	cmp	r0, #4
	bhs.w	.LBB14_456
	add.w	r0, r4, r0, lsl #4
	ldr	r0, [r0, #12]
	cmp.w	r0, #-1
	ldr	r0, [r1]
	str	r0, [sp, #352]
	ble	.LBB14_343
	add	r5, sp, #576
	movs	r2, #152
	mov	r0, r5
	add	r1, sp, #824
	bl	__aeabi_memcpy8
	mov	r0, r10
	mov	r1, r4
	mov	r2, r5
	bl	smoltcp::iface::interface::InterfaceInner::dispatch_ip::h40aab87b8d567aea
	uxtb.w	r12, r0
	cmp.w	r12, #11
	bne	.LBB14_344
	movw	r2, #38528
	ldrd	r0, r1, [r10]
	movt	r2, #152
	adds	r0, r0, r2
	adc	r1, r1, #0
	b	.LBB14_358
.LBB14_343:
	ldrd	lr, r0, [sp, #164]
	str	r0, [sp, #368]
	movs	r1, #0
	ldrd	r0, r10, [sp, #144]
	str	r0, [sp, #360]
	ldr	r0, [sp, #152]
	mov.w	r12, #11
	ldr	r4, [sp, #172]
	ldr.w	r11, [sp, #156]
	str	r0, [sp, #356]
	ldr	r0, [sp, #140]
	str	r0, [sp, #344]
	ldr	r5, [sp, #160]
	ldrd	r9, r3, [sp, #420]
	cmp.w	r12, #11
	beq.w	.LBB14_422
	b.w	.LBB14_448
.LBB14_344:
	ldrd	lr, r0, [sp, #164]
	str	r0, [sp, #368]
	ldr	r4, [sp, #172]
	ldrd	r0, r10, [sp, #144]
	str	r0, [sp, #360]
	ldr	r0, [sp, #152]
	ldr.w	r11, [sp, #156]
	str	r0, [sp, #356]
	ldr	r0, [sp, #140]
	str	r0, [sp, #344]
	ldr	r5, [sp, #160]
	b	.LBB14_363
.LBB14_345:
	ldrb.w	r0, [sp, #594]
	ldr	r1, [sp, #268]
	str	r0, [sp, #420]
	ldrb.w	r0, [sp, #599]
	str	r0, [sp, #72]
	ldrb.w	r0, [sp, #604]
	str	r0, [sp, #56]
	ldrb.w	r0, [sp, #605]
	str	r0, [sp, #44]
	ldrb.w	r0, [sp, #606]
	str	r0, [sp, #100]
	ldrb.w	r0, [sp, #607]
	str	r0, [sp, #92]
	ldrb.w	r0, [sp, #608]
	str	r0, [sp, #84]
	ldrb.w	r0, [sp, #609]
	str	r0, [sp, #60]
	ldrb.w	r0, [sp, #610]
	str	r0, [sp, #40]
	ldr	r0, [sp, #600]
	str	r0, [sp, #32]
	b	.LBB14_347
.LBB14_346:
	ldrb.w	r0, [sp, #604]
	ldr	r1, [sp, #272]
	str	r0, [sp, #72]
	ldrb.w	r0, [sp, #609]
	str	r0, [sp, #56]
	ldrb.w	r0, [sp, #610]
	str	r0, [sp, #44]
	ldrb.w	r0, [sp, #611]
	str	r0, [sp, #100]
	ldrb.w	r0, [sp, #612]
	str	r0, [sp, #92]
	ldrb.w	r0, [sp, #613]
	str	r0, [sp, #84]
	ldrb.w	r0, [sp, #614]
	str	r0, [sp, #60]
	ldrb.w	r0, [sp, #615]
	str	r0, [sp, #40]
	ldr.w	r0, [sp, #605]
	str	r0, [sp, #32]
	movs	r0, #2
	str	r0, [sp, #420]
.LBB14_347:
	ldr.w	r4, [r10, #80]
	mov.w	r0, #6208
	ldr	r0, [r4, r0]
	cmp	r0, #4
	bhs.w	.LBB14_456
	add.w	r0, r4, r0, lsl #4
	ldr	r0, [r0, #12]
	cmp.w	r0, #-1
	ldr	r0, [r1]
	str	r0, [sp, #352]
	ble	.LBB14_351
	add	r5, sp, #576
	movs	r2, #152
	mov	r0, r5
	add	r1, sp, #824
	bl	__aeabi_memcpy8
	mov	r0, r10
	mov	r1, r4
	mov	r2, r5
	bl	smoltcp::iface::interface::InterfaceInner::dispatch_ip::h40aab87b8d567aea
	uxtb.w	r12, r0
	cmp.w	r12, #11
	bne.w	.LBB14_361
	ubfx	r2, r11, #1, #6
	movw	r4, #19264
	rsb.w	r5, r2, #32
	movt	r4, #76
	ldrd	r0, r1, [r10]
	subs.w	r3, r2, #32
	lsl.w	r2, r4, r2
	lsr.w	r5, r4, r5
	itt	pl
	movpl	r2, #0
	lslpl.w	r5, r4, r3
	adds	r0, r0, r2
	str.w	r9, [r6, #128]
	adcs	r1, r5
	strd	r0, r1, [r6, #56]
	add.w	r0, r11, #1
	strh.w	r0, [r6, #64]
	b	.LBB14_359
.LBB14_351:
	ldr	r0, [sp, #92]
	str	r0, [sp, #368]
	ldrd	r10, r0, [sp, #40]
	str	r0, [sp, #360]
	ldr	r0, [sp, #56]
	movs	r1, #0
	mov.w	r12, #11
	ldr.w	lr, [sp, #84]
	str	r0, [sp, #356]
	ldr	r4, [sp, #100]
	ldr	r0, [sp, #32]
	ldr.w	r11, [sp, #60]
	str	r0, [sp, #344]
	ldr	r5, [sp, #72]
	b	.LBB14_364
.LBB14_352:
	ldrb.w	r0, [sp, #594]
	ldr	r1, [sp, #268]
	str	r0, [sp, #420]
	ldrb.w	r0, [sp, #599]
	str	r0, [sp, #76]
	ldrb.w	r0, [sp, #604]
	str	r0, [sp, #68]
	ldrb.w	r0, [sp, #605]
	str	r0, [sp, #52]
	ldrb.w	r0, [sp, #606]
	str	r0, [sp, #96]
	ldrb.w	r0, [sp, #607]
	str	r0, [sp, #88]
	ldrb.w	r0, [sp, #608]
	str	r0, [sp, #80]
	ldrb.w	r0, [sp, #609]
	str	r0, [sp, #64]
	ldrb.w	r0, [sp, #610]
	str	r0, [sp, #48]
	ldr	r0, [sp, #600]
	str	r0, [sp, #36]
	b	.LBB14_354
.LBB14_353:
	ldrb.w	r0, [sp, #604]
	ldr	r1, [sp, #272]
	str	r0, [sp, #76]
	ldrb.w	r0, [sp, #609]
	str	r0, [sp, #68]
	ldrb.w	r0, [sp, #610]
	str	r0, [sp, #52]
	ldrb.w	r0, [sp, #611]
	str	r0, [sp, #96]
	ldrb.w	r0, [sp, #612]
	str	r0, [sp, #88]
	ldrb.w	r0, [sp, #613]
	str	r0, [sp, #80]
	ldrb.w	r0, [sp, #614]
	str	r0, [sp, #64]
	ldrb.w	r0, [sp, #615]
	str	r0, [sp, #48]
	ldr.w	r0, [sp, #605]
	str	r0, [sp, #36]
	movs	r0, #2
	str	r0, [sp, #420]
.LBB14_354:
	ldr.w	r4, [r10, #80]
	mov.w	r0, #6208
	ldr	r0, [r4, r0]
	cmp	r0, #4
	bhs.w	.LBB14_456
	add.w	r0, r4, r0, lsl #4
	ldr	r0, [r0, #12]
	cmp.w	r0, #-1
	ldr	r0, [r1]
	str	r0, [sp, #352]
	ble	.LBB14_360
	add	r5, sp, #576
	movs	r2, #152
	mov	r0, r5
	add	r1, sp, #824
	bl	__aeabi_memcpy8
	mov	r0, r10
	mov	r1, r4
	mov	r2, r5
	bl	smoltcp::iface::interface::InterfaceInner::dispatch_ip::h40aab87b8d567aea
	uxtb.w	r12, r0
	cmp.w	r12, #11
	bne	.LBB14_362
	ldrd	r0, r1, [r10]
	ldrd	r2, r3, [r6, #64]
	subs	r2, r2, r0
	movw	r12, #34560
	sbcs	r3, r1
	movt	r12, #915
	movs	r4, #0
	adds.w	r2, r2, r3, asr #31
	adc.w	r5, r3, r3, asr #31
	eor.w	r2, r2, r3, asr #31
	eor.w	r3, r5, r3, asr #31
	lsrs.w	r3, r3, #1
	rrx	r2, r2
	subs.w	r5, r12, r2
	sbcs.w	r5, r4, r3
	mov.w	r5, #0
	it	lo
	movlo	r5, #1
	cmp	r5, #0
	itt	eq
	moveq	r2, r12
	moveq	r3, r4
	adds	r0, r0, r2
	adcs	r1, r3
.LBB14_358:
	strd	r0, r1, [r6, #56]
	str.w	r9, [r6, #128]
.LBB14_359:
	ldr	r3, [sp, #424]
	b	.LBB14_424
.LBB14_360:
	ldr	r0, [sp, #88]
	str	r0, [sp, #368]
	ldrd	r10, r0, [sp, #48]
	str	r0, [sp, #360]
	ldr	r0, [sp, #68]
	movs	r1, #0
	mov.w	r12, #11
	ldr.w	lr, [sp, #80]
	str	r0, [sp, #356]
	ldr	r4, [sp, #96]
	ldr	r0, [sp, #36]
	ldr.w	r11, [sp, #64]
	str	r0, [sp, #344]
	ldr	r5, [sp, #76]
	b	.LBB14_364
.LBB14_361:
	ldr	r0, [sp, #92]
	str	r0, [sp, #368]
	ldrd	r10, r0, [sp, #40]
	str	r0, [sp, #360]
	ldr	r0, [sp, #56]
	ldr.w	lr, [sp, #84]
	str	r0, [sp, #356]
	ldr	r4, [sp, #100]
	ldr	r0, [sp, #32]
	ldr.w	r11, [sp, #60]
	str	r0, [sp, #344]
	ldr	r5, [sp, #72]
	b	.LBB14_363
.LBB14_362:
	ldr	r0, [sp, #88]
	str	r0, [sp, #368]
	ldrd	r10, r0, [sp, #48]
	ldr.w	lr, [sp, #80]
	str	r0, [sp, #360]
	ldr	r4, [sp, #96]
	ldr	r0, [sp, #68]
	ldr.w	r11, [sp, #64]
	ldr	r5, [sp, #76]
	str	r0, [sp, #356]
	ldr	r0, [sp, #36]
	str	r0, [sp, #344]
.LBB14_363:
	mov	r1, r12
.LBB14_364:
	ldr	r2, [sp, #436]
	ldrd	r9, r3, [sp, #420]
	cmp.w	r12, #11
	beq.w	.LBB14_422
	b.w	.LBB14_448
.LBB14_365:
	ldrd	r2, r3, [r6, #64]
	subs.w	r2, lr, r2
	sbcs.w	r2, r12, r3
	blt.w	.LBB14_334
.LBB14_366:
	add.w	r1, r9, #270
	movs	r2, #17
	ldr	r0, [sp, #396]
	bl	__aeabi_memcpy
	add.w	r1, r9, #290
	movs	r2, #17
	ldr	r0, [sp, #284]
	bl	__aeabi_memcpy
	ldrb.w	r0, [r6, #360]
	movs	r2, #3
	ldrb.w	r1, [r6, #361]
	strb.w	r2, [sp, #859]
	cmp	r0, #0
	mov.w	r0, #0
	str	r0, [sp, #864]
	movw	r2, :lower16:CORE_PERIPHERALS
	it	eq
	moveq	r1, #64
	strb.w	r1, [sp, #861]
	movs	r3, #0
	strb.w	r0, [sp, #824]
	add	r0, sp, #576
	add	r1, sp, #824
	movt	r2, :upper16:CORE_PERIPHERALS
	bl	smoltcp::wire::ip::Repr::lower::h8146fabc9d801364
	ldrb.w	r0, [sp, #576]
	cbz	r0, .LBB14_368
	movs	r0, #0
	str	r0, [sp, #368]
	movs	r0, #0
	str	r0, [sp, #352]
	movs	r0, #0
	ldrb.w	r1, [sp, #577]
	str	r0, [sp, #360]
	movs	r0, #0
	mov.w	r12, #11
	mov.w	r9, #3
	mov.w	lr, #0
	movs	r4, #0
	mov.w	r10, #0
	mov.w	r11, #0
	str	r0, [sp, #356]
	movs	r0, #0
	str	r0, [sp, #344]
	movs	r5, #0
	ldr	r3, [sp, #424]
	ldr	r2, [sp, #436]
	cmp.w	r12, #11
	beq.w	.LBB14_422
	b	.LBB14_448
.LBB14_368:
	ldr	r1, [sp, #304]
	ldrb.w	lr, [sp, #580]
	ldr.w	r12, [sp, #584]
	ldrh	r0, [r1]
	strh.w	r0, [sp, #736]
	ldrb	r0, [r1, #2]
	strb.w	r0, [sp, #738]
	ldr	r0, [sp, #288]
	add	r1, sp, #792
	ldm	r0!, {r2, r3, r4, r5}
	stm	r1!, {r2, r3, r4, r5}
	ldm.w	r0, {r2, r3, r4, r5}
	stm	r1!, {r2, r3, r4, r5}
	str.w	r12, [sp, #772]
	ldr	r0, [sp, #620]
	str	r0, [sp, #752]
	ldr.w	r1, [r6, #252]
	cmp.w	r1, #-1
	ble.w	.LBB14_480
	ldrd	r0, r5, [r6, #276]
	adds	r4, r1, r0
	ldrb.w	r0, [r6, #379]
	ldr.w	r2, [r6, #244]
	ldrh.w	r12, [r6, #336]
	ldrh.w	r3, [r6, #316]
	subs	r2, r2, r1
	strh.w	r3, [sp, #496]
	and	r1, r0, #31
	movs	r3, #1
	lsr.w	r1, r2, r1
	str	r3, [sp, #204]
	movw	r3, #65535
	str.w	lr, [sp, #360]
	mov.w	lr, #0
	str.w	r9, [sp, #200]
	cmp	r1, r3
	str	r0, [sp, #196]
	mov.w	r0, #1
	strh.w	r12, [sp, #498]
	mov.w	r9, #0
	strh.w	lr, [sp, #506]
	mov.w	r12, #0
	str	r5, [sp, #440]
	mov.w	r11, #0
	str	r0, [sp, #444]
	mov.w	r0, #0
	str	r4, [sp, #192]
	mov.w	r10, #0
	str	r4, [sp, #448]
	it	hs
	movhs	r1, r3
	strh.w	r1, [sp, #500]
	movw	r1, :lower16:CORE_PERIPHERALS
	movt	r1, :upper16:CORE_PERIPHERALS
	ldrb.w	r3, [r6, #358]
	strd	r1, lr, [sp, #488]
	movs	r1, #11
	str	r1, [sp, #208]
	movs	r1, #3
	strh.w	lr, [sp, #502]
	strb.w	lr, [sp, #509]
	str.w	lr, [sp, #452]
	str.w	lr, [sp, #464]
	str.w	lr, [sp, #476]
	str	r1, [sp, #420]
	mov	r1, r5
	movs	r1, #0
	str	r1, [sp, #368]
	movs	r1, #0
	str	r1, [sp, #216]
	movs	r1, #0
	str	r1, [sp, #212]
	movs	r1, #0
	str	r5, [sp, #344]
	str	r5, [sp, #356]
	movs	r5, #0
	str	r1, [sp, #352]
	movs	r1, #0
.LCPI14_1:
	tbh	[pc, r3, lsl #1]
.LJTI14_1:
	.short	(.LBB14_390-(.LCPI14_1+4))/2
	.short	(.LBB14_421-(.LCPI14_1+4))/2
	.short	(.LBB14_375-(.LCPI14_1+4))/2
	.short	(.LBB14_375-(.LCPI14_1+4))/2
	.short	(.LBB14_371-(.LCPI14_1+4))/2
	.short	(.LBB14_371-(.LCPI14_1+4))/2
	.short	(.LBB14_394-(.LCPI14_1+4))/2
	.short	(.LBB14_371-(.LCPI14_1+4))/2
	.short	(.LBB14_371-(.LCPI14_1+4))/2
	.short	(.LBB14_371-(.LCPI14_1+4))/2
	.short	(.LBB14_394-(.LCPI14_1+4))/2
	.p2align	1
.LBB14_371:
	ldr.w	r0, [r6, #292]
	cmp.w	r0, #-1
	ble.w	.LBB14_480
	ldr.w	r1, [r6, #272]
	add	r0, r1
	ldr	r1, [sp, #344]
	subs	r0, r0, r1
	ldr.w	r1, [r6, #296]
	bic.w	r9, r0, r0, asr #31
	cmp	r9, r1
	it	hi
	movhi	r9, r1
	ldr	r0, [sp, #432]
	ldr	r4, [r0, #32]
	ldr	r0, [sp, #360]
	bl	smoltcp::wire::ip::Repr::buffer_len::h21a6824b18829e4b
	subs	r0, r4, r0
	ldr.w	r1, [r6, #272]
	subs	r0, #34
	ldr.w	r5, [r6, #280]
	cmp	r9, r0
	it	hi
	movhi	r9, r0
	subs	r2, r5, r1
	bmi.w	.LBB14_481
	ldr.w	r1, [r6, #260]
	cbz	r1, .LBB14_377
	ldr.w	r0, [r6, #264]
	add	r0, r2
	udiv	r3, r0, r1
	mls	r0, r3, r1, r0
	b	.LBB14_378
.LBB14_375:
	movs	r1, #2
	strb.w	r1, [sp, #506]
	movw	r1, #65535
	cmp	r2, r1
	it	hs
	movhs	r2, r1
	cmp	r3, #2
	strh.w	r2, [sp, #500]
	bne	.LBB14_391
	movs	r0, #0
	movs	r1, #0
	str	r0, [sp, #444]
	ldr	r0, [sp, #196]
	str	r1, [sp, #204]
	movs	r1, #1
	strb.w	r1, [sp, #507]
	mov.w	lr, #2
	strb.w	r0, [sp, #508]
	ldr	r0, [sp, #344]
	strb.w	r1, [sp, #509]
	mov.w	r9, #0
	b	.LBB14_393
.LBB14_377:
	movs	r0, #0
.LBB14_378:
	ldr.w	r4, [r6, #268]
	cmp	r4, r2
	bhs	.LBB14_380
	movw	r0, :lower16:CORE_PERIPHERALS
	mov.w	r9, #0
	movt	r0, :upper16:CORE_PERIPHERALS
	b	.LBB14_383
.LBB14_380:
	subs	r3, r4, r2
	cmp	r3, r9
	it	lo
	movlo	r9, r3
	subs	r3, r1, r0
	cmp	r9, r3
	it	hi
	movhi	r9, r3
	adds.w	r3, r9, r0
	bhs.w	.LBB14_493
	cmp	r3, r1
	bhi.w	.LBB14_494
	ldr.w	r1, [r6, #256]
	add	r0, r1
.LBB14_383:
	add.w	r1, r9, r2
	str	r0, [sp, #488]
	cmp	r1, r4
	str.w	r9, [sp, #492]
	str	r5, [sp, #356]
	bne	.LBB14_389
	ldr	r0, [sp, #200]
	mov.w	lr, #0
	ldrb.w	r0, [r0, #310]
	subs	r1, r0, #4
	movs	r0, #1
	cmp	r1, #5
	str	r0, [sp, #204]
	bhi	.LBB14_394
	movs	r0, #3
.LCPI14_2:
	tbb	[pc, r1]
.LJTI14_2:
	.byte	(.LBB14_387-(.LCPI14_2+4))/2
	.byte	(.LBB14_388-(.LCPI14_2+4))/2
	.byte	(.LBB14_394-(.LCPI14_2+4))/2
	.byte	(.LBB14_387-(.LCPI14_2+4))/2
	.byte	(.LBB14_388-(.LCPI14_2+4))/2
	.byte	(.LBB14_388-(.LCPI14_2+4))/2
	.p2align	1
.LBB14_387:
	movs	r0, #1
	cmp.w	r9, #0
	beq.w	.LBB14_445
.LBB14_388:
	strb.w	r0, [sp, #506]
	movs	r1, #1
	str	r1, [sp, #204]
	mov	lr, r0
	b	.LBB14_394
.LBB14_389:
	mov.w	lr, #0
	movs	r0, #1
	str	r0, [sp, #204]
	b	.LBB14_394
.LBB14_390:
	mov.w	lr, #4
	mov.w	r9, #0
	strb.w	lr, [sp, #506]
	b	.LBB14_392
.LBB14_391:
	ldrb.w	r1, [r6, #382]
	ldr	r0, [sp, #196]
	ldrb.w	r2, [r6, #380]
	strb.w	r1, [sp, #509]
	strb.w	r2, [sp, #507]
	mov.w	r9, #0
	strb.w	r0, [sp, #508]
	mov.w	lr, #2
.LBB14_392:
	movs	r0, #1
	str	r0, [sp, #204]
	ldr	r0, [sp, #344]
.LBB14_393:
	str	r0, [sp, #356]
.LBB14_394:
	ldrd	r0, r1, [r6, #48]
	orrs	r0, r1
	ldr.w	r10, [sp, #432]
	ittt	eq
	ldrdeq	r0, r1, [r6, #56]
	eoreq	r0, r0, #1
	orrseq.w	r0, r0, r1
	beq	.LBB14_402
.LBB14_395:
	cmp.w	r9, #0
	beq	.LBB14_401
	ldr.w	r0, [r6, #272]
	ldr	r1, [sp, #356]
	subs	r0, r1, r0
	ldr	r5, [sp, #360]
	cmp.w	r0, #-1
	ble.w	.LBB14_481
	cmp.w	lr, #2
	bne	.LBB14_399
.LBB14_398:
	mov	r0, r5
	ldr.w	r4, [r10, #32]
	bl	smoltcp::wire::ip::Repr::buffer_len::h21a6824b18829e4b
	subs	r0, r4, r0
	movs	r1, #1
	subs	r0, #34
	strh.w	r1, [sp, #502]
	strh.w	r0, [sp, #504]
.LBB14_399:
	mov.w	r11, #0
	add	r0, sp, #440
	bl	smoltcp::wire::tcp::Repr::buffer_len::h2eec5b61ad7be6e8
	cbz	r5, .LBB14_406
.LBB14_400:
	add	r1, sp, #772
	cmp	r5, #1
	b	.LBB14_407
.LBB14_401:
	mov.w	r9, #0
	ldr	r5, [sp, #360]
	cmp.w	lr, #2
	beq	.LBB14_398
	b	.LBB14_399
.LBB14_402:
	ldrd	r0, r1, [r10]
	ldrd	r2, r3, [r6, #64]
	subs	r0, r0, r2
	sbcs.w	r0, r1, r3
	blt	.LBB14_395
	cmp.w	r9, #0
	bne	.LBB14_395
	cmp.w	lr, #1
	bhi	.LBB14_395
	ldr	r0, [sp, #344]
	mov.w	r11, #1
	subs	r0, #1
	str	r0, [sp, #344]
	str	r0, [sp, #440]
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.109
	mov.w	r9, #1
	ldr	r5, [sp, #360]
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.109
	str	r0, [sp, #488]
	str.w	r11, [sp, #492]
	add	r0, sp, #440
	bl	smoltcp::wire::tcp::Repr::buffer_len::h2eec5b61ad7be6e8
	cmp	r5, #0
	bne	.LBB14_400
.LBB14_406:
	add	r1, sp, #752
.LBB14_407:
	str	r0, [r1]
	ldr	r1, [sp, #256]
	ldrh.w	r0, [sp, #736]
	strb.w	r5, [sp, #828]
	strh	r0, [r1]
	ldrb.w	r0, [sp, #738]
	strb	r0, [r1, #2]
	ldr	r0, [sp, #772]
	add	r1, sp, #792
	str	r0, [sp, #832]
	ldr	r0, [sp, #252]
	ldr.w	r12, [sp, #752]
	ldm	r1!, {r2, r3, r4, r5}
	stm	r0!, {r2, r3, r4, r5}
	ldm.w	r1, {r2, r3, r4, r5}
	stm	r0!, {r2, r3, r4, r5}
	movs	r2, #72
	ldr	r0, [sp, #248]
	add	r1, sp, #440
	str.w	r12, [sp, #868]
	bl	__aeabi_memcpy4
	movs	r0, #4
	str	r0, [sp, #824]
	add	r0, sp, #576
	add	r1, sp, #824
	bl	smoltcp::iface::interface::IpPacket::ip_repr::h34c58f58187ffea8
	ldrb.w	r0, [sp, #576]
	cbz	r0, .LBB14_410
	cmp	r0, #1
	bne	.LBB14_411
	movs	r0, #1
	str	r0, [sp, #420]
	ldr	r1, [sp, #288]
	ldrd	r12, r3, [sp, #124]
	ldrd	r2, r5, [sp, #132]
	b	.LBB14_412
.LBB14_410:
	ldrb.w	r0, [sp, #594]
	ldrb.w	r12, [sp, #599]
	str	r0, [sp, #420]
	ldrb.w	r0, [sp, #604]
	str	r0, [sp, #120]
	ldrb.w	r0, [sp, #605]
	str	r0, [sp, #112]
	ldrb.w	r0, [sp, #609]
	ldrb.w	r2, [sp, #606]
	ldrb.w	r5, [sp, #608]
	ldrb.w	r3, [sp, #607]
	str	r0, [sp, #116]
	ldrb.w	r0, [sp, #610]
	ldr	r1, [sp, #268]
	str	r0, [sp, #108]
	ldr	r0, [sp, #600]
	str	r0, [sp, #104]
	b	.LBB14_412
.LBB14_411:
	ldrb.w	r0, [sp, #609]
	ldrb.w	r12, [sp, #604]
	str	r0, [sp, #120]
	ldrb.w	r0, [sp, #610]
	str	r0, [sp, #112]
	ldrb.w	r0, [sp, #614]
	ldrb.w	r2, [sp, #611]
	ldrb.w	r3, [sp, #612]
	ldrb.w	r5, [sp, #613]
	str	r0, [sp, #116]
	ldrb.w	r0, [sp, #615]
	ldr	r1, [sp, #272]
	str	r0, [sp, #108]
	ldr.w	r0, [sp, #605]
	str	r0, [sp, #104]
	movs	r0, #2
	str	r0, [sp, #420]
.LBB14_412:
	ldr.w	r4, [r10, #80]
	mov.w	r0, #6208
	ldr	r0, [r4, r0]
	cmp	r0, #4
	bhs.w	.LBB14_456
	add.w	r0, r4, r0, lsl #4
	strd	r2, r5, [sp, #132]
	ldr	r0, [r0, #12]
	cmp.w	r0, #-1
	ldr	r0, [r1]
	str	r0, [sp, #352]
	strd	r12, r3, [sp, #124]
	ble	.LBB14_419
	add	r5, sp, #576
	movs	r2, #152
	mov	r0, r5
	add	r1, sp, #824
	bl	__aeabi_memcpy8
	mov	r0, r10
	mov	r1, r4
	mov	r2, r5
	bl	smoltcp::iface::interface::InterfaceInner::dispatch_ip::h40aab87b8d567aea
	uxtb	r1, r0
	cmp	r1, #11
	bne	.LBB14_420
	ldr	r0, [sp, #200]
	add	r5, sp, #108
	ldrd	r12, lr, [sp, #128]
	ldrd	r0, r1, [r0]
	orrs	r0, r1
	ldr	r2, [sp, #136]
	ldm	r5, {r1, r3, r4, r5}
	bne	.LBB14_417
	ldrd	r0, r1, [r6, #136]
	ldrd	r2, r3, [r10]
	ldr.w	r5, [r6, #144]
	str	r1, [r6, #60]
	adds	r1, r5, r2
	add	r5, sp, #108
	str	r0, [r6, #56]
	ldr.w	r0, [r6, #148]
	str	r1, [r6, #64]
	adcs	r0, r3
	ldm	r5, {r1, r3, r4, r5}
	ldr	r2, [sp, #136]
	str	r0, [r6, #68]
.LBB14_417:
	cmp.w	r11, #0
	mov.w	r0, #0
	str.w	r0, [r6, #184]
	str.w	r0, [r6, #188]
	beq	.LBB14_425
	movs	r0, #11
	str	r0, [sp, #208]
	str.w	r12, [sp, #368]
	mov	r0, lr
	mov	lr, r2
	mov	r12, r3
	strd	r4, r1, [sp, #212]
	mov	r11, r5
	ldr.w	r10, [sp, #104]
	ldr	r5, [sp, #124]
	movs	r1, #11
	b	.LBB14_421
.LBB14_419:
	movs	r0, #11
	movs	r1, #0
	str	r0, [sp, #208]
	mov	lr, r5
	mov	r0, r2
	ldr	r2, [sp, #108]
	mov	r5, r12
	ldr.w	r12, [sp, #112]
	ldr.w	r11, [sp, #120]
	str	r3, [sp, #368]
	ldr.w	r10, [sp, #104]
	str	r2, [sp, #216]
	ldr	r2, [sp, #116]
	str	r2, [sp, #212]
	b	.LBB14_421
.LBB14_420:
	ldr	r0, [sp, #128]
	ldr	r2, [sp, #108]
	ldr.w	lr, [sp, #136]
	str	r0, [sp, #368]
	ldr	r0, [sp, #132]
	str	r2, [sp, #216]
	ldr	r2, [sp, #116]
	str	r2, [sp, #212]
	ldr.w	r12, [sp, #112]
	str	r1, [sp, #208]
	ldr.w	r10, [sp, #104]
	ldrd	r11, r5, [sp, #120]
.LBB14_421:
	str.w	r10, [sp, #344]
	ldr	r3, [sp, #424]
	strd	r11, r12, [sp, #356]
	ldr	r2, [sp, #436]
	ldr.w	r12, [sp, #208]
	mov	r4, r0
	ldr.w	r9, [sp, #420]
	ldrd	r11, r10, [sp, #212]
	cmp.w	r12, #11
	bne.w	.LBB14_448
.LBB14_422:
	cmp	r1, #0
	beq.w	.LBB14_181
	cmp	r1, #11
	bne.w	.LBB14_454
.LBB14_424:
	movs	r2, #1
	b.w	.LBB14_181
.LBB14_425:
	ldrb.w	r0, [sp, #506]
	and	r1, r0, #6
	mov	r0, r9
	cmp	r1, #2
	it	eq
	addeq	r0, #1
	cmp.w	r0, #-1
	ble.w	.LBB14_480
	ldr	r2, [sp, #344]
	cmp	r1, #2
	mov.w	r4, #0
	ldr	r1, [sp, #192]
	add	r0, r2
	str.w	r0, [r6, #280]
	ldr	r2, [sp, #204]
	str.w	r2, [r6, #284]
	str.w	r1, [r6, #288]
	it	eq
	moveq.w	r4, #-1
	ldrh.w	r1, [sp, #500]
	cmp	r9, r4
	strh.w	r1, [r6, #356]
	bne	.LBB14_428
	ldr	r5, [sp, #200]
	mov	r1, r10
	mov	r0, r5
	bl	smoltcp::socket::tcp::TcpSocket::seq_to_transmit::hb33c0196cfeb4773
	b	.LBB14_435
.LBB14_428:
	ldrd	r2, r1, [r6, #104]
	cmp	r2, #0
	mov	r3, r2
	sub.w	r1, r0, r1
	it	ne
	movne	r3, #1
	cmp	r1, #0
	mov.w	r1, #0
	it	gt
	movgt	r1, #1
	cmp	r2, #0
	ldrd	r2, r12, [r10]
	beq	.LBB14_430
	ands	r1, r3
	beq	.LBB14_432
.LBB14_430:
	ldrd	r1, r3, [r6, #72]
	eor	r1, r1, #1
	orrs	r1, r3
	mov.w	r1, #1
	strd	r1, r0, [r6, #104]
	beq	.LBB14_432
	movs	r1, #1
	add.w	r3, r6, #76
	str	r1, [r6, #72]
	movs	r1, #0
	stm.w	r3, {r1, r2, r12}
	str	r0, [r6, #88]
.LBB14_432:
	ldr	r5, [sp, #200]
	mov	r1, r10
	mov	r0, r5
	bl	smoltcp::socket::tcp::TcpSocket::seq_to_transmit::hb33c0196cfeb4773
	cbnz	r0, .LBB14_435
	cmp	r9, r4
	beq	.LBB14_435
	ldrd	r0, r1, [r6, #96]
	lsls	r2, r1, #2
	cmp	r2, #5
	mov.w	r2, #5
	it	hi
	lslhi	r2, r1, #2
	add	r0, r2
	movw	r1, #10000
	cmp	r0, #10
	it	ls
	movls	r0, #10
	cmp	r0, r1
	it	hs
	movhs	r0, r1
	mov.w	r1, #1000
	muls	r0, r1, r0
	str	r0, [sp]
	movs	r0, #0
	ldrd	r2, r3, [r10]
	str	r0, [sp, #4]
	mov	r0, r5
	bl	smoltcp::socket::tcp::Timer::set_for_retransmit::h7f625af8cb92cdff
.LBB14_435:
	ldrb.w	r0, [r5, #310]
	cmp	r0, #0
	bne.w	.LBB14_359
	movs	r0, #0
	strh.w	r0, [r6, #316]
	strb.w	r0, [r6, #318]
	strh.w	r0, [r6, #336]
	strb.w	r0, [r6, #338]
	b	.LBB14_359
.LBB14_437:
	ldrb.w	r0, [sp, #599]
	ldrb.w	r9, [sp, #594]
	str	r0, [sp, #328]
	ldrb.w	r0, [sp, #604]
	str	r0, [sp, #316]
	ldrb.w	r0, [sp, #605]
	str	r0, [sp, #308]
	ldrb.w	r0, [sp, #606]
	str	r0, [sp, #340]
	ldrb.w	r0, [sp, #607]
	str	r0, [sp, #332]
	ldrb.w	r0, [sp, #608]
	str	r0, [sp, #320]
	ldrb.w	r0, [sp, #609]
	str	r0, [sp, #336]
	ldrb.w	r0, [sp, #610]
	str	r0, [sp, #324]
	ldr	r0, [sp, #600]
	str	r0, [sp, #312]
	ldr	r1, [sp, #268]
	ldr	r3, [sp, #424]
	ldr	r5, [sp, #360]
	b	.LBB14_439
.LBB14_438:
	ldrb.w	r0, [sp, #604]
	mov.w	r9, #2
	str	r0, [sp, #328]
	ldrb.w	r0, [sp, #609]
	str	r0, [sp, #316]
	ldrb.w	r0, [sp, #610]
	str	r0, [sp, #308]
	ldrb.w	r0, [sp, #611]
	str	r0, [sp, #340]
	ldrb.w	r0, [sp, #612]
	str	r0, [sp, #332]
	ldrb.w	r0, [sp, #613]
	str	r0, [sp, #320]
	ldrb.w	r0, [sp, #614]
	str	r0, [sp, #336]
	ldrb.w	r0, [sp, #615]
	ldr	r1, [sp, #272]
	str	r0, [sp, #324]
	ldr.w	r0, [sp, #605]
	str	r0, [sp, #312]
.LBB14_439:
	ldr	r0, [sp, #432]
	ldr.w	r11, [r0, #80]
	mov.w	r0, #6208
	ldr.w	r0, [r11, r0]
	cmp	r0, #4
	bhs.w	.LBB14_456
	add.w	r0, r11, r0, lsl #4
	ldr	r0, [r0, #12]
	cmp.w	r0, #-1
	ldr	r0, [r1]
	str	r0, [sp, #352]
	ble	.LBB14_443
	add	r4, sp, #576
	movs	r2, #152
	mov	r0, r4
	add	r1, sp, #824
	bl	__aeabi_memcpy8
	ldr	r0, [sp, #432]
	mov	r1, r11
	mov	r2, r4
	bl	smoltcp::iface::interface::InterfaceInner::dispatch_ip::h40aab87b8d567aea
	uxtb.w	r12, r0
	cmp.w	r12, #11
	bne	.LBB14_444
	str.w	r9, [sp, #420]
	ldr	r0, [sp, #340]
	ldrd	r2, r11, [sp, #332]
	ldrd	r3, r1, [sp, #316]
	ldrd	r12, lr, [sp, #308]
	ldrd	r9, r5, [sp, #324]
	b.w	.LBB14_312
.LBB14_443:
	ldr	r0, [sp, #340]
	str	r0, [sp, #188]
	ldr	r0, [sp, #332]
	str	r0, [sp, #192]
	ldr	r0, [sp, #320]
	str	r0, [sp, #196]
	ldr	r0, [sp, #336]
	str	r0, [sp, #200]
	ldr	r0, [sp, #324]
	str	r0, [sp, #344]
	ldr	r0, [sp, #328]
	str	r0, [sp, #216]
	ldr	r0, [sp, #312]
	str	r0, [sp, #204]
	ldr	r0, [sp, #316]
	movs	r4, #0
	mov.w	r12, #11
	str	r0, [sp, #208]
	ldr	r0, [sp, #308]
	str	r0, [sp, #212]
	movs	r1, #0
	b.w	.LBB14_313
.LBB14_444:
	ldr	r0, [sp, #340]
	str	r0, [sp, #188]
	ldr	r0, [sp, #332]
	str	r0, [sp, #192]
	ldr	r0, [sp, #320]
	str	r0, [sp, #196]
	ldr	r0, [sp, #336]
	str	r0, [sp, #200]
	ldr	r0, [sp, #324]
	str	r0, [sp, #344]
	ldr	r0, [sp, #328]
	str	r0, [sp, #216]
	ldr	r0, [sp, #312]
	str	r0, [sp, #204]
	ldr	r0, [sp, #316]
	movs	r4, #0
	str	r0, [sp, #208]
	ldr	r0, [sp, #308]
	str	r0, [sp, #212]
	mov	r1, r12
	ldr	r3, [sp, #424]
	b.w	.LBB14_313
.LBB14_445:
	str	r0, [sp, #204]
	mov.w	lr, #0
	b	.LBB14_394
.LBB14_446:
	ldr	r1, [sp, #344]
	str	r2, [sp, #352]
	cmp	r1, lr
	blo.w	.LBB14_495
	ldrb.w	r0, [r9, #8]
	sub.w	r4, r1, lr
	str	r0, [sp, #212]
	ldr.w	r0, [r9, #12]
	str	r0, [sp, #344]
	ldr.w	r0, [r9, #16]
	str	r0, [sp, #216]
	add	r0, sp, #576
	bl	smoltcp::wire::ipv4::Packet<&T>::payload::h2b0d1ff23f7a1934
	movs	r5, #1
	ldr.w	r9, [sp, #20]
	ldr.w	r11, [sp, #420]
	strd	r0, r1, [sp, #204]
	b.w	.LBB14_295
.LBB14_448:
	mov	r0, r9
	movw	r9, #37160
	cmp.w	r12, #0
	movt	r9, #16386
	beq.w	.LBB14_1
	strd	r11, r10, [sp, #212]
	ldr.w	r8, [sp, #368]
	mov	r11, lr
	cmp.w	r12, #2
	ldr.w	r10, [sp, #432]
	movw	lr, #6224
	bne	.LBB14_459
	cmp	r0, #3
	beq.w	.LBB14_492
	movw	r2, #50880
	mov	r3, r4
	mov	r4, r0
	movt	r2, #45
	ldrd	r0, r1, [r10]
	adds	r0, r0, r2
	ldr	r2, [sp, #436]
	adc	r1, r1, #0
	strb	r4, [r6, #1]
	strd	r0, r1, [r6, #24]
	ldr	r0, [sp, #352]
	str.w	r0, [r6, #2]
	ldr	r0, [sp, #344]
	str.w	r0, [r6, #7]
	ldr	r0, [sp, #356]
	strb	r0, [r6, #11]
	ldr	r0, [sp, #360]
	strb	r0, [r6, #12]
	ldr	r0, [sp, #212]
	strb	r0, [r6, #16]
	ldr	r0, [sp, #216]
	strb	r5, [r6, #6]
	strb	r3, [r6, #13]
	strb.w	r8, [r6, #14]
	strb.w	r11, [r6, #15]
	strb	r0, [r6, #17]
	movs	r0, #1
	strb	r0, [r6]
	b.w	.LBB14_2
.LBB14_452:
	ldr	r0, [sp, #408]
	and	r1, r0, #1
	movs	r0, #0
	add.w	sp, sp, #980
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB14_453:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.248
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.248
	movs	r1, #4
	mov	r0, r6
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB14_454:
	movs	r0, #1
	add.w	sp, sp, #980
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB14_455:
	movs	r1, #8
	movs	r0, #1
	add.w	sp, sp, #980
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB14_456:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.227
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.227
	movs	r1, #4
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB14_457:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.253
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.253
	movs	r1, #4
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB14_458:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.250
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.250
	movs	r1, #4
	mov	r0, r6
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB14_459:
	movs	r0, #1
	mov	r1, r12
	add.w	sp, sp, #980
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB14_460:
	movw	r0, :lower16:str.1
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.126
	movt	r0, :upper16:str.1
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.126
	movs	r1, #57
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB14_461:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.295
	mov	r1, r9
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.295
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB14_462:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.295
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.295
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB14_463:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.369
	movs	r0, #0
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.369
	movs	r1, #0
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB14_464:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.251
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.252
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.251
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.252
	movs	r1, #55
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB14_465:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.48
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.48
	movs	r1, #43
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB14_466:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.110
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.110
	movs	r1, #43
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB14_467:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.235
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.235
	movs	r1, #4
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB14_468:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.129
	mov	r0, r3
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.129
	mov	r1, r11
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB14_469:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.291
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.291
	movs	r1, #43
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB14_470:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.129
	mov	r0, r5
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.129
	mov	r1, r3
	bl	core::slice::index::slice_index_order_fail::h8a53f055fb6ee074
	.inst.n	0xdefe
.LBB14_471:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.129
	mov	r0, r4
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.129
	mov	r1, r3
	bl	core::slice::index::slice_index_order_fail::h8a53f055fb6ee074
	.inst.n	0xdefe
.LBB14_472:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.292
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.292
	mov	r0, r3
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB14_473:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.292
	mov	r0, r5
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.292
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB14_474:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.299
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.299
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB14_475:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.300
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.300
	mov	r0, r3
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB14_476:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.301
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.301
	mov	r0, r3
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB14_477:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.302
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.302
	mov	r0, r3
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB14_478:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.129
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.129
	mov	r1, r3
	bl	core::slice::index::slice_index_order_fail::h8a53f055fb6ee074
	.inst.n	0xdefe
.LBB14_479:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.129
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.129
	mov	r0, r3
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB14_480:
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.593
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.595
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.593
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.595
	movs	r1, #56
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB14_481:
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.598
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.599
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.598
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.599
	movs	r1, #51
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB14_482:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.111
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.111
	movs	r1, #43
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB14_483:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.5
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.112
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.5
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.112
	movs	r1, #40
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB14_484:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.420
	mov	r0, r6
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.420
	mov	r1, r3
	bl	core::slice::index::slice_index_order_fail::h8a53f055fb6ee074
	.inst.n	0xdefe
.LBB14_485:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.669
	movs	r0, #4
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.669
	b	.LBB14_491
.LBB14_486:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.672
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.672
	b	.LBB14_490
.LBB14_487:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.670
	movs	r0, #6
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.670
	b	.LBB14_491
.LBB14_488:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.673
	movs	r0, #8
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.673
	bl	core::slice::index::slice_index_order_fail::h8a53f055fb6ee074
	.inst.n	0xdefe
.LBB14_489:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.673
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.673
.LBB14_490:
	mov	r0, r1
.LBB14_491:
	ldr	r1, [sp, #360]
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB14_492:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.97
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.98
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.97
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.98
	movs	r1, #22
	bl	core::option::expect_failed::h22026eb39ea9589c
	.inst.n	0xdefe
.LBB14_493:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.297
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.297
	mov	r1, r3
	bl	core::slice::index::slice_index_order_fail::h8a53f055fb6ee074
	.inst.n	0xdefe
.LBB14_494:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.297
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.297
	mov	r0, r3
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB14_495:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.420
	mov	r0, lr
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.420
	bl	core::slice::index::slice_index_order_fail::h8a53f055fb6ee074
	.inst.n	0xdefe
.Lfunc_end14:
	.size	smoltcp::iface::interface::Interface<DeviceT>::poll::he6084df7d1efd02c, .Lfunc_end14-smoltcp::iface::interface::Interface<DeviceT>::poll::he6084df7d1efd02c
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN14thermostat_eem8hardware3adc3Adc9setup_adc17h59001fe7d7675597E,"ax",%progbits
	.p2align	1
	.type	thermostat_eem::hardware::adc::Adc::setup_adc::h59001fe7d7675597,%function
	.code	16
	.thumb_func
thermostat_eem::hardware::adc::Adc::setup_adc::h59001fe7d7675597:
.Lfunc_begin15:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8}
	str	r8, [sp, #-4]!
	.cfi_offset r8, -24
	.pad	#24
	sub	sp, #24
	mov.w	r8, #-805306368
	adds	r4, r0, #4
	mov.w	r0, #-1
	str	r0, [sp, #8]
	orn	r0, r8, #-805306368
	str	r0, [sp, #12]
	add	r5, sp, #8
	movs	r0, #8
	mov	r6, r1
	movs	r2, #8
	str	r0, [sp]
	mov	r0, r4
	mov	r1, r5
	mov	r3, r5
	bl	stm32h7xx_hal::spi::Spi<stm32h7::stm32h743v::SPI4,stm32h7xx_hal::spi::Enabled>::transfer_internal::h3a158811a6b4093e
	cmp	r0, #6
	bne.w	.LBB15_12
	mov.w	r0, #500
	muls	r0, r6, r0
	bl	__delay
	mov.w	r0, #18176
	str	r0, [sp, #12]
	movs	r0, #0
	str	r0, [sp, #8]
	adds	r1, r5, #5
	movs	r0, #3
	movs	r2, #3
	str	r0, [sp]
	mov	r0, r4
	mov	r3, r1
	bl	stm32h7xx_hal::spi::Spi<stm32h7::stm32h743v::SPI4,stm32h7xx_hal::spi::Enabled>::transfer_internal::h3a158811a6b4093e
	cmp	r0, #6
	bne.w	.LBB15_13
	movs	r1, #0
	ldr	r0, [sp, #12]
	movt	r1, #61695
	ands	r0, r1
	teq.w	r0, r8
	bne.w	.LBB15_14
	movw	r0, #256
	adds	r5, #1
	movt	r0, #2176
	str	r0, [sp, #8]
	movs	r2, #3
	movs	r3, #0
	mov	r0, r4
	mov	r1, r5
	movs	r6, #0
	str	r6, [sp]
	bl	stm32h7xx_hal::spi::Spi<stm32h7::stm32h743v::SPI4,stm32h7xx_hal::spi::Enabled>::transfer_internal::h3a158811a6b4093e
	cmp	r0, #6
	bne	.LBB15_10
	movw	r0, #512
	movs	r2, #3
	movt	r0, #16384
	str	r0, [sp, #8]
	movs	r3, #0
	mov	r0, r4
	mov	r1, r5
	str	r6, [sp]
	bl	stm32h7xx_hal::spi::Spi<stm32h7::stm32h743v::SPI4,stm32h7xx_hal::spi::Enabled>::transfer_internal::h3a158811a6b4093e
	cmp	r0, #6
	bne	.LBB15_10
	movw	r0, #4096
	movs	r2, #3
	movt	r0, #384
	str	r0, [sp, #8]
	movs	r3, #0
	mov	r0, r4
	mov	r1, r5
	movs	r6, #0
	str	r6, [sp]
	bl	stm32h7xx_hal::spi::Spi<stm32h7::stm32h743v::SPI4,stm32h7xx_hal::spi::Enabled>::transfer_internal::h3a158811a6b4093e
	cmp	r0, #6
	bne	.LBB15_10
	movw	r0, #4352
	movs	r2, #3
	movt	r0, #17280
	str	r0, [sp, #8]
	movs	r3, #0
	mov	r0, r4
	mov	r1, r5
	str	r6, [sp]
	bl	stm32h7xx_hal::spi::Spi<stm32h7::stm32h743v::SPI4,stm32h7xx_hal::spi::Enabled>::transfer_internal::h3a158811a6b4093e
	cmp	r0, #6
	bne	.LBB15_10
	mov.w	r0, #991232
	str	r0, [sp, #8]
	movs	r2, #3
	movs	r3, #0
	mov	r0, r4
	mov	r1, r5
	movs	r6, #0
	str	r6, [sp]
	bl	stm32h7xx_hal::spi::Spi<stm32h7::stm32h743v::SPI4,stm32h7xx_hal::spi::Enabled>::transfer_internal::h3a158811a6b4093e
	cmp	r0, #6
	bne	.LBB15_10
	movw	r0, #10240
	movs	r2, #3
	movt	r0, #5632
	str	r0, [sp, #8]
	movs	r3, #0
	mov	r0, r4
	mov	r1, r5
	str	r6, [sp]
	bl	stm32h7xx_hal::spi::Spi<stm32h7::stm32h743v::SPI4,stm32h7xx_hal::spi::Enabled>::transfer_internal::h3a158811a6b4093e
	cmp	r0, #6
	bne	.LBB15_10
	movw	r0, #1536
	movs	r2, #3
	movt	r0, #8
	str	r0, [sp, #8]
	movs	r0, #0
	movs	r3, #0
	str	r0, [sp]
	mov	r0, r4
	mov	r1, r5
	bl	stm32h7xx_hal::spi::Spi<stm32h7::stm32h743v::SPI4,stm32h7xx_hal::spi::Enabled>::transfer_internal::h3a158811a6b4093e
	cmp	r0, #6
	ittt	eq
	addeq	sp, #24
	ldreq	r8, [sp], #4
	popeq	{r4, r5, r6, r7, pc}
.LBB15_10:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.71
	str	r0, [sp, #16]
	str	r1, [sp, #20]
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.71
.LBB15_11:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.364
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.364
	add	r2, sp, #16
	movs	r1, #43
	str	r6, [sp]
	bl	core::result::unwrap_failed::he67be68ddf63c991
	.inst.n	0xdefe
.LBB15_12:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.68
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.68
	strd	r0, r1, [sp, #16]
	b	.LBB15_11
.LBB15_13:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.70
	strd	r0, r1, [sp, #16]
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.70
	b	.LBB15_11
.LBB15_14:
	movw	r0, :lower16:.Lanon.f2125f0e4e7c810e47e19edfd9da912c.6
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.103
	movt	r0, :upper16:.Lanon.f2125f0e4e7c810e47e19edfd9da912c.6
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.103
	movs	r1, #14
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.Lfunc_end15:
	.size	thermostat_eem::hardware::adc::Adc::setup_adc::h59001fe7d7675597, .Lfunc_end15-thermostat_eem::hardware::adc::Adc::setup_adc::h59001fe7d7675597
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN6minimq11mqtt_client42MqttClient$LT$TcpStack$C$Clock$C$_$C$_$GT$7process17h160f6e2c1b0e553eE","ax",%progbits
	.p2align	2
	.type	minimq::mqtt_client::MqttClient<TcpStack,Clock,_,_>::process::h160f6e2c1b0e553e,%function
	.code	16
	.thumb_func
minimq::mqtt_client::MqttClient<TcpStack,Clock,_,_>::process::h160f6e2c1b0e553e:
.Lfunc_begin16:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#620
	sub.w	sp, sp, #620
	mov	r9, r0
	ldr	r0, [r0]
	cmp	r0, #1
	bne.w	.LBB16_29
	ldr.w	r12, [r9, #8]
	add.w	r2, r12, #288
	ldrexb	r0, [r2]
	cbnz	r0, .LBB16_5
	dmb	sy
	movs	r1, #1
.LBB16_3:
	strexb	r6, r1, [r2]
	cbz	r6, .LBB16_6
	ldrexb	r0, [r2]
	cmp	r0, #0
	beq	.LBB16_3
.LBB16_5:
	clrex
	movs	r1, #0
.LBB16_6:
	dmb	sy
	cmp	r1, #0
	beq.w	.LBB16_190
	ldr.w	r0, [r12, #56]
	add.w	r1, r0, r0, lsl #3
	ldr.w	r0, [r12, #52]
	rsbs	r1, r1, #0
	lsls	r6, r1, #1
	movs	r1, #0
	adds	r5, r6, r1
	beq.w	.LBB16_94
.LBB16_8:
	ldrb	r4, [r0, r1]
	cbz	r4, .LBB16_16
	adds.w	r4, r5, #18
	beq.w	.LBB16_94
	adds	r4, r0, r1
	ldrb	r3, [r4, #18]
	cmp	r3, #0
	beq	.LBB16_24
	adds.w	r3, r5, #36
	beq.w	.LBB16_94
	ldrb.w	r3, [r4, #36]
	cmp	r3, #0
	beq	.LBB16_26
	adds.w	r3, r5, #54
	beq.w	.LBB16_94
	ldrb.w	r3, [r4, #54]
	cmp	r3, #0
	beq	.LBB16_27
	adds	r1, #72
	adds	r5, r6, r1
	bne	.LBB16_8
	b	.LBB16_94
.LBB16_16:
	add	r0, r1
	ldrb	r0, [r0, #1]
	cbz	r0, .LBB16_25
.LBB16_17:
	ldr.w	r0, [r9, #4]
	ldr.w	r1, [r12, #88]
	cmp	r1, r0
	bls.w	.LBB16_184
	mov.w	r1, #392
	ldr.w	r3, [r12, #84]
	mla	r0, r0, r1, r3
	ldr	r1, [r0, #40]!
	cmp	r1, #2
	bne.w	.LBB16_191
	ldrb.w	r1, [r0, #318]
	cmp	r1, #7
	it	ne
	cmpne	r1, #4
	bne	.LBB16_28
	ldr.w	r0, [r0, #212]
	movs	r3, #0
	dmb	sy
	strb	r3, [r2]
	subs	r1, #4
	dmb	sy
	cmp	r1, #3
	blo	.LBB16_22
	cbz	r0, .LBB16_29
.LBB16_22:
	ldrb.w	r0, [r9, #1776]
	cmp	r0, #2
	bne.w	.LBB16_44
	add.w	r10, r9, #1776
	movs	r0, #1
	strb.w	r0, [r10]
	b	.LBB16_47
.LBB16_24:
	add.w	r0, r4, #18
	ldrb	r0, [r0, #1]
	cmp	r0, #0
	bne	.LBB16_17
.LBB16_25:
	dmb	sy
	movs	r0, #0
	strb	r0, [r2]
	dmb	sy
	movs	r2, #5
	b	.LBB16_106
.LBB16_26:
	add.w	r0, r4, #36
	ldrb	r0, [r0, #1]
	cmp	r0, #0
	bne	.LBB16_17
	b	.LBB16_25
.LBB16_27:
	add.w	r0, r4, #54
	ldrb	r0, [r0, #1]
	cmp	r0, #0
	bne	.LBB16_17
	b	.LBB16_25
.LBB16_28:
	dmb	sy
	movs	r0, #0
	strb	r0, [r2]
	dmb	sy
.LBB16_29:
	ldrb.w	r0, [r9, #1776]
	cmp	r0, #3
	bhi	.LBB16_44
	cmp	r0, #2
	beq	.LBB16_44
	add.w	r10, r9, #1776
	movs	r0, #4
	strb.w	r0, [r10]
.LBB16_32:
	ldrd	r1, r0, [r9]
	cmp	r1, #1
	mov.w	r1, #0
	str.w	r1, [r9]
	bne.w	.LBB16_79
	ldr.w	r2, [r9, #8]
	add.w	r3, r2, #288
	ldrexb	r1, [r3]
	cbnz	r1, .LBB16_37
	dmb	sy
	movs	r6, #1
.LBB16_35:
	strexb	r5, r6, [r3]
	cbz	r5, .LBB16_38
	ldrexb	r1, [r3]
	cmp	r1, #0
	beq	.LBB16_35
.LBB16_37:
	clrex
	movs	r6, #0
.LBB16_38:
	dmb	sy
	cmp	r6, #0
	beq.w	.LBB16_195
	ldr	r1, [r2, #88]
	cmp	r1, r0
	bls.w	.LBB16_184
	mov.w	r1, #392
	ldr	r3, [r2, #84]
	mla	r1, r0, r1, r3
	ldr	r3, [r1, #40]!
	cmp	r3, #2
	bne.w	.LBB16_193
	ldrb.w	r6, [r1, #318]
	movs	r3, #0
.LCPI16_0:
	tbb	[pc, r6]
.LJTI16_0:
	.byte	(.LBB16_77-(.LCPI16_0+4))/2
	.byte	(.LBB16_76-(.LCPI16_0+4))/2
	.byte	(.LBB16_76-(.LCPI16_0+4))/2
	.byte	(.LBB16_43-(.LCPI16_0+4))/2
	.byte	(.LBB16_43-(.LCPI16_0+4))/2
	.byte	(.LBB16_77-(.LCPI16_0+4))/2
	.byte	(.LBB16_77-(.LCPI16_0+4))/2
	.byte	(.LBB16_75-(.LCPI16_0+4))/2
	.byte	(.LBB16_77-(.LCPI16_0+4))/2
	.byte	(.LBB16_77-(.LCPI16_0+4))/2
	.byte	(.LBB16_77-(.LCPI16_0+4))/2
	.p2align	1
.LBB16_43:
	movs	r3, #5
	b	.LBB16_76
.LBB16_44:
	cmp	r0, #1
	add.w	r10, r9, #1776
	beq	.LBB16_47
	cmp	r0, #2
	beq	.LBB16_50
	cmp	r0, #4
	beq	.LBB16_32
	b	.LBB16_102
.LBB16_47:
	movs	r0, #23
	strb.w	r0, [sp, #24]
	movs	r0, #6
	strb.w	r0, [sp, #44]
	mov.w	r0, #-1
	add.w	r8, sp, #76
	str	r0, [sp, #48]
	mov.w	r1, #512
	mov	r0, r8
	mov.w	r6, #512
	str	r6, [sp, #28]
	bl	__aeabi_memclr4
	movw	r1, #19923
	ldr.w	r11, [r9, #568]
	ldrd	r5, r0, [r9, #536]
	movt	r1, #4194
	cmp	r5, #0
	umull	r0, r1, r0, r1
	ldrb.w	r0, [r9, #1255]
	it	ne
	lsrne	r5, r1, #6
	ldrb.w	r1, [r9, #1773]
	clz	r0, r0
	lsrs	r0, r0, #5
	subs	r4, r1, #2
	it	ne
	addne.w	r4, r9, #1256
	cmp	r1, #2
	lsl.w	r1, r0, #1
	strd	r8, r6, [sp, #596]
	str	r6, [sp, #604]
	bne	.LBB16_66
.LBB16_48:
	movw	r0, :lower16:core::cmp::Ord::max::hdad388a91279e379
	movt	r0, :upper16:core::cmp::Ord::max::hdad388a91279e379
	cmp	r11, r0
	bls	.LBB16_69
	movs	r2, #1
	b	.LBB16_72
.LBB16_50:
	ldrb.w	r12, [r9, #1238]
	ldr.w	r1, [r9]
	ldr.w	r6, [r9, #1239]
	movs	r2, #0
	cmp.w	r12, #0
	it	ne
	movne	r6, r2
	cmp	r1, #1
	bne.w	.LBB16_74
	ldr.w	lr, [r9, #8]
	str.w	r2, [r9, #12]
	add.w	r11, lr, #288
	ldrexb	r1, [r11]
	cbnz	r1, .LBB16_55
	dmb	sy
	movs	r2, #1
.LBB16_53:
	strexb	r3, r2, [r11]
	cbz	r3, .LBB16_56
	ldrexb	r1, [r11]
	cmp	r1, #0
	beq	.LBB16_53
.LBB16_55:
	clrex
	movs	r2, #0
.LBB16_56:
	dmb	sy
	cmp	r2, #0
	beq.w	.LBB16_195
	ldr.w	r1, [lr, #56]
	add.w	r2, r1, r1, lsl #3
	ldr.w	r1, [lr, #52]
	rsbs	r2, r2, #0
	lsls	r3, r2, #1
	movs	r2, #0
	adds	r5, r3, r2
	beq.w	.LBB16_94
.LBB16_58:
	ldrb	r4, [r1, r2]
	cmp	r4, #0
	beq.w	.LBB16_141
	adds.w	r4, r5, #18
	beq.w	.LBB16_94
	adds	r4, r1, r2
	ldrb	r0, [r4, #18]
	cmp	r0, #0
	beq.w	.LBB16_142
	adds.w	r0, r5, #36
	beq.w	.LBB16_94
	ldrb.w	r0, [r4, #36]
	cmp	r0, #0
	beq.w	.LBB16_143
	adds.w	r0, r5, #54
	beq.w	.LBB16_94
	ldrb.w	r0, [r4, #54]
	cmp	r0, #0
	beq.w	.LBB16_144
	adds	r2, #72
	adds	r5, r3, r2
	bne	.LBB16_58
	b	.LBB16_94
.LBB16_66:
	ldr	r2, [r4]
	cmp.w	r2, #512
	bhi	.LBB16_71
	rsb.w	r6, r2, #512
	str	r1, [sp, #20]
	adds	r1, r4, #4
	add.w	r0, r8, r6
	bl	__aeabi_memcpy
	ldrb.w	r1, [r4, #517]
	str	r6, [sp, #604]
	ldrb.w	r0, [r4, #516]
	cmp	r1, #1
	ldr	r1, [sp, #20]
	orr.w	r0, r1, r0, lsl #3
	bne.w	.LBB16_129
	orr	r1, r0, #36
	b	.LBB16_48
.LBB16_69:
	cmp	r6, r11
	blo	.LBB16_71
	str.w	r10, [sp, #20]
	sub.w	r10, r6, r11
	mov	r4, r1
	add.w	r1, r9, #572
	add.w	r0, r8, r10
	mov	r2, r11
	bl	__aeabi_memcpy
	cmp.w	r10, #2
	bhs.w	.LBB16_130
.LBB16_71:
	movs	r2, #0
.LBB16_72:
	strb.w	r2, [sp, #65]
.LBB16_73:
	movs	r0, #6
	mov	r1, r2
	add.w	sp, sp, #620
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB16_74:
	movs	r0, #2
	uxtb	r1, r0
	cmp	r1, #9
	bne.w	.LBB16_106
	b	.LBB16_102
.LBB16_75:
	movs	r3, #9
.LBB16_76:
	strb.w	r3, [r1, #318]
.LBB16_77:
	ldr.w	r1, [r2, #184]
	cmp	r1, #16
	bhs.w	.LBB16_197
	add.w	r1, r2, r1, lsl #2
	str	r0, [r1, #120]
	ldr.w	r0, [r2, #184]
	adds	r0, #1
	str.w	r0, [r2, #184]
	dmb	sy
	movs	r0, #0
	strb.w	r0, [r2, #288]
	dmb	sy
.LBB16_79:
	ldr.w	r12, [r9, #8]
	add.w	r3, r12, #288
	ldrexb	r0, [r3]
	cbnz	r0, .LBB16_83
	dmb	sy
	movs	r1, #1
.LBB16_81:
	strexb	r6, r1, [r3]
	cbz	r6, .LBB16_84
	ldrexb	r0, [r3]
	cmp	r0, #0
	beq	.LBB16_81
.LBB16_83:
	clrex
	movs	r1, #0
.LBB16_84:
	dmb	sy
	cmp	r1, #0
	beq.w	.LBB16_190
	ldr.w	r0, [r12, #56]
	add.w	r1, r0, r0, lsl #3
	ldr.w	r0, [r12, #52]
	rsbs	r1, r1, #0
	lsls	r6, r1, #1
	movs	r1, #0
	adds	r5, r6, r1
	beq	.LBB16_94
.LBB16_86:
	ldrb	r4, [r0, r1]
	cbz	r4, .LBB16_95
	adds.w	r4, r5, #18
	beq	.LBB16_94
	adds	r4, r0, r1
	ldrb	r2, [r4, #18]
	cmp	r2, #0
	beq	.LBB16_107
	adds.w	r2, r5, #36
	beq	.LBB16_94
	ldrb.w	r2, [r4, #36]
	cmp	r2, #0
	beq	.LBB16_109
	adds.w	r2, r5, #54
	beq	.LBB16_94
	ldrb.w	r2, [r4, #54]
	cmp	r2, #0
	beq	.LBB16_110
	adds	r1, #72
	adds	r5, r6, r1
	bne	.LBB16_86
.LBB16_94:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.63
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.63
	movs	r1, #43
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB16_95:
	add	r0, r1
	ldrb	r0, [r0, #1]
	cmp	r0, #0
	beq	.LBB16_108
.LBB16_96:
	ldr.w	r0, [r12, #184]
	cmp	r0, #0
	beq	.LBB16_111
	subs	r0, #1
	str.w	r0, [r12, #184]
	add.w	r1, r12, r0, lsl #2
	ldr	r0, [r1, #120]
	ldr.w	r1, [r12, #88]
	cmp	r1, r0
	bls.w	.LBB16_184
	mov.w	r1, #392
	ldr.w	r2, [r12, #84]
	mla	r2, r0, r1, r2
	ldr	r1, [r2, #40]!
	cmp	r1, #2
	bne.w	.LBB16_191
	movs	r1, #0
	strb.w	r1, [r2, #318]
	dmb	sy
	strb	r1, [r3]
	movs	r3, #1
	dmb	sy
	ldrb.w	r2, [r9, #1776]
	str.w	r3, [r9]
	str.w	r0, [r9, #4]
	cmp	r2, #4
	bne.w	.LBB16_198
	movs	r0, #2
.LBB16_101:
	strb.w	r0, [r10]
.LBB16_102:
	add	r5, sp, #76
	add.w	r1, r9, #12
	mov.w	r2, #520
	mov	r0, r5
	bl	__aeabi_memcpy4
	ldr	r0, [sp, #76]
	movs	r1, #0
	cmp	r0, #1
	str.w	r1, [r9, #12]
	bne	.LBB16_105
	add.w	r1, r5, #8
	ldr	r2, [sp, #80]
	mov	r0, r9
	bl	minimq::network_manager::InterfaceHolder<TcpStack,_>::write::h19b74f0c592580bd
	uxtb	r2, r0
	cmp	r2, #9
	bne.w	.LBB16_188
	ldr.w	r0, [r9, #12]
	subs	r0, #1
	clz	r0, r0
	lsrs	r1, r0, #5
.LBB16_105:
	ldrb.w	r0, [r10]
	movs	r2, #0
	cmp	r0, #0
	mov.w	r0, #9
	it	eq
	cmpeq	r1, #0
	beq	.LBB16_113
.LBB16_106:
	mov	r1, r2
	add.w	sp, sp, #620
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB16_107:
	add.w	r0, r4, #18
	ldrb	r0, [r0, #1]
	cmp	r0, #0
	bne	.LBB16_96
.LBB16_108:
	movs	r2, #5
	b	.LBB16_112
.LBB16_109:
	add.w	r0, r4, #36
	ldrb	r0, [r0, #1]
	cmp	r0, #0
	bne	.LBB16_96
	b	.LBB16_108
.LBB16_110:
	add.w	r0, r4, #54
	ldrb	r0, [r0, #1]
	cmp	r0, #0
	bne	.LBB16_96
	b	.LBB16_108
.LBB16_111:
	movs	r2, #0
.LBB16_112:
	dmb	sy
	movs	r0, #0
	strb	r0, [r3]
	dmb	sy
	mov	r1, r2
	add.w	sp, sp, #620
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB16_113:
	ldr.w	r0, [r9, #532]
	blx	r0
	ldr.w	r1, [r9, #544]
	mov	r5, r0
	cmp	r1, #1
	bne	.LBB16_117
	ldr.w	r1, [r9, #548]
	movs	r2, #0
	cmp	r5, r1
	mov.w	r0, #9
	beq	.LBB16_106
	subs	r1, r5, r1
	mvn	r3, #-2147483648
	cmp	r1, r3
	bhs	.LBB16_106
	movs	r0, #4
	strb.w	r0, [r10]
	movs	r2, #0
	movs	r0, #9
	mov	r1, r2
	add.w	sp, sp, #620
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB16_117:
	ldr.w	r0, [r9, #536]
	movs	r2, #0
	cmp	r0, #1
	mov.w	r0, #9
	bne	.LBB16_106
	ldr.w	r1, [r9, #552]
	cmp	r1, #0
	itt	ne
	ldrne.w	r1, [r9, #556]
	subsne.w	r1, r5, r1
	beq	.LBB16_106
	mvn	r3, #-2147483648
	cmp	r1, r3
	bhs	.LBB16_106
	add	r0, sp, #76
	movs	r1, #1
	mov.w	r2, #1000
	movs	r3, #1
	ldr.w	r4, [r9, #540]
	mov.w	r6, #1000
	str	r6, [sp]
	bl	embedded_time::fraction::Fraction::checked_div::hd5f447229dd00813
	ldr	r0, [sp, #76]
	cmp	r0, #0
	beq.w	.LBB16_202
	lsrs	r0, r4, #1
	ldr	r1, [sp, #80]
	umull	r0, r1, r0, r1
	cmp	r1, #0
	bne.w	.LBB16_202
	ldr	r1, [sp, #84]
	cmp	r1, #0
	beq.w	.LBB16_202
	udiv	r0, r0, r1
	cmp.w	r0, #-1
	ble.w	.LBB16_202
	add	r0, r5
	movs	r1, #1
	str.w	r0, [r9, #556]
	add	r6, sp, #76
	mov.w	r0, #1000
	str.w	r1, [r9, #552]
	movs	r1, #1
	movs	r2, #1
	movs	r3, #1
	str	r0, [sp]
	mov	r0, r6
	bl	embedded_time::fraction::Fraction::checked_div::hd5f447229dd00813
	ldr	r0, [sp, #76]
	cmp	r0, #0
	beq.w	.LBB16_202
	ldr	r0, [sp, #80]
	movs	r1, #5
	umull	r0, r1, r0, r1
	cmp	r1, #0
	bne.w	.LBB16_202
	ldr	r1, [sp, #84]
	cmp	r1, #0
	beq.w	.LBB16_202
	udiv	r0, r0, r1
	cmp.w	r0, #-1
	ble.w	.LBB16_202
	movs	r1, #1
	add	r0, r5
	str.w	r1, [r9, #544]
	mov.w	r1, #510
	str.w	r0, [r9, #548]
	mov	r0, r6
	bl	__aeabi_memclr4
	movs	r0, #192
	add.w	r1, r6, #510
	strh.w	r0, [sp, #586]
	movs	r2, #2
	mov	r0, r9
	bl	minimq::network_manager::InterfaceHolder<TcpStack,_>::write::h19b74f0c592580bd
	uxtb	r2, r0
	subs	r2, #9
	it	ne
	movne	r2, r1
	mov	r1, r2
	add.w	sp, sp, #620
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB16_129:
	orr	r1, r0, #4
	b	.LBB16_48
.LBB16_130:
	cmp.w	r10, #512
	bhi.w	.LBB16_203
	sub.w	r0, r10, #2
	str	r0, [sp, #604]
	rev.w	r1, r11
	movs	r2, #2
	lsrs	r1, r1, #16
	strh.w	r1, [r8, r0]
	add	r0, sp, #596
	add	r1, sp, #24
	bl	minimq::ser::packet_writer::ReversedPacketWriter::write_properties::h502ebb0001b99ed2
	uxtb	r2, r0
	cmp	r2, #11
	bne.w	.LBB16_72
	ldr	r0, [sp, #604]
	cmp	r0, #2
	blo.w	.LBB16_71
	ldr	r1, [sp, #600]
	cmp	r0, r1
	bhi.w	.LBB16_205
	ldr	r1, [sp, #596]
	subs	r3, r0, #2
	rev	r2, r5
	lsr.w	r2, r2, #16
	strh	r2, [r1, r3]
	str	r3, [sp, #604]
	beq.w	.LBB16_71
	ldr	r1, [sp, #600]
	cmp	r3, r1
	bhi.w	.LBB16_204
	ldr	r1, [sp, #596]
	subs	r3, r0, #3
	strb	r4, [r1, r3]
	str	r3, [sp, #604]
	beq.w	.LBB16_71
	ldr	r1, [sp, #600]
	cmp	r3, r1
	bhi.w	.LBB16_204
	ldr	r1, [sp, #596]
	subs	r0, #4
	movs	r2, #5
	strb	r2, [r1, r0]
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.66
	str	r0, [sp, #604]
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.66
	add	r0, sp, #596
	movs	r2, #4
	bl	minimq::ser::packet_writer::ReversedPacketWriter::write_utf8_string::hef12e04e07667af0
	uxtb	r2, r0
	cmp	r2, #11
	bne.w	.LBB16_72
	ldr	r0, [sp, #604]
	str	r0, [sp, #616]
	ldr	r0, [sp, #600]
	str	r0, [sp, #612]
	ldr	r0, [sp, #596]
	str	r0, [sp, #608]
	add	r0, sp, #64
	add	r1, sp, #608
	movs	r2, #1
	movs	r3, #0
	bl	minimq::ser::packet_writer::ReversedPacketWriter::finalize::h384e5c658c82f6d2
	ldrb.w	r0, [sp, #64]
	cmp	r0, #0
	beq.w	.LBB16_185
	ldrb.w	r2, [sp, #65]
	b	.LBB16_73
.LBB16_141:
	add	r1, r2
	b	.LBB16_145
.LBB16_142:
	add.w	r1, r4, #18
	b	.LBB16_145
.LBB16_143:
	add.w	r1, r4, #36
	b	.LBB16_145
.LBB16_144:
	add.w	r1, r4, #54
.LBB16_145:
	ldrb	r0, [r1, #1]
	movs	r4, #0
	cbz	r0, .LBB16_151
	ldr.w	r5, [r9, #4]
	ldr.w	r1, [lr, #88]
	cmp	r1, r5
	bls.w	.LBB16_189
	mov.w	r0, #392
	ldr.w	r8, [lr, #84]
	mla	r2, r5, r0, r8
	ldr	r3, [r2, #40]!
	cmp	r3, #2
	bne.w	.LBB16_193
	ldrb.w	r2, [r2, #318]
	cmp	r2, #10
	it	ne
	cmpne	r2, #0
	bne.w	.LBB16_180
	cmp.w	r12, #0
	mov.w	r0, #0
	beq	.LBB16_152
	movs	r2, #4
	b	.LBB16_183
.LBB16_151:
	movs	r2, #5
	movs	r0, #0
	b	.LBB16_183
.LBB16_152:
	strd	r5, r6, [sp, #8]
	movw	r3, #25647
	movw	r6, #7524
	movw	r5, #32465
	movw	r4, #10459
	str.w	r10, [sp, #20]
	movt	r3, #30909
	movt	r6, #41078
	movt	r5, #59139
	movt	r4, #41140
	str.w	lr, [sp, #16]
.LBB16_153:
	ldrd	r0, r2, [lr, #104]
	adds	r0, r0, r3
	mov.w	r3, #0
	adcs	r2, r6
	eor.w	lr, r2, r5
	eor.w	r5, r0, r4
	umull	r12, r4, r5, r0
	umlal	r4, r3, lr, r0
	umull	r5, r10, r5, r2
	adds	r4, r4, r5
	adc.w	r3, r3, r10
	mla	r3, lr, r2, r3
	ldr.w	lr, [sp, #16]
	eor.w	r3, r3, r12
	strd	r0, r2, [lr, #104]
	rev	r3, r3
	mov.w	r2, #392
	lsrs	r3, r3, #16
	mla	r10, r1, r2, r8
	movw	r1, #49152
	add.w	r5, r3, r3, lsl #2
	movt	r1, #65535
	sub.w	r4, r3, r5, lsr #16
	uxth	r4, r4
	lsrs	r4, r4, #1
	add.w	r5, r4, r5, lsr #16
	movs	r4, #0
	add.w	r0, r3, r5, lsr #13
	ldr	r3, [sp, #12]
	orr.w	r6, r0, r1
	ldr	r5, [sp, #8]
.LBB16_154:
	mov	r0, r8
.LBB16_155:
	cmp	r0, r10
	beq	.LBB16_174
	ldr	r1, [r0, #40]
	add.w	r2, r0, #392
	cmp	r1, #4
	bne	.LBB16_166
	cmp	r2, r10
	beq	.LBB16_174
	ldr.w	r1, [r0, #432]
	add.w	r8, r0, #784
	cmp	r1, #4
	bne	.LBB16_164
	cmp	r8, r10
	beq	.LBB16_174
	ldr.w	r1, [r0, #824]
	add.w	r2, r0, #1176
	cmp	r1, #4
	bne	.LBB16_165
	cmp	r2, r10
	beq	.LBB16_174
	ldr.w	r1, [r0, #1216]
	add.w	r8, r0, #1568
	cmp	r1, #4
	mov	r0, r8
	beq	.LBB16_155
	sub.w	r0, r8, #392
	b	.LBB16_167
.LBB16_164:
	mov	r0, r2
	b	.LBB16_167
.LBB16_165:
	mov	r0, r8
.LBB16_166:
	mov	r8, r2
.LBB16_167:
	cmp	r1, #2
	add.w	r0, r0, #40
	beq	.LBB16_170
	cmp	r1, #1
	bne	.LBB16_154
	add.w	r12, r0, #68
	str	r6, [sp, #4]
	b	.LBB16_171
.LBB16_170:
	str	r6, [sp, #4]
	add.w	r12, r0, #276
.LBB16_171:
	add	r0, sp, #76
	mov	r1, r0
	ldm.w	r12, {r2, r3, r4, r5, r6}
	stm	r1!, {r2, r3, r4, r5, r6}
	ldr	r5, [sp, #8]
	movs	r4, #0
	bl	smoltcp::wire::ip::Endpoint::is_specified::h5bbec8f8783a27da
	ldr	r6, [sp, #4]
	cmp	r0, #0
	ldrd	r3, lr, [sp, #12]
	beq	.LBB16_154
	ldrh.w	r0, [sp, #76]
	uxth	r1, r6
	cmp	r0, r1
	bne	.LBB16_154
	movw	r3, #25647
	movw	r6, #7524
	movw	r5, #32465
	movw	r4, #10459
	ldrd	r8, r1, [lr, #84]
	movt	r3, #30909
	movt	r6, #41078
	movt	r5, #59139
	movt	r4, #41140
	b	.LBB16_153
.LBB16_174:
	ldr.w	r1, [lr, #88]
	cmp	r1, r5
	bls.w	.LBB16_189
	mov.w	r0, #392
	ldr.w	r1, [lr, #84]
	mla	r0, r5, r0, r1
	ldr	r1, [r0, #40]!
	cmp	r1, #4
	beq.w	.LBB16_192
	mov.w	r10, #0
	cmp	r1, #2
	it	eq
	addeq.w	r10, r0, #8
	bne.w	.LBB16_194
	movs	r0, #1
	str.w	r3, [sp, #79]
	strb.w	r0, [sp, #78]
	movw	r0, #1883
	strh.w	r0, [sp, #76]
	ldrb.w	r0, [r10, #310]
	cmp	r0, #10
	it	ne
	cmpne	r0, #0
	bne	.LBB16_181
	add.w	r8, sp, #76
	mov	r0, r8
	bl	smoltcp::wire::ip::Endpoint::is_specified::h5bbec8f8783a27da
	cmp	r0, #0
	beq	.LBB16_181
	mov	r0, r10
	bl	smoltcp::socket::tcp::TcpSocket::reset::h3eed303dba5cd1e6
	movs	r0, #1
	strb.w	r0, [r10, #270]
	ldr	r0, [sp, #24]
	str.w	r0, [r10, #275]
	ldr	r0, [sp, #28]
	str.w	r0, [r10, #279]
	ldr	r0, [sp, #32]
	movs	r2, #0
	str.w	r2, [r10, #271]
	str.w	r0, [r10, #283]
	add.w	r0, r10, #288
	strh.w	r6, [r10, #268]
	ldm.w	r8, {r1, r3, r4, r5, r6}
	stm	r0!, {r1, r3, r4, r5, r6}
	ldr	r6, [sp, #16]
	movs	r0, #2
	strb.w	r0, [r10, #310]
	movw	r3, #24861
	ldrd	r0, r1, [r6, #24]
	movt	r3, #15417
	movw	r4, #64748
	umull	r12, r5, r0, r3
	movt	r4, #47918
	muls	r1, r3, r1
	movw	r3, #61241
	mla	r0, r0, r4, r5
	movt	r3, #30096
	adds.w	r3, r3, r12
	mov.w	r4, #0
	adcs	r0, r1
	movs	r1, #29
	strd	r3, r0, [r6, #24]
	sub.w	r1, r1, r0, lsr #29
	lsls	r0, r0, #1
	eor	r6, r1, #31
	lsls	r0, r6
	lsr.w	r1, r3, r1
	orrs	r0, r1
	str.w	r0, [r10, #224]
	str.w	r0, [r10, #232]
	movs	r0, #9
	b	.LBB16_182
.LBB16_180:
	movs	r2, #0
	movs	r0, #9
	b	.LBB16_183
.LBB16_181:
	movs	r2, #1
	movs	r0, #0
.LBB16_182:
	ldr.w	r10, [sp, #20]
.LBB16_183:
	dmb	sy
	strb.w	r4, [r11]
	dmb	sy
	uxtb	r1, r0
	cmp	r1, #9
	bne.w	.LBB16_106
	b	.LBB16_102
.LBB16_184:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.153
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.153
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB16_185:
	ldrd	r1, r2, [sp, #68]
	mov	r0, r9
	bl	minimq::network_manager::InterfaceHolder<TcpStack,_>::write::h19b74f0c592580bd
	uxtb	r2, r0
	cmp	r2, #9
	bne	.LBB16_188
	ldr.w	r10, [sp, #20]
	ldrb.w	r0, [r10]
	cmp	r0, #1
	bne.w	.LBB16_206
	movs	r0, #3
	b	.LBB16_101
.LBB16_188:
	mov	r2, r1
	mov	r1, r2
	add.w	sp, sp, #620
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB16_189:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.153
	mov	r0, r5
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.153
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB16_190:
	cmp	r0, #0
	it	ne
	movne	r0, #1
	strb.w	r0, [sp, #76]
	b	.LBB16_196
.LBB16_191:
	cmp	r1, #4
	bne	.LBB16_194
.LBB16_192:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.156
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.157
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.156
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.157
	movs	r1, #39
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB16_193:
	cmp	r3, #4
	beq	.LBB16_192
.LBB16_194:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.154
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.155
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.154
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.155
	movs	r1, #41
	bl	core::option::expect_failed::h22026eb39ea9589c
	.inst.n	0xdefe
.LBB16_195:
	cmp	r1, #0
	it	ne
	movne	r1, #1
	strb.w	r1, [sp, #76]
.LBB16_196:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.7
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.5
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.360
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.7
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.5
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.360
	add	r2, sp, #76
	movs	r1, #12
	b	.LBB16_201
.LBB16_197:
	str	r0, [sp, #76]
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.64
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.372
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.64
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.372
	b	.LBB16_199
.LBB16_198:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.107
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.368
	strb.w	r1, [sp, #76]
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.107
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.368
.LBB16_199:
	add	r2, sp, #76
.LBB16_200:
	movs	r1, #43
.LBB16_201:
	str	r6, [sp]
	bl	core::result::unwrap_failed::he67be68ddf63c991
	.inst.n	0xdefe
.LBB16_202:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.116
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.118
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.116
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.118
	movs	r1, #10
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB16_203:
	movw	r2, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.4
	mov.w	r1, #512
	movt	r2, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.4
	mov	r0, r10
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB16_204:
	movw	r2, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.4
	mov	r0, r3
	movt	r2, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.4
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB16_205:
	movw	r2, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.4
	movt	r2, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.4
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB16_206:
	movs	r0, #0
	strb.w	r0, [sp, #608]
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.108
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.368
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.108
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.368
	add	r2, sp, #608
	b	.LBB16_200
.Lfunc_end16:
	.size	minimq::mqtt_client::MqttClient<TcpStack,Clock,_,_>::process::h160f6e2c1b0e553e, .Lfunc_end16-minimq::mqtt_client::MqttClient<TcpStack,Clock,_,_>::process::h160f6e2c1b0e553e
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp5iface9interface14InterfaceInner11has_ip_addr17h39bdf4874bad6135E,"ax",%progbits
	.p2align	1
	.type	smoltcp::iface::interface::InterfaceInner::has_ip_addr::h39bdf4874bad6135,%function
	.code	16
	.thumb_func
smoltcp::iface::interface::InterfaceInner::has_ip_addr::h39bdf4874bad6135:
.Lfunc_begin17:
	.fnstart
	.cfi_startproc
	ldr	r2, [r0, #56]
	cbz	r2, .LBB17_15
	ldr	r3, [r0, #52]
	add.w	r0, r2, r2, lsl #3
	add.w	r2, r3, #55
	add.w	r12, r3, r0, lsl #1
	b	.LBB17_3
.LBB17_2:
	add.w	r0, r3, #18
	adds	r2, #72
	cmp	r12, r0
	beq	.LBB17_15
.LBB17_3:
	mov	r3, r2
	ldrb	r0, [r3, #-55]!
	cbnz	r0, .LBB17_5
	ldr	r0, [r2, #-54]
	cmp	r0, r1
	beq	.LBB17_14
.LBB17_5:
	adds	r3, #18
	cmp	r12, r3
	beq	.LBB17_15
	ldrb	r0, [r3]
	cbnz	r0, .LBB17_8
	ldr	r0, [r2, #-36]
	cmp	r0, r1
	beq	.LBB17_14
.LBB17_8:
	adds	r3, #18
	cmp	r12, r3
	beq	.LBB17_15
	ldrb	r0, [r3]
	cbnz	r0, .LBB17_11
	ldr	r0, [r2, #-18]
	cmp	r0, r1
	beq	.LBB17_14
.LBB17_11:
	adds	r3, #18
	cmp	r12, r3
	beq	.LBB17_15
	ldrb	r0, [r3]
	cmp	r0, #0
	bne	.LBB17_2
	ldr	r0, [r2]
	cmp	r0, r1
	bne	.LBB17_2
.LBB17_14:
	movs	r0, #1
	bx	lr
.LBB17_15:
	movs	r0, #0
	bx	lr
.Lfunc_end17:
	.size	smoltcp::iface::interface::InterfaceInner::has_ip_addr::h39bdf4874bad6135, .Lfunc_end17-smoltcp::iface::interface::InterfaceInner::has_ip_addr::h39bdf4874bad6135
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN15serde_json_core2de8from_str17hba2caa47f21d3896E,"ax",%progbits
	.p2align	1
	.type	serde_json_core::de::from_str::hba2caa47f21d3896,%function
	.code	16
	.thumb_func
serde_json_core::de::from_str::hba2caa47f21d3896:
.Lfunc_begin18:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#8
	sub	sp, #8
	cmp	r2, #0
	mov	r4, r0
	beq	.LBB18_15
	movw	r11, #19
	rsb.w	r12, r2, #0
	sub.w	lr, r2, #1
	mov.w	r9, #0
	mov.w	r8, #1
	movt	r11, #128
	str	r4, [sp, #4]
.LBB18_2:
	ldrb.w	r5, [r1, r9]
	sub.w	r3, r5, #9
	cmp	r3, #23
	bhi	.LBB18_19
	lsl.w	r3, r8, r3
	tst.w	r3, r11
	beq	.LBB18_19
	cmp	lr, r9
	beq	.LBB18_14
	add.w	r3, r1, r9
	ldrb	r5, [r3, #1]
	sub.w	r6, r5, #9
	cmp	r6, #23
	bhi	.LBB18_17
	lsl.w	r4, r8, r6
	tst.w	r4, r11
	beq	.LBB18_17
	add.w	r6, r12, r9
	adds	r4, r6, #2
	beq	.LBB18_14
	ldrb	r5, [r3, #2]
	sub.w	r4, r5, #9
	cmp	r4, #23
	bhi	.LBB18_18
	lsl.w	r4, r8, r4
	tst.w	r4, r11
	beq	.LBB18_18
	adds	r4, r6, #3
	beq	.LBB18_14
	ldrb	r5, [r3, #3]
	sub.w	r3, r5, #9
	cmp	r3, #23
	bhi.w	.LBB18_43
	lsl.w	r3, r8, r3
	tst.w	r3, r11
	beq.w	.LBB18_43
	add.w	r9, r9, #4
	cmp	r2, r9
	bne	.LBB18_2
.LBB18_14:
	movs	r6, #4
	ldr	r4, [sp, #4]
	b	.LBB18_16
.LBB18_15:
	movs	r6, #4
.LBB18_16:
	strb	r6, [r4, #1]
	movs	r1, #1
	strb	r1, [r4]
	add	sp, #8
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB18_17:
	add.w	r9, r9, #1
	cmp	r5, #45
	bne	.LBB18_20
	b	.LBB18_44
.LBB18_18:
	add.w	r9, r9, #2
.LBB18_19:
	cmp	r5, #45
	beq.w	.LBB18_44
.LBB18_20:
	cmp	r5, #48
	bne	.LBB18_37
	add.w	r9, r9, #1
	mov.w	r10, #0
	ldr	r4, [sp, #4]
	cmp	r9, r2
	bhs	.LBB18_36
.LBB18_22:
	str.w	r10, [sp, #4]
	mov.w	r10, #1
.LBB18_23:
	ldrb.w	r0, [r1, r9]
	movs	r6, #14
	sub.w	r3, r0, #9
	cmp	r3, #23
	bhi	.LBB18_16
	lsl.w	r0, r10, r3
	tst.w	r0, r11
	beq	.LBB18_16
	cmp	r9, lr
	beq	.LBB18_35
	add.w	r8, r1, r9
	movs	r6, #14
	ldrb.w	r0, [r8, #1]
	sub.w	r3, r0, #9
	cmp	r3, #23
	bhi	.LBB18_16
	lsl.w	r0, r10, r3
	tst.w	r0, r11
	beq	.LBB18_16
	add.w	r3, r9, r12
	adds	r0, r3, #2
	beq	.LBB18_35
	ldrb.w	r0, [r8, #2]
	movs	r6, #14
	sub.w	r5, r0, #9
	cmp	r5, #23
	bhi	.LBB18_16
	lsl.w	r0, r10, r5
	tst.w	r0, r11
	beq	.LBB18_16
	adds	r0, r3, #3
	beq	.LBB18_35
	ldrb.w	r0, [r8, #3]
	movs	r6, #14
	sub.w	r3, r0, #9
	cmp	r3, #23
	bhi	.LBB18_16
	lsl.w	r0, r10, r3
	tst.w	r0, r11
	beq	.LBB18_16
	add.w	r12, r12, #4
	adds	r1, #4
	adds.w	r0, r9, r12
	sub.w	lr, lr, #4
	bne	.LBB18_23
.LBB18_35:
	mov	r9, r2
	ldr.w	r10, [sp, #4]
.LBB18_36:
	movs	r1, #0
	strd	r10, r9, [r4, #4]
	strb	r1, [r4]
	add	sp, #8
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB18_37:
	sub.w	r3, r5, #49
	uxtb	r3, r3
	cmp	r3, #9
	bhs	.LBB18_45
	add.w	r9, r9, #1
	sub.w	r3, r5, #48
	uxtb.w	r10, r3
	mov	r0, r9
	movs	r5, #0
	movs	r6, #10
	cmp	r2, r9
	it	hi
	movhi	r0, r2
	str	r0, [sp]
	cmp	r9, r2
	bhs	.LBB18_47
.LBB18_39:
	ldrb.w	r3, [r1, r9]
	subs	r3, #48
	uxtb	r3, r3
	cmp	r3, #9
	bhi	.LBB18_46
	umull	r10, r8, r10, r6
	movs	r0, #0
	umull	r5, r4, r5, r6
	adds.w	r5, r5, r8
	mov.w	r8, #0
	adc	r0, r0, #0
	cmp	r4, #0
	it	ne
	movne	r4, #1
	orrs	r0, r4
	bne	.LBB18_49
	adds.w	r10, r10, r3
	adcs	r5, r5, #0
	adcs	r0, r8, #0
	bne	.LBB18_44
	add.w	r9, r9, #1
	cmp	r9, r2
	blo	.LBB18_39
	b	.LBB18_47
.LBB18_43:
	add.w	r9, r9, #3
	cmp	r5, #45
	bne.w	.LBB18_20
.LBB18_44:
	movs	r6, #10
	ldr	r4, [sp, #4]
	b	.LBB18_16
.LBB18_45:
	movs	r6, #11
	ldr	r4, [sp, #4]
	b	.LBB18_16
.LBB18_46:
	str.w	r9, [sp]
.LBB18_47:
	cmp	r5, #0
	it	ne
	movne.w	r10, #0
	bne	.LBB18_50
	ldrd	r9, r4, [sp]
	cmp	r9, r2
	blo.w	.LBB18_22
	b	.LBB18_36
.LBB18_49:
	ldr	r4, [sp, #4]
	b	.LBB18_16
.LBB18_50:
	movs	r6, #16
	ldr	r4, [sp, #4]
	b	.LBB18_16
.Lfunc_end18:
	.size	serde_json_core::de::from_str::hba2caa47f21d3896, .Lfunc_end18-serde_json_core::de::from_str::hba2caa47f21d3896
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN6minimq11mqtt_client42MqttClient$LT$TcpStack$C$Clock$C$_$C$_$GT$29handle_connection_acknowledge17h72dc10860a87dbe3E","ax",%progbits
	.p2align	2
	.type	minimq::mqtt_client::MqttClient<TcpStack,Clock,_,_>::handle_connection_acknowledge::h72dc10860a87dbe3,%function
	.code	16
	.thumb_func
minimq::mqtt_client::MqttClient<TcpStack,Clock,_,_>::handle_connection_acknowledge::h72dc10860a87dbe3:
.Lfunc_begin19:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#476
	sub	sp, #476
	mov	r8, r0
	ldrb.w	r0, [r0, #1776]
	cmp	r0, #3
	bne	.LBB19_3
	ldrb.w	r2, [r1, #165]
	cbz	r2, .LBB19_5
	mov.w	r11, #5
	b	.LBB19_4
.LBB19_3:
	mov.w	r11, #6
	movs	r2, #2
.LBB19_4:
	mov	r0, r11
	mov	r1, r2
	add	sp, #476
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB19_5:
	ldrb.w	r0, [r1, #164]
	cbz	r0, .LBB19_7
	mov.w	r11, #9
	b	.LBB19_9
.LBB19_7:
	ldrb.w	r0, [r8, #1255]
	mov.w	r11, #7
	movs	r2, #1
	movw	r3, #59000
	cmp	r0, #0
	mov.w	r0, #0
	it	eq
	moveq.w	r11, #9
	strh.w	r2, [r8, #1236]
	str.w	r2, [r8, #536]
	ldr.w	r2, [r8, #636]
	strb.w	r0, [r8, #1255]
	cmp	r2, #0
	str.w	r3, [r8, #540]
	str.w	r0, [r8, #560]
	it	ne
	strne.w	r0, [r8, #636]
	ldr.w	r0, [r8, #1224]
	cmp	r0, #0
	itt	ne
	movne	r0, #0
	strne.w	r0, [r8, #1224]
	ldr.w	r0, [r8, #1228]
	cbz	r0, .LBB19_9
	movs	r0, #0
	str.w	r0, [r8, #1228]
.LBB19_9:
	add	r6, sp, #32
	movs	r2, #164
	mov	r0, r6
	movs	r5, #0
	strb.w	r5, [r8, #1776]
	bl	__aeabi_memcpy4
	ldr	r3, [sp, #192]
	str	r5, [sp, #196]
	cmp	r3, #0
	beq.w	.LBB19_40
	sub.w	r0, r7, #233
	add.w	r1, sp, #202
	adds	r0, #1
	str	r0, [sp, #24]
	adds	r0, r1, #1
	mov.w	r10, #0
	add	r5, sp, #408
	str.w	r11, [sp, #8]
	str	r0, [sp, #20]
	add.w	r0, r8, #568
	str	r0, [sp, #16]
	str	r3, [sp, #28]
	b	.LBB19_12
.LBB19_11:
	cmp	r10, r3
	beq.w	.LBB19_38
.LBB19_12:
	add.w	r0, r10, r10, lsl #2
	mov	r9, r10
	add.w	r10, r10, #1
	add.w	r2, r6, r0, lsl #2
	ldrb.w	r1, [r6, r0, lsl #2]
	ldrh	r0, [r2, #2]
	subs	r1, #7
	ldr.w	r11, [r2, #4]
	ldr	r4, [r2, #8]
	cmp	r1, #20
	str.w	r10, [sp, #196]
	bhi	.LBB19_11
.LCPI19_0:
	tbh	[pc, r1, lsl #1]
.LJTI19_0:
	.short	(.LBB19_17-(.LCPI19_0+4))/2
	.short	(.LBB19_21-(.LCPI19_0+4))/2
	.short	(.LBB19_16-(.LCPI19_0+4))/2
	.short	(.LBB19_16-(.LCPI19_0+4))/2
	.short	(.LBB19_16-(.LCPI19_0+4))/2
	.short	(.LBB19_16-(.LCPI19_0+4))/2
	.short	(.LBB19_16-(.LCPI19_0+4))/2
	.short	(.LBB19_16-(.LCPI19_0+4))/2
	.short	(.LBB19_16-(.LCPI19_0+4))/2
	.short	(.LBB19_16-(.LCPI19_0+4))/2
	.short	(.LBB19_16-(.LCPI19_0+4))/2
	.short	(.LBB19_16-(.LCPI19_0+4))/2
	.short	(.LBB19_16-(.LCPI19_0+4))/2
	.short	(.LBB19_16-(.LCPI19_0+4))/2
	.short	(.LBB19_16-(.LCPI19_0+4))/2
	.short	(.LBB19_16-(.LCPI19_0+4))/2
	.short	(.LBB19_15-(.LCPI19_0+4))/2
	.short	(.LBB19_16-(.LCPI19_0+4))/2
	.short	(.LBB19_16-(.LCPI19_0+4))/2
	.short	(.LBB19_16-(.LCPI19_0+4))/2
	.short	(.LBB19_39-(.LCPI19_0+4))/2
	.p2align	1
.LBB19_15:
	movs	r0, #1
	strd	r0, r11, [r8, #560]
	b	.LBB19_11
.LBB19_16:
	b	.LBB19_11
.LBB19_17:
	movs	r1, #68
	mov	r0, r5
	bl	__aeabi_memclr4
	cmp	r4, #64
	bhi.w	.LBB19_67
	cmp	r4, #0
	beq.w	.LBB19_37
	subs	r0, r4, #1
	cmp	r0, #3
	bhs	.LBB19_22
	movs	r2, #0
	b	.LBB19_33
.LBB19_21:
	mov.w	r1, #1000
	muls	r0, r1, r0
	movs	r1, #1
	strd	r1, r0, [r8, #536]
	b	.LBB19_11
.LBB19_22:
	subs	r0, r4, #4
	movs	r1, #1
	cmp	r0, #12
	str	r4, [sp, #12]
	add.w	r12, r1, r0, lsr #2
	bhs	.LBB19_24
	movs	r2, #0
	ands	r1, r12, #3
	bne	.LBB19_27
	b	.LBB19_33
.LBB19_24:
	bic	r1, r12, #3
	movs	r2, #0
.LBB19_25:
	adds	r3, r5, #4
	ldrb	r0, [r11], #16
	ldrb	r4, [r11, #-15]
	subs	r1, #4
	ldrb	r6, [r11, #-14]
	ldrb	r5, [r11, #-13]
	strb	r0, [r3, r2]
	ldr	r0, [sp, #408]
	add.w	r0, r0, #1
	str	r0, [sp, #408]
	strb	r4, [r3, r0]
	ldr	r0, [sp, #408]
	add.w	r0, r0, #1
	str	r0, [sp, #408]
	strb	r6, [r3, r0]
	ldr	r0, [sp, #408]
	add.w	r0, r0, #1
	str	r0, [sp, #408]
	strb	r5, [r3, r0]
	add	r5, sp, #408
	ldr	r0, [sp, #408]
	add.w	r0, r0, #1
	str	r0, [sp, #408]
	ldrb	r2, [r11, #-12]
	strb	r2, [r3, r0]
	ldr	r0, [sp, #408]
	add.w	r0, r0, #1
	str	r0, [sp, #408]
	ldrb	r2, [r11, #-11]
	strb	r2, [r3, r0]
	ldr	r0, [sp, #408]
	add.w	r0, r0, #1
	str	r0, [sp, #408]
	ldrb	r2, [r11, #-10]
	strb	r2, [r3, r0]
	ldr	r0, [sp, #408]
	add.w	r0, r0, #1
	str	r0, [sp, #408]
	ldrb	r2, [r11, #-9]
	strb	r2, [r3, r0]
	ldr	r0, [sp, #408]
	add.w	r0, r0, #1
	str	r0, [sp, #408]
	ldrb	r2, [r11, #-8]
	strb	r2, [r3, r0]
	ldr	r0, [sp, #408]
	add.w	r0, r0, #1
	str	r0, [sp, #408]
	ldrb	r2, [r11, #-7]
	strb	r2, [r3, r0]
	ldr	r0, [sp, #408]
	add.w	r0, r0, #1
	str	r0, [sp, #408]
	ldrb	r2, [r11, #-6]
	strb	r2, [r3, r0]
	ldr	r0, [sp, #408]
	add.w	r0, r0, #1
	str	r0, [sp, #408]
	ldrb	r2, [r11, #-5]
	strb	r2, [r3, r0]
	ldr	r0, [sp, #408]
	add.w	r0, r0, #1
	str	r0, [sp, #408]
	ldrb	r2, [r11, #-4]
	strb	r2, [r3, r0]
	ldr	r0, [sp, #408]
	add.w	r0, r0, #1
	str	r0, [sp, #408]
	ldrb	r2, [r11, #-3]
	strb	r2, [r3, r0]
	ldr	r0, [sp, #408]
	add.w	r0, r0, #1
	str	r0, [sp, #408]
	ldrb	r2, [r11, #-2]
	strb	r2, [r3, r0]
	ldr	r0, [sp, #408]
	add.w	r0, r0, #1
	str	r0, [sp, #408]
	ldrb	r2, [r11, #-1]
	strb	r2, [r3, r0]
	ldr	r0, [sp, #408]
	add.w	r2, r0, #1
	str	r2, [sp, #408]
	bne	.LBB19_25
	add	r6, sp, #32
	ldr	r4, [sp, #12]
	ands	r1, r12, #3
	beq	.LBB19_33
.LBB19_27:
	adds	r0, r5, #4
	ldrb.w	r3, [r11]
	mov	lr, r6
	ldrb.w	r6, [r11, #1]
	ldrb.w	r5, [r11, #2]
	cmp	r1, #1
	ldrb.w	r4, [r11, #3]
	strb	r3, [r0, r2]
	ldr	r2, [sp, #408]
	add.w	r2, r2, #1
	str	r2, [sp, #408]
	strb	r6, [r0, r2]
	ldr	r2, [sp, #408]
	add.w	r2, r2, #1
	str	r2, [sp, #408]
	strb	r5, [r0, r2]
	ldr	r2, [sp, #408]
	add.w	r2, r2, #1
	str	r2, [sp, #408]
	strb	r4, [r0, r2]
	ldr	r2, [sp, #408]
	add.w	r2, r2, #1
	str	r2, [sp, #408]
	bne	.LBB19_29
	add.w	r11, r11, #4
	b	.LBB19_32
.LBB19_29:
	ldrb.w	r3, [r11, #4]
	cmp	r1, #2
	ldrb.w	r6, [r11, #5]
	ldrb.w	r5, [r11, #6]
	ldrb.w	r4, [r11, #7]
	strb	r3, [r0, r2]
	ldr	r2, [sp, #408]
	add.w	r2, r2, #1
	str	r2, [sp, #408]
	strb	r6, [r0, r2]
	ldr	r2, [sp, #408]
	add.w	r2, r2, #1
	str	r2, [sp, #408]
	strb	r5, [r0, r2]
	ldr	r2, [sp, #408]
	add.w	r2, r2, #1
	str	r2, [sp, #408]
	strb	r4, [r0, r2]
	ldr	r2, [sp, #408]
	add.w	r2, r2, #1
	str	r2, [sp, #408]
	bne	.LBB19_31
	add.w	r11, r11, #8
	b	.LBB19_32
.LBB19_31:
	ldrb.w	r1, [r11, #8]
	ldrb.w	r3, [r11, #9]
	ldrb.w	r6, [r11, #10]
	ldrb.w	r5, [r11, #11]
	strb	r1, [r0, r2]
	ldr	r1, [sp, #408]
	add.w	r11, r11, #12
	adds	r1, #1
	str	r1, [sp, #408]
	strb	r3, [r0, r1]
	ldr	r1, [sp, #408]
	adds	r1, #1
	str	r1, [sp, #408]
	strb	r6, [r0, r1]
	ldr	r1, [sp, #408]
	adds	r1, #1
	str	r1, [sp, #408]
	strb	r5, [r0, r1]
	ldr	r0, [sp, #408]
	adds	r2, r0, #1
	str	r2, [sp, #408]
.LBB19_32:
	mov	r6, lr
	add	r5, sp, #408
	ldr	r4, [sp, #12]
.LBB19_33:
	ands	r0, r4, #3
	beq	.LBB19_37
	adds	r1, r5, r2
	ldrb.w	r2, [r11]
	cmp	r0, #1
	strb	r2, [r1, #4]
	ldr	r1, [sp, #408]
	add.w	r1, r1, #1
	str	r1, [sp, #408]
	beq	.LBB19_37
	add	r1, r5
	ldrb.w	r2, [r11, #1]
	cmp	r0, #2
	strb	r2, [r1, #4]
	ldr	r1, [sp, #408]
	add.w	r0, r1, #1
	str	r0, [sp, #408]
	beq	.LBB19_37
	add	r0, r5
	ldrb.w	r1, [r11, #2]
	strb	r1, [r0, #4]
	ldr	r0, [sp, #408]
	adds	r0, #1
	str	r0, [sp, #408]
.LBB19_37:
	add.w	r11, sp, #340
	movs	r2, #68
	mov	r0, r11
	mov	r1, r5
	bl	__aeabi_memcpy4
	ldr	r4, [sp, #24]
	movs	r2, #68
	mov	r0, r4
	mov	r1, r11
	bl	__aeabi_memcpy
	ldr	r5, [sp, #20]
	movs	r2, #68
	mov	r0, r5
	mov	r1, r4
	bl	__aeabi_memcpy
	movs	r2, #68
	ldr	r0, [sp, #16]
	mov	r1, r5
	add	r5, sp, #408
	bl	__aeabi_memcpy
	ldr	r3, [sp, #28]
	b	.LBB19_11
.LBB19_38:
	mov	r10, r3
.LBB19_39:
	cmp	r9, r3
	ldr.w	r11, [sp, #8]
	mov.w	r5, #0
	bhs.w	.LBB19_70
.LBB19_40:
	ldr.w	r0, [r8, #532]
	blx	r0
	ldr.w	r2, [r8, #536]
	movs	r1, #1
	cmp	r2, #1
	strb.w	r1, [r8, #1255]
	str.w	r5, [r8, #544]
	bne	.LBB19_46
	mov	r4, r0
	add	r0, sp, #32
	movs	r1, #1
	mov.w	r2, #1000
	movs	r3, #1
	ldr.w	r6, [r8, #540]
	mov.w	r5, #1000
	str	r5, [sp]
	bl	embedded_time::fraction::Fraction::checked_div::hd5f447229dd00813
	ldr	r0, [sp, #32]
	cmp	r0, #0
	beq.w	.LBB19_69
	lsrs	r0, r6, #1
	ldr	r1, [sp, #36]
	umull	r0, r1, r0, r1
	cmp	r1, #0
	bne	.LBB19_69
	ldr	r1, [sp, #40]
	cmp	r1, #0
	beq	.LBB19_69
	udiv	r0, r0, r1
	cmp.w	r0, #-1
	ble	.LBB19_69
	movs	r1, #1
	str.w	r1, [r8, #552]
	add	r0, r4
	str.w	r0, [r8, #556]
.LBB19_46:
	ldr.w	r0, [r8, #1228]
	add.w	r1, r8, #1232
	add.w	r9, r1, r0, lsl #1
	b	.LBB19_49
.LBB19_47:
	movs	r0, #0
	movs	r1, #0
	cmp	r0, #0
	beq	.LBB19_64
.LBB19_48:
	ldr	r2, [r1], #4
	mov	r0, r8
	bl	minimq::network_manager::InterfaceHolder<TcpStack,_>::write::h19b74f0c592580bd
	uxtb	r2, r0
	cmp	r2, #9
	mov	r2, r1
	mov	r1, r6
	bne	.LBB19_66
.LBB19_49:
	cmp	r1, r9
	beq	.LBB19_65
	ldr.w	r0, [r8, #12]
	cmp	r0, #1
	beq	.LBB19_65
	ldr.w	r0, [r8, #1224]
	adds	r6, r1, #2
	add.w	r2, r0, r0, lsl #6
	ldrh	r0, [r1]
	rsbs	r1, r2, #0
	lsls	r2, r1, #3
	movs	r1, #0
.LBB19_52:
	adds	r4, r2, r1
	beq	.LBB19_47
	add.w	r3, r8, r1
	ldrh.w	r5, [r3, #704]
	cmp	r5, r0
	beq	.LBB19_61
	cmn.w	r4, #520
	beq	.LBB19_47
	ldrh.w	r5, [r3, #1224]
	cmp	r5, r0
	beq	.LBB19_62
	cmn.w	r4, #1040
	beq	.LBB19_47
	ldrh.w	r5, [r3, #1744]
	cmp	r5, r0
	beq	.LBB19_63
	cmn.w	r4, #1560
	beq	.LBB19_47
	ldrh.w	r3, [r3, #2264]
	add.w	r1, r1, #2080
	cmp	r3, r0
	bne	.LBB19_52
	add.w	r0, r8, r1
	adds	r0, #184
	adds	r1, r0, #4
	cmp	r0, #0
	bne	.LBB19_48
	b	.LBB19_64
.LBB19_61:
	add.w	r0, r3, #704
	adds	r1, r0, #4
	cmp	r0, #0
	bne	.LBB19_48
	b	.LBB19_64
.LBB19_62:
	add.w	r0, r3, #1224
	adds	r1, r0, #4
	cmp	r0, #0
	bne	.LBB19_48
	b	.LBB19_64
.LBB19_63:
	add.w	r0, r3, #1744
	adds	r1, r0, #4
	cmp	r0, #0
	bne	.LBB19_48
.LBB19_64:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.113
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.113
	movs	r1, #43
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB19_65:
	movs	r2, #0
	b	.LBB19_4
.LBB19_66:
	mov	r11, r0
	b	.LBB19_4
.LBB19_67:
	ldr	r1, [sp, #28]
	cmp	r9, r1
	bhs	.LBB19_71
	mov.w	r11, #4
	b	.LBB19_4
.LBB19_69:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.116
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.118
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.116
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.118
	movs	r1, #10
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB19_70:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.221
	mov	r0, r10
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.221
	mov	r1, r3
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB19_71:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.221
	mov	r0, r10
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.221
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.Lfunc_end19:
	.size	minimq::mqtt_client::MqttClient<TcpStack,Clock,_,_>::handle_connection_acknowledge::h72dc10860a87dbe3, .Lfunc_end19-minimq::mqtt_client::MqttClient<TcpStack,Clock,_,_>::handle_connection_acknowledge::h72dc10860a87dbe3
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN97_$LT$embedded_time..instant..Instant$LT$Clock$GT$$u20$as$u20$core..ops..arith..Add$LT$Dur$GT$$GT$3add17hf35db1ad5ab0791aE","ax",%progbits
	.p2align	1
	.type	<embedded_time::instant::Instant<Clock> as core::ops::arith::Add<Dur>>::add::hf35db1ad5ab0791a,%function
	.code	16
	.thumb_func
<embedded_time::instant::Instant<Clock> as core::ops::arith::Add<Dur>>::add::hf35db1ad5ab0791a:
.Lfunc_begin20:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r11}
	str	r11, [sp, #-4]!
	.cfi_offset r11, -24
	.pad	#16
	sub	sp, #16
	mov	r5, r1
	mov	r6, r0
	add	r0, sp, #4
	movs	r1, #1
	movs	r2, #1
	movs	r3, #1
	mov.w	r4, #1000
	str	r4, [sp]
	bl	embedded_time::fraction::Fraction::checked_div::hd5f447229dd00813
	ldr	r0, [sp, #4]
	cbz	r0, .LBB20_4
	ldr	r0, [sp, #8]
	umull	r0, r1, r5, r0
	cbnz	r1, .LBB20_4
	ldr	r1, [sp, #12]
	cbz	r1, .LBB20_4
	udiv	r0, r0, r1
	cmp	r0, #0
	itttt	pl
	addpl	r0, r6
	addpl	sp, #16
	ldrpl	r11, [sp], #4
	poppl	{r4, r5, r6, r7, pc}
.LBB20_4:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.116
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.118
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.116
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.118
	movs	r1, #10
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.Lfunc_end20:
	.size	<embedded_time::instant::Instant<Clock> as core::ops::arith::Add<Dur>>::add::hf35db1ad5ab0791a, .Lfunc_end20-<embedded_time::instant::Instant<Clock> as core::ops::arith::Add<Dur>>::add::hf35db1ad5ab0791a
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp5iface9interface14InterfaceInner11dispatch_ip17h40aab87b8d567aeaE,"ax",%progbits
	.p2align	2
	.type	smoltcp::iface::interface::InterfaceInner::dispatch_ip::h40aab87b8d567aea,%function
	.code	16
	.thumb_func
smoltcp::iface::interface::InterfaceInner::dispatch_ip::h40aab87b8d567aea:
.Lfunc_begin21:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#476
	sub	sp, #476
	add	r5, sp, #200
	mov	r10, r1
	mov	r11, r0
	mov	r0, r5
	mov	r1, r2
	mov	r4, r2
	bl	smoltcp::iface::interface::IpPacket::ip_repr::h34c58f58187ffea8
	ldrd	r2, r3, [r11, #52]
	add	r0, sp, #320
	mov	r1, r5
	bl	smoltcp::wire::ip::Repr::lower::h8146fabc9d801364
	ldrb.w	r0, [sp, #320]
	cbz	r0, .LBB21_3
	ldrb.w	r4, [sp, #321]
.LBB21_2:
	mov	r0, r4
	add	sp, #476
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB21_3:
	add.w	r0, r11, #69
	str	r0, [sp, #84]
	ldrh.w	r0, [sp, #326]
	ldrb.w	r12, [sp, #346]
	strh.w	r0, [sp, #134]
	ldr	r0, [sp, #328]
	str	r0, [sp, #108]
	ldrb.w	r0, [sp, #345]
	ldrb.w	r1, [sp, #340]
	ldrb.w	r8, [sp, #347]
	str	r1, [sp, #104]
	ldrh.w	r1, [sp, #343]
	ldrb.w	r2, [sp, #324]
	add.w	r9, sp, #52
	orr.w	r6, r1, r0, lsl #16
	ldr	r0, [sp, #348]
	str	r0, [sp, #120]
	ldr	r0, [sp, #352]
	str	r0, [sp, #124]
	ldr.w	r0, [sp, #355]
	str.w	r0, [sp, #127]
	ldrb.w	r0, [sp, #363]
	strb.w	r0, [sp, #116]
	ldr.w	r0, [sp, #359]
	str	r0, [sp, #112]
	ldrb.w	r0, [sp, #364]
	ldrb.w	r3, [sp, #341]
	str	r0, [sp, #76]
	ldrb.w	r0, [sp, #365]
	str	r3, [sp, #100]
	ldrb.w	lr, [sp, #325]
	str	r0, [sp, #68]
	ldrb.w	r3, [sp, #342]
	ldrb.w	r0, [sp, #366]
	str	r2, [sp, #88]
	str	r0, [sp, #72]
	ldrb.w	r0, [sp, #367]
	ldrd	r5, r1, [sp, #332]
	str	r6, [sp, #64]
	stm.w	r9, {r4, r8, r12}
	str	r3, [sp, #80]
	strd	r0, lr, [sp, #44]
	str	r1, [sp, #96]
	cbz	r2, .LBB21_6
	cmp	r2, #1
	bne	.LBB21_12
	str	r5, [sp, #136]
	movs	r2, #1
	str.w	r1, [sp, #145]
	mov.w	r9, #1
	strb.w	r2, [sp, #144]
	b	.LBB21_7
.LBB21_6:
	ldrh.w	r0, [sp, #134]
	mov	r2, lr
	strh.w	r0, [sp, #136]
	ldr	r0, [sp, #108]
	str.w	r0, [sp, #138]
	lsrs	r0, r6, #16
	strb.w	r0, [sp, #147]
	ldr	r0, [sp, #120]
	str.w	r0, [sp, #150]
	ldr	r0, [sp, #124]
	mov	r9, r3
	strb.w	r3, [sp, #144]
	strh.w	r6, [sp, #145]
	strb.w	r12, [sp, #148]
	strb.w	r8, [sp, #149]
	str.w	r0, [sp, #154]
	ldr.w	r0, [sp, #127]
	str.w	r0, [sp, #157]
.LBB21_7:
	cmp.w	r9, #1
	ldr.w	r0, [sp, #145]
	it	eq
	addseq.w	r1, r0, #1
	beq	.LBB21_13
	add	r1, sp, #144
	str	r2, [sp, #40]
	cmp.w	r9, #0
	add.w	r1, r1, #1
	add	r2, sp, #200
	beq	.LBB21_14
	cmp.w	r9, #1
	bne	.LBB21_15
	and	r0, r0, #240
	str	r5, [sp, #92]
	cmp	r0, #224
	bne	.LBB21_17
	ldrb.w	r1, [sp, #148]
	ldrb.w	r0, [sp, #146]
	ldrb.w	r2, [sp, #147]
	and	r0, r0, #127
	orr.w	lr, r2, r1, lsl #8
	movs	r1, #1
	movt	r1, #94
	b	.LBB21_34
.LBB21_12:
	ldr	r0, [sp, #104]
	str	r1, [sp, #320]
	strb.w	r0, [sp, #324]
	ldr	r0, [sp, #100]
	strb.w	r0, [sp, #325]
	ldr.w	r2, [sp, #127]
	ldr.w	r0, [sp, #322]
	str	r0, [sp, #24]
	orr.w	r0, r3, r6, lsl #8
	str	r0, [sp, #28]
	add	r0, sp, #144
	str.w	r2, [sp, #327]
	ldr	r2, [sp, #124]
	strh.w	r1, [sp, #140]
	ldr	r1, [sp, #120]
	adds	r0, #1
	strd	r1, r2, [sp, #320]
	ldr	r2, [sp, #112]
	str.w	r2, [sp, #331]
	ldrb.w	r2, [sp, #116]
	str	r0, [sp, #36]
	ldr	r0, [sp, #324]
	strb.w	r2, [sp, #335]
	str.w	r0, [sp, #149]
	ldr	r0, [sp, #328]
	str.w	r0, [sp, #153]
	ldr	r0, [sp, #332]
	str.w	r1, [sp, #145]
	movs	r1, #2
	str.w	r0, [sp, #157]
	movs	r0, #2
	str	r0, [sp, #40]
	ldrb.w	r0, [sp, #145]
	str	r5, [sp, #136]
	add	r2, sp, #200
	strb.w	r1, [sp, #144]
	mov.w	r9, #2
	strd	r12, r8, [sp, #16]
	cmp	r0, #255
	str	r5, [sp, #92]
	beq	.LBB21_16
	b	.LBB21_19
.LBB21_13:
	str	r5, [sp, #92]
	movw	lr, #65535
	mov.w	r8, #-1
	b	.LBB21_35
.LBB21_14:
	ldr	r0, [sp, #100]
	str	r0, [sp, #20]
	ldr	r0, [sp, #104]
	str	r1, [sp, #36]
	str	r0, [sp, #16]
	ldr	r0, [sp, #96]
	str	r0, [sp, #28]
	str	r5, [sp, #92]
	b	.LBB21_18
.LBB21_15:
	str	r1, [sp, #36]
	ldr	r1, [sp, #100]
	uxtb	r0, r0
	str	r1, [sp, #20]
	ldr	r1, [sp, #104]
	str	r1, [sp, #16]
	ldr	r1, [sp, #96]
	strd	r5, r1, [sp, #24]
	cmp	r0, #255
	str	r5, [sp, #92]
	bne	.LBB21_19
.LBB21_16:
	ldrb.w	r0, [sp, #157]
	ldrb.w	r2, [sp, #160]
	ldrb.w	r1, [sp, #158]
	ldrb.w	r3, [sp, #159]
	lsls	r1, r1, #24
	orr.w	r0, r1, r0, lsl #16
	movw	r1, #13107
	orr.w	lr, r3, r2, lsl #8
	orr.w	r8, r0, r1
	b	.LBB21_35
.LBB21_17:
	ldr	r0, [sp, #100]
	add	r2, sp, #200
	str	r0, [sp, #20]
	ldr	r0, [sp, #104]
	str	r1, [sp, #36]
	str	r0, [sp, #16]
	ldr	r0, [sp, #96]
	str	r0, [sp, #28]
.LBB21_18:
	str	r5, [sp, #24]
.LBB21_19:
	ldr.w	r1, [r11, #56]
	add.w	r0, r11, #68
	str.w	r10, [sp, #32]
	add	r4, sp, #144
	add.w	r1, r1, r1, lsl #3
	str	r0, [sp, #12]
	ldrd	r6, r5, [r11]
	ldr.w	r0, [r11, #52]
	lsl.w	r10, r1, #1
	str	r2, [sp, #8]
.LBB21_20:
	cmp.w	r10, #0
	beq	.LBB21_23
	mov	r1, r4
	add.w	r8, r0, #18
	bl	smoltcp::wire::ip::Cidr::contains_addr::h768e43cd1d234828
	cmp	r0, #0
	sub.w	r10, r10, #18
	mov	r0, r8
	beq	.LBB21_20
	ldr	r1, [sp, #36]
	ldr	r0, [r1, #12]
	str	r0, [sp, #212]
	ldr	r0, [r1, #8]
	str	r0, [sp, #208]
	ldr	r0, [r1, #4]
	str	r0, [sp, #204]
	ldr	r0, [r1]
	b	.LBB21_25
.LBB21_23:
	add.w	r1, r11, #60
	add	r0, sp, #320
	add	r2, sp, #144
	str	r6, [sp]
	str	r5, [sp, #4]
	bl	smoltcp::iface::route::Routes::lookup::h2f9b0a604461411e
	ldrb.w	r9, [sp, #320]
	cmp.w	r9, #3
	beq.w	.LBB21_71
	ldr.w	r0, [sp, #333]
	str	r0, [sp, #212]
	ldr.w	r0, [sp, #329]
	str	r0, [sp, #208]
	ldr.w	r0, [sp, #325]
	str	r0, [sp, #204]
	ldr.w	r0, [sp, #321]
.LBB21_25:
	str	r0, [sp, #200]
	ldr.w	r10, [sp, #32]
	ldrd	r0, r1, [sp, #200]
	str.w	r1, [sp, #169]
	ldr.w	r1, [r11, #16]
	ldr	r2, [sp, #212]
	cmp	r1, #0
	str.w	r2, [sp, #177]
	ldr	r2, [sp, #208]
	str.w	r2, [sp, #173]
	str.w	r0, [sp, #165]
	strb.w	r9, [sp, #164]
	beq.w	.LBB21_110
	add	r5, sp, #164
	add.w	r0, r11, #8
	ldrd	r2, r3, [r11]
	mov	r1, r5
	bl	smoltcp::iface::neighbor::Cache::lookup::hb727a98f0eba979d
	mov	r4, r0
	uxtb	r0, r0
	cmp	r0, #0
	beq	.LBB21_33
	cmp	r0, #2
	ldr	r0, [sp, #40]
	beq.w	.LBB21_2
	cmp	r0, r9
	bne.w	.LBB21_69
	cmp	r0, #1
	ldr.w	r1, [sp, #165]
	beq.w	.LBB21_66
	cmp	r0, #2
	bne.w	.LBB21_69
	adds	r2, r5, #5
	ldr	r3, [sp, #12]
	str	r1, [sp, #184]
	ldr	r0, [r2]
	str	r0, [sp, #188]
	ldr	r1, [r2, #4]
	ldr	r0, [r3]
	str	r1, [sp, #192]
	lsls	r1, r0, #31
	ldr	r1, [r2, #8]
	str	r1, [sp, #196]
	beq.w	.LBB21_125
	ldrb	r1, [r3, #6]
	movs	r4, #1
	ldrh	r2, [r3, #4]
	strb.w	r4, [sp, #225]
	orr.w	r1, r2, r1, lsl #16
	ldr	r2, [sp, #196]
	str.w	r2, [sp, #221]
	ldr	r2, [sp, #192]
	str.w	r2, [sp, #217]
	ldr	r2, [sp, #188]
	str.w	r2, [sp, #213]
	ldr	r2, [sp, #184]
	str.w	r2, [sp, #209]
	movs	r2, #2
	strb.w	r2, [sp, #208]
	movs	r2, #6
	bfi	r0, r2, #0, #8
	str.w	r0, [sp, #226]
	lsrs	r0, r1, #16
	strh.w	r1, [sp, #230]
	strb.w	r0, [sp, #232]
	add	r0, sp, #304
	add	r1, sp, #184
	strb.w	r2, [sp, #200]
	bl	smoltcp::wire::ipv6::Address::solicited_node::haf06f2ed20c3c012
	ldr	r0, [sp, #8]
	bl	smoltcp::wire::icmpv6::Repr::buffer_len::h7ea189855c9c3b5a
	str	r0, [sp, #328]
	ldr	r0, [sp, #136]
	str	r0, [sp, #332]
	ldrh.w	r0, [sp, #140]
	strh.w	r0, [sp, #336]
	ldr	r0, [sp, #24]
	str.w	r0, [sp, #338]
	ldr	r0, [sp, #28]
	str.w	r0, [sp, #342]
	ldr	r0, [sp, #16]
	strb.w	r0, [sp, #346]
	ldr	r0, [sp, #20]
	strb.w	r0, [sp, #347]
	movs	r2, #104
	ldrd	r0, r1, [sp, #304]
	str	r0, [sp, #348]
	ldr	r0, [sp, #312]
	str	r1, [sp, #352]
	ldr	r1, [sp, #316]
	strd	r0, r1, [sp, #356]
	movs	r0, #7
	str	r4, [sp, #320]
	strb.w	r0, [sp, #364]
	movs	r0, #255
	add	r4, sp, #320
	strb.w	r0, [sp, #366]
	add.w	r0, r4, #48
	add	r1, sp, #200
	bl	__aeabi_memcpy8
	mov	r0, r11
	mov	r1, r10
	mov	r2, r4
	bl	smoltcp::iface::interface::InterfaceInner::dispatch_ip::h40aab87b8d567aea
	uxtb	r4, r0
	cmp	r4, #11
	bne.w	.LBB21_2
	b	.LBB21_69
.LBB21_33:
	bic	r0, r1, #-16777216
	lsrs	r1, r4, #8
	lsr.w	lr, r0, #8
.LBB21_34:
	orr.w	r8, r1, r0, lsl #24
.LBB21_35:
	ldrd	r1, r0, [r11, #32]
	cmp	r0, #0
	ldr.w	r2, [r11, #40]
	it	ne
	movne	r0, #1
	ldrb.w	r3, [r11, #45]
	str	r1, [sp, #200]
	ldrb.w	r12, [r11, #44]
	ldr.w	r9, [sp, #88]
	ldrb.w	r5, [r11, #46]
	ldrb.w	r6, [r11, #48]
	ldrb.w	r4, [r11, #47]
	orr.w	r1, r12, r3, lsl #8
	str	r0, [sp, #204]
	cmp.w	r9, #1
	orr.w	r0, r1, r5, lsl #16
	str	r2, [sp, #208]
	strb.w	r6, [sp, #216]
	orr.w	r0, r0, r4, lsl #24
	str	r0, [sp, #212]
	beq	.LBB21_38
	cmp.w	r9, #2
	bne.w	.LBB21_111
	movs	r0, #40
	b	.LBB21_39
.LBB21_38:
	movs	r0, #20
.LBB21_39:
	ldr	r1, [sp, #108]
	add	r0, r1
	add.w	r1, r0, #14
	cmp.w	r1, #1536
	bhi.w	.LBB21_108
	mov.w	r0, #6208
	ldr.w	r0, [r10, r0]
	cmp	r0, #4
	bhs.w	.LBB21_98
	add.w	r2, r0, r0, lsl #1
	ldrb.w	r6, [r11, #68]
	lsls	r5, r0, #4
	cmp.w	r1, #1536
	add.w	r3, r10, r2, lsl #9
	mov	r4, r1
	add.w	r0, r10, r0, lsl #4
	add.w	r2, r3, #64
	str.w	r2, [r10, r5]
	it	hs
	movhs.w	r1, #1536
	cmp	r6, #0
	str	r4, [r0, #8]
	beq	.LBB21_56
	cmp	r1, #11
	bls.w	.LBB21_109
	ldr	r4, [sp, #84]
	cmp.w	r9, #2
	strh.w	lr, [r2, #4]
	ldrh	r0, [r4, #4]
	str.w	r8, [r2]
	ldr	r4, [r4]
	strh	r0, [r2, #10]
	str.w	r4, [r2, #6]
	ldr	r0, [sp, #120]
	ldr.w	r4, [sp, #127]
	str.w	r4, [sp, #171]
	ldr	r4, [sp, #124]
	strd	r0, r4, [sp, #164]
	ldr	r0, [sp, #112]
	str.w	r0, [sp, #175]
	ldrb.w	r0, [sp, #116]
	strb.w	r0, [sp, #179]
	beq	.LBB21_57
	cmp.w	r9, #1
	ldr.w	lr, [sp, #80]
	ldr	r5, [sp, #92]
	bne.w	.LBB21_95
	cmp	r1, #13
	bls.w	.LBB21_112
	subs	r1, #14
	mov.w	r0, #8
	strh.w	r0, [r3, #76]
	beq.w	.LBB21_99
	cmp	r1, #1
	mov.w	r0, #69
	strb	r0, [r2, #14]
	beq.w	.LBB21_102
	cmp	r1, #3
	mov.w	r0, #0
	strb	r0, [r2, #15]
	bls.w	.LBB21_113
	ldr	r0, [sp, #108]
	cmp	r1, #5
	add.w	r0, r0, #20
	rev	r0, r0
	lsr.w	r0, r0, #16
	strh.w	r0, [r3, #80]
	bls.w	.LBB21_114
	cmp	r1, #7
	mov.w	r0, #0
	strh	r0, [r2, #18]
	bls.w	.LBB21_115
	cmp	r1, #8
	mov.w	r0, #64
	strh.w	r0, [r3, #84]
	beq.w	.LBB21_105
	cmp	r1, #9
	strb.w	lr, [r2, #22]
	beq.w	.LBB21_107
	ldr	r4, [sp, #104]
	mov	r0, r4
.LCPI21_0:
	tbh	[pc, r4, lsl #1]
.LJTI21_1:
	.short	(.LBB21_89-(.LCPI21_0+4))/2
	.short	(.LBB21_89-(.LCPI21_0+4))/2
	.short	(.LBB21_89-(.LCPI21_0+4))/2
	.short	(.LBB21_55-(.LCPI21_0+4))/2
	.short	(.LBB21_82-(.LCPI21_0+4))/2
	.short	(.LBB21_83-(.LCPI21_0+4))/2
	.short	(.LBB21_84-(.LCPI21_0+4))/2
	.short	(.LBB21_85-(.LCPI21_0+4))/2
	.short	(.LBB21_86-(.LCPI21_0+4))/2
	.short	(.LBB21_87-(.LCPI21_0+4))/2
	.short	(.LBB21_88-(.LCPI21_0+4))/2
	.p2align	1
.LBB21_55:
	movs	r0, #6
	b	.LBB21_89
.LBB21_56:
	movs	r4, #8
	b	.LBB21_96
.LBB21_57:
	cmp	r1, #13
	ldr.w	lr, [sp, #80]
	bls.w	.LBB21_112
	subs	r1, #14
	ldr	r5, [sp, #64]
	ldrd	r12, r8, [sp, #56]
	movw	r0, #56710
	strh.w	r0, [r3, #76]
	beq.w	.LBB21_100
	cmp	r1, #1
	mov.w	r0, #96
	strb	r0, [r2, #14]
	beq.w	.LBB21_103
	cmp	r1, #3
	bls.w	.LBB21_116
	cmp	r1, #5
	mov.w	r0, #0
	strb	r0, [r2, #17]
	strh.w	r0, [r2, #15]
	bls.w	.LBB21_118
	ldr	r0, [sp, #108]
	cmp	r1, #7
	rev	r0, r0
	lsr.w	r0, r0, #16
	strh	r0, [r2, #18]
	bls.w	.LBB21_106
	ldr	r0, [sp, #72]
	strb	r0, [r2, #21]
	ldr	r4, [sp, #76]
	mov	r0, r4
.LCPI21_1:
	tbb	[pc, r4]
.LJTI21_0:
	.byte	(.LBB21_79-(.LCPI21_1+4))/2
	.byte	(.LBB21_79-(.LCPI21_1+4))/2
	.byte	(.LBB21_79-(.LCPI21_1+4))/2
	.byte	(.LBB21_65-(.LCPI21_1+4))/2
	.byte	(.LBB21_72-(.LCPI21_1+4))/2
	.byte	(.LBB21_73-(.LCPI21_1+4))/2
	.byte	(.LBB21_74-(.LCPI21_1+4))/2
	.byte	(.LBB21_75-(.LCPI21_1+4))/2
	.byte	(.LBB21_76-(.LCPI21_1+4))/2
	.byte	(.LBB21_77-(.LCPI21_1+4))/2
	.byte	(.LBB21_78-(.LCPI21_1+4))/2
	.p2align	1
.LBB21_65:
	movs	r0, #6
	b	.LBB21_79
.LBB21_66:
	ldrb.w	r0, [r11, #68]
	cmp	r0, #0
	beq.w	.LBB21_97
	ldrh.w	r2, [r11, #73]
	mov.w	r3, #6208
	ldr	r0, [sp, #136]
	strh.w	r2, [sp, #328]
	ldr.w	r2, [r11, #69]
	str	r2, [sp, #324]
	movs	r2, #0
	str.w	r0, [sp, #330]
	ldr.w	r0, [r10, r3]
	strh.w	r2, [sp, #320]
	mov.w	r2, #-1
	cmp	r0, #4
	str.w	r2, [sp, #334]
	strh.w	r2, [sp, #338]
	str	r1, [sp, #340]
	bhs.w	.LBB21_98
	add.w	r1, r0, r0, lsl #1
	lsls	r3, r0, #4
	add.w	r1, r10, r1, lsl #9
	add.w	r0, r10, r0, lsl #4
	add.w	r5, r1, #64
	str.w	r5, [r10, r3]
	movs	r3, #42
	str	r3, [r0, #8]
	ldr	r3, [sp, #84]
	str	r2, [r1, #64]
	ldrh	r0, [r3, #4]
	strh.w	r0, [r1, #74]
	ldr	r0, [r3]
	str.w	r0, [r1, #70]
	movw	r0, #65535
	strh.w	r0, [r1, #68]
	mov.w	r0, #1544
	strh.w	r0, [r1, #76]
	add.w	r0, r1, #78
	str	r0, [sp, #200]
	movs	r0, #28
	str	r0, [sp, #204]
	add	r0, sp, #320
	add	r1, sp, #200
	bl	smoltcp::wire::arp::Repr::emit::h3cd44cb979bfba56
	mov	r0, r10
	bl	stm32h7xx_hal::ethernet::eth::TDesRing<_>::release::h7bafb1196b8ee228
.LBB21_69:
	ldr.w	r0, [r11, #16]
	cmp	r0, #0
	beq.w	.LBB21_124
	movw	r2, #16960
	ldrd	r0, r1, [r11]
	movt	r2, #15
	adds	r0, r0, r2
	adc	r1, r1, #0
	strd	r0, r1, [r11, #8]
.LBB21_71:
	movs	r4, #2
	mov	r0, r4
	add	sp, #476
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB21_72:
	movs	r0, #17
	b	.LBB21_79
.LBB21_73:
	movs	r0, #43
	b	.LBB21_79
.LBB21_74:
	movs	r0, #44
	b	.LBB21_79
.LBB21_75:
	movs	r0, #58
	b	.LBB21_79
.LBB21_76:
	movs	r0, #59
	b	.LBB21_79
.LBB21_77:
	movs	r0, #60
	b	.LBB21_79
.LBB21_78:
	ldr	r0, [sp, #68]
.LBB21_79:
	cmp	r1, #23
	strb.w	r0, [r3, #84]
	bls.w	.LBB21_120
	ldr	r0, [sp, #92]
	str.w	r0, [r2, #22]
	ldr	r0, [sp, #96]
	str.w	r0, [r2, #26]
	ldr	r0, [sp, #104]
	strb	r0, [r2, #30]
	ldr	r0, [sp, #100]
	strb	r0, [r2, #31]
	lsrs	r0, r5, #16
	strb.w	r0, [r2, #35]
	cmp	r1, #39
	ldr	r0, [sp, #52]
	strb.w	lr, [r3, #96]
	strh.w	r5, [r2, #33]
	strb.w	r8, [r3, #100]
	strb.w	r12, [r2, #37]
	bls.w	.LBB21_121
	ldr	r6, [sp, #164]
	str.w	r6, [r2, #38]
	ldr	r3, [sp, #176]
	str.w	r3, [r2, #50]
	ldr	r3, [sp, #172]
	movs	r6, #40
	str.w	r3, [r2, #46]
	ldr	r3, [sp, #168]
	str.w	r3, [r2, #42]
	b	.LBB21_94
.LBB21_82:
	movs	r0, #17
	b	.LBB21_89
.LBB21_83:
	movs	r0, #43
	b	.LBB21_89
.LBB21_84:
	movs	r0, #44
	b	.LBB21_89
.LBB21_85:
	movs	r0, #58
	b	.LBB21_89
.LBB21_86:
	movs	r0, #59
	b	.LBB21_89
.LBB21_87:
	movs	r0, #60
	b	.LBB21_89
.LBB21_88:
	ldr	r0, [sp, #100]
.LBB21_89:
	cmp	r1, #15
	strb	r0, [r2, #23]
	bls.w	.LBB21_122
	cmp	r1, #19
	str.w	r5, [r2, #26]
	bls.w	.LBB21_123
	mov	r0, r3
	movs	r6, #0
	strh	r6, [r0, #88]!
	lsls.w	r6, r12, #31
	ldr	r6, [sp, #96]
	str.w	r6, [r2, #30]
	bne	.LBB21_93
	ldrh	r6, [r2, #14]
	ldrh.w	r5, [r3, #80]
	ldrh.w	r4, [r3, #82]
	rev	r6, r6
	lsrs	r6, r6, #16
	rev	r5, r5
	add.w	r6, r6, r5, lsr #16
	ldrh.w	r5, [r3, #84]
	rev	r4, r4
	add.w	r6, r6, r4, lsr #16
	ldrh.w	r4, [r3, #86]
	rev	r5, r5
	add.w	r6, r6, r5, lsr #16
	ldrh.w	r5, [r3, #88]
	rev	r4, r4
	add.w	r6, r6, r4, lsr #16
	ldrh.w	r4, [r3, #90]
	rev	r5, r5
	add.w	r6, r6, r5, lsr #16
	ldrh.w	r5, [r3, #92]
	rev	r4, r4
	add.w	r6, r6, r4, lsr #16
	ldrh.w	r4, [r3, #94]
	ldrh.w	r3, [r3, #96]
	rev	r5, r5
	add.w	r6, r6, r5, lsr #16
	rev	r5, r4
	add.w	r6, r6, r5, lsr #16
	rev	r3, r3
	add.w	r3, r6, r3, lsr #16
	lsrs	r6, r3, #16
	uxtah	r3, r6, r3
	add.w	r3, r3, r3, lsr #16
	mvns	r3, r3
	rev	r3, r3
	lsrs	r3, r3, #16
	strh	r3, [r0]
.LBB21_93:
	movs	r6, #20
	ldrd	r8, r5, [sp, #60]
	ldrd	r0, r12, [sp, #52]
.LBB21_94:
	ldr	r3, [sp, #48]
	strb.w	r3, [sp, #321]
	ldrh.w	r3, [sp, #134]
	add	r2, r6
	strh.w	r3, [sp, #322]
	ldr	r3, [sp, #108]
	str	r3, [sp, #324]
	ldr	r3, [sp, #96]
	str	r3, [sp, #332]
	ldr	r3, [sp, #104]
	strb.w	r3, [sp, #336]
	ldr	r3, [sp, #100]
	strb.w	r3, [sp, #337]
	lsrs	r3, r5, #16
	strb.w	r3, [sp, #341]
	ldr	r3, [sp, #92]
	str	r3, [sp, #328]
	ldr	r3, [sp, #164]
	str	r3, [sp, #344]
	ldr	r3, [sp, #168]
	str	r3, [sp, #348]
	ldr	r3, [sp, #172]
	str	r3, [sp, #352]
	ldr	r3, [sp, #176]
	str	r3, [sp, #356]
	ldr	r3, [sp, #76]
	strb.w	r3, [sp, #360]
	ldr	r3, [sp, #68]
	strb.w	r3, [sp, #361]
	subs	r3, r1, r6
	ldr	r1, [sp, #72]
	strb.w	r1, [sp, #362]
	ldr	r1, [sp, #44]
	strb.w	r1, [sp, #363]
	adds	r2, #14
	add	r1, sp, #320
	strb.w	r9, [sp, #320]
	add	r6, sp, #200
	strb.w	lr, [sp, #338]
	strh.w	r5, [sp, #339]
	strb.w	r8, [sp, #342]
	strb.w	r12, [sp, #343]
	str	r6, [sp]
	bl	smoltcp::iface::interface::IpPacket::emit_payload::hc58717c03a59069e
.LBB21_95:
	movs	r4, #11
.LBB21_96:
	mov	r0, r10
	bl	stm32h7xx_hal::ethernet::eth::TDesRing<_>::release::h7bafb1196b8ee228
	mov	r0, r4
	add	sp, #476
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB21_97:
	movs	r4, #8
	mov	r0, r4
	add	sp, #476
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB21_98:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.235
	movs	r1, #4
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.235
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB21_99:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.421
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.421
	b	.LBB21_101
.LBB21_100:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.449
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.449
.LBB21_101:
	movs	r0, #0
	movs	r1, #0
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB21_102:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.422
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.422
	b	.LBB21_104
.LBB21_103:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.450
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.450
.LBB21_104:
	movs	r0, #1
	movs	r1, #1
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB21_105:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.426
	movs	r0, #8
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.426
	movs	r1, #8
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB21_106:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.453
	movs	r0, #7
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.453
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB21_107:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.427
	movs	r0, #9
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.427
	movs	r1, #9
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB21_108:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.281
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.282
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.281
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.282
	movs	r1, #37
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB21_109:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.318
	movs	r0, #12
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.318
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB21_110:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.130
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.130
	movs	r1, #43
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB21_111:
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.401
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.402
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.401
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.402
	movs	r1, #29
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB21_112:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.320
	movs	r0, #14
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.320
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB21_113:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.423
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.423
	b	.LBB21_117
.LBB21_114:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.424
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.424
	b	.LBB21_119
.LBB21_115:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.425
	movs	r0, #8
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.425
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB21_116:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.451
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.451
.LBB21_117:
	movs	r0, #4
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB21_118:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.452
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.452
.LBB21_119:
	movs	r0, #6
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB21_120:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.454
	movs	r0, #24
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.454
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB21_121:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.455
	movs	r0, #40
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.455
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB21_122:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.428
	movs	r0, #16
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.428
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB21_123:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.429
	movs	r0, #20
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.429
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB21_124:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.132
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.132
	movs	r1, #43
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB21_125:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.131
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.131
	movs	r1, #43
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.Lfunc_end21:
	.size	smoltcp::iface::interface::InterfaceInner::dispatch_ip::h40aab87b8d567aea, .Lfunc_end21-smoltcp::iface::interface::InterfaceInner::dispatch_ip::h40aab87b8d567aea
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN6minimq15network_manager35InterfaceHolder$LT$TcpStack$C$_$GT$5write17h19b74f0c592580bdE","ax",%progbits
	.p2align	1
	.type	minimq::network_manager::InterfaceHolder<TcpStack,_>::write::h19b74f0c592580bd,%function
	.code	16
	.thumb_func
minimq::network_manager::InterfaceHolder<TcpStack,_>::write::h19b74f0c592580bd:
.Lfunc_begin22:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#540
	sub.w	sp, sp, #540
	mov	r12, r0
	ldr	r0, [r0, #12]
	cmp	r0, #1
	beq.w	.LBB22_65
	ldr.w	r0, [r12]
	cmp	r0, #1
	bne	.LBB22_18
	ldr.w	lr, [r12, #8]
	mov	r8, r1
	add.w	r9, lr, #288
	ldrexb	r0, [r9]
	cbnz	r0, .LBB22_6
	dmb	sy
	movs	r1, #1
.LBB22_4:
	strexb	r3, r1, [r9]
	cbz	r3, .LBB22_7
	ldrexb	r0, [r9]
	cmp	r0, #0
	beq	.LBB22_4
.LBB22_6:
	clrex
	movs	r1, #0
.LBB22_7:
	dmb	sy
	cmp	r1, #0
	beq.w	.LBB22_68
	ldr.w	r0, [lr, #56]
	add.w	r1, r0, r0, lsl #3
	ldr.w	r0, [lr, #52]
	rsbs	r1, r1, #0
	lsls	r3, r1, #1
	movs	r1, #0
	adds	r6, r3, r1
	beq	.LBB22_17
.LBB22_9:
	ldrb	r5, [r0, r1]
	cbz	r5, .LBB22_19
	adds.w	r5, r6, #18
	beq	.LBB22_17
	adds	r5, r0, r1
	ldrb	r4, [r5, #18]
	cbz	r4, .LBB22_20
	adds.w	r4, r6, #36
	beq	.LBB22_17
	ldrb.w	r4, [r5, #36]
	cbz	r4, .LBB22_21
	adds	r6, #54
	beq	.LBB22_17
	ldrb.w	r6, [r5, #54]
	cmp	r6, #0
	beq	.LBB22_28
	adds	r1, #72
	adds	r6, r3, r1
	bne	.LBB22_9
.LBB22_17:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.63
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.63
	movs	r1, #43
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB22_18:
	mov.w	r8, #0
	movs	r0, #2
	mov	r1, r8
	add.w	sp, sp, #540
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB22_19:
	add	r0, r1
	ldrb	r0, [r0, #1]
	cbnz	r0, .LBB22_22
	b	.LBB22_29
.LBB22_20:
	add.w	r0, r5, #18
	ldrb	r0, [r0, #1]
	cbnz	r0, .LBB22_22
	b	.LBB22_29
.LBB22_21:
	add.w	r0, r5, #36
	ldrb	r0, [r0, #1]
	cbz	r0, .LBB22_29
.LBB22_22:
	ldr.w	r0, [r12, #4]
	ldr.w	r1, [lr, #88]
	cmp	r1, r0
	bls.w	.LBB22_64
	mov.w	r1, #392
	ldr.w	r3, [lr, #84]
	mla	r10, r0, r1, r3
	ldr	r0, [r10, #40]!
	cmp	r0, #2
	bne.w	.LBB22_66
	ldrb.w	r0, [r10, #318]
	cmp	r0, #7
	it	ne
	cmpne	r0, #4
	bne	.LBB22_30
	ldr.w	r6, [r10, #228]
	str.w	r12, [sp, #4]
	strd	r2, r8, [sp, #16]
	mov	r8, r10
	cbz	r6, .LBB22_31
	ldr	r11, [r8, #224]!
	ldr.w	r5, [r10, #220]
	cbz	r5, .LBB22_32
.LBB22_27:
	add.w	r0, r11, r6
	udiv	r1, r0, r5
	mls	r0, r1, r5, r0
	b	.LBB22_33
.LBB22_28:
	add.w	r0, r5, #54
	ldrb	r0, [r0, #1]
	cmp	r0, #0
	bne	.LBB22_22
.LBB22_29:
	dmb	sy
	movs	r0, #0
	strb.w	r0, [r9]
	dmb	sy
	mov.w	r8, #5
	mov	r1, r8
	add.w	sp, sp, #540
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB22_30:
	dmb	sy
	movs	r0, #0
	strb.w	r0, [r9]
	dmb	sy
	mov.w	r8, #3
	mov	r1, r8
	add.w	sp, sp, #540
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB22_31:
	mov.w	r11, #0
	str	r11, [r8, #224]!
	strd	r11, r11, [r8, #-112]
	ldr.w	r5, [r10, #220]
	cmp	r5, #0
	bne	.LBB22_27
.LBB22_32:
	movs	r0, #0
.LBB22_33:
	subs	r4, r5, r6
	subs	r1, r5, r0
	cmp	r4, r1
	it	hi
	movhi	r4, r1
	adds	r1, r4, r0
	bhs.w	.LBB22_69
	cmp	r1, r5
	bhi	.LBB22_39
	ldr.w	r2, [r10, #216]
	ldr	r1, [sp, #16]
	cmp	r4, r1
	str	r2, [sp, #12]
	add	r0, r2
	it	hi
	movhi	r4, r1
	ldr	r1, [sp, #20]
	mov	r2, r4
	bl	__aeabi_memcpy
	adds	r2, r4, r6
	beq	.LBB22_40
	mov.w	r8, #0
	str	r2, [sp, #8]
	cbz	r5, .LBB22_41
.LBB22_37:
	add.w	r0, r11, r2
	subs	r6, r5, r2
	udiv	r1, r0, r5
	mls	r0, r1, r5, r0
	subs	r1, r5, r0
	cmp	r6, r1
	it	hi
	movhi	r6, r1
	adds	r1, r6, r0
	bhs.w	.LBB22_69
	cmp	r1, r5
	ldr.w	r11, [sp, #16]
	bls	.LBB22_42
.LBB22_39:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.128
	mov	r0, r1
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.128
	mov	r1, r5
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB22_40:
	mov.w	r11, #0
	str.w	r11, [r8]
	cmp	r5, #0
	mov.w	r8, #0
	str	r2, [sp, #8]
	bne	.LBB22_37
.LBB22_41:
	movs	r0, #0
	movs	r6, #0
	ldr.w	r11, [sp, #16]
.LBB22_42:
	sub.w	r2, r11, r4
	ldr	r1, [sp, #20]
	ldr	r3, [sp, #12]
	add	r1, r4
	cmp	r2, r6
	add	r0, r3
	it	lo
	movlo	r6, r2
	mov	r2, r6
	bl	__aeabi_memcpy
	ldr	r0, [sp, #8]
	add	r4, r6
	add	r0, r6
	str.w	r0, [r10, #228]
	dmb	sy
	strb.w	r8, [r9]
	cmp	r4, r11
	dmb	sy
	beq.w	.LBB22_63
	bhi.w	.LBB22_71
	add.w	r8, sp, #24
	mov.w	r1, #516
	mov	r0, r8
	sub.w	r5, r11, r4
	bl	__aeabi_memclr4
	cmp.w	r5, #512
	bhi.w	.LBB22_72
	cmp	r5, #0
	beq.w	.LBB22_62
	mvns	r0, r4
	and	r1, r5, #3
	add	r0, r11
	cmp	r0, #3
	ldr	r0, [sp, #20]
	add	r0, r4
	bhs	.LBB22_48
	movs	r5, #0
	b	.LBB22_58
.LBB22_48:
	subs	r2, r5, #4
	movs	r3, #1
	cmp	r2, #12
	add.w	r3, r3, r2, lsr #2
	and	r2, r3, #3
	bhs	.LBB22_50
	movs	r5, #0
	b	.LBB22_52
.LBB22_50:
	bic	r3, r3, #3
	movs	r5, #0
	add.w	r6, r8, #4
.LBB22_51:
	ldrb	r4, [r0], #16
	subs	r3, #4
	strb	r4, [r6, r5]
	ldrb	r4, [r0, #-15]
	ldr	r5, [sp, #24]
	add.w	r5, r5, #1
	str	r5, [sp, #24]
	strb	r4, [r6, r5]
	ldrb	r4, [r0, #-14]
	ldr	r5, [sp, #24]
	add.w	r5, r5, #1
	str	r5, [sp, #24]
	strb	r4, [r6, r5]
	ldrb	r4, [r0, #-13]
	ldr	r5, [sp, #24]
	add.w	r5, r5, #1
	str	r5, [sp, #24]
	strb	r4, [r6, r5]
	ldrb	r4, [r0, #-12]
	ldr	r5, [sp, #24]
	add.w	r5, r5, #1
	str	r5, [sp, #24]
	strb	r4, [r6, r5]
	ldrb	r4, [r0, #-11]
	ldr	r5, [sp, #24]
	add.w	r5, r5, #1
	str	r5, [sp, #24]
	strb	r4, [r6, r5]
	ldrb	r4, [r0, #-10]
	ldr	r5, [sp, #24]
	add.w	r5, r5, #1
	str	r5, [sp, #24]
	strb	r4, [r6, r5]
	ldrb	r4, [r0, #-9]
	ldr	r5, [sp, #24]
	add.w	r5, r5, #1
	str	r5, [sp, #24]
	strb	r4, [r6, r5]
	ldrb	r4, [r0, #-8]
	ldr	r5, [sp, #24]
	add.w	r5, r5, #1
	str	r5, [sp, #24]
	strb	r4, [r6, r5]
	ldrb	r4, [r0, #-7]
	ldr	r5, [sp, #24]
	add.w	r5, r5, #1
	str	r5, [sp, #24]
	strb	r4, [r6, r5]
	ldrb	r4, [r0, #-6]
	ldr	r5, [sp, #24]
	add.w	r5, r5, #1
	str	r5, [sp, #24]
	strb	r4, [r6, r5]
	ldrb	r4, [r0, #-5]
	ldr	r5, [sp, #24]
	add.w	r5, r5, #1
	str	r5, [sp, #24]
	strb	r4, [r6, r5]
	ldrb	r4, [r0, #-4]
	ldr	r5, [sp, #24]
	add.w	r5, r5, #1
	str	r5, [sp, #24]
	strb	r4, [r6, r5]
	ldrb	r4, [r0, #-3]
	ldr	r5, [sp, #24]
	add.w	r5, r5, #1
	str	r5, [sp, #24]
	strb	r4, [r6, r5]
	ldrb	r4, [r0, #-2]
	ldr	r5, [sp, #24]
	add.w	r5, r5, #1
	str	r5, [sp, #24]
	strb	r4, [r6, r5]
	ldrb	r4, [r0, #-1]
	ldr	r5, [sp, #24]
	add.w	r5, r5, #1
	str	r5, [sp, #24]
	strb	r4, [r6, r5]
	ldr	r5, [sp, #24]
	add.w	r5, r5, #1
	str	r5, [sp, #24]
	bne	.LBB22_51
.LBB22_52:
	cmp	r2, #0
	beq	.LBB22_58
	add.w	r3, r8, #4
	ldrb	r6, [r0]
	cmp	r2, #1
	strb	r6, [r3, r5]
	ldrb	r5, [r0, #1]
	ldr	r6, [sp, #24]
	add.w	r6, r6, #1
	str	r6, [sp, #24]
	strb	r5, [r3, r6]
	ldrb	r5, [r0, #2]
	ldr	r6, [sp, #24]
	add.w	r6, r6, #1
	str	r6, [sp, #24]
	strb	r5, [r3, r6]
	ldrb	r5, [r0, #3]
	ldr	r6, [sp, #24]
	add.w	r6, r6, #1
	str	r6, [sp, #24]
	strb	r5, [r3, r6]
	ldr	r6, [sp, #24]
	add.w	r5, r6, #1
	str	r5, [sp, #24]
	bne	.LBB22_55
	adds	r0, #4
	b	.LBB22_58
.LBB22_55:
	ldrb	r6, [r0, #4]
	cmp	r2, #2
	strb	r6, [r3, r5]
	ldrb	r5, [r0, #5]
	ldr	r6, [sp, #24]
	add.w	r6, r6, #1
	str	r6, [sp, #24]
	strb	r5, [r3, r6]
	ldrb	r5, [r0, #6]
	ldr	r6, [sp, #24]
	add.w	r6, r6, #1
	str	r6, [sp, #24]
	strb	r5, [r3, r6]
	ldrb	r5, [r0, #7]
	ldr	r6, [sp, #24]
	add.w	r6, r6, #1
	str	r6, [sp, #24]
	strb	r5, [r3, r6]
	ldr	r6, [sp, #24]
	add.w	r5, r6, #1
	str	r5, [sp, #24]
	bne	.LBB22_57
	adds	r0, #8
	b	.LBB22_58
.LBB22_57:
	ldrb	r2, [r0, #8]
	strb	r2, [r3, r5]
	ldrb	r6, [r0, #9]
	ldr	r2, [sp, #24]
	adds	r2, #1
	str	r2, [sp, #24]
	strb	r6, [r3, r2]
	ldrb	r6, [r0, #10]
	ldr	r2, [sp, #24]
	adds	r2, #1
	str	r2, [sp, #24]
	strb	r6, [r3, r2]
	ldrb	r6, [r0, #11]
	ldr	r2, [sp, #24]
	adds	r0, #12
	adds	r2, #1
	str	r2, [sp, #24]
	strb	r6, [r3, r2]
	ldr	r2, [sp, #24]
	adds	r5, r2, #1
	str	r5, [sp, #24]
.LBB22_58:
	cbz	r1, .LBB22_62
	add.w	r2, r8, r5
	ldrb	r3, [r0]
	cmp	r1, #1
	strb	r3, [r2, #4]
	ldr	r2, [sp, #24]
	add.w	r2, r2, #1
	str	r2, [sp, #24]
	beq	.LBB22_62
	add	r2, r8
	ldrb	r3, [r0, #1]
	cmp	r1, #2
	strb	r3, [r2, #4]
	ldr	r2, [sp, #24]
	add.w	r1, r2, #1
	str	r1, [sp, #24]
	beq	.LBB22_62
	add	r1, r8
	ldrb	r0, [r0, #2]
	strb	r0, [r1, #4]
	ldr	r0, [sp, #24]
	adds	r0, #1
	str	r0, [sp, #24]
.LBB22_62:
	ldr	r4, [sp, #4]
	add	r1, sp, #24
	add.w	r0, r4, #16
	mov.w	r2, #516
	bl	__aeabi_memcpy4
	mov.w	r8, #0
	movs	r0, #1
	str	r0, [r4, #12]
.LBB22_63:
	movs	r0, #9
	mov	r1, r8
	add.w	sp, sp, #540
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB22_64:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.153
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.153
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB22_65:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.133
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.134
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.133
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.134
	movs	r1, #46
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB22_66:
	cmp	r0, #4
	bne	.LBB22_70
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.156
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.157
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.156
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.157
	movs	r1, #39
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB22_68:
	cmp	r0, #0
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.7
	it	ne
	movne	r0, #1
	strb.w	r0, [sp, #24]
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.5
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.360
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.7
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.5
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.360
	add	r2, sp, #24
	movs	r1, #12
	str	r6, [sp]
	bl	core::result::unwrap_failed::he67be68ddf63c991
	.inst.n	0xdefe
.LBB22_69:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.128
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.128
	bl	core::slice::index::slice_index_order_fail::h8a53f055fb6ee074
	.inst.n	0xdefe
.LBB22_70:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.154
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.155
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.154
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.155
	movs	r1, #41
	bl	core::option::expect_failed::h22026eb39ea9589c
	.inst.n	0xdefe
.LBB22_71:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.136
	mov	r0, r4
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.136
	mov	r1, r11
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB22_72:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.137
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.369
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.137
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.369
	add	r2, sp, #24
	movs	r1, #43
	str	r6, [sp]
	bl	core::result::unwrap_failed::he67be68ddf63c991
	.inst.n	0xdefe
.Lfunc_end22:
	.size	minimq::network_manager::InterfaceHolder<TcpStack,_>::write::h19b74f0c592580bd, .Lfunc_end22-minimq::network_manager::InterfaceHolder<TcpStack,_>::write::h19b74f0c592580bd
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN6minimq15network_manager35InterfaceHolder$LT$TcpStack$C$_$GT$4read17hdad4c2469d70da69E","ax",%progbits
	.p2align	1
	.type	minimq::network_manager::InterfaceHolder<TcpStack,_>::read::hdad4c2469d70da69,%function
	.code	16
	.thumb_func
minimq::network_manager::InterfaceHolder<TcpStack,_>::read::hdad4c2469d70da69:
.Lfunc_begin23:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#20
	sub	sp, #20
	ldr	r2, [r0]
	cmp	r2, #1
	bne	.LBB23_17
	ldr.w	r12, [r0, #8]
	mov	lr, r1
	add.w	r9, r12, #288
	ldrexb	r1, [r9]
	cbnz	r1, .LBB23_5
	dmb	sy
	movs	r2, #1
.LBB23_3:
	strexb	r3, r2, [r9]
	cbz	r3, .LBB23_6
	ldrexb	r1, [r9]
	cmp	r1, #0
	beq	.LBB23_3
.LBB23_5:
	clrex
	movs	r2, #0
.LBB23_6:
	dmb	sy
	cmp	r2, #0
	beq.w	.LBB23_44
	ldr.w	r1, [r12, #56]
	movs	r3, #0
	add.w	r2, r1, r1, lsl #3
	ldr.w	r1, [r12, #52]
	rsbs	r2, r2, #0
	lsls	r5, r2, #1
	adds	r4, r5, r3
	beq	.LBB23_16
.LBB23_8:
	ldrb	r2, [r1, r3]
	cbz	r2, .LBB23_18
	adds.w	r2, r4, #18
	beq	.LBB23_16
	adds	r2, r1, r3
	ldrb	r6, [r2, #18]
	cbz	r6, .LBB23_19
	adds.w	r6, r4, #36
	beq	.LBB23_16
	ldrb.w	r6, [r2, #36]
	cbz	r6, .LBB23_20
	adds.w	r6, r4, #54
	beq	.LBB23_16
	ldrb.w	r6, [r2, #54]
	cmp	r6, #0
	beq	.LBB23_30
	adds	r3, #72
	adds	r4, r5, r3
	bne	.LBB23_8
.LBB23_16:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.63
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.63
	movs	r1, #43
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB23_17:
	movs	r1, #0
	movw	r0, #513
	add	sp, #20
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB23_18:
	add	r1, r3
	ldrb	r1, [r1, #1]
	movs	r6, #0
	cbnz	r1, .LBB23_21
	b	.LBB23_31
.LBB23_19:
	add.w	r1, r2, #18
	ldrb	r1, [r1, #1]
	movs	r6, #0
	cbnz	r1, .LBB23_21
	b	.LBB23_31
.LBB23_20:
	add.w	r1, r2, #36
	ldrb	r1, [r1, #1]
	movs	r6, #0
	cmp	r1, #0
	beq	.LBB23_31
.LBB23_21:
	ldr	r0, [r0, #4]
	ldr.w	r1, [r12, #88]
	cmp	r1, r0
	bls.w	.LBB23_41
	mov.w	r1, #392
	ldr.w	r2, [r12, #84]
	mla	r11, r0, r1, r2
	ldr	r0, [r11, #40]!
	cmp	r0, #2
	bne.w	.LBB23_42
	ldrb.w	r0, [r11, #318]
	ldr.w	r8, [r11, #212]
	subs	r0, #4
	cmp	r0, #3
	blo	.LBB23_26
	cmp.w	r8, #0
	bne	.LBB23_26
	movs	r1, #0
	movs	r2, #2
	movs	r3, #0
	b	.LBB23_40
.LBB23_26:
	ldrd	r10, r4, [r11, #204]
	sub.w	r5, r10, r4
	cmp	r8, r5
	it	ls
	movls	r5, r8
	adds	r1, r5, r4
	bhs.w	.LBB23_47
	cmp	r1, r10
	bhi.w	.LBB23_45
	ldr.w	r0, [r11, #200]
	cmp.w	r5, #1024
	str	r0, [sp, #8]
	add.w	r1, r0, r4
	it	hs
	movhs.w	r5, #1024
	mov	r0, lr
	mov	r2, r5
	str.w	lr, [sp, #12]
	bl	__aeabi_memcpy
	cmp.w	r10, #0
	beq	.LBB23_32
	adds	r0, r5, r4
	udiv	r1, r0, r10
	mls	r6, r1, r10, r0
	b	.LBB23_33
.LBB23_30:
	add.w	r1, r2, #54
	ldrb	r1, [r1, #1]
	movs	r6, #0
	cmp	r1, #0
	bne	.LBB23_21
.LBB23_31:
	movs	r2, #5
	movs	r1, #0
	movs	r3, #0
	b	.LBB23_40
.LBB23_32:
	movs	r6, #0
.LBB23_33:
	sub.w	r8, r8, r5
	sub.w	r4, r10, r6
	cmp	r8, r4
	it	ls
	movls	r4, r8
	adds	r1, r4, r6
	ldr	r0, [sp, #12]
	bhs.w	.LBB23_48
	cmp	r1, r10
	bhi	.LBB23_45
	rsb.w	r2, r5, #1024
	ldr	r1, [sp, #8]
	add	r0, r5
	cmp	r2, r4
	add	r1, r6
	it	lo
	movlo	r4, r2
	mov	r2, r4
	bl	__aeabi_memcpy
	cmp.w	r10, #0
	beq	.LBB23_37
	adds	r0, r4, r6
	udiv	r1, r0, r10
	mls	r0, r1, r10, r0
	b	.LBB23_38
.LBB23_37:
	movs	r0, #0
.LBB23_38:
	adds	r1, r4, r5
	movs	r6, #0
	cmp.w	r1, #-1
	sub.w	r2, r8, r4
	strd	r0, r2, [r11, #208]
	ble	.LBB23_49
	ldr.w	r0, [r11, #236]
	movs	r3, #1
	movs	r2, #2
	add	r0, r1
	str.w	r0, [r11, #236]
.LBB23_40:
	dmb	sy
	strb.w	r6, [r9]
	eor	r0, r3, #1
	dmb	sy
	cmp	r3, #0
	itt	eq
	moveq	r1, r3
	orreq.w	r0, r0, r2, lsl #16
	add	sp, #20
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB23_41:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.153
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.153
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB23_42:
	cmp	r0, #4
	bne	.LBB23_46
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.156
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.157
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.156
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.157
	movs	r1, #39
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB23_44:
	cmp	r1, #0
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.5
	it	ne
	movne	r1, #1
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.360
	strb	r1, [r7, #-29]
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.7
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.5
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.360
	sub.w	r2, r7, #29
	movs	r1, #12
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.7
	str	r6, [sp]
	bl	core::result::unwrap_failed::he67be68ddf63c991
	.inst.n	0xdefe
.LBB23_45:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.129
	mov	r0, r1
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.129
	mov	r1, r10
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB23_46:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.154
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.155
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.154
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.155
	movs	r1, #41
	bl	core::option::expect_failed::h22026eb39ea9589c
	.inst.n	0xdefe
.LBB23_47:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.129
	mov	r0, r4
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.129
	bl	core::slice::index::slice_index_order_fail::h8a53f055fb6ee074
	.inst.n	0xdefe
.LBB23_48:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.129
	mov	r0, r6
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.129
	bl	core::slice::index::slice_index_order_fail::h8a53f055fb6ee074
	.inst.n	0xdefe
.LBB23_49:
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.593
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.595
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.593
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.595
	movs	r1, #56
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.Lfunc_end23:
	.size	minimq::network_manager::InterfaceHolder<TcpStack,_>::read::hdad4c2469d70da69, .Lfunc_end23-minimq::network_manager::InterfaceHolder<TcpStack,_>::read::hdad4c2469d70da69
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN14thermostat_eem8hardware12adc_internal11AdcInternal17read_p3v3_voltage17h6384078c1e9603b1E,"ax",%progbits
	.p2align	2
	.type	thermostat_eem::hardware::adc_internal::AdcInternal::read_p3v3_voltage::h6384078c1e9603b1,%function
	.code	16
	.thumb_func
thermostat_eem::hardware::adc_internal::AdcInternal::read_p3v3_voltage::h6384078c1e9603b1:
.Lfunc_begin24:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r7, lr}
	push	{r4, r5, r7, lr}
	.cfi_def_cfa_offset 16
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r5, -12
	.cfi_offset r4, -16
	.setfp	r7, sp, #8
	add	r7, sp, #8
	.cfi_def_cfa r7, 8
	movw	r5, #24576
	mov	r4, r0
	movt	r5, #22530
	bl	stm32h7xx_hal::adc::Adc<stm32h7::stm32h743v::ADC3,stm32h7xx_hal::adc::Enabled>::check_conversion_conditions::h48973f161e2166bd
	ldrb	r1, [r4, #6]
	ldrb	r2, [r4, #5]
	ldrb.w	r12, [r4, #7]
	ldr	r3, [r5, #12]
	and	r0, r1, #7
	bic	r3, r3, #28
	and	r2, r2, #7
	orr.w	r0, r3, r0, lsl #2
	str	r0, [r5, #12]
	ldr	r0, [r5, #16]
	movw	r3, :lower16:.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal17read_p3v3_voltage17h6384078c1e9603b1E
	bic	r0, r0, #-268435456
	movt	r3, :upper16:.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal17read_p3v3_voltage17h6384078c1e9603b1E
	orr.w	r0, r0, r12, lsl #28
	str	r0, [r5, #16]
	ldr	r0, [r5, #28]
	orr	r0, r0, #8
	str	r0, [r5, #28]
	eor	r0, r2, #4
	ldr	r2, [r5, #20]
	bic	r2, r2, #3584
	ldr.w	r0, [r3, r0, lsl #2]
	orrs	r0, r2
	str	r0, [r5, #20]
	ldr	r0, [r5, #48]
	movw	r2, #1999
	bics	r0, r2
	adds	r0, #192
	str	r0, [r5, #48]
	movs	r0, #3
	strb	r0, [r4, #9]
	ldr	r0, [r5, #8]
	orr	r0, r0, #4
	str	r0, [r5, #8]
.LBB24_1:
	ldr	r0, [r5]
	lsls	r0, r0, #29
	bmi	.LBB24_4
	ldr	r0, [r5]
	lsls	r0, r0, #29
	itt	pl
	ldrpl	r0, [r5]
	lslspl.w	r0, r0, #29
	bmi	.LBB24_4
	ldr	r0, [r5]
	lsls	r0, r0, #29
	bpl	.LBB24_1
.LBB24_4:
	ldr	r0, [r5, #28]
	bic	r0, r0, #8
	str	r0, [r5, #28]
	movs	r0, #0
	strb	r0, [r4, #8]
	sbfx	r2, r1, #0, #3
	cmp.w	r2, #-1
	ldr	r2, [r5, #64]
	blt	.LBB24_6
	adds	r0, r1, #1
	movw	r1, :lower16:.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal17read_p3v3_voltage17h6384078c1e9603b1E.1516
	and	r0, r0, #7
	movt	r1, :upper16:.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal17read_p3v3_voltage17h6384078c1e9603b1E.1516
	ldr.w	r1, [r1, r0, lsl #2]
	b	.LBB24_7
.LBB24_6:
	movs	r1, #16
.LBB24_7:
	mov.w	r0, #-1
	vmov	s0, r2
	lsls	r0, r1
	and	r1, r12, #31
	mvns	r0, r0
	lsls	r0, r1
	vcvt.f32.u32	s0, s0
	vmov	s2, r0
	vcvt.f32.u32	s2, s2
	vdiv.f32	s0, s0, s2
	vldr	s2, .LCPI24_0
	vmul.f32	s0, s0, s2
	pop	{r4, r5, r7, pc}
	.p2align	2
.LCPI24_0:
	.long	0x406d2d2e
.Lfunc_end24:
	.size	thermostat_eem::hardware::adc_internal::AdcInternal::read_p3v3_voltage::h6384078c1e9603b1, .Lfunc_end24-thermostat_eem::hardware::adc_internal::AdcInternal::read_p3v3_voltage::h6384078c1e9603b1
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN14thermostat_eem8hardware12adc_internal11AdcInternal16read_p5v_voltage17hd7943cf86bed6258E,"ax",%progbits
	.p2align	2
	.type	thermostat_eem::hardware::adc_internal::AdcInternal::read_p5v_voltage::hd7943cf86bed6258,%function
	.code	16
	.thumb_func
thermostat_eem::hardware::adc_internal::AdcInternal::read_p5v_voltage::hd7943cf86bed6258:
.Lfunc_begin25:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r7, lr}
	push	{r4, r5, r7, lr}
	.cfi_def_cfa_offset 16
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r5, -12
	.cfi_offset r4, -16
	.setfp	r7, sp, #8
	add	r7, sp, #8
	.cfi_def_cfa r7, 8
	movw	r5, #8192
	mov	r4, r0
	movt	r5, #16386
	bl	stm32h7xx_hal::adc::Adc<stm32h7::stm32h743v::ADC1,stm32h7xx_hal::adc::Enabled>::check_conversion_conditions::h7b40729b58c989da
	ldrb	r1, [r4, #1]
	ldrb	r2, [r4]
	ldrb.w	r12, [r4, #2]
	ldr	r3, [r5, #12]
	and	r0, r1, #7
	bic	r3, r3, #28
	and	r2, r2, #7
	orr.w	r0, r3, r0, lsl #2
	str	r0, [r5, #12]
	ldr	r0, [r5, #16]
	movw	r3, :lower16:.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal16read_p5v_voltage17hd7943cf86bed6258E
	bic	r0, r0, #-268435456
	movt	r3, :upper16:.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal16read_p5v_voltage17hd7943cf86bed6258E
	orr.w	r0, r0, r12, lsl #28
	str	r0, [r5, #16]
	ldr	r0, [r5, #28]
	orr	r0, r0, #1024
	str	r0, [r5, #28]
	eor	r0, r2, #4
	ldr	r2, [r5, #24]
	bic	r2, r2, #7
	ldr.w	r0, [r3, r0, lsl #2]
	orrs	r0, r2
	str	r0, [r5, #24]
	ldr	r0, [r5, #48]
	movw	r2, #1999
	bics	r0, r2
	add.w	r0, r0, #640
	str	r0, [r5, #48]
	movs	r0, #10
	strb	r0, [r4, #4]
	ldr	r0, [r5, #8]
	orr	r0, r0, #4
	str	r0, [r5, #8]
.LBB25_1:
	ldr	r0, [r5]
	lsls	r0, r0, #29
	bmi	.LBB25_4
	ldr	r0, [r5]
	lsls	r0, r0, #29
	itt	pl
	ldrpl	r0, [r5]
	lslspl.w	r0, r0, #29
	bmi	.LBB25_4
	ldr	r0, [r5]
	lsls	r0, r0, #29
	bpl	.LBB25_1
.LBB25_4:
	ldr	r0, [r5, #28]
	bic	r0, r0, #1024
	str	r0, [r5, #28]
	movs	r0, #0
	strb	r0, [r4, #3]
	sbfx	r2, r1, #0, #3
	cmp.w	r2, #-1
	ldr	r2, [r5, #64]
	blt	.LBB25_6
	adds	r0, r1, #1
	movw	r1, :lower16:.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal16read_p5v_voltage17hd7943cf86bed6258E.1517
	and	r0, r0, #7
	movt	r1, :upper16:.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal16read_p5v_voltage17hd7943cf86bed6258E.1517
	ldr.w	r1, [r1, r0, lsl #2]
	b	.LBB25_7
.LBB25_6:
	movs	r1, #16
.LBB25_7:
	mov.w	r0, #-1
	vmov	s0, r2
	lsls	r0, r1
	and	r1, r12, #31
	mvns	r0, r0
	lsls	r0, r1
	vcvt.f32.u32	s0, s0
	vmov	s2, r0
	vcvt.f32.u32	s2, s2
	vdiv.f32	s0, s0, s2
	vldr	s2, .LCPI25_0
	vmul.f32	s0, s0, s2
	pop	{r4, r5, r7, pc}
	.p2align	2
.LCPI25_0:
	.long	0x40ed2d2c
.Lfunc_end25:
	.size	thermostat_eem::hardware::adc_internal::AdcInternal::read_p5v_voltage::hd7943cf86bed6258, .Lfunc_end25-thermostat_eem::hardware::adc_internal::AdcInternal::read_p5v_voltage::hd7943cf86bed6258
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN14thermostat_eem8hardware12adc_internal11AdcInternal17read_p12v_voltage17h207bff0f1b1841c3E,"ax",%progbits
	.p2align	2
	.type	thermostat_eem::hardware::adc_internal::AdcInternal::read_p12v_voltage::h207bff0f1b1841c3,%function
	.code	16
	.thumb_func
thermostat_eem::hardware::adc_internal::AdcInternal::read_p12v_voltage::h207bff0f1b1841c3:
.Lfunc_begin26:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r7, lr}
	push	{r4, r5, r7, lr}
	.cfi_def_cfa_offset 16
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r5, -12
	.cfi_offset r4, -16
	.setfp	r7, sp, #8
	add	r7, sp, #8
	.cfi_def_cfa r7, 8
	movw	r5, #8192
	mov	r4, r0
	movt	r5, #16386
	bl	stm32h7xx_hal::adc::Adc<stm32h7::stm32h743v::ADC1,stm32h7xx_hal::adc::Enabled>::check_conversion_conditions::h7b40729b58c989da
	ldrb	r1, [r4, #1]
	ldrb	r2, [r4]
	ldrb.w	r12, [r4, #2]
	ldr	r3, [r5, #12]
	and	r0, r1, #7
	bic	r3, r3, #28
	and	r2, r2, #7
	orr.w	r0, r3, r0, lsl #2
	str	r0, [r5, #12]
	ldr	r0, [r5, #16]
	movw	r3, :lower16:.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal17read_p12v_voltage17h207bff0f1b1841c3E
	bic	r0, r0, #-268435456
	movt	r3, :upper16:.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal17read_p12v_voltage17h207bff0f1b1841c3E
	orr.w	r0, r0, r12, lsl #28
	str	r0, [r5, #16]
	ldr	r0, [r5, #28]
	orr	r0, r0, #4096
	str	r0, [r5, #28]
	eor	r0, r2, #4
	ldr	r2, [r5, #24]
	bic	r2, r2, #448
	ldr.w	r0, [r3, r0, lsl #2]
	orrs	r0, r2
	str	r0, [r5, #24]
	ldr	r0, [r5, #48]
	movw	r2, #1999
	bics	r0, r2
	add.w	r0, r0, #768
	str	r0, [r5, #48]
	movs	r0, #12
	strb	r0, [r4, #4]
	ldr	r0, [r5, #8]
	orr	r0, r0, #4
	str	r0, [r5, #8]
.LBB26_1:
	ldr	r0, [r5]
	lsls	r0, r0, #29
	bmi	.LBB26_4
	ldr	r0, [r5]
	lsls	r0, r0, #29
	itt	pl
	ldrpl	r0, [r5]
	lslspl.w	r0, r0, #29
	bmi	.LBB26_4
	ldr	r0, [r5]
	lsls	r0, r0, #29
	bpl	.LBB26_1
.LBB26_4:
	ldr	r0, [r5, #28]
	bic	r0, r0, #4096
	str	r0, [r5, #28]
	movs	r0, #0
	strb	r0, [r4, #3]
	sbfx	r2, r1, #0, #3
	cmp.w	r2, #-1
	ldr	r2, [r5, #64]
	blt	.LBB26_6
	adds	r0, r1, #1
	movw	r1, :lower16:.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal17read_p12v_voltage17h207bff0f1b1841c3E.1518
	and	r0, r0, #7
	movt	r1, :upper16:.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal17read_p12v_voltage17h207bff0f1b1841c3E.1518
	ldr.w	r1, [r1, r0, lsl #2]
	b	.LBB26_7
.LBB26_6:
	movs	r1, #16
.LBB26_7:
	mov.w	r0, #-1
	vmov	s0, r2
	lsls	r0, r1
	and	r1, r12, #31
	mvns	r0, r0
	lsls	r0, r1
	vcvt.f32.u32	s0, s0
	vmov	s2, r0
	vcvt.f32.u32	s2, s2
	vdiv.f32	s0, s0, s2
	vldr	s2, .LCPI26_0
	vmul.f32	s0, s0, s2
	pop	{r4, r5, r7, pc}
	.p2align	2
.LCPI26_0:
	.long	0x417c0001
.Lfunc_end26:
	.size	thermostat_eem::hardware::adc_internal::AdcInternal::read_p12v_voltage::h207bff0f1b1841c3, .Lfunc_end26-thermostat_eem::hardware::adc_internal::AdcInternal::read_p12v_voltage::h207bff0f1b1841c3
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN14thermostat_eem8hardware12adc_internal11AdcInternal17read_p12v_current17hf5e87fe4806b3249E,"ax",%progbits
	.p2align	1
	.type	thermostat_eem::hardware::adc_internal::AdcInternal::read_p12v_current::hf5e87fe4806b3249,%function
	.code	16
	.thumb_func
thermostat_eem::hardware::adc_internal::AdcInternal::read_p12v_current::hf5e87fe4806b3249:
.Lfunc_begin27:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r7, lr}
	push	{r4, r5, r7, lr}
	.cfi_def_cfa_offset 16
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r5, -12
	.cfi_offset r4, -16
	.setfp	r7, sp, #8
	add	r7, sp, #8
	.cfi_def_cfa r7, 8
	movw	r5, #24576
	mov	r4, r0
	movt	r5, #22530
	bl	stm32h7xx_hal::adc::Adc<stm32h7::stm32h743v::ADC3,stm32h7xx_hal::adc::Enabled>::check_conversion_conditions::h48973f161e2166bd
	ldrb	r1, [r4, #6]
	ldrb	r2, [r4, #5]
	ldrb.w	r12, [r4, #7]
	ldr	r3, [r5, #12]
	and	r0, r1, #7
	bic	r3, r3, #28
	and	r2, r2, #7
	orr.w	r0, r3, r0, lsl #2
	str	r0, [r5, #12]
	ldr	r0, [r5, #16]
	movw	r3, :lower16:.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal17read_p12v_current17hf5e87fe4806b3249E
	bic	r0, r0, #-268435456
	movt	r3, :upper16:.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal17read_p12v_current17hf5e87fe4806b3249E
	orr.w	r0, r0, r12, lsl #28
	str	r0, [r5, #16]
	ldr	r0, [r5, #28]
	orr	r0, r0, #128
	str	r0, [r5, #28]
	eor	r0, r2, #4
	ldr	r2, [r5, #20]
	bic	r2, r2, #14680064
	ldr.w	r0, [r3, r0, lsl #2]
	orrs	r0, r2
	str	r0, [r5, #20]
	ldr	r0, [r5, #48]
	movw	r2, #1999
	bics	r0, r2
	add.w	r0, r0, #448
	str	r0, [r5, #48]
	movs	r0, #7
	strb	r0, [r4, #9]
	ldr	r0, [r5, #8]
	orr	r0, r0, #4
	str	r0, [r5, #8]
.LBB27_1:
	ldr	r0, [r5]
	lsls	r0, r0, #29
	bmi	.LBB27_4
	ldr	r0, [r5]
	lsls	r0, r0, #29
	itt	pl
	ldrpl	r0, [r5]
	lslspl.w	r0, r0, #29
	bmi	.LBB27_4
	ldr	r0, [r5]
	lsls	r0, r0, #29
	bpl	.LBB27_1
.LBB27_4:
	ldr	r0, [r5, #28]
	bic	r0, r0, #128
	str	r0, [r5, #28]
	movs	r0, #0
	strb	r0, [r4, #8]
	sbfx	r2, r1, #0, #3
	cmp.w	r2, #-1
	ldr	r2, [r5, #64]
	blt	.LBB27_6
	adds	r0, r1, #1
	movw	r1, :lower16:.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal17read_p12v_current17hf5e87fe4806b3249E.1519
	and	r0, r0, #7
	movt	r1, :upper16:.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal17read_p12v_current17hf5e87fe4806b3249E.1519
	ldr.w	r1, [r1, r0, lsl #2]
	b	.LBB27_7
.LBB27_6:
	movs	r1, #16
.LBB27_7:
	mov.w	r0, #-1
	vmov	s0, r2
	lsls	r0, r1
	and	r1, r12, #31
	mvns	r0, r0
	lsls	r0, r1
	vcvt.f32.u32	s0, s0
	vmov	s2, r0
	vcvt.f32.u32	s2, s2
	vdiv.f32	s0, s0, s2
	vmov.f32	s2, #6.000000e+00
	vmul.f32	s0, s0, s2
	pop	{r4, r5, r7, pc}
.Lfunc_end27:
	.size	thermostat_eem::hardware::adc_internal::AdcInternal::read_p12v_current::hf5e87fe4806b3249, .Lfunc_end27-thermostat_eem::hardware::adc_internal::AdcInternal::read_p12v_current::hf5e87fe4806b3249
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN94_$LT$serde_json_core..ser..struct_..SerializeStruct$u20$as$u20$serde..ser..SerializeStruct$GT$15serialize_field17h9b0dd3205c6f882aE","ax",%progbits
	.p2align	1
	.type	<serde_json_core::ser::struct_::SerializeStruct as serde::ser::SerializeStruct>::serialize_field::h9b0dd3205c6f882a,%function
	.code	16
	.thumb_func
<serde_json_core::ser::struct_::SerializeStruct as serde::ser::SerializeStruct>::serialize_field::h9b0dd3205c6f882a:
.Lfunc_begin28:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#20
	sub	sp, #20
	ldrb	r6, [r0, #4]
	ldr	r4, [r0]
	cbz	r6, .LBB28_2
	ldr.w	r11, [r4, #8]
	b	.LBB28_4
.LBB28_2:
	ldrd	r5, r6, [r4, #4]
	cmp	r6, r5
	bhs.w	.LBB28_29
	ldr.w	r12, [r4]
	movs	r5, #44
	add.w	r11, r6, #1
	str.w	r11, [r4, #8]
	strb.w	r5, [r12, r6]
.LBB28_4:
	ldr	r6, [r4, #4]
	cmp	r11, r6
	mov.w	r6, #0
	strb	r6, [r0, #4]
	bhs.w	.LBB28_29
	ldr	r0, [r4]
	movs	r6, #34
	strb.w	r6, [r0, r11]
	add.w	r6, r11, #1
	adds	r0, r6, r2
	ldr	r5, [r4, #4]
	cmp	r0, r5
	str	r6, [r4, #8]
	bhi.w	.LBB28_29
	str	r3, [sp, #12]
	cmp	r5, r6
	ldr	r0, [r4]
	str	r5, [sp, #4]
	it	hi
	movhi	r6, r5
	sub.w	r10, r11, r6
	add	r2, r1
	str	r6, [sp, #8]
	add.w	r9, r10, #1
	movs	r6, #0
	add	r0, r11
	str	r0, [sp, #16]
.LBB28_7:
	adds.w	r0, r9, r6
	beq.w	.LBB28_31
	ldr	r0, [sp, #16]
	ldrb	r3, [r1, r6]
	adds	r5, r0, r6
	adds	r0, r1, r6
	adds	r0, #1
	add.w	r8, r11, r6
	strb	r3, [r5, #1]
	cmp	r0, r2
	add.w	r3, r8, #2
	str	r3, [r4, #8]
	beq	.LBB28_16
	add.w	r12, r10, r6
	adds.w	r3, r12, #2
	beq.w	.LBB28_31
	ldrb	r3, [r0]
	adds	r0, #1
	strb	r3, [r5, #2]
	cmp	r0, r2
	add.w	r3, r8, #3
	str	r3, [r4, #8]
	beq	.LBB28_16
	adds.w	r3, r12, #3
	beq	.LBB28_31
	ldrb	r3, [r0]
	add.w	lr, r0, #1
	strb	r3, [r5, #3]
	cmp	lr, r2
	add.w	r3, r8, #4
	str	r3, [r4, #8]
	beq	.LBB28_16
	adds.w	r0, r12, #4
	beq	.LBB28_31
	ldrb.w	r0, [lr]
	adds	r6, #4
	strb	r0, [r5, #4]
	add.w	r0, lr, #1
	cmp	r0, r2
	add.w	r3, r8, #5
	str	r3, [r4, #8]
	bne	.LBB28_7
	add.w	r0, r11, r6
	adds	r3, r0, #1
.LBB28_16:
	adds	r2, r3, #2
	ldr	r1, [r4, #4]
	cmp	r2, r1
	ldr.w	r8, [sp, #12]
	bhi	.LBB28_29
	cmp	r1, r3
	mov	r0, r3
	it	hi
	movhi	r0, r1
	cmp	r3, r1
	bhs	.LBB28_32
	ldr	r6, [r4]
	adds	r5, r3, #1
	cmp	r5, r0
	mov.w	r12, #34
	strb.w	r12, [r6, r3]
	str	r5, [r4, #8]
	beq	.LBB28_32
	movs	r0, #58
	strb	r0, [r6, r5]
	ldr	r0, [r4, #4]
	str	r2, [r4, #8]
	cmp	r2, r0
	bhs	.LBB28_29
	ldr	r0, [r4]
	movs	r1, #91
	vldr	s0, [r8]
	strb	r1, [r0, r2]
	adds	r0, r3, #3
	str	r0, [r4, #8]
	mov	r0, r4
	bl	<&mut serde_json_core::ser::Serializer as serde::ser::Serializer>::serialize_f32::h9646727876011b6e
	cbnz	r0, .LBB28_29
	ldrd	r1, r0, [r4, #4]
	cmp	r0, r1
	bhs	.LBB28_29
	ldr	r1, [r4]
	movs	r2, #44
	vldr	s0, [r8, #4]
	strb	r2, [r1, r0]
	adds	r0, #1
	str	r0, [r4, #8]
	mov	r0, r4
	bl	<&mut serde_json_core::ser::Serializer as serde::ser::Serializer>::serialize_f32::h9646727876011b6e
	cbnz	r0, .LBB28_29
	ldrd	r1, r0, [r4, #4]
	cmp	r0, r1
	bhs	.LBB28_29
	ldr	r1, [r4]
	movs	r2, #44
	vldr	s0, [r8, #8]
	strb	r2, [r1, r0]
	adds	r0, #1
	str	r0, [r4, #8]
	mov	r0, r4
	bl	<&mut serde_json_core::ser::Serializer as serde::ser::Serializer>::serialize_f32::h9646727876011b6e
	cbnz	r0, .LBB28_29
	ldrd	r1, r0, [r4, #4]
	cmp	r0, r1
	bhs	.LBB28_29
	ldr	r1, [r4]
	movs	r2, #44
	vldr	s0, [r8, #12]
	strb	r2, [r1, r0]
	adds	r0, #1
	str	r0, [r4, #8]
	mov	r0, r4
	bl	<&mut serde_json_core::ser::Serializer as serde::ser::Serializer>::serialize_f32::h9646727876011b6e
	cbnz	r0, .LBB28_29
	ldrd	r1, r0, [r4, #4]
	cmp	r0, r1
	bhs	.LBB28_29
	ldr	r1, [r4]
	movs	r2, #93
	strb	r2, [r1, r0]
	adds	r0, #1
	str	r0, [r4, #8]
	movs	r0, #0
	b	.LBB28_30
.LBB28_29:
	movs	r0, #1
.LBB28_30:
	add	sp, #20
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB28_31:
	movw	r2, :lower16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.25
	movt	r2, :upper16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.25
	ldrd	r1, r0, [sp, #4]
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB28_32:
	movw	r2, :lower16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.25
	movt	r2, :upper16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.25
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.Lfunc_end28:
	.size	<serde_json_core::ser::struct_::SerializeStruct as serde::ser::SerializeStruct>::serialize_field::h9b0dd3205c6f882a, .Lfunc_end28-<serde_json_core::ser::struct_::SerializeStruct as serde::ser::SerializeStruct>::serialize_field::h9b0dd3205c6f882a
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN6minimq13session_state33SessionState$LT$Clock$C$_$C$_$GT$13handle_puback17h378a4214fd68aadcE","ax",%progbits
	.p2align	1
	.type	minimq::session_state::SessionState<Clock,_,_>::handle_puback::h378a4214fd68aadc,%function
	.code	16
	.thumb_func
minimq::session_state::SessionState<Clock,_,_>::handle_puback::h378a4214fd68aadc:
.Lfunc_begin29:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10}
	push.w	{r8, r9, r10}
	.cfi_offset r10, -24
	.cfi_offset r9, -28
	.cfi_offset r8, -32
	.pad	#520
	sub.w	sp, sp, #520
	ldr.w	r12, [r0, #688]
	mov	r10, r0
	add.w	r2, r10, #168
	movs	r3, #0
	add.w	r0, r12, r12, lsl #6
	uxth	r6, r1
	lsls	r5, r0, #3
	add.w	r1, r2, r0, lsl #3
	mov	r0, r2
.LBB29_1:
	cmp	r5, #0
	beq	.LBB29_14
	ldrh	r4, [r0]
	cmp	r4, r6
	beq	.LBB29_12
	add.w	r4, r0, #520
	cmp	r4, r1
	beq	.LBB29_14
	ldrh.w	r4, [r0, #520]
	cmp	r4, r6
	beq	.LBB29_10
	add.w	r4, r0, #1040
	cmp	r4, r1
	beq	.LBB29_14
	ldrh.w	r4, [r0, #1040]
	cmp	r4, r6
	beq	.LBB29_11
	add.w	r4, r0, #1560
	cmp	r4, r1
	beq	.LBB29_14
	ldrh.w	r4, [r0, #1560]
	add.w	r0, r0, #2080
	adds	r3, #4
	sub.w	r5, r5, #2080
	cmp	r4, r6
	bne	.LBB29_1
	subs	r3, #1
	b	.LBB29_12
.LBB29_10:
	adds	r3, #1
	b	.LBB29_12
.LBB29_11:
	adds	r3, #2
.LBB29_12:
	cmp	r12, r3
	bls	.LBB29_28
	add.w	r0, r3, r3, lsl #6
	mov	r8, sp
	sub.w	r9, r1, #520
	add.w	r5, r2, r0, lsl #3
	mov.w	r2, #520
	mov	r0, r8
	mov	r1, r5
	bl	__aeabi_memcpy4
	mov.w	r2, #520
	mov	r0, r5
	mov	r1, r9
	bl	__aeabi_memmove4
	mov.w	r2, #520
	mov	r0, r9
	mov	r1, r8
	bl	__aeabi_memcpy4
	ldr.w	r0, [r10, #688]
	subs	r0, #1
	str.w	r0, [r10, #688]
.LBB29_14:
	ldr.w	r1, [r10, #692]
	cbz	r1, .LBB29_24
	add.w	r2, r10, #696
	rsbs	r5, r1, #0
	movs	r4, #0
	mov.w	r3, #-1
	b	.LBB29_18
.LBB29_16:
	ldrh	r1, [r2]
	movs	r4, #1
	strh	r1, [r2, #-2]
.LBB29_17:
	adds	r1, r5, r0
	adds	r2, #2
	adds	r1, #1
	mov	r3, r0
	ldr.w	r1, [r10, #692]
	beq	.LBB29_23
.LBB29_18:
	lsls	r0, r4, #31
	add.w	r0, r3, #1
	beq	.LBB29_21
	cmp	r0, r1
	bhs	.LBB29_25
	cmp	r3, r1
	blo	.LBB29_16
	b	.LBB29_27
.LBB29_21:
	cmp	r0, r1
	bhs	.LBB29_26
	ldrh	r1, [r2]
	subs	r1, r1, r6
	clz	r1, r1
	lsrs	r4, r1, #5
	b	.LBB29_17
.LBB29_23:
	cmp	r1, #0
	itt	ne
	subne	r0, r1, #1
	strne.w	r0, [r10, #692]
.LBB29_24:
	add.w	sp, sp, #520
	pop.w	{r8, r9, r10}
	pop	{r4, r5, r6, r7, pc}
.LBB29_25:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.147
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.147
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB29_26:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.149
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.149
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB29_27:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.148
	mov	r0, r3
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.148
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB29_28:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.218
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.219
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.218
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.219
	movs	r1, #34
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.Lfunc_end29:
	.size	minimq::session_state::SessionState<Clock,_,_>::handle_puback::h378a4214fd68aadc, .Lfunc_end29-minimq::session_state::SessionState<Clock,_,_>::handle_puback::h378a4214fd68aadc
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN14thermostat_eem8hardware5setup5setup17h69b53dfc2efddca9E,"ax",%progbits
	.p2align	2
	.type	thermostat_eem::hardware::setup::setup::h69b53dfc2efddca9,%function
	.code	16
	.thumb_func
thermostat_eem::hardware::setup::setup::h69b53dfc2efddca9:
.Lfunc_begin30:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#6432
	sub.w	sp, sp, #6432
	.pad	#20
	sub	sp, #20
	mov	r4, r0
	add.w	r12, r0, #69
	add.w	r6, r0, #44
	movw	r0, #18456
	movt	r0, #22530
	add	r1, sp, #52
	add.w	r8, r1, #2
	movs	r2, #6
	ldr	r1, [r0, #-12]
	bfi	r1, r2, #0, #3
	str	r1, [r0, #-12]
.LBB30_1:
	ldr	r1, [r0, #-20]
	lsls	r1, r1, #18
	bmi	.LBB30_4
	ldr	r1, [r0, #-20]
	lsls	r1, r1, #18
	itt	pl
	ldrpl	r1, [r0, #-20]
	lslspl.w	r1, r1, #18
	bmi	.LBB30_4
	ldr	r1, [r0, #-20]
	lsls	r1, r1, #18
	bpl	.LBB30_1
.LBB30_4:
	mov.w	r1, #49152
	str	r1, [r0]
.LBB30_5:
	ldr	r1, [r0]
	lsls	r1, r1, #18
	bmi	.LBB30_8
	ldr	r1, [r0]
	lsls	r1, r1, #18
	itt	pl
	ldrpl	r1, [r0]
	lslspl.w	r1, r1, #18
	bmi	.LBB30_8
	ldr	r1, [r0]
	lsls	r1, r1, #18
	bpl	.LBB30_5
.LBB30_8:
	movw	r5, #17408
	movt	r5, #22530
	ldr.w	r0, [r5, #1024]
	orr	r0, r0, #256
	str.w	r0, [r5, #1024]
.LBB30_9:
	ldr.w	r0, [r5, #1024]
	lsls	r0, r0, #23
	bmi	.LBB30_12
	ldr.w	r0, [r5, #1024]
	lsls	r0, r0, #23
	itt	pl
	ldrpl.w	r0, [r5, #1024]
	lslspl.w	r0, r0, #23
	bmi	.LBB30_12
	ldr.w	r0, [r5, #1024]
	lsls	r0, r0, #23
	bpl	.LBB30_9
.LBB30_12:
	ldr.w	r0, [r5, #220]
	movs	r1, #4
	orr	r0, r0, #-2147483648
	str.w	r0, [r5, #220]
	ldr	r0, [r5, #80]
	bfi	r0, r1, #12, #3
	str	r0, [r5, #80]
	mov.w	r0, #65536
	str.w	r0, [r5, #208]
	ldr	r2, [r5, #44]
	movs	r0, #1
	bfi	r2, r0, #1, #3
	str	r2, [r5, #44]
	ldr	r2, [r5, #40]
	bfi	r2, r1, #4, #6
	str	r2, [r5, #40]
	ldr	r3, [r5, #48]
	movs	r2, #199
	bfi	r3, r2, #0, #9
	str	r3, [r5, #48]
	ldr	r3, [r5, #44]
	bic	r3, r3, #1
	str	r3, [r5, #44]
	ldr	r3, [r5, #48]
	bic	r3, r3, #65024
	str	r3, [r5, #48]
	ldr	r3, [r5, #44]
	orr	r3, r3, #65536
	str	r3, [r5, #44]
	ldr	r3, [r5, #44]
	bic	r3, r3, #131072
	str	r3, [r5, #44]
	ldr	r3, [r5, #48]
	bfi	r3, r0, #24, #7
	str	r3, [r5, #48]
	ldr	r3, [r5, #44]
	orr	r3, r3, #262144
	str	r3, [r5, #44]
	ldr	r3, [r5, #44]
	bfi	r3, r0, #5, #3
	str	r3, [r5, #44]
	ldr	r3, [r5, #40]
	bfi	r3, r1, #12, #6
	str	r3, [r5, #40]
	ldr	r1, [r5, #56]
	bfi	r1, r2, #0, #9
	str	r1, [r5, #56]
	ldr	r1, [r5, #44]
	movs	r2, #3
	bic	r1, r1, #16
	str	r1, [r5, #44]
	ldr	r1, [r5, #56]
	bfi	r1, r2, #9, #7
	str	r1, [r5, #56]
	ldr	r1, [r5, #44]
	orr	r1, r1, #524288
	str	r1, [r5, #44]
	ldr	r1, [r5, #56]
	bfi	r1, r2, #16, #7
	str	r1, [r5, #56]
	ldr	r1, [r5, #44]
	orr	r1, r1, #1048576
	str	r1, [r5, #44]
	ldr	r1, [r5, #44]
	bic	r1, r1, #2097152
	str	r1, [r5, #44]
	ldr	r1, [r5]
	lsls	r1, r1, #31
	beq.w	.LBB30_345
	ldr	r0, [r5]
	tst.w	r0, #24
	bne.w	.LBB30_346
	ldr	r0, [r5, #116]
	orr	r0, r0, #1
	str	r0, [r5, #116]
.LBB30_15:
	ldr	r0, [r5, #116]
	lsls	r0, r0, #30
	bmi	.LBB30_18
	ldr	r0, [r5, #116]
	lsls	r0, r0, #30
	itt	pl
	ldrpl	r0, [r5, #116]
	lslspl.w	r0, r0, #30
	bmi	.LBB30_18
	ldr	r0, [r5, #116]
	lsls	r0, r0, #30
	bpl	.LBB30_15
.LBB30_18:
	movw	r0, #8192
	movw	r1, #1570
	movt	r0, #20992
	str	r1, [r0]
.LBB30_19:
	ldr	r1, [r0]
	and	r1, r1, #7
	cmp	r1, #2
	beq	.LBB30_22
	ldr	r1, [r0]
	and	r1, r1, #7
	cmp	r1, #2
	ittt	ne
	ldrne	r1, [r0]
	andne	r1, r1, #7
	cmpne	r1, #2
	beq	.LBB30_22
	ldr	r1, [r0]
	and	r1, r1, #7
	cmp	r1, #2
	bne	.LBB30_19
.LBB30_22:
	ldr	r0, [r5]
	orr	r0, r0, #128
	str	r0, [r5]
.LBB30_23:
	ldr	r0, [r5]
	lsls	r0, r0, #23
	bmi	.LBB30_26
	ldr	r0, [r5]
	lsls	r0, r0, #23
	itt	pl
	ldrpl	r0, [r5]
	lslspl.w	r0, r0, #23
	bmi	.LBB30_26
	ldr	r0, [r5]
	lsls	r0, r0, #23
	bpl	.LBB30_23
.LBB30_26:
	ldr	r0, [r5]
	orr	r0, r0, #4096
	str	r0, [r5]
.LBB30_27:
	ldr	r0, [r5]
	lsls	r0, r0, #18
	bmi	.LBB30_30
	ldr	r0, [r5]
	lsls	r0, r0, #18
	itt	pl
	ldrpl	r0, [r5]
	lslspl.w	r0, r0, #18
	bmi	.LBB30_30
	ldr	r0, [r5]
	lsls	r0, r0, #18
	bpl	.LBB30_27
.LBB30_30:
	ldr	r0, [r5, #16]
	movs	r1, #36
	bfi	r0, r1, #18, #14
	str	r0, [r5, #16]
	ldr	r0, [r5]
	bic	r0, r0, #327680
	add.w	r0, r0, #65536
	str	r0, [r5]
.LBB30_31:
	ldr	r0, [r5]
	lsls	r0, r0, #14
	bmi	.LBB30_34
	ldr	r0, [r5]
	lsls	r0, r0, #14
	itt	pl
	ldrpl	r0, [r5]
	lslspl.w	r0, r0, #14
	bmi	.LBB30_34
	ldr	r0, [r5]
	lsls	r0, r0, #14
	bpl	.LBB30_31
.LBB30_34:
	ldr	r0, [r5, #40]
	movs	r1, #2
	bfi	r0, r1, #0, #2
	str	r0, [r5, #40]
	ldr	r0, [r5]
	orr	r0, r0, #16777216
	str	r0, [r5]
.LBB30_35:
	ldr	r0, [r5]
	lsls	r0, r0, #6
	bmi	.LBB30_38
	ldr	r0, [r5]
	lsls	r0, r0, #6
	itt	pl
	ldrpl	r0, [r5]
	lslspl.w	r0, r0, #6
	bmi	.LBB30_38
	ldr	r0, [r5]
	lsls	r0, r0, #6
	bpl	.LBB30_35
.LBB30_38:
	ldr	r0, [r5]
	orr	r0, r0, #67108864
	str	r0, [r5]
.LBB30_39:
	ldr	r0, [r5]
	lsls	r0, r0, #4
	bmi	.LBB30_42
	ldr	r0, [r5]
	lsls	r0, r0, #4
	itt	pl
	ldrpl	r0, [r5]
	lslspl.w	r0, r0, #4
	bmi	.LBB30_42
	ldr	r0, [r5]
	lsls	r0, r0, #4
	bpl	.LBB30_39
.LBB30_42:
	ldr	r0, [r5, #24]
	movw	r1, #3967
	bics	r0, r1
	adds	r0, #72
	str	r0, [r5, #24]
.LBB30_43:
	ldr	r0, [r5, #24]
	tst.w	r0, #3840
	beq	.LBB30_46
	ldr	r0, [r5, #24]
	tst.w	r0, #3840
	itt	ne
	ldrne	r0, [r5, #24]
	tstne.w	r0, #3840
	beq	.LBB30_46
	ldr	r0, [r5, #24]
	tst.w	r0, #3840
	bne	.LBB30_43
.LBB30_46:
	ldr	r0, [r5, #28]
	movs	r1, #4
	bic	r0, r0, #1904
	add.w	r0, r0, #1088
	str	r0, [r5, #28]
	ldr	r0, [r5, #32]
	bfi	r0, r1, #4, #3
	str	r0, [r5, #32]
	ldr	r0, [r5, #76]
	movs	r1, #3
	bic	r0, r0, #805306368
	str	r0, [r5, #76]
	ldr	r0, [r5, #16]
	bic	r0, r0, #32768
	str	r0, [r5, #16]
	ldr	r0, [r5, #16]
	bfi	r0, r1, #0, #3
	str	r0, [r5, #16]
.LBB30_47:
	ldr	r0, [r5, #16]
	and	r0, r0, #56
	cmp	r0, #24
	beq	.LBB30_50
	ldr	r0, [r5, #16]
	and	r0, r0, #56
	cmp	r0, #24
	ittt	ne
	ldrne	r0, [r5, #16]
	andne	r0, r0, #56
	cmpne	r0, #24
	beq	.LBB30_50
	ldr	r0, [r5, #16]
	and	r0, r0, #56
	cmp	r0, #24
	bne	.LBB30_47
.LBB30_50:
	ldr	r0, [r5]
	lsls	r0, r0, #23
	bpl.w	.LBB30_347
	str	r4, [sp, #44]
	movw	r2, #1056
	strd	r12, r6, [sp, #36]
	movt	r2, #22528
	ldr.w	r0, [r5, #244]
	orr	r0, r0, #2
	str.w	r0, [r5, #244]
	movw	r1, #65532
	ldr	r0, [r2]
	movt	r1, #65534
	ands	r0, r1
	adds	r0, #1
	str	r0, [r2]
.LBB30_52:
	ldr	r0, [r2]
	lsls	r0, r0, #23
	bmi	.LBB30_55
	ldr	r0, [r2]
	lsls	r0, r0, #23
	itt	pl
	ldrpl	r0, [r2]
	lslspl.w	r0, r0, #23
	bmi	.LBB30_55
	ldr	r0, [r2]
	lsls	r0, r0, #23
	bpl	.LBB30_52
.LBB30_55:
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	ldr.w	r0, [r5, #224]
	lsls	r1, r4, #31
	orr	r0, r0, #1
	str.w	r0, [r5, #224]
	bne	.LBB30_57
	bl	__cpsie
.LBB30_57:
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	ldr.w	r0, [r5, #136]
	lsls	r1, r4, #31
	orr	r0, r0, #1
	str.w	r0, [r5, #136]
	ldr.w	r0, [r5, #136]
	bic	r0, r0, #1
	str.w	r0, [r5, #136]
	bne	.LBB30_59
	bl	__cpsie
.LBB30_59:
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	ldr.w	r0, [r5, #224]
	lsls	r1, r4, #31
	orr	r0, r0, #2
	str.w	r0, [r5, #224]
	bne	.LBB30_61
	bl	__cpsie
.LBB30_61:
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	ldr.w	r0, [r5, #136]
	lsls	r1, r4, #31
	orr	r0, r0, #2
	str.w	r0, [r5, #136]
	ldr.w	r0, [r5, #136]
	bic	r0, r0, #2
	str.w	r0, [r5, #136]
	bne	.LBB30_63
	bl	__cpsie
.LBB30_63:
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	ldr.w	r0, [r5, #224]
	lsls	r1, r4, #31
	orr	r0, r0, #4
	str.w	r0, [r5, #224]
	bne	.LBB30_65
	bl	__cpsie
.LBB30_65:
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	ldr.w	r0, [r5, #136]
	lsls	r1, r4, #31
	orr	r0, r0, #4
	str.w	r0, [r5, #136]
	ldr.w	r0, [r5, #136]
	bic	r0, r0, #4
	str.w	r0, [r5, #136]
	bne	.LBB30_67
	bl	__cpsie
.LBB30_67:
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	ldr.w	r0, [r5, #224]
	lsls	r1, r4, #31
	orr	r0, r0, #8
	str.w	r0, [r5, #224]
	bne	.LBB30_69
	bl	__cpsie
.LBB30_69:
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	ldr.w	r0, [r5, #136]
	lsls	r1, r4, #31
	orr	r0, r0, #8
	str.w	r0, [r5, #136]
	ldr.w	r0, [r5, #136]
	bic	r0, r0, #8
	str.w	r0, [r5, #136]
	bne	.LBB30_71
	bl	__cpsie
.LBB30_71:
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	ldr.w	r0, [r5, #224]
	lsls	r1, r4, #31
	orr	r0, r0, #16
	str.w	r0, [r5, #224]
	bne	.LBB30_73
	bl	__cpsie
.LBB30_73:
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	ldr.w	r0, [r5, #136]
	lsls	r1, r4, #31
	orr	r0, r0, #16
	str.w	r0, [r5, #136]
	ldr.w	r0, [r5, #136]
	bic	r0, r0, #16
	str.w	r0, [r5, #136]
	bne	.LBB30_75
	bl	__cpsie
.LBB30_75:
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	ldr.w	r0, [r5, #224]
	lsls	r1, r4, #31
	orr	r0, r0, #32
	str.w	r0, [r5, #224]
	bne	.LBB30_77
	bl	__cpsie
.LBB30_77:
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	ldr.w	r0, [r5, #136]
	lsls	r1, r4, #31
	orr	r0, r0, #32
	str.w	r0, [r5, #136]
	ldr.w	r0, [r5, #136]
	bic	r0, r0, #32
	str.w	r0, [r5, #136]
	bne	.LBB30_79
	bl	__cpsie
.LBB30_79:
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	ldr.w	r0, [r5, #224]
	lsls	r1, r4, #31
	orr	r0, r0, #64
	str.w	r0, [r5, #224]
	bne	.LBB30_81
	bl	__cpsie
.LBB30_81:
	str.w	r8, [sp, #48]
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	ldr.w	r0, [r5, #136]
	lsls	r1, r4, #31
	orr	r0, r0, #64
	str.w	r0, [r5, #136]
	ldr.w	r0, [r5, #136]
	bic	r0, r0, #64
	str.w	r0, [r5, #136]
	bne	.LBB30_83
	bl	__cpsie
.LBB30_83:
	movw	r9, #4096
	movw	r2, #64524
	movt	r9, #22530
	movt	r2, #65535
	movw	r12, #3072
	movw	r6, #6156
	movt	r12, #22530
	ldr.w	r0, [r9, r2]
	bic	r0, r0, #196608
	str.w	r0, [r9, r2]
	ldr.w	r0, [r12]
	movt	r6, #22530
	bic	r0, r0, #196608
	str.w	r0, [r12]
	ldr.w	r0, [r9, r2]
	movw	r11, #6144
	bic	r0, r0, #786432
	str.w	r0, [r9, r2]
	ldr.w	r0, [r12]
	movt	r11, #22530
	bic	r0, r0, #786432
	str.w	r0, [r12]
	ldr.w	r0, [r9, r2]
	movw	r3, #64512
	bic	r0, r0, #3145728
	str.w	r0, [r9, r2]
	ldr.w	r0, [r12]
	movt	r3, #65535
	bic	r0, r0, #3145728
	str.w	r0, [r12]
	ldr.w	r0, [r9, r2]
	movw	r4, #2048
	bic	r0, r0, #12582912
	str.w	r0, [r9, r2]
	ldr.w	r0, [r12]
	movt	r4, #22530
	bic	r0, r0, #12582912
	str.w	r0, [r12]
	ldr	r0, [r6]
	bic	r0, r0, #786432
	str	r0, [r6]
	ldr	r0, [r6, #-8]
	bic	r0, r0, #512
	str	r0, [r6, #-8]
	ldr.w	r1, [r11]
	movs	r0, #1
	bfi	r1, r0, #18, #2
	str.w	r1, [r11]
	ldr	r1, [r6]
	bic	r1, r1, #3145728
	str	r1, [r6]
	ldr	r1, [r6, #-8]
	bic	r1, r1, #1024
	str	r1, [r6, #-8]
	ldr.w	r1, [r11]
	bfi	r1, r0, #20, #2
	str.w	r1, [r11]
	ldr.w	r1, [r9, #12]
	bic	r1, r1, #196608
	str.w	r1, [r9, #12]
	ldr.w	r1, [r9, #4]
	bic	r1, r1, #256
	str.w	r1, [r9, #4]
	ldr.w	r1, [r9]
	bfi	r1, r0, #16, #2
	str.w	r1, [r9]
	ldr.w	r1, [r9, #12]
	bic	r1, r1, #3145728
	str.w	r1, [r9, #12]
	ldr.w	r1, [r9, #4]
	bic	r1, r1, #1024
	str.w	r1, [r9, #4]
	ldr.w	r1, [r9]
	bfi	r1, r0, #20, #2
	str.w	r1, [r9]
	ldr.w	r1, [r9, #12]
	bic	r1, r1, #50331648
	str.w	r1, [r9, #12]
	ldr.w	r1, [r9, #4]
	bic	r1, r1, #4096
	str.w	r1, [r9, #4]
	ldr.w	r1, [r9]
	bfi	r1, r0, #24, #2
	str.w	r1, [r9]
	ldr	r1, [r6]
	bic	r1, r1, #-1073741824
	str	r1, [r6]
	ldr	r1, [r6, #-8]
	bic	r1, r1, #32768
	str	r1, [r6, #-8]
	ldr.w	r1, [r11]
	bfi	r1, r0, #30, #2
	str.w	r1, [r11]
	ldr.w	r1, [r9, #12]
	bic	r1, r1, #-1073741824
	str.w	r1, [r9, #12]
	ldr.w	r1, [r9, #4]
	bic	r1, r1, #32768
	str.w	r1, [r9, #4]
	ldr.w	r1, [r9]
	bfi	r1, r0, #30, #2
	str.w	r1, [r9]
	ldr	r1, [r6]
	bic	r1, r1, #196608
	str	r1, [r6]
	ldr	r1, [r6, #-8]
	bic	r1, r1, #256
	str	r1, [r6, #-8]
	ldr.w	r1, [r11]
	bfi	r1, r0, #16, #2
	str.w	r1, [r11]
	ldr	r1, [r6]
	bic	r1, r1, #768
	str	r1, [r6]
	ldr	r1, [r6, #-8]
	bic	r1, r1, #16
	str	r1, [r6, #-8]
	ldr.w	r1, [r11]
	bfi	r1, r0, #8, #2
	str.w	r1, [r11]
	ldr	r1, [r6]
	bic	r1, r1, #3072
	str	r1, [r6]
	ldr	r1, [r6, #-8]
	bic	r1, r1, #32
	str	r1, [r6, #-8]
	ldr.w	r1, [r11]
	bfi	r1, r0, #10, #2
	str.w	r1, [r11]
	ldr	r1, [r6]
	bic	r1, r1, #12288
	str	r1, [r6]
	ldr	r1, [r6, #-8]
	bic	r1, r1, #64
	str	r1, [r6, #-8]
	ldr.w	r1, [r11]
	bfi	r1, r0, #12, #2
	str.w	r1, [r11]
	ldr	r1, [r6]
	bic	r1, r1, #49152
	str	r1, [r6]
	ldr	r1, [r6, #-8]
	bic	r1, r1, #128
	str	r1, [r6, #-8]
	ldr.w	r1, [r11]
	bfi	r1, r0, #14, #2
	str.w	r1, [r11]
	ldr.w	r1, [r11, r2]
	bic	r1, r1, #48
	str.w	r1, [r11, r2]
	ldr.w	r1, [r11, r3]
	bic	r1, r1, #48
	str.w	r1, [r11, r3]
	ldr.w	r1, [r9, #12]
	movw	r3, #63512
	bic	r1, r1, #49152
	str.w	r1, [r9, #12]
	ldr.w	r1, [r9]
	movt	r3, #65535
	bic	r1, r1, #49152
	str.w	r1, [r9]
	ldr.w	r1, [r9, r2]
	bic	r1, r1, #3
	str.w	r1, [r9, r2]
	ldr.w	r1, [r12, #4]
	bic	r1, r1, #1
	str.w	r1, [r12, #4]
	ldr.w	r1, [r12]
	bfi	r1, r0, #0, #2
	str.w	r1, [r12]
	ldr.w	r1, [r9, r2]
	bic	r1, r1, #48
	str.w	r1, [r9, r2]
	ldr.w	r1, [r12, #4]
	mov.w	r2, #16777216
	bic	r1, r1, #4
	str.w	r1, [r12, #4]
	ldr.w	r1, [r12]
	bfi	r1, r0, #4, #2
	str.w	r1, [r12]
	ldr	r1, [r6]
	bic	r1, r1, #50331648
	str	r1, [r6]
	ldr.w	r1, [r11]
	bic	r1, r1, #50331648
	str.w	r1, [r11]
	mov.w	r1, #1048576
	str	r1, [r6, #12]
	mov.w	r1, #2097152
	str	r1, [r6, #12]
	mov.w	r1, #4194304
	str	r1, [r6, #12]
	mov.w	r1, #8388608
	str	r1, [r6, #12]
	mov.w	r1, #33554432
	str	r1, [r6, #12]
	mov.w	r1, #67108864
	str	r1, [r6, #12]
	str.w	r2, [r11, r3]
	str.w	r1, [r11, r3]
	mov.w	r1, #268435456
	str.w	r1, [r11, r3]
	mov.w	r1, #-2147483648
	str	r1, [r6, #12]
	str.w	r1, [r11, r3]
	mov.w	r1, #65536
	str	r2, [r6, #12]
	movw	r2, #64536
	movt	r2, #65535
	movs	r3, #0
	movt	r3, #22530
	str.w	r1, [r9, r2]
	mov.w	r1, #262144
	str.w	r1, [r9, r2]
	movw	r1, #64528
	movt	r1, #65535
	ldr.w	r2, [r9, r1]
	ldr.w	r2, [r9, r1]
	ldr.w	r2, [r9, r1]
	ldr.w	r2, [r9, r1]
	ldr.w	r1, [r11, r1]
	movw	r2, #64548
	movw	r1, #63504
	movt	r2, #65535
	movt	r1, #65535
	ldr.w	r1, [r11, r1]
	ldr	r1, [r6, #4]
	ldr	r1, [r4, r2]
	movw	r6, #64544
	bfi	r1, r0, #8, #4
	str	r1, [r4, r2]
	ldr.w	r0, [r3, #1024]
	movs	r1, #2
	movt	r6, #65535
	movs	r2, #3
	bfi	r0, r1, #20, #2
	str.w	r0, [r3, #1024]
	ldr.w	r0, [r12, r6]
	bfi	r0, r2, #28, #4
	str.w	r0, [r12, r6]
	ldr	r0, [r4]
	bfi	r0, r1, #14, #2
	str	r0, [r4]
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	ldr.w	r0, [r5, #240]
	lsls	r1, r4, #31
	orr	r0, r0, #2
	str.w	r0, [r5, #240]
	bne	.LBB30_85
	bl	__cpsie
.LBB30_85:
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	ldr.w	r0, [r5, #152]
	lsls	r1, r4, #31
	orr	r0, r0, #2
	str.w	r0, [r5, #152]
	ldr.w	r0, [r5, #152]
	bic	r0, r0, #2
	str.w	r0, [r5, #152]
	bne	.LBB30_87
	bl	__cpsie
.LBB30_87:
	movw	r8, #32
	movw	r2, #1068
	movt	r8, #16385
	movt	r2, #16385
	movw	r1, #9999
	movs	r0, #0
	str.w	r0, [r8, #1032]
	str	r1, [r2]
	mov.w	r1, #32768
	str	r1, [r2, #24]
	movs	r1, #1
	str.w	r1, [r8, #992]
	str	r0, [r2, #12]
	movs	r2, #13
	ldr.w	r0, [r8, #1016]
	bfi	r0, r2, #11, #4
	str.w	r0, [r8, #1016]
	movw	r2, #63524
	ldr.w	r0, [r8, #1024]
	movt	r2, #65535
	orr	r0, r0, #16
	str.w	r0, [r8, #1024]
	ldr.w	r0, [r11, r2]
	bfi	r0, r1, #4, #4
	str.w	r0, [r11, r2]
	ldr.w	r3, [r9]
	movs	r0, #2
	bfi	r3, r0, #18, #2
	str.w	r3, [r9]
	ldr.w	r3, [r11, r2]
	bfi	r3, r1, #12, #4
	str.w	r3, [r11, r2]
	ldr.w	r3, [r9]
	bfi	r3, r0, #22, #2
	str.w	r3, [r9]
	ldr.w	r3, [r11, r2]
	bfi	r3, r1, #20, #4
	str.w	r3, [r11, r2]
	ldr.w	r3, [r9]
	bfi	r3, r0, #26, #2
	str.w	r3, [r9]
	ldr.w	r3, [r11, r2]
	bfi	r3, r1, #24, #4
	str.w	r3, [r11, r2]
	movw	r2, #3072
	ldr.w	r1, [r9]
	movt	r2, #22530
	movw	r3, #2048
	bfi	r1, r0, #28, #2
	str.w	r1, [r9]
	ldr	r1, [r2, r6]
	movt	r3, #22530
	bfi	r1, r0, #24, #4
	str	r1, [r2, r6]
	ldr	r1, [r3]
	bfi	r1, r0, #12, #2
	str	r1, [r3]
	ldr	r1, [r3, r6]
	bfi	r1, r0, #20, #4
	str	r1, [r3, r6]
	movs	r6, #0
	movt	r6, #22530
	ldr.w	r1, [r6, #1024]
	bfi	r1, r0, #10, #2
	str.w	r1, [r6, #1024]
	movw	r6, #64548
	movt	r6, #65535
	ldr	r1, [r2, r6]
	bfi	r1, r0, #0, #4
	str	r1, [r2, r6]
	ldr	r1, [r3]
	bfi	r1, r0, #16, #2
	str	r1, [r3]
	ldr	r1, [r2, r6]
	bfi	r1, r0, #4, #4
	str	r1, [r2, r6]
	ldr	r1, [r3]
	bfi	r1, r0, #18, #2
	str	r1, [r3]
	ldr.w	r1, [r9, r6]
	bfi	r1, r0, #16, #4
	str.w	r1, [r9, r6]
	ldr	r1, [r2]
	bfi	r1, r0, #24, #2
	str	r1, [r2]
	ldr.w	r1, [r9, r6]
	bfi	r1, r0, #20, #4
	str.w	r1, [r9, r6]
	ldr	r1, [r2]
	bfi	r1, r0, #26, #2
	str	r1, [r2]
	ldr.w	r1, [r9, r6]
	bfi	r1, r0, #24, #4
	str.w	r1, [r9, r6]
	ldr	r1, [r2]
	bfi	r1, r0, #28, #2
	str	r1, [r2]
	ldr.w	r1, [r9, r6]
	bfi	r1, r0, #28, #4
	str.w	r1, [r9, r6]
	ldr	r1, [r2]
	bfi	r1, r0, #30, #2
	str	r1, [r2]
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	ldr.w	r0, [r5, #240]
	lsls	r1, r4, #31
	orr	r0, r0, #1
	str.w	r0, [r5, #240]
	bne	.LBB30_89
	bl	__cpsie
.LBB30_89:
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	ldr.w	r0, [r5, #152]
	lsls	r1, r4, #31
	orr	r0, r0, #1
	str.w	r0, [r5, #152]
	ldr.w	r0, [r5, #152]
	bic	r0, r0, #1
	str.w	r0, [r5, #152]
	bne	.LBB30_91
	bl	__cpsie
.LBB30_91:
	movs	r0, #0
	str.w	r0, [r8, #8]
	movw	r0, #9999
	str.w	r0, [r8, #12]
	mov.w	r0, #32768
	str.w	r0, [r8, #36]
	movs	r0, #1
	str	r0, [r8, #-32]
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	ldr.w	r0, [r5, #232]
	lsls	r1, r4, #31
	orr	r0, r0, #2
	str.w	r0, [r5, #232]
	bne	.LBB30_93
	bl	__cpsie
.LBB30_93:
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	ldr.w	r0, [r5, #144]
	lsls	r1, r4, #31
	orr	r0, r0, #2
	str.w	r0, [r5, #144]
	ldr.w	r0, [r5, #144]
	bic	r0, r0, #2
	str.w	r0, [r5, #144]
	bne	.LBB30_95
	bl	__cpsie
.LBB30_95:
	movw	r6, #1056
	movs	r0, #0
	movt	r6, #16384
	str	r0, [r6, #8]
	movw	r0, #9999
	str	r0, [r6, #12]
	movs	r0, #1
	str	r0, [r6, #-32]
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	ldr.w	r0, [r5, #232]
	lsls	r1, r4, #31
	orr	r0, r0, #4
	str.w	r0, [r5, #232]
	bne	.LBB30_97
	bl	__cpsie
.LBB30_97:
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	ldr.w	r0, [r5, #144]
	lsls	r1, r4, #31
	orr	r0, r0, #4
	str.w	r0, [r5, #144]
	ldr.w	r0, [r5, #144]
	bic	r0, r0, #4
	str.w	r0, [r5, #144]
	bne	.LBB30_99
	bl	__cpsie
.LBB30_99:
	movw	r1, #2080
	movw	r0, #9999
	movt	r1, #16384
	mov.w	r10, #0
	movs	r2, #13
	movw	r4, #64548
	str.w	r10, [r1, #8]
	movt	r4, #65535
	str	r0, [r1, #12]
	movs	r0, #1
	str.w	r0, [r6, #992]
	movw	r5, #2048
	str.w	r10, [r8, #20]
	movt	r5, #22530
	ldr	r3, [r8, #-8]
	bfi	r3, r2, #3, #4
	str	r3, [r8, #-8]
	ldr.w	r3, [r8]
	orr	r3, r3, #1
	str.w	r3, [r8]
	str.w	r10, [r8, #24]
	ldr	r3, [r8, #-8]
	bfi	r3, r2, #11, #4
	str	r3, [r8, #-8]
	ldr.w	r3, [r8]
	orr	r3, r3, #16
	str.w	r3, [r8]
	str.w	r10, [r8, #28]
	ldr	r3, [r8, #-4]
	bfi	r3, r2, #3, #4
	str	r3, [r8, #-4]
	ldr.w	r3, [r8]
	orr	r3, r3, #256
	str.w	r3, [r8]
	str.w	r10, [r8, #32]
	ldr	r3, [r8, #-4]
	bfi	r3, r2, #11, #4
	str	r3, [r8, #-4]
	ldr.w	r3, [r8]
	orr	r3, r3, #4096
	str.w	r3, [r8]
	str.w	r10, [r6, #20]
	ldr	r3, [r6, #-8]
	bfi	r3, r2, #3, #4
	str	r3, [r6, #-8]
	ldr	r3, [r6]
	orr	r3, r3, #1
	str	r3, [r6]
	str.w	r10, [r6, #24]
	ldr	r3, [r6, #-8]
	bfi	r3, r2, #11, #4
	str	r3, [r6, #-8]
	ldr	r3, [r6]
	orr	r3, r3, #16
	str	r3, [r6]
	str.w	r10, [r6, #28]
	ldr	r3, [r6, #-4]
	bfi	r3, r2, #3, #4
	str	r3, [r6, #-4]
	ldr	r3, [r6]
	orr	r3, r3, #256
	str	r3, [r6]
	str.w	r10, [r6, #32]
	ldr	r3, [r6, #-4]
	bfi	r3, r2, #11, #4
	str	r3, [r6, #-4]
	ldr	r3, [r6]
	orr	r3, r3, #4096
	str	r3, [r6]
	str.w	r10, [r1, #20]
	ldr.w	r3, [r6, #1016]
	bfi	r3, r2, #3, #4
	str.w	r3, [r6, #1016]
	ldr	r3, [r1]
	orr	r3, r3, #1
	str	r3, [r1]
	str.w	r10, [r1, #24]
	ldr.w	r3, [r6, #1016]
	bfi	r3, r2, #11, #4
	str.w	r3, [r6, #1016]
	ldr	r3, [r1]
	movw	r6, #3072
	orr	r3, r3, #16
	str	r3, [r1]
	str.w	r10, [r1, #28]
	movt	r6, #22530
	ldr	r3, [r1, #-4]
	bfi	r3, r2, #3, #4
	str	r3, [r1, #-4]
	ldr	r3, [r1]
	orr	r3, r3, #256
	str	r3, [r1]
	str.w	r10, [r1, #32]
	ldr	r3, [r1, #-4]
	bfi	r3, r2, #11, #4
	str	r3, [r1, #-4]
	ldr	r2, [r1]
	movs	r3, #2
	orr	r2, r2, #4096
	str	r2, [r1]
	ldr	r1, [r6, r4]
	movs	r2, #6
	bfi	r1, r2, #8, #4
	str	r1, [r6, r4]
	ldr	r1, [r5]
	bfi	r1, r3, #20, #2
	str	r1, [r5]
	ldr	r1, [r6, r4]
	bfi	r1, r2, #16, #4
	str	r1, [r6, r4]
	movw	r2, #6156
	ldr	r1, [r5]
	movt	r2, #22530
	bfi	r1, r3, #24, #2
	str	r1, [r5]
	ldr	r1, [r2]
	bic	r1, r1, #192
	str	r1, [r2]
	ldr	r1, [r2, #-8]
	bic	r1, r1, #8
	str	r1, [r2, #-8]
	ldr.w	r1, [r11]
	bfi	r1, r0, #6, #2
	str.w	r1, [r11]
	ldr	r1, [r2]
	bic	r1, r1, #48
	str	r1, [r2]
	ldr	r1, [r2, #-8]
	bic	r1, r1, #4
	str	r1, [r2, #-8]
	ldr.w	r1, [r11]
	bfi	r1, r0, #4, #2
	str.w	r1, [r11]
	ldr	r1, [r2]
	bic	r1, r1, #12
	str	r1, [r2]
	ldr	r1, [r2, #-8]
	bic	r1, r1, #2
	str	r1, [r2, #-8]
	ldr.w	r1, [r11]
	bfi	r1, r0, #2, #2
	str.w	r1, [r11]
	ldr	r1, [r2]
	bic	r1, r1, #3
	str	r1, [r2]
	ldr	r1, [r2, #-8]
	bic	r1, r1, #1
	str	r1, [r2, #-8]
	ldr.w	r1, [r11]
	bfi	r1, r0, #0, #2
	str.w	r1, [r11]
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	movw	r2, #17408
	lsls	r1, r4, #31
	movt	r2, #22530
	ldr.w	r0, [r2, #232]
	orr	r0, r0, #32768
	str.w	r0, [r2, #232]
	bne	.LBB30_101
	bl	__cpsie
.LBB30_101:
	movw	r0, #15368
	movt	r0, #16384
	str.w	r10, [r0, #4]
	movw	r10, #17408
	movt	r10, #22530
	ldr.w	r1, [r10, #80]
	ubfx	r2, r1, #12, #3
	cmp	r2, #4
	bhi.w	.LBB30_371
	mov.w	r1, #805306368
.LCPI30_0:
	tbh	[pc, r2, lsl #1]
.LJTI30_0:
	.short	(.LBB30_372-(.LCPI30_0+4))/2
	.short	(.LBB30_105-(.LCPI30_0+4))/2
	.short	(.LBB30_373-(.LCPI30_0+4))/2
	.short	(.LBB30_375-(.LCPI30_0+4))/2
	.short	(.LBB30_104-(.LCPI30_0+4))/2
	.p2align	1
.LBB30_104:
	mov.w	r1, #536870912
.LBB30_105:
	ldr	r2, [r0]
	movw	r6, #6156
	bic	r2, r2, #1879048192
	movt	r6, #22530
	orrs	r1, r2
	str	r1, [r0]
	ldr	r1, [r0]
	movs	r2, #7
	bfi	r1, r2, #0, #5
	str	r1, [r0]
	mov.w	r1, #4096
	str	r1, [r0, #-8]
	mov.w	r1, #88080384
	str	r1, [r0, #4]
	mov.w	r8, #0
	str	r8, [r0, #-4]
	movw	r1, #4097
	str	r1, [r0, #-8]
	movs	r0, #4
	mov.w	r10, #8
	str.w	r10, [r6, #12]
	add	r1, sp, #64
	str	r0, [r6, #12]
	movs	r0, #2
	str	r0, [r6, #12]
	movs	r0, #1
	str	r0, [r6, #12]
	adds	r5, r1, #1
	mov.w	r0, #524288
	mov.w	r4, #2048
	str	r4, [sp, #64]
	mov	r1, r5
	str	r0, [r6, #12]
	movs	r0, #0
	bl	<stm32h7xx_hal::spi::Spi<stm32h7::stm32h743v::SPI3,stm32h7xx_hal::spi::Enabled> as embedded_hal::blocking::spi::Write<u8>>::write::ha51d71009bfdfd7b
	cmp	r0, #6
	bne.w	.LBB30_348
	mov.w	r0, #262144
	str.w	r10, [r6, #12]
	str	r4, [sp, #64]
	mov	r1, r5
	str	r0, [r6, #12]
	movs	r0, #0
	movs	r4, #0
	bl	<stm32h7xx_hal::spi::Spi<stm32h7::stm32h743v::SPI3,stm32h7xx_hal::spi::Enabled> as embedded_hal::blocking::spi::Write<u8>>::write::ha51d71009bfdfd7b
	cmp	r0, #6
	bne.w	.LBB30_349
	movs	r0, #4
	str	r0, [r6, #12]
	mov.w	r0, #131072
	mov.w	r4, #2048
	str	r4, [sp, #64]
	mov	r1, r5
	str	r0, [r6, #12]
	movs	r0, #0
	mov.w	r8, #0
	bl	<stm32h7xx_hal::spi::Spi<stm32h7::stm32h743v::SPI3,stm32h7xx_hal::spi::Enabled> as embedded_hal::blocking::spi::Write<u8>>::write::ha51d71009bfdfd7b
	cmp	r0, #6
	bne.w	.LBB30_350
	movs	r0, #2
	str	r0, [r6, #12]
	mov.w	r0, #65536
	str	r4, [sp, #64]
	str	r0, [r6, #12]
	movs	r0, #0
	mov	r1, r5
	movs	r4, #0
	bl	<stm32h7xx_hal::spi::Spi<stm32h7::stm32h743v::SPI3,stm32h7xx_hal::spi::Enabled> as embedded_hal::blocking::spi::Write<u8>>::write::ha51d71009bfdfd7b
	cmp	r0, #6
	bne.w	.LBB30_351
	movs	r0, #1
	str	r0, [r6, #12]
	movw	r1, #3072
	movw	r6, #64524
	movt	r1, #22530
	movt	r6, #65535
	movw	r2, #2048
	movs	r3, #0
	ldr	r0, [r1, r6]
	movt	r2, #22530
	bic	r0, r0, #192
	str	r0, [r1, r6]
	ldr	r0, [r2]
	movt	r3, #22530
	orr	r0, r0, #192
	str	r0, [r2]
	ldr	r0, [r3, #12]
	bic	r0, r0, #3
	str	r0, [r3, #12]
	ldr	r0, [r3]
	orr	r0, r0, #3
	str	r0, [r3]
	ldr	r0, [r3, #12]
	bic	r0, r0, #192
	str	r0, [r3, #12]
	ldr	r0, [r3]
	orr	r0, r0, #192
	str	r0, [r3]
	ldr	r0, [r3, #12]
	bic	r0, r0, #768
	str	r0, [r3, #12]
	ldr	r0, [r3]
	orr	r0, r0, #768
	str	r0, [r3]
	ldr	r0, [r3, #12]
	bic	r0, r0, #3072
	str	r0, [r3, #12]
	ldr	r0, [r3]
	orr	r0, r0, #3072
	str	r0, [r3]
	ldr	r0, [r3, #12]
	bic	r0, r0, #12288
	str	r0, [r3, #12]
	ldr	r0, [r3]
	orr	r0, r0, #12288
	str	r0, [r3]
	ldr	r0, [r2, r6]
	bic	r0, r0, #3
	str	r0, [r2, r6]
	ldr.w	r0, [r3, #1024]
	orr	r0, r0, #3
	str.w	r0, [r3, #1024]
	ldr	r0, [r2, r6]
	bic	r0, r0, #12
	str	r0, [r2, r6]
	ldr.w	r0, [r3, #1024]
	orr	r0, r0, #12
	str.w	r0, [r3, #1024]
	movw	r3, #64512
	ldr.w	r0, [r11, r6]
	movt	r3, #65535
	bic	r0, r0, #192
	str.w	r0, [r11, r6]
	ldr.w	r0, [r11, r3]
	orr	r0, r0, #192
	str.w	r0, [r11, r3]
	ldr.w	r0, [r11, r6]
	bic	r0, r0, #768
	str.w	r0, [r11, r6]
	ldr.w	r0, [r11, r3]
	orr	r0, r0, #768
	str.w	r0, [r11, r3]
	ldr.w	r0, [r11, r6]
	bic	r0, r0, #3072
	str.w	r0, [r11, r6]
	ldr.w	r0, [r11, r3]
	orr	r0, r0, #3072
	str.w	r0, [r11, r3]
	ldr.w	r0, [r11, r6]
	bic	r0, r0, #12288
	str.w	r0, [r11, r6]
	ldr.w	r0, [r11, r3]
	orr	r0, r0, #12288
	str.w	r0, [r11, r3]
	ldr.w	r0, [r11, r6]
	bic	r0, r0, #49152
	str.w	r0, [r11, r6]
	ldr.w	r0, [r11, r3]
	orr	r0, r0, #49152
	str.w	r0, [r11, r3]
	ldr	r0, [r1, r6]
	bic	r0, r0, #3
	str	r0, [r1, r6]
	ldr	r0, [r2]
	orr	r0, r0, #3
	str	r0, [r2]
	ldr	r0, [r1, r6]
	bic	r0, r0, #48
	str	r0, [r1, r6]
	ldr	r0, [r2]
	orr	r0, r0, #48
	str	r0, [r2]
	ldr.w	r0, [r11, r6]
	bic	r0, r0, #196608
	str.w	r0, [r11, r6]
	movw	r6, #17408
	ldr.w	r0, [r11, r3]
	movt	r6, #22530
	orr	r0, r0, #196608
	str.w	r0, [r11, r3]
	ldr	r0, [r6, #88]
	ubfx	r0, r0, #16, #2
	cbz	r0, .LBB30_111
	cmp	r0, #2
	bne.w	.LBB30_341
.LBB30_111:
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	ldr.w	r0, [r6, #216]
	lsls	r1, r4, #31
	orr	r0, r0, #32
	str.w	r0, [r6, #216]
	bne	.LBB30_113
	bl	__cpsie
.LBB30_113:
	movw	r5, #8200
	movs	r1, #2
	movt	r5, #16386
	ldr	r0, [r5]
	bfi	r0, r1, #28, #2
	str	r0, [r5]
	ldr.w	r0, [r5, #256]
	bfi	r0, r1, #28, #2
	str.w	r0, [r5, #256]
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	ldr.w	r0, [r6, #128]
	lsls	r1, r4, #31
	orr	r0, r0, #32
	str.w	r0, [r6, #128]
	ldr.w	r0, [r6, #128]
	bic	r0, r0, #32
	str.w	r0, [r6, #128]
	bne	.LBB30_115
	bl	__cpsie
.LBB30_115:
	ldr	r0, [r5]
	movs	r4, #1
	bfi	r0, r4, #28, #2
	str	r0, [r5]
	mov.w	r0, #8000
	bl	__delay
	ldr.w	r0, [r5, #256]
	bfi	r0, r4, #28, #2
	str.w	r0, [r5, #256]
	mov.w	r0, #8000
	bl	__delay
	movs	r0, #0
	str.w	r0, [r5, #184]
	str.w	r0, [r5, #440]
	ldr	r1, [r5]
	lsls	r1, r1, #31
	bne.w	.LBB30_353
	ldr	r0, [r5]
	lsls	r0, r0, #2
	bmi.w	.LBB30_339
	ldr	r0, [r5]
	lsls	r0, r0, #3
	bpl.w	.LBB30_340
	movw	r10, #65535
	ldr	r0, [r5]
	movt	r10, #49150
	and.w	r0, r0, r10
	add.w	r0, r0, #65536
	str	r0, [r5]
	ldr	r0, [r5]
	orr	r0, r0, #-2147483648
	str	r0, [r5]
.LBB30_119:
	ldr	r0, [r5]
	cmp.w	r0, #-1
	bgt	.LBB30_122
	ldr	r0, [r5]
	cmp.w	r0, #-1
	itt	le
	ldrle	r0, [r5]
	cmple.w	r0, #-1
	bgt	.LBB30_122
	ldr	r0, [r5]
	cmp	r0, #0
	bmi	.LBB30_119
.LBB30_122:
	ldr.w	r0, [r5, #256]
	lsls	r0, r0, #31
	bne.w	.LBB30_354
	ldr.w	r0, [r5, #256]
	lsls	r0, r0, #2
	bmi.w	.LBB30_339
	ldr.w	r0, [r5, #256]
	lsls	r0, r0, #3
	bpl.w	.LBB30_340
	ldr.w	r0, [r5, #256]
	and.w	r0, r0, r10
	orr	r0, r0, #65536
	str.w	r0, [r5, #256]
	ldr.w	r0, [r5, #256]
	orr	r0, r0, #-2147483648
	str.w	r0, [r5, #256]
.LBB30_126:
	ldr.w	r0, [r5, #256]
	cmp.w	r0, #-1
	bgt	.LBB30_129
	ldr.w	r0, [r5, #256]
	cmp.w	r0, #-1
	itt	le
	ldrle.w	r0, [r5, #256]
	cmple.w	r0, #-1
	bgt	.LBB30_129
	ldr.w	r0, [r5, #256]
	cmp	r0, #0
	bmi	.LBB30_126
.LBB30_129:
	movw	r0, #17408
	movt	r0, #22530
	ldr	r0, [r0, #88]
	ubfx	r0, r0, #16, #2
	cbz	r0, .LBB30_131
	cmp	r0, #2
	bne.w	.LBB30_341
.LBB30_131:
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	movw	r2, #17408
	lsls	r1, r4, #31
	movt	r2, #22530
	ldr.w	r0, [r2, #224]
	orr	r0, r0, #16777216
	str.w	r0, [r2, #224]
	bne	.LBB30_133
	bl	__cpsie
.LBB30_133:
	movw	r6, #24584
	movs	r1, #2
	movt	r6, #22530
	ldr	r0, [r6]
	bfi	r0, r1, #28, #2
	str	r0, [r6]
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	movw	r2, #17408
	lsls	r1, r4, #31
	movt	r2, #22530
	ldr.w	r0, [r2, #136]
	orr	r0, r0, #16777216
	str.w	r0, [r2, #136]
	ldr.w	r0, [r2, #136]
	bic	r0, r0, #16777216
	str.w	r0, [r2, #136]
	bne	.LBB30_135
	bl	__cpsie
.LBB30_135:
	ldr	r0, [r6]
	movs	r4, #1
	bfi	r0, r4, #28, #2
	str	r0, [r6]
	mov.w	r0, #8000
	bl	__delay
	movs	r0, #0
	str.w	r0, [r6, #184]
	ldr	r1, [r6]
	lsls	r1, r1, #31
	bne.w	.LBB30_358
	ldr	r0, [r6]
	lsls	r0, r0, #2
	bmi.w	.LBB30_359
	ldr	r0, [r6]
	lsls	r0, r0, #3
	bpl.w	.LBB30_360
	ldr	r0, [r6]
	and.w	r0, r0, r10
	orr	r0, r0, #65536
	str	r0, [r6]
	ldr	r0, [r6]
	orr	r0, r0, #-2147483648
	str	r0, [r6]
.LBB30_139:
	ldr	r0, [r6]
	cmp.w	r0, #-1
	bgt	.LBB30_142
	ldr	r0, [r6]
	cmp.w	r0, #-1
	itt	le
	ldrle	r0, [r6]
	cmple.w	r0, #-1
	bgt	.LBB30_142
	ldr	r0, [r6]
	cmp	r0, #0
	bmi	.LBB30_139
.LBB30_142:
	ldr	r0, [r5, #-8]
	movw	r10, #17408
	orr	r0, r0, #1
	str	r0, [r5, #-8]
	ldr	r0, [r5]
	movt	r10, #22530
	orr	r0, r0, #1
	str	r0, [r5]
.LBB30_143:
	ldr	r0, [r5, #-8]
	lsls	r0, r0, #31
	bne	.LBB30_146
	ldr	r0, [r5, #-8]
	lsls	r0, r0, #31
	itt	eq
	ldreq	r0, [r5, #-8]
	lslseq.w	r0, r0, #31
	bne	.LBB30_146
	ldr	r0, [r5, #-8]
	lsls	r0, r0, #31
	beq	.LBB30_143
.LBB30_146:
	ldr	r0, [r5, #-8]
	orr	r0, r0, #1
	str	r0, [r5, #-8]
	ldr	r0, [r5, #4]
	bic	r0, r0, #76800
	add.w	r0, r0, #65536
	str	r0, [r5, #4]
	ldr	r0, [r5]
	orr	r0, r0, #768
	str	r0, [r5]
	ldr	r0, [r6, #-8]
	orr	r0, r0, #1
	str	r0, [r6, #-8]
	ldr	r0, [r6]
	orr	r0, r0, #1
	str	r0, [r6]
.LBB30_147:
	ldr	r0, [r6, #-8]
	lsls	r0, r0, #31
	bne	.LBB30_150
	ldr	r0, [r6, #-8]
	lsls	r0, r0, #31
	itt	eq
	ldreq	r0, [r6, #-8]
	lslseq.w	r0, r0, #31
	bne	.LBB30_150
	ldr	r0, [r6, #-8]
	lsls	r0, r0, #31
	beq	.LBB30_147
.LBB30_150:
	ldr	r0, [r6, #-8]
	add	r4, sp, #52
	orr	r0, r0, #1
	str	r0, [r6, #-8]
	ldr	r0, [r6, #4]
	movs	r5, #136
	bic	r0, r0, #76800
	mov.w	r8, #0
	add.w	r0, r0, #65536
	str	r0, [r6, #4]
	ldr	r0, [r6]
	movt	r5, #22528
	orr	r0, r0, #768
	str	r0, [r6]
	movs	r0, #4
	ldr	r1, [sp, #48]
	strh.w	r0, [sp, #52]
	strh.w	r0, [sp, #57]
	mov	r0, r4
	strb.w	r8, [r1, #2]
	strh.w	r8, [r1]
	strb.w	r8, [r1, #7]
	strh.w	r8, [r1, #5]
	bl	thermostat_eem::hardware::adc_internal::AdcInternal::read_p3v3_voltage::h6384078c1e9603b1
	mov	r0, r4
	bl	thermostat_eem::hardware::adc_internal::AdcInternal::read_p5v_voltage::hd7943cf86bed6258
	mov	r0, r4
	bl	thermostat_eem::hardware::adc_internal::AdcInternal::read_p12v_voltage::h207bff0f1b1841c3
	mov	r0, r4
	bl	thermostat_eem::hardware::adc_internal::AdcInternal::read_p12v_current::hf5e87fe4806b3249
	movs	r6, #0
	movw	r3, #3072
	movt	r6, #22530
	movw	r12, #64524
	movs	r1, #2
	movt	r3, #22530
	ldr	r0, [r6, #36]
	movt	r12, #65535
	bic	r0, r0, #15
	str	r0, [r6, #36]
	ldr	r0, [r6]
	movw	r4, #2048
	bfi	r0, r1, #16, #2
	str	r0, [r6]
	ldr.w	r2, [r3, r12]
	movs	r0, #1
	movt	r4, #22530
	bfi	r2, r0, #22, #2
	str.w	r2, [r3, r12]
	movw	r3, #1056
	ldr	r2, [r4]
	movt	r3, #22528
	bic	r2, r2, #12582912
	str	r2, [r4]
	ldr	r2, [r3, #-16]
	bfi	r2, r1, #12, #4
	str	r2, [r3, #-16]
	ldr	r2, [r5, #-132]
	mov.w	r3, #1476395008
	orr	r2, r2, #2048
	str	r2, [r5, #-132]
	ldr	r2, [r3]
	movs	r5, #5
	bic	r2, r2, #2048
	str	r2, [r3]
	movw	r2, #63520
	movt	r2, #65535
	ldr.w	r3, [r11, r2]
	bfi	r3, r5, #8, #4
	str.w	r3, [r11, r2]
	ldr.w	r3, [r9]
	bfi	r3, r1, #4, #2
	str.w	r3, [r9]
	ldr.w	r3, [r11, r2]
	bfi	r3, r5, #20, #4
	str.w	r3, [r11, r2]
	ldr.w	r3, [r9]
	bfi	r3, r1, #10, #2
	str.w	r3, [r9]
	ldr.w	r3, [r11, r2]
	bfi	r3, r5, #24, #4
	str.w	r3, [r11, r2]
	ldr.w	r2, [r9]
	bfi	r2, r1, #12, #2
	str.w	r2, [r9]
	ldr.w	r1, [r9, #12]
	bic	r1, r1, #3
	str.w	r1, [r9, #12]
	ldr.w	r1, [r9, #4]
	bic	r1, r1, #1
	str.w	r1, [r9, #4]
	ldr.w	r1, [r9]
	bfi	r1, r0, #0, #2
	str.w	r1, [r9]
	ldr.w	r1, [r9, #12]
	bic	r1, r1, #12
	str.w	r1, [r9, #12]
	ldr.w	r1, [r9, #4]
	bic	r1, r1, #2
	str.w	r1, [r9, #4]
	ldr.w	r1, [r9]
	bfi	r1, r0, #2, #2
	str.w	r1, [r9]
	ldr.w	r1, [r9, #12]
	bic	r1, r1, #192
	str.w	r1, [r9, #12]
	ldr.w	r1, [r9, #4]
	bic	r1, r1, #8
	str.w	r1, [r9, #4]
	ldr.w	r1, [r9]
	bfi	r1, r0, #6, #2
	str.w	r1, [r9]
	ldr.w	r1, [r9, #12]
	bic	r1, r1, #768
	str.w	r1, [r9, #12]
	ldr.w	r1, [r9, #4]
	bic	r1, r1, #16
	str.w	r1, [r9, #4]
	ldr.w	r1, [r9]
	bfi	r1, r0, #8, #2
	str.w	r1, [r9]
	ldr.w	r1, [r4, r12]
	bic	r1, r1, #12582912
	str.w	r1, [r4, r12]
	movw	r1, #64516
	movt	r1, #65535
	ldr	r2, [r4, r1]
	bic	r2, r2, #2048
	str	r2, [r4, r1]
	ldr.w	r1, [r6, #1024]
	bfi	r1, r0, #22, #2
	str.w	r1, [r6, #1024]
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	ldr.w	r0, [r10, #240]
	lsls	r1, r4, #31
	orr	r0, r0, #8192
	str.w	r0, [r10, #240]
	bne	.LBB30_152
	bl	__cpsie
.LBB30_152:
	movw	r0, #13320
	movt	r0, #16385
	str.w	r8, [r0, #4]
	ldr.w	r1, [r10, #80]
	ubfx	r1, r1, #16, #3
	cmp	r1, #2
	bhs	.LBB30_154
	mov.w	r1, #536870912
	b	.LBB30_156
.LBB30_154:
	cmp	r1, #3
	bne.w	.LBB30_343
	mov.w	r1, #268435456
.LBB30_156:
	ldr	r2, [r0]
	movw	r4, #63512
	bic	r2, r2, #1879048192
	movt	r4, #65535
	orrs	r1, r2
	str	r1, [r0]
	ldr	r1, [r0]
	movs	r2, #7
	bfi	r1, r2, #0, #5
	str	r1, [r0]
	mov.w	r1, #4096
	str	r1, [r0, #-8]
	mov.w	r1, #121634816
	str	r1, [r0, #4]
	movs	r1, #0
	str	r1, [r0, #-4]
	movw	r2, #4097
	str	r2, [r0, #-8]
	movs	r0, #1
	movw	r8, #2048
	movw	r10, #64536
	strb.w	r1, [sp, #2420]
	str.w	r1, [sp, #2416]
	movt	r8, #22530
	str.w	r0, [r11, r4]
	movs	r0, #16
	movt	r10, #65535
	mov.w	r9, #2
	str.w	r9, [r11, r4]
	movs	r5, #8
	str.w	r5, [r11, r4]
	add.w	r6, sp, #2416
	str.w	r0, [r11, r4]
	mov.w	r0, #134217728
	str.w	r0, [r8, r10]
	mov.w	r0, #65536
	str.w	r0, [r11, r4]
	mov.w	r1, #800
	mov	r0, r6
	bl	thermostat_eem::hardware::adc::Adc::setup_adc::h59001fe7d7675597
	movs	r0, #1
	str.w	r0, [r11, r4]
	mov.w	r0, #131072
	str.w	r0, [r11, r4]
	mov.w	r1, #800
	mov	r0, r6
	bl	thermostat_eem::hardware::adc::Adc::setup_adc::h59001fe7d7675597
	mov.w	r0, #524288
	str.w	r9, [r11, r4]
	str.w	r0, [r11, r4]
	mov.w	r1, #800
	mov	r0, r6
	bl	thermostat_eem::hardware::adc::Adc::setup_adc::h59001fe7d7675597
	mov.w	r0, #1048576
	str.w	r5, [r11, r4]
	str.w	r0, [r11, r4]
	mov.w	r1, #800
	mov	r0, r6
	bl	thermostat_eem::hardware::adc::Adc::setup_adc::h59001fe7d7675597
	movs	r0, #16
	str.w	r0, [r11, r4]
	mov.w	r0, #2048
	str.w	r0, [r8, r10]
	movw	r10, #136
	movw	r5, #6156
	movt	r10, #22528
	movt	r5, #22530
	movs	r1, #1
	str.w	r0, [r10]
	ldr.w	r0, [r10]
	ldr.w	r0, [r10]
	mov.w	r0, #65536
	str.w	r0, [r11, r4]
	ldr	r0, [r10, #-8]
	orr	r0, r0, #2048
	str	r0, [r10, #-8]
	ldr	r0, [r5]
	bic	r0, r0, #805306368
	str	r0, [r5]
	ldr	r0, [r5, #-8]
	bic	r0, r0, #16384
	str	r0, [r5, #-8]
	ldr.w	r0, [r11]
	bfi	r0, r1, #28, #2
	str.w	r0, [r11]
	mov.w	r0, #1073741824
	str	r0, [r5, #12]
	movw	r0, #28928
	movt	r0, #2
	bl	__delay
	movs	r6, #0
	mov.w	r0, #16384
	movt	r6, #22530
	str	r0, [r5, #12]
	movs	r1, #11
	movw	r3, #3072
	ldr	r0, [r6, #32]
	movw	r4, #64544
	bfi	r0, r1, #4, #4
	str	r0, [r6, #32]
	ldr	r0, [r6]
	movt	r3, #22530
	bfi	r0, r9, #2, #2
	str	r0, [r6]
	ldr	r0, [r6, #8]
	movt	r4, #65535
	orr	r0, r0, #12
	str	r0, [r6, #8]
	ldr	r0, [r6, #32]
	bfi	r0, r1, #8, #4
	str	r0, [r6, #32]
	ldr	r0, [r6]
	bfi	r0, r9, #4, #2
	str	r0, [r6]
	ldr	r0, [r6, #8]
	orr	r0, r0, #48
	str	r0, [r6, #8]
	ldr	r0, [r3, r4]
	bfi	r0, r1, #4, #4
	str	r0, [r3, r4]
	ldr.w	r0, [r8]
	bfi	r0, r9, #2, #2
	str.w	r0, [r8]
	movw	r0, #64520
	movt	r0, #65535
	ldr	r2, [r3, r0]
	orr	r2, r2, #12
	str	r2, [r3, r0]
	ldr	r2, [r6, #32]
	bfi	r2, r1, #28, #4
	str	r2, [r6, #32]
	ldr	r2, [r6]
	bfi	r2, r9, #14, #2
	str	r2, [r6]
	ldr	r2, [r6, #8]
	orr	r2, r2, #49152
	str	r2, [r6, #8]
	ldr	r2, [r3, r4]
	bfi	r2, r1, #16, #4
	str	r2, [r3, r4]
	ldr.w	r2, [r8]
	bfi	r2, r9, #8, #2
	str.w	r2, [r8]
	ldr	r2, [r3, r0]
	orr	r2, r2, #768
	str	r2, [r3, r0]
	ldr	r2, [r3, r4]
	bfi	r2, r1, #20, #4
	str	r2, [r3, r4]
	ldr.w	r2, [r8]
	movw	r4, #64548
	bfi	r2, r9, #10, #2
	str.w	r2, [r8]
	ldr	r2, [r3, r0]
	movt	r4, #65535
	orr	r2, r2, #3072
	str	r2, [r3, r0]
	ldr	r2, [r5, #24]
	bfi	r2, r1, #12, #4
	str	r2, [r5, #24]
	ldr.w	r2, [r11]
	bfi	r2, r9, #22, #2
	str.w	r2, [r11]
	ldr	r2, [r5, #-4]
	orr	r2, r2, #12582912
	str	r2, [r5, #-4]
	ldr	r2, [r5, #24]
	bfi	r2, r1, #20, #4
	str	r2, [r5, #24]
	ldr.w	r2, [r11]
	bfi	r2, r9, #26, #2
	str.w	r2, [r11]
	ldr	r2, [r5, #-4]
	orr	r2, r2, #201326592
	str	r2, [r5, #-4]
	ldr.w	r2, [r8, r4]
	bfi	r2, r1, #20, #4
	str.w	r2, [r8, r4]
	ldr.w	r1, [r6, #1024]
	bfi	r1, r9, #26, #2
	str.w	r1, [r6, #1024]
	ldr.w	r1, [r8, r0]
	orr	r1, r1, #201326592
	str.w	r1, [r8, r0]
	ldr	r1, [r6, #8]
	orr	r1, r1, #12
	str	r1, [r6, #8]
	ldr	r1, [r6, #8]
	orr	r1, r1, #48
	str	r1, [r6, #8]
	ldr	r1, [r3, r0]
	orr	r1, r1, #12
	str	r1, [r3, r0]
	ldr	r1, [r6, #8]
	orr	r1, r1, #49152
	str	r1, [r6, #8]
	ldr	r1, [r3, r0]
	movw	r6, #17408
	orr	r1, r1, #768
	str	r1, [r3, r0]
	ldr	r1, [r3, r0]
	movt	r6, #22530
	orr	r1, r1, #3072
	str	r1, [r3, r0]
	ldr	r1, [r5, #-4]
	orr	r1, r1, #12582912
	str	r1, [r5, #-4]
	ldr	r1, [r5, #-4]
	orr	r1, r1, #201326592
	str	r1, [r5, #-4]
	ldr.w	r1, [r8, r0]
	orr	r1, r1, #201326592
	str.w	r1, [r8, r0]
	ldr.w	r0, [r6, #244]
	orr	r0, r0, #2
	str.w	r0, [r6, #244]
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	ldr.w	r0, [r6, #216]
	lsls	r1, r4, #31
	orr	r0, r0, #32768
	str.w	r0, [r6, #216]
	bne	.LBB30_158
	bl	__cpsie
.LBB30_158:
	ldr.w	r0, [r6, #216]
	movw	r5, #36864
	orr	r0, r0, #196608
	str.w	r0, [r6, #216]
	ldr.w	r0, [r10, #892]
	movs	r1, #4
	movt	r5, #16386
	bfi	r0, r1, #21, #3
	str.w	r0, [r10, #892]
	bl	__primask_r
	mov	r8, r0
	bl	__cpsid
	ldr	r0, [r5]
	orr	r0, r0, #1
	str	r0, [r5]
.LBB30_159:
	ldr	r0, [r5]
	lsls	r0, r0, #31
	beq	.LBB30_162
	ldr	r0, [r5]
	lsls	r0, r0, #31
	itt	ne
	ldrne	r0, [r5]
	lslsne.w	r0, r0, #31
	beq	.LBB30_162
	ldr	r0, [r5]
	lsls	r0, r0, #31
	bne	.LBB30_159
.LBB30_162:
	movw	r6, #33280
	movw	r0, #65244
	movt	r6, #16386
	movt	r0, #65535
	movs	r2, #199
	mov.w	r10, #0
	ldr	r1, [r6, r0]
	movw	r4, #37124
	bfi	r1, r2, #0, #12
	movw	r2, #65024
	movt	r2, #65535
	str	r1, [r6, r0]
	movw	r1, #38035
	movt	r4, #16386
	ldr	r0, [r6, r2]
	movt	r1, #28879
	ands	r0, r1
	movw	r11, :lower16:thermostat_eem::hardware::setup::DES_RING::hb906d6ece668422b
	orr	r0, r0, #137363456
	movt	r11, :upper16:thermostat_eem::hardware::setup::DES_RING::hb906d6ece668422b
	orr	r0, r0, #24832
	str	r0, [r6, r2]
	movw	r0, #65028
	movw	r2, #65535
	movt	r0, #65535
	movt	r2, #65272
	ldr	r1, [r6, r0]
	ands	r1, r2
	str	r1, [r6, r0]
	movw	r0, #7044
	movw	r2, #63488
	movt	r0, #32768
	str.w	r0, [r6, #256]
	movw	r0, #8064
	movt	r2, #32718
	movt	r0, #25362
	str.w	r0, [r6, #260]
	movw	r0, #65032
	movt	r0, #65535
	ldr	r1, [r6, r0]
	ands	r1, r2
	str	r1, [r6, r0]
	movw	r0, #65036
	movs	r2, #96
	movt	r0, #65535
	movt	r2, #1026
	str.w	r10, [r6, r0]
	movw	r0, #65136
	movt	r0, #65535
	ldr	r1, [r6, r0]
	movt	r1, #256
	str	r1, [r6, r0]
	movw	r0, #65168
	movt	r0, #65535
	ldr	r1, [r6, r0]
	str	r1, [r6, r0]
	movw	r0, #34572
	movt	r0, #16386
	ldr	r1, [r0]
	orrs	r1, r2
	str	r1, [r0]
	ldr	r1, [r0, #4]
	movs	r2, #4
	orr	r1, r1, #67108864
	orr	r1, r1, #2146304
	str	r1, [r0, #4]
	ldr	r1, [r0, #4]
	orr	r1, r1, #134217728
	str	r1, [r0, #4]
	ldr	r1, [r0]
	orr	r1, r1, #134217728
	str	r1, [r0]
	movw	r0, #64816
	movt	r0, #65535
	ldr	r1, [r5, r0]
	bfi	r1, r2, #3, #4
	str	r1, [r5, r0]
	movw	r1, #64768
	movt	r1, #65535
	ldr	r0, [r5, r1]
	orr	r0, r0, #2
	str	r0, [r5, r1]
	movw	r1, #34813
	ldr	r0, [r5]
	movt	r1, #65532
	ands	r0, r1
	str	r0, [r5]
	ldr	r0, [r5, #4]
	movw	r1, #4097
	orrs	r0, r1
	str	r0, [r5, #4]
	movw	r1, #49152
	ldr.w	r0, [r5, #256]
	movt	r1, #65506
	ands	r0, r1
	movw	r1, #61423
	add.w	r0, r0, #536
	str.w	r0, [r5, #256]
	ldr	r0, [r4]
	movt	r1, #65472
	ands	r0, r1
	movw	r1, #32769
	add.w	r0, r0, #2097152
	str	r0, [r4]
	ldr	r0, [r4, #4]
	movt	r1, #32704
	ands	r0, r1
	mov.w	r1, #6208
	orr	r0, r0, #2097152
	orr	r0, r0, #3072
	str	r0, [r4, #4]
	and	r0, r8, #1
	str	r0, [sp, #48]
	str.w	r10, [r11, r1]
	movs	r1, #64
	mov	r0, r11
	bl	__aeabi_memclr
	movw	r0, #6212
	movw	r9, #12420
	add.w	r5, r11, r0
	movs	r1, #64
	mov	r0, r5
	str.w	r11, [r4, #16]
	mov.w	r8, #3
	str.w	r8, [r4, #40]
	str.w	r11, [r4, #28]
	str.w	r10, [r11, r9]
	bl	__aeabi_memclr
	str	r5, [r4, #24]
	movs	r0, #0
	str.w	r8, [r4, #44]
	movw	r8, #6224
	add.w	r0, r11, r0, lsl #4
	ldr.w	r0, [r0, r8]
	cmp	r0, #0
	bmi	.LBB30_166
.LBB30_163:
	ldr.w	r4, [r11, r9]
	cmp	r4, #3
	bhi.w	.LBB30_330
	add.w	r0, r11, r4, lsl #4
	ldr.w	r1, [r0, r8]
	cmp	r1, #0
	bmi.w	.LBB30_335
	add.w	r1, r4, r4, lsl #1
	mov	r10, r11
	lsls	r2, r4, #4
	add	r0, r8
	add.w	r1, r5, r1, lsl #9
	add.w	r11, r5, r4, lsl #4
	adds	r1, #64
	str	r1, [r5, r2]
	movs	r1, #0
	str.w	r1, [r11, #4]
	str.w	r1, [r11, #8]
	mov.w	r1, #-1056964608
	str	r1, [r0]
	bl	__dsb
	movw	r0, #37124
	movt	r0, #16386
	str.w	r11, [r0, #36]
	adds	r0, r4, #1
	and	r0, r0, #3
	str.w	r0, [r10, r9]
	mov	r11, r10
	add.w	r0, r11, r0, lsl #4
	ldr.w	r0, [r0, r8]
	cmp	r0, #0
	bpl	.LBB30_163
.LBB30_166:
	bl	__dsb
	movw	r1, #65024
	movw	r2, #64768
	movt	r1, #65535
	movt	r2, #65535
	ldr	r0, [r6, r1]
	orr	r0, r0, #3
	str	r0, [r6, r1]
	movw	r1, #36864
	movt	r1, #16386
	ldr	r0, [r1, r2]
	orr	r0, r0, #1
	str	r0, [r1, r2]
	movw	r1, #37124
	movt	r1, #16386
	ldr	r0, [r1]
	orr	r0, r0, #1
	str	r0, [r1]
	ldr	r0, [r1, #4]
	orr	r0, r0, #1
	str	r0, [r1, #4]
	ldr	r0, [r1, #92]
	ldr	r2, [sp, #48]
	orr	r0, r0, #258
	str	r0, [r1, #92]
	cbnz	r2, .LBB30_168
	bl	__cpsie
.LBB30_168:
	ldr	r0, [r6]
	lsls	r0, r0, #31
	beq	.LBB30_171
	ldr	r0, [r6]
	lsls	r0, r0, #31
	itt	ne
	ldrne	r0, [r6]
	lslsne.w	r0, r0, #31
	beq	.LBB30_171
	ldr	r0, [r6]
	lsls	r0, r0, #31
	bne	.LBB30_168
.LBB30_171:
	mov.w	r0, #32768
	str	r0, [r6, #4]
	movw	r0, #61682
	ldr	r1, [r6]
	movt	r0, #64512
	ands	r1, r0
	addw	r1, r1, #1029
	str	r1, [r6]
.LBB30_172:
	ldr	r1, [r6]
	lsls	r1, r1, #31
	beq	.LBB30_175
	ldr	r1, [r6]
	lsls	r1, r1, #31
	itt	ne
	ldrne	r1, [r6]
	lslsne.w	r1, r1, #31
	beq	.LBB30_175
	ldr	r1, [r6]
	lsls	r1, r1, #31
	bne	.LBB30_172
.LBB30_175:
	movw	r1, #1037
	b	.LBB30_177
.LBB30_176:
	ldr	r2, [r6, #4]
	lsls	r2, r2, #16
	bpl	.LBB30_185
.LBB30_177:
	ldr	r2, [r6]
	lsls	r2, r2, #31
	beq	.LBB30_179
	ldr	r2, [r6]
	lsls	r2, r2, #31
	itt	ne
	ldrne	r2, [r6]
	lslsne.w	r2, r2, #31
	bne	.LBB30_183
.LBB30_179:
	ldr	r2, [r6]
	ands	r2, r0
	orrs	r2, r1
	str	r2, [r6]
.LBB30_180:
	ldr	r2, [r6]
	lsls	r2, r2, #31
	beq	.LBB30_176
	ldr	r2, [r6]
	lsls	r2, r2, #31
	itt	ne
	ldrne	r2, [r6]
	lslsne.w	r2, r2, #31
	beq	.LBB30_176
	ldr	r2, [r6]
	lsls	r2, r2, #31
	bne	.LBB30_180
	b	.LBB30_176
.LBB30_183:
	ldr	r2, [r6]
	lsls	r2, r2, #31
	bne	.LBB30_177
	b	.LBB30_179
.LBB30_184:
	ldr	r1, [r6]
	lsls	r1, r1, #31
	beq	.LBB30_187
.LBB30_185:
	ldr	r1, [r6]
	lsls	r1, r1, #31
	beq	.LBB30_187
	ldr	r1, [r6]
	lsls	r1, r1, #31
	itt	ne
	ldrne	r1, [r6]
	lslsne.w	r1, r1, #31
	bne	.LBB30_184
.LBB30_187:
	movs	r1, #3
	str	r1, [r6, #4]
	ldr	r2, [r6]
	movw	r1, #1029
	movt	r1, #13
	ands	r2, r0
	orrs	r2, r1
	str	r2, [r6]
.LBB30_188:
	ldr	r2, [r6]
	lsls	r2, r2, #31
	beq	.LBB30_191
	ldr	r2, [r6]
	lsls	r2, r2, #31
	itt	ne
	ldrne	r2, [r6]
	lslsne.w	r2, r2, #31
	beq	.LBB30_191
	ldr	r2, [r6]
	lsls	r2, r2, #31
	bne	.LBB30_188
.LBB30_191:
	ldr	r2, [r6]
	lsls	r2, r2, #31
	beq	.LBB30_194
	ldr	r2, [r6]
	lsls	r2, r2, #31
	itt	ne
	ldrne	r2, [r6]
	lslsne.w	r2, r2, #31
	beq	.LBB30_194
	ldr	r2, [r6]
	lsls	r2, r2, #31
	bne	.LBB30_191
.LBB30_194:
	movw	r2, #32784
	str	r2, [r6, #4]
	ldr	r2, [r6]
	and.w	r3, r2, r0
	add.w	r2, r1, #65536
	orrs	r3, r2
	str	r3, [r6]
.LBB30_195:
	ldr	r3, [r6]
	lsls	r3, r3, #31
	beq	.LBB30_198
	ldr	r3, [r6]
	lsls	r3, r3, #31
	itt	ne
	ldrne	r3, [r6]
	lslsne.w	r3, r3, #31
	beq	.LBB30_198
	ldr	r3, [r6]
	lsls	r3, r3, #31
	bne	.LBB30_195
.LBB30_198:
	ldr	r3, [r6]
	lsls	r3, r3, #31
	beq	.LBB30_201
	ldr	r3, [r6]
	lsls	r3, r3, #31
	itt	ne
	ldrne	r3, [r6]
	lslsne.w	r3, r3, #31
	beq	.LBB30_201
	ldr	r3, [r6]
	lsls	r3, r3, #31
	bne	.LBB30_198
.LBB30_201:
	movw	r3, #16387
	str	r3, [r6, #4]
	ldr	r3, [r6]
	ands	r3, r0
	orrs	r1, r3
	str	r1, [r6]
.LBB30_202:
	ldr	r1, [r6]
	lsls	r1, r1, #31
	beq	.LBB30_205
	ldr	r1, [r6]
	lsls	r1, r1, #31
	itt	ne
	ldrne	r1, [r6]
	lslsne.w	r1, r1, #31
	beq	.LBB30_205
	ldr	r1, [r6]
	lsls	r1, r1, #31
	bne	.LBB30_202
.LBB30_205:
	ldr	r1, [r6]
	lsls	r1, r1, #31
	beq	.LBB30_208
	ldr	r1, [r6]
	lsls	r1, r1, #31
	itt	ne
	ldrne	r1, [r6]
	lslsne.w	r1, r1, #31
	beq	.LBB30_208
	ldr	r1, [r6]
	lsls	r1, r1, #31
	bne	.LBB30_205
.LBB30_208:
	movs	r1, #0
	str	r1, [r6, #4]
	ldr	r1, [r6]
	ands	r1, r0
	orrs	r1, r2
	str	r1, [r6]
.LBB30_209:
	ldr	r1, [r6]
	lsls	r1, r1, #31
	beq	.LBB30_212
	ldr	r1, [r6]
	lsls	r1, r1, #31
	itt	ne
	ldrne	r1, [r6]
	lslsne.w	r1, r1, #31
	beq	.LBB30_212
	ldr	r1, [r6]
	lsls	r1, r1, #31
	bne	.LBB30_209
.LBB30_212:
	ldr	r1, [r6]
	lsls	r1, r1, #31
	beq	.LBB30_215
	ldr	r1, [r6]
	lsls	r1, r1, #31
	itt	ne
	ldrne	r1, [r6]
	lslsne.w	r1, r1, #31
	beq	.LBB30_215
	ldr	r1, [r6]
	lsls	r1, r1, #31
	bne	.LBB30_212
.LBB30_215:
	mov.w	r1, #12800
	str	r1, [r6, #4]
	ldr	r1, [r6]
	ands	r0, r1
	movw	r1, #1029
	orrs	r0, r1
	str	r0, [r6]
.LBB30_216:
	ldr	r0, [r6]
	lsls	r0, r0, #31
	beq	.LBB30_219
	ldr	r0, [r6]
	lsls	r0, r0, #31
	itt	ne
	ldrne	r0, [r6]
	lslsne.w	r0, r0, #31
	beq	.LBB30_219
	ldr	r0, [r6]
	lsls	r0, r0, #31
	bne	.LBB30_216
.LBB30_219:
	movw	r2, #37124
	movw	r1, #32833
	movt	r2, #16386
	ldr	r0, [r2, #48]
	orrs	r0, r1
	str	r0, [r2, #48]
	bl	__primask_r
	and	r4, r0, #1
	bl	__cpsid
	movw	r9, :lower16:thermostat_eem::hardware::setup::setup::{{closure}}::VAR::h41876559f3123297
	mov.w	r11, #0
	movt	r9, :upper16:thermostat_eem::hardware::setup::setup::{{closure}}::VAR::h41876559f3123297
	ldr.w	r0, [r9, #2696]
	ldr.w	r1, [r9, #2700]
	eor	r0, r0, #3
	orrs.w	r5, r0, r1
	bne.w	.LBB30_225
	str	r4, [sp, #48]
	movw	r4, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.162
	movt	r4, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.162
	add	r6, sp, #64
	mov.w	r2, #392
	mov	r0, r6
	mov	r1, r4
	bl	__aeabi_memcpy8
	add.w	r0, r6, #392
	mov.w	r2, #392
	mov	r1, r4
	bl	__aeabi_memcpy8
	add.w	r0, r6, #784
	mov.w	r2, #392
	mov	r1, r4
	bl	__aeabi_memcpy8
	add.w	r0, r6, #1176
	mov.w	r2, #392
	mov	r1, r4
	bl	__aeabi_memcpy8
	add.w	r0, r6, #1568
	mov.w	r2, #392
	mov	r1, r4
	bl	__aeabi_memcpy8
	add.w	r0, r6, #1960
	mov.w	r2, #392
	mov	r1, r4
	bl	__aeabi_memcpy8
	add.w	r0, sp, #2416
	mov.w	r1, #3072
	add.w	r0, r0, #480
	bl	__aeabi_memclr4
	movw	lr, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.160
	add	r0, sp, #16
	movt	lr, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.160
	add.w	r10, r0, #5952
	mov	r2, lr
	mov	r12, r10
	str	r5, [sp, #32]
	add.w	r8, sp, #6208
	ldm.w	r2, {r0, r1, r3, r4, r5, r6}
	stm.w	r12, {r0, r1, r3, r4, r5, r6}
	mov	r1, lr
	add.w	r12, r10, #24
	ldm.w	r1, {r0, r2, r3, r4, r5, r6}
	mov	r1, lr
	stm.w	r12, {r0, r2, r3, r4, r5, r6}
	add.w	r12, r10, #48
	ldm.w	r1, {r0, r2, r3, r4, r5, r6}
	mov	r1, lr
	stm.w	r12, {r0, r2, r3, r4, r5, r6}
	add.w	r12, r10, #72
	ldm.w	r1, {r0, r2, r3, r4, r5, r6}
	mov	r1, lr
	stm.w	r12, {r0, r2, r3, r4, r5, r6}
	add.w	r12, r10, #96
	ldm.w	r1, {r0, r2, r3, r4, r5, r6}
	mov	r1, lr
	stm.w	r12, {r0, r2, r3, r4, r5, r6}
	add.w	r12, r10, #120
	ldm.w	r1, {r0, r2, r3, r4, r5, r6}
	mov	r1, lr
	stm.w	r12, {r0, r2, r3, r4, r5, r6}
	add.w	r12, r10, #144
	ldm.w	r1, {r0, r2, r3, r4, r5, r6}
	mov	r1, lr
	stm.w	r12, {r0, r2, r3, r4, r5, r6}
	add.w	r12, r10, #168
	ldm.w	r1, {r0, r2, r3, r4, r5, r6}
	mov	r1, lr
	stm.w	r12, {r0, r2, r3, r4, r5, r6}
	add.w	r12, r10, #192
	ldm.w	r1, {r0, r2, r3, r4, r5, r6}
	mov	r1, lr
	stm.w	r12, {r0, r2, r3, r4, r5, r6}
	add.w	r12, r10, #216
	ldm.w	r1, {r0, r2, r3, r4, r5, r6}
	mov	r1, lr
	stm.w	r12, {r0, r2, r3, r4, r5, r6}
	mov	r12, r8
	ldm.w	r1, {r0, r2, r3, r4, r5, r6}
	mov	r1, lr
	stm.w	r12, {r0, r2, r3, r4, r5, r6}
	add.w	r12, r8, #24
	ldm.w	r1, {r0, r2, r3, r4, r5, r6}
	mov	r1, lr
	stm.w	r12, {r0, r2, r3, r4, r5, r6}
	add.w	r12, r8, #48
	ldm.w	r1, {r0, r2, r3, r4, r5, r6}
	mov	r1, lr
	stm.w	r12, {r0, r2, r3, r4, r5, r6}
	add.w	r12, r8, #72
	ldm.w	r1, {r0, r2, r3, r4, r5, r6}
	mov	r1, lr
	stm.w	r12, {r0, r2, r3, r4, r5, r6}
	add.w	r12, r8, #96
	ldm.w	r1, {r0, r2, r3, r4, r5, r6}
	mov	r1, lr
	stm.w	r12, {r0, r2, r3, r4, r5, r6}
	add.w	r12, r8, #120
	ldm.w	r1, {r0, r2, r3, r4, r5, r6}
	mov	r1, lr
	stm.w	r12, {r0, r2, r3, r4, r5, r6}
	add.w	r12, r8, #144
	ldm.w	r1, {r0, r2, r3, r4, r5, r6}
	mov	r1, lr
	stm.w	r12, {r0, r2, r3, r4, r5, r6}
	add.w	r12, r8, #168
	ldm.w	r1, {r0, r2, r3, r4, r5, r6}
	mov	r1, lr
	stm.w	r12, {r0, r2, r3, r4, r5, r6}
	add.w	r12, r8, #192
	ldm.w	r1, {r0, r2, r3, r4, r5, r6}
	stm.w	r12, {r0, r2, r3, r4, r5, r6}
	add.w	r0, r8, #216
	ldm.w	lr, {r1, r2, r3, r4, r5, r6}
	stm	r0!, {r1, r2, r3, r4, r5, r6}
	add.w	r6, sp, #2416
	movs	r2, #240
	mov	r0, r6
	mov	r1, r10
	ldr	r5, [sp, #32]
	ldr	r4, [sp, #48]
	bl	__aeabi_memcpy4
	add.w	r0, r6, #240
	movs	r2, #240
	mov	r1, r8
	bl	__aeabi_memcpy4
	add.w	r0, r9, #3312
	mov.w	r2, #3552
	mov	r1, r6
	bl	__aeabi_memcpy4
	mov.w	r2, #2352
	mov	r0, r9
	add	r1, sp, #64
	bl	__aeabi_memcpy8
	addw	r0, r9, #2353
	movs	r1, #39
	bl	__aeabi_memclr
	addw	r0, r9, #2393
	movs	r1, #39
	bl	__aeabi_memclr
	addw	r0, r9, #2433
	movs	r1, #39
	bl	__aeabi_memclr
	addw	r0, r9, #2473
	movs	r1, #39
	bl	__aeabi_memclr
	addw	r0, r9, #2513
	movs	r1, #39
	bl	__aeabi_memclr
	addw	r0, r9, #2553
	movs	r1, #39
	bl	__aeabi_memclr
	addw	r0, r9, #2593
	movs	r1, #39
	bl	__aeabi_memclr
	add.w	r0, r9, #2704
	movs	r1, #72
	bl	__aeabi_memclr8
	add.w	r0, r9, #2784
	movs	r1, #72
	bl	__aeabi_memclr8
	add.w	r0, r9, #2864
	movs	r1, #72
	bl	__aeabi_memclr8
	add.w	r0, r9, #2944
	movs	r1, #72
	bl	__aeabi_memclr8
	add.w	r0, r9, #3024
	movs	r1, #72
	bl	__aeabi_memclr8
	add.w	r0, r9, #3104
	movs	r1, #72
	bl	__aeabi_memclr8
	add.w	r0, r9, #3184
	movs	r1, #72
	bl	__aeabi_memclr8
	add.w	r0, r9, #3264
	movs	r1, #48
	bl	__aeabi_memclr8
	addw	r0, r9, #2633
	movs	r1, #63
	bl	__aeabi_memclr
	movw	r0, #6882
	mov.w	r1, #8192
	add	r0, r9
	bl	__aeabi_memclr
	movw	r0, #6864
	movs	r1, #1
	movs	r2, #17
	str.w	r11, [r9, #2700]
	strb.w	r1, [r9, r0]
	movs	r0, #3
	strb.w	r0, [r9, #2352]
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.161
	strb.w	r0, [r9, #2392]
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.161
	strb.w	r0, [r9, #2432]
	strb.w	r0, [r9, #2472]
	strb.w	r0, [r9, #2512]
	strb.w	r0, [r9, #2552]
	strb.w	r0, [r9, #2592]
	strb.w	r0, [r9, #2632]
	movs	r0, #2
	str.w	r0, [r9, #2696]
	str.w	r0, [r9, #2776]
	str.w	r0, [r9, #2856]
	str.w	r0, [r9, #2936]
	str.w	r0, [r9, #3016]
	str.w	r0, [r9, #3096]
	str.w	r0, [r9, #3176]
	str.w	r0, [r9, #3256]
	movw	r0, #6865
	add	r0, r9
	str.w	r11, [r9, #2780]
	str.w	r11, [r9, #2860]
	str.w	r11, [r9, #2940]
	str.w	r11, [r9, #3020]
	str.w	r11, [r9, #3100]
	str.w	r11, [r9, #3180]
	str.w	r11, [r9, #3260]
	bl	__aeabi_memcpy
	mov	r11, r9
	cmp	r4, #0
	beq	.LBB30_226
.LBB30_221:
	cmp	r5, #0
	bne	.LBB30_227
.LBB30_222:
	movw	r0, #6864
	movw	r1, #6865
	add	r0, r11
	add.w	lr, sp, #16
	add	r1, r11
	add.w	r5, lr, #5952
	movs	r6, #0
	strb	r6, [r0]
	movs	r0, #8
	add.w	lr, sp, #16
	strb	r6, [r1, #4]
	movs	r2, #0
	str	r6, [r1]
	add.w	r1, lr, #5952
	str	r0, [r5, #4]
	add.w	r0, sp, #2416
	add.w	r8, r11, #2672
	str.w	r8, [r5]
	bl	smoltcp::iface::route::Routes::add_default_ipv4_route::ha591256f21e3a8bc
	ldrb.w	r0, [sp, #2416]
	cmp	r0, #0
	bne.w	.LBB30_365
	movw	r0, #6864
	movs	r1, #39
	add.w	r10, r11, r0
	addw	r0, r11, #2353
	mov.w	r9, #3
	strb.w	r9, [r11, #2352]
	bl	__aeabi_memclr
	addw	r0, r11, #2393
	movs	r1, #39
	strb.w	r9, [r11, #2392]
	bl	__aeabi_memclr
	addw	r0, r11, #2433
	movs	r1, #39
	strb.w	r9, [r11, #2432]
	bl	__aeabi_memclr
	addw	r0, r11, #2473
	movs	r1, #39
	strb.w	r9, [r11, #2472]
	bl	__aeabi_memclr
	addw	r0, r11, #2513
	movs	r1, #39
	strb.w	r9, [r11, #2512]
	bl	__aeabi_memclr
	addw	r0, r11, #2553
	movs	r1, #39
	strb.w	r9, [r11, #2552]
	bl	__aeabi_memclr
	addw	r0, r11, #2593
	movs	r1, #39
	strb.w	r9, [r11, #2592]
	bl	__aeabi_memclr
	addw	r0, r11, #2633
	movs	r1, #39
	strb.w	r9, [r11, #2632]
	bl	__aeabi_memclr
	movs	r1, #1
	mov	r0, r10
	bl	smoltcp::iface::interface::InterfaceInner::check_ip_addrs::h8be6ea0748102f65
	ldr.w	r0, [r11, #40]
	str.w	r6, [r5, #252]
	strd	r6, r6, [r5, #244]
	cmp	r0, #4
	str.w	r6, [r5, #256]
	add.w	r5, r11, #392
	str	r5, [sp, #48]
	bne	.LBB30_228
	mov	r5, r11
	b	.LBB30_238
.LBB30_225:
	cmp	r4, #0
	bne	.LBB30_221
.LBB30_226:
	bl	__cpsie
	cmp	r5, #0
	beq	.LBB30_222
.LBB30_227:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.169
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.169
	movs	r1, #43
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB30_228:
	ldr.w	r0, [r11, #432]
	cmp	r0, #4
	bne	.LBB30_230
	movs	r6, #1
	b	.LBB30_238
.LBB30_230:
	ldr.w	r0, [r11, #824]
	cmp	r0, #4
	bne	.LBB30_232
	add.w	r5, r11, #784
	movs	r6, #2
	b	.LBB30_238
.LBB30_232:
	ldr.w	r0, [r11, #1216]
	cmp	r0, #4
	bne	.LBB30_234
	add.w	r5, r11, #1176
	movs	r6, #3
	b	.LBB30_238
.LBB30_234:
	ldr.w	r0, [r11, #1608]
	cmp	r0, #4
	bne	.LBB30_236
	add.w	r5, r11, #1568
	movs	r6, #4
	b	.LBB30_238
.LBB30_236:
	ldr.w	r0, [r11, #2000]
	cmp	r0, #4
	bne.w	.LBB30_379
	add.w	r5, r11, #1960
	movs	r6, #5
.LBB30_238:
	add	r4, sp, #64
	add.w	r1, sp, #6208
	movs	r2, #68
	mov	r0, r4
	bl	__aeabi_memcpy4
	add.w	r0, r5, #44
	movs	r2, #68
	mov	r1, r4
	str.w	r9, [r5, #40]
	bl	__aeabi_memcpy4
	movs	r0, #1
	str.w	r0, [r5, #128]
	strh.w	r0, [r5, #132]
	add.w	r0, r5, #136
	add.w	r1, sp, #2416
	mov.w	r2, #256
	movs	r4, #0
	strd	r4, r4, [r5, #112]
	bl	__aeabi_memcpy8
	add.w	r0, r11, #784
	str	r0, [sp, #16]
	add.w	r0, r11, #1176
	str	r6, [r5, #32]
	str	r0, [sp, #12]
	add.w	r0, r11, #1568
	str	r0, [sp, #8]
	ldr.w	r0, [r11, #40]
	cmp	r0, #4
	strb	r4, [r5]
	str.w	r4, [sp, #2432]
	add.w	r0, r11, #1960
	str.w	r4, [sp, #2428]
	str.w	r4, [sp, #2424]
	str	r0, [sp, #4]
	str.w	r4, [sp, #2420]
	strd	r10, r8, [sp, #20]
	bne	.LBB30_240
	mov	r5, r11
	mov.w	r8, #0
	b	.LBB30_250
.LBB30_240:
	ldr.w	r0, [r11, #432]
	cmp	r0, #4
	bne	.LBB30_242
	mov.w	r8, #1
	ldr	r5, [sp, #48]
	b	.LBB30_250
.LBB30_242:
	ldr.w	r0, [r11, #824]
	cmp	r0, #4
	bne	.LBB30_244
	mov.w	r8, #2
	ldr	r5, [sp, #16]
	b	.LBB30_250
.LBB30_244:
	ldr.w	r0, [r11, #1216]
	cmp	r0, #4
	bne	.LBB30_246
	mov.w	r8, #3
	ldr	r5, [sp, #12]
	b	.LBB30_250
.LBB30_246:
	ldr.w	r0, [r11, #1608]
	cmp	r0, #4
	bne	.LBB30_248
	mov.w	r8, #4
	ldr	r5, [sp, #8]
	b	.LBB30_250
.LBB30_248:
	ldr.w	r0, [r11, #2000]
	cmp	r0, #4
	bne.w	.LBB30_379
	mov.w	r8, #5
	ldr	r5, [sp, #4]
.LBB30_250:
	movs	r0, #2
	str	r0, [r5, #40]
	add.w	r0, sp, #2416
	add.w	lr, r5, #44
	mov	r1, r0
	add.w	r10, r0, #4
	movw	r12, #6882
	ldm	r1!, {r2, r3, r6}
	stm.w	lr!, {r2, r3, r6}
	ldm.w	r1, {r0, r2, r3, r6}
	mov.w	r1, #300
	add.w	r9, r11, r12
	stm.w	lr, {r0, r2, r3, r6}
	movw	r0, #7906
	str	r1, [r5, #96]
	movs	r1, #100
	str	r1, [r5, #100]
	add.w	r6, r11, r0
	add.w	r0, r5, #120
	movs	r1, #40
	str	r4, [r5, #72]
	str	r4, [r5, #76]
	str	r4, [r5, #104]
	strb.w	r4, [r5, #112]
	bl	__aeabi_memclr8
	movw	r1, #10000
	movs	r0, #1
	strd	r1, r4, [r5, #176]
	mov.w	r1, #1024
	str.w	r4, [r5, #292]
	strd	r0, r4, [r5, #168]
	strd	r4, r4, [r5, #184]
	strd	r4, r4, [r5, #192]
	strd	r4, r4, [r5, #200]
	strd	r1, r4, [r5, #208]
	strd	r4, r4, [r5, #216]
	strd	r4, r4, [r5, #224]
	strd	r4, r4, [r5, #232]
	strd	r9, r1, [r5, #240]
	strd	r4, r4, [r5, #248]
	strd	r6, r1, [r5, #256]
	strd	r4, r4, [r5, #264]
	strd	r4, r4, [r5, #272]
	strd	r4, r4, [r5, #280]
	mov.w	r1, #536
	str.w	r4, [r5, #308]
	strd	r1, r4, [r5, #296]
	strh.w	r4, [r5, #316]
	strb.w	r4, [r5, #318]
	strh.w	r4, [r5, #336]
	strb.w	r4, [r5, #338]
	str.w	r4, [r5, #356]
	strb.w	r4, [r5, #360]
	strb.w	r4, [r5, #362]
	strh.w	r4, [r5, #379]
	strh.w	r4, [r5, #382]
	strb.w	r0, [r5, #384]
	str.w	r8, [r5, #32]
	ldr.w	r0, [r11, #40]
	strb	r4, [r5]
	cmp	r0, #4
	str.w	r4, [r10, #8]
	strd	r4, r4, [r10]
	str.w	r4, [r10, #12]
	bne	.LBB30_252
	mov	r5, r11
	b	.LBB30_262
.LBB30_252:
	ldr.w	r0, [r11, #432]
	cmp	r0, #4
	bne	.LBB30_254
	movs	r4, #1
	ldr	r5, [sp, #48]
	b	.LBB30_262
.LBB30_254:
	ldr.w	r0, [r11, #824]
	cmp	r0, #4
	bne	.LBB30_256
	movs	r4, #2
	ldr	r5, [sp, #16]
	b	.LBB30_262
.LBB30_256:
	ldr.w	r0, [r11, #1216]
	cmp	r0, #4
	bne	.LBB30_258
	movs	r4, #3
	ldr	r5, [sp, #12]
	b	.LBB30_262
.LBB30_258:
	ldr.w	r0, [r11, #1608]
	cmp	r0, #4
	bne	.LBB30_260
	movs	r4, #4
	ldr	r5, [sp, #8]
	b	.LBB30_262
.LBB30_260:
	ldr.w	r0, [r11, #2000]
	cmp	r0, #4
	bne.w	.LBB30_379
	movs	r4, #5
	ldr	r5, [sp, #4]
.LBB30_262:
	add.w	r1, sp, #2416
	movs	r0, #2
	str	r0, [r5, #40]
	add.w	r12, r5, #44
	ldm	r1!, {r2, r3, r6}
	stm.w	r12!, {r2, r3, r6}
	ldm.w	r1, {r0, r2, r3, r6}
	stm.w	r12, {r0, r2, r3, r6}
	movw	r0, #8930
	movs	r1, #100
	add.w	r9, r11, r0
	mov.w	r0, #300
	str	r0, [r5, #96]
	movw	r0, #9954
	str	r1, [r5, #100]
	add.w	r6, r11, r0
	add.w	r0, r5, #120
	movs	r1, #40
	mov.w	r8, #0
	str.w	r8, [r5, #72]
	str.w	r8, [r5, #76]
	str.w	r8, [r5, #104]
	strb.w	r8, [r5, #112]
	bl	__aeabi_memclr8
	movw	r1, #10000
	movs	r0, #1
	strd	r1, r8, [r5, #176]
	mov.w	r1, #1024
	str.w	r8, [r5, #292]
	strd	r0, r8, [r5, #168]
	strd	r8, r8, [r5, #184]
	strd	r8, r8, [r5, #192]
	strd	r8, r8, [r5, #200]
	strd	r1, r8, [r5, #208]
	strd	r8, r8, [r5, #216]
	strd	r8, r8, [r5, #224]
	strd	r8, r8, [r5, #232]
	strd	r9, r1, [r5, #240]
	strd	r8, r8, [r5, #248]
	strd	r6, r1, [r5, #256]
	strd	r8, r8, [r5, #264]
	strd	r8, r8, [r5, #272]
	strd	r8, r8, [r5, #280]
	mov.w	r1, #536
	str.w	r8, [r5, #308]
	strd	r1, r8, [r5, #296]
	strh.w	r8, [r5, #316]
	strb.w	r8, [r5, #318]
	strh.w	r8, [r5, #336]
	strb.w	r8, [r5, #338]
	str.w	r8, [r5, #356]
	strb.w	r8, [r5, #360]
	strb.w	r8, [r5, #362]
	strh.w	r8, [r5, #379]
	strh.w	r8, [r5, #382]
	strb.w	r0, [r5, #384]
	str	r4, [r5, #32]
	ldr.w	r0, [r11, #40]
	strb.w	r8, [r5]
	cmp	r0, #4
	str.w	r8, [r10, #8]
	strd	r8, r8, [r10]
	str.w	r8, [r10, #12]
	bne	.LBB30_265
	mov	r9, r11
	movs	r0, #0
.LBB30_264:
	str	r0, [sp, #32]
	b	.LBB30_273
.LBB30_265:
	ldr.w	r0, [r11, #432]
	cmp	r0, #4
	bne	.LBB30_267
	movs	r0, #1
	str	r0, [sp, #32]
	ldr.w	r9, [sp, #48]
	b	.LBB30_273
.LBB30_267:
	ldr.w	r0, [r11, #824]
	cmp	r0, #4
	bne	.LBB30_269
	movs	r0, #2
	str	r0, [sp, #32]
	ldr.w	r9, [sp, #16]
	b	.LBB30_273
.LBB30_269:
	ldr.w	r0, [r11, #1216]
	cmp	r0, #4
	bne	.LBB30_271
	movs	r0, #3
	str	r0, [sp, #32]
	ldr.w	r9, [sp, #12]
	b	.LBB30_273
.LBB30_271:
	ldr.w	r0, [r11, #1608]
	cmp	r0, #4
	bne.w	.LBB30_283
	movs	r0, #4
	str	r0, [sp, #32]
	ldr.w	r9, [sp, #8]
.LBB30_273:
	add.w	r1, sp, #2416
	movs	r6, #2
	str.w	r6, [r9, #40]
	add.w	r0, r9, #44
	movw	r2, #10978
	ldm	r1!, {r3, r4, r5}
	stm	r0!, {r3, r4, r5}
	add	r2, r11
	str	r2, [sp, #28]
	ldm.w	r1, {r2, r3, r4, r5}
	mov.w	r1, #300
	stm	r0!, {r2, r3, r4, r5}
	movw	r0, #12002
	str.w	r1, [r9, #96]
	movs	r1, #100
	str.w	r1, [r9, #100]
	add.w	r4, r11, r0
	add.w	r0, r9, #120
	movs	r1, #40
	str.w	r8, [r9, #72]
	str.w	r8, [r9, #76]
	str.w	r8, [r9, #104]
	strb.w	r8, [r9, #112]
	bl	__aeabi_memclr8
	movw	r1, #10000
	movs	r0, #1
	strd	r1, r8, [r9, #176]
	mov.w	r1, #1024
	ldr	r2, [sp, #28]
	strd	r0, r8, [r9, #168]
	strd	r8, r8, [r9, #184]
	strd	r8, r8, [r9, #192]
	strd	r8, r8, [r9, #200]
	strd	r1, r8, [r9, #208]
	strd	r8, r8, [r9, #216]
	strd	r8, r8, [r9, #224]
	strd	r8, r8, [r9, #232]
	strd	r2, r1, [r9, #240]
	strd	r8, r8, [r9, #248]
	strd	r4, r1, [r9, #256]
	strd	r8, r8, [r9, #264]
	strd	r8, r8, [r9, #272]
	strd	r8, r8, [r9, #280]
	str.w	r8, [r9, #292]
	mov.w	r1, #536
	strd	r1, r8, [r9, #296]
	str.w	r8, [r9, #308]
	strh.w	r8, [r9, #316]
	strb.w	r8, [r9, #318]
	strh.w	r8, [r9, #336]
	strb.w	r8, [r9, #338]
	str.w	r8, [r9, #356]
	strb.w	r8, [r9, #360]
	strb.w	r8, [r9, #362]
	strh.w	r8, [r9, #379]
	strh.w	r8, [r9, #382]
	strb.w	r0, [r9, #384]
	ldr	r0, [sp, #32]
	str.w	r0, [r9, #32]
	ldr.w	r0, [r11, #40]
	strb.w	r8, [r9]
	cmp	r0, #4
	str.w	r8, [r10, #8]
	strd	r8, r8, [r10]
	str.w	r8, [r10, #12]
	bne	.LBB30_275
	movw	r9, #10000
	mov.w	lr, #100
	mov.w	r12, #300
	mov	r5, r11
	b	.LBB30_287
.LBB30_275:
	ldr.w	r0, [r11, #432]
	cmp	r0, #4
	bne	.LBB30_277
	movw	r9, #10000
	mov.w	lr, #100
	mov.w	r12, #300
	mov.w	r8, #1
	ldr	r5, [sp, #48]
	b	.LBB30_287
.LBB30_277:
	ldr.w	r0, [r11, #824]
	cmp	r0, #4
	bne	.LBB30_279
	movw	r9, #10000
	mov.w	lr, #100
	mov.w	r12, #300
	mov.w	r8, #2
	ldr	r5, [sp, #16]
	b	.LBB30_287
.LBB30_279:
	ldr.w	r0, [r11, #1216]
	cmp	r0, #4
	bne	.LBB30_281
	movw	r9, #10000
	mov.w	lr, #100
	mov.w	r12, #300
	mov.w	r8, #3
	ldr	r5, [sp, #12]
	b	.LBB30_287
.LBB30_281:
	ldr.w	r0, [r11, #1608]
	cmp	r0, #4
	bne	.LBB30_285
	movw	r9, #10000
	mov.w	lr, #100
	mov.w	r12, #300
	mov.w	r8, #4
	ldr	r5, [sp, #8]
	b	.LBB30_287
.LBB30_283:
	ldr.w	r0, [r11, #2000]
	cmp	r0, #4
	bne.w	.LBB30_379
	ldr.w	r9, [sp, #4]
	movs	r0, #5
	b	.LBB30_264
.LBB30_285:
	ldr.w	r0, [r11, #2000]
	mov.w	lr, #100
	mov.w	r12, #300
	cmp	r0, #4
	bne.w	.LBB30_379
	movw	r9, #10000
	mov.w	r8, #5
	ldr	r5, [sp, #4]
.LBB30_287:
	str	r6, [r5, #40]
	add.w	r6, sp, #2416
	add.w	r0, r5, #44
	mov.w	r10, #0
	ldm	r6!, {r1, r2, r3}
	stm	r0!, {r1, r2, r3}
	ldm.w	r6, {r1, r2, r3, r4}
	stm	r0!, {r1, r2, r3, r4}
	movw	r0, #13026
	movs	r1, #40
	add.w	r4, r11, r0
	movw	r0, #14050
	add.w	r6, r11, r0
	add.w	r0, r5, #120
	str.w	r10, [r5, #72]
	str.w	r10, [r5, #76]
	str.w	r12, [r5, #96]
	str.w	lr, [r5, #100]
	str.w	r10, [r5, #104]
	strb.w	r10, [r5, #112]
	bl	__aeabi_memclr8
	mov.w	r1, #1024
	movs	r0, #1
	strd	r0, r10, [r5, #168]
	strd	r9, r10, [r5, #176]
	strd	r10, r10, [r5, #184]
	strd	r10, r10, [r5, #192]
	strd	r10, r10, [r5, #200]
	strd	r1, r10, [r5, #208]
	strd	r10, r10, [r5, #216]
	strd	r10, r10, [r5, #224]
	strd	r10, r10, [r5, #232]
	strd	r4, r1, [r5, #240]
	strd	r10, r10, [r5, #248]
	strd	r6, r1, [r5, #256]
	strd	r10, r10, [r5, #264]
	strd	r10, r10, [r5, #272]
	strd	r10, r10, [r5, #280]
	str.w	r10, [r5, #292]
	mov.w	r1, #536
	strd	r1, r10, [r5, #296]
	str.w	r10, [r5, #308]
	strh.w	r10, [r5, #316]
	strb.w	r10, [r5, #318]
	strh.w	r10, [r5, #336]
	strb.w	r10, [r5, #338]
	str.w	r10, [r5, #356]
	strb.w	r10, [r5, #360]
	strb.w	r10, [r5, #362]
	strh.w	r10, [r5, #379]
	strh.w	r10, [r5, #382]
	strb.w	r0, [r5, #384]
	str.w	r8, [r5, #32]
	ldr.w	r0, [r11, #40]
	strb.w	r10, [r5]
	cmp	r0, #4
	bne	.LBB30_289
	mov	r5, r11
	movs	r4, #0
	b	.LBB30_299
.LBB30_289:
	ldr.w	r0, [r11, #432]
	cmp	r0, #4
	bne	.LBB30_291
	movs	r4, #1
	ldr	r5, [sp, #48]
	b	.LBB30_299
.LBB30_291:
	ldr.w	r0, [r11, #824]
	cmp	r0, #4
	bne	.LBB30_293
	movs	r4, #2
	ldr	r5, [sp, #16]
	b	.LBB30_299
.LBB30_293:
	ldr.w	r0, [r11, #1216]
	cmp	r0, #4
	bne	.LBB30_295
	movs	r4, #3
	ldr	r5, [sp, #12]
	b	.LBB30_299
.LBB30_295:
	ldr.w	r0, [r11, #1608]
	cmp	r0, #4
	bne	.LBB30_297
	movs	r4, #4
	ldr	r5, [sp, #8]
	b	.LBB30_299
.LBB30_297:
	ldr.w	r0, [r11, #2000]
	cmp	r0, #4
	bne.w	.LBB30_379
	movs	r4, #5
	ldr	r5, [sp, #4]
.LBB30_299:
	movs	r0, #1
	str	r0, [r5, #40]
	add.w	r0, r11, #3552
	add.w	r1, r11, #3792
	str	r0, [r5, #44]
	movs	r0, #10
	str	r1, [r5, #60]
	mov.w	r1, #1024
	strd	r0, r10, [r5, #48]
	strd	r1, r10, [r5, #64]
	add.w	r1, r11, #3312
	add.w	r6, sp, #2416
	strd	r1, r0, [r5, #76]
	movw	r0, #4816
	mov.w	r2, #260
	add	r0, r11
	str	r0, [r5, #92]
	mov.w	r0, #2048
	mov	r1, r6
	strd	r0, r10, [r5, #96]
	add.w	r0, r5, #132
	str.w	r10, [r5, #56]
	str.w	r10, [r5, #72]
	str.w	r10, [r5, #84]
	str.w	r10, [r5, #88]
	str.w	r10, [r5, #104]
	strh.w	r10, [r5, #108]
	strb.w	r10, [r5, #110]
	strb.w	r10, [r5, #128]
	bl	__aeabi_memcpy4
	strb.w	r10, [r5]
	str	r4, [r5, #32]
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	movw	r5, #17408
	lsls	r1, r4, #31
	movt	r5, #22530
	ldr.w	r0, [r5, #220]
	orr	r0, r0, #64
	str.w	r0, [r5, #220]
	bne	.LBB30_301
	bl	__cpsie
.LBB30_301:
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	ldr.w	r0, [r5, #132]
	lsls	r1, r4, #31
	orr	r0, r0, #64
	str.w	r0, [r5, #132]
	ldr.w	r0, [r5, #132]
	bic	r0, r0, #64
	str.w	r0, [r5, #132]
	bne	.LBB30_303
	bl	__cpsie
.LBB30_303:
	ldr	r0, [r5, #84]
	ubfx	r0, r0, #8, #2
	cmp	r0, #0
	bne.w	.LBB30_336
	movw	r0, #6144
	add.w	r4, r11, #2352
	movt	r0, #18434
	ldr	r1, [r0]
	orr	r1, r1, #4
	bic	r1, r1, #32
	str	r1, [r0]
.LBB30_305:
	ldr	r1, [r0, #4]
	lsls	r2, r1, #30
	bmi.w	.LBB30_331
	lsls	r2, r1, #29
	bmi.w	.LBB30_332
	lsls	r1, r1, #31
	beq	.LBB30_305
	ldr.w	r9, [r0, #8]
	movs	r0, #0
	mov.w	r12, #0
	mov	r1, r11
	mov.w	r10, #0
	str	r0, [sp, #128]
	str.w	r0, [sp, #2480]
.LBB30_309:
	mov	r3, r1
.LBB30_310:
	cmp	r3, r4
	beq	.LBB30_329
	ldr	r5, [r3, #40]
	add.w	r2, r3, #392
	cmp	r5, #4
	bne	.LBB30_323
	cmp	r2, r4
	beq	.LBB30_329
	ldr.w	r5, [r3, #432]
	add.w	r1, r3, #784
	cmp	r5, #4
	bne	.LBB30_319
	cmp	r1, r4
	beq	.LBB30_329
	ldr.w	r5, [r3, #824]
	add.w	r2, r3, #1176
	cmp	r5, #4
	bne	.LBB30_322
	cmp	r2, r4
	beq	.LBB30_329
	ldr.w	r5, [r3, #1216]
	add.w	r1, r3, #1568
	cmp	r5, #4
	mov	r3, r1
	beq	.LBB30_310
	sub.w	r3, r1, #392
	cmp	r5, #1
	bne	.LBB30_324
	b	.LBB30_320
.LBB30_319:
	mov	r3, r2
	cmp	r5, #1
	bne	.LBB30_324
.LBB30_320:
	cmp	r0, #15
	bhi	.LBB30_309
	ldr	r2, [r3, #32]
	str.w	r2, [r6, r0, lsl #2]
	ldr.w	r0, [sp, #2480]
	adds	r0, #1
	str.w	r0, [sp, #2480]
	b	.LBB30_309
.LBB30_322:
	mov	r3, r1
.LBB30_323:
	mov	r1, r2
	cmp	r5, #1
	beq	.LBB30_320
.LBB30_324:
	cmp	r5, #2
	beq	.LBB30_327
	cmp	r5, #3
	bne	.LBB30_309
	ldr.w	r8, [r3, #32]
	mov.w	r10, #1
	b	.LBB30_309
.LBB30_327:
	cmp.w	r12, #15
	bhi	.LBB30_309
	ldr	r2, [r3, #32]
	add	r3, sp, #64
	str.w	r2, [r3, r12, lsl #2]
	ldr	r2, [sp, #128]
	add.w	r12, r2, #1
	str.w	r12, [sp, #128]
	b	.LBB30_309
.LBB30_329:
	add.w	lr, sp, #4096
	ldr	r6, [sp, #44]
	add	r1, sp, #64
	movs	r2, #68
	ldrh.w	r0, [lr, #2112]
	add.w	lr, sp, #4096
	strh.w	r0, [r6, #49]
	movs	r5, #0
	ldrb.w	r0, [lr, #2114]
	strb.w	r0, [r6, #51]
	add.w	r0, r6, #120
	strd	r5, r5, [r6]
	strd	r5, r5, [r6, #8]
	bl	__aeabi_memcpy4
	add.w	r0, r6, #188
	add.w	r1, sp, #2416
	movs	r2, #68
	bl	__aeabi_memcpy4
	ldr	r1, [sp, #36]
	movw	r0, #7044
	str	r4, [r6, #16]
	strh	r0, [r1, #4]
	movw	r0, #8064
	movt	r0, #25362
	str	r0, [r1]
	movw	r0, #1514
	str	r0, [r6, #32]
	movs	r0, #4
	str	r0, [r6, #40]
	ldr	r0, [sp, #40]
	str.w	r9, [r6, #104]
	str.w	r10, [r6, #112]
	strb	r5, [r0, #4]
	str	r5, [r0]
	ldr	r0, [sp, #20]
	str	r0, [r6, #52]
	ldr	r0, [sp, #24]
	str	r0, [r6, #60]
	movs	r0, #8
	str	r0, [r6, #20]
	str	r0, [r6, #64]
	movs	r0, #1
	str	r0, [r6, #36]
	str	r0, [r6, #56]
	strb.w	r0, [r6, #68]
	movw	r0, :lower16:thermostat_eem::hardware::setup::DES_RING::hb906d6ece668422b
	movt	r0, :upper16:thermostat_eem::hardware::setup::DES_RING::hb906d6ece668422b
	str.w	r8, [r6, #116]
	strd	r0, r11, [r6, #80]
	movs	r0, #6
	str	r0, [r6, #88]
	movw	r0, :lower16:core::ops::function::FnOnce::call_once::h4b33d2a68af58905
	strb.w	r5, [r6, #75]
	movt	r0, :upper16:core::ops::function::FnOnce::call_once::h4b33d2a68af58905
	str	r5, [r6, #108]
	strd	r0, r5, [r6, #272]
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.163
	str.w	r5, [r6, #256]
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.163
	strb.w	r5, [r6, #304]
	strd	r5, r5, [r6, #24]
	ldrh	r1, [r0, #4]
	str.w	r5, [r6, #296]
	ldr	r0, [r0]
	str.w	r0, [r6, #290]
	ldr	r0, [sp, #52]
	str.w	r0, [r6, #305]
	ldr	r0, [sp, #56]
	str.w	r0, [r6, #309]
	ldrh.w	r0, [sp, #60]
	strh.w	r1, [r6, #294]
	strh.w	r0, [r6, #313]
	mov.w	r0, #1024
	strh.w	r0, [r6, #288]
	strd	r5, r5, [r6, #96]
	strb.w	r5, [r6, #300]
	add.w	sp, sp, #6432
	add	sp, #20
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB30_330:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.250
	movs	r1, #4
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.250
	mov	r0, r4
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB30_331:
	movs	r0, #0
	b	.LBB30_333
.LBB30_332:
	movs	r0, #1
.LBB30_333:
	strb.w	r0, [sp, #2416]
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.171
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.370
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.171
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.370
.LBB30_334:
	add.w	r2, sp, #2416
	movs	r1, #43
	str	r6, [sp]
	bl	core::result::unwrap_failed::he67be68ddf63c991
	.inst.n	0xdefe
.LBB30_335:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.251
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.252
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.251
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.252
	movs	r1, #55
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB30_336:
	cmp	r0, #1
	beq.w	.LBB30_366
	cmp	r0, #2
	bne.w	.LBB30_368
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.10
	movw	r2, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.71
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.10
	movt	r2, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.71
	b	.LBB30_376
.LBB30_339:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.158
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.158
	b	.LBB30_355
.LBB30_340:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.160
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.160
	b	.LBB30_355
.LBB30_341:
	cmp	r0, #1
	bne.w	.LBB30_364
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.89
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.90
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.89
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.90
	b	.LBB30_367
.LBB30_343:
	subs	r0, r1, #4
	cmp	r0, #2
	bhs.w	.LBB30_369
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.5
	movw	r2, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.438
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.5
	movt	r2, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.438
	b	.LBB30_378
.LBB30_345:
	movw	r1, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.44
	str.w	r0, [sp, #2420]
	movt	r1, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.44
	str.w	r1, [sp, #2416]
	movw	r1, :lower16:CORE_PERIPHERALS
	movs	r0, #0
	movt	r1, :upper16:CORE_PERIPHERALS
	str.w	r1, [sp, #2432]
	movw	r1, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.45
	str.w	r0, [sp, #2424]
	str.w	r0, [sp, #2428]
	movt	r1, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.45
	b	.LBB30_357
.LBB30_346:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.46
	movw	r2, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.47
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.46
	movt	r2, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.47
	movs	r1, #50
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB30_347:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.65
	movw	r2, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.66
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.65
	movt	r2, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.66
	movs	r1, #51
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB30_348:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.145
	str.w	r0, [sp, #2416]
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.145
	str.w	r8, [sp, #2420]
	b	.LBB30_352
.LBB30_349:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.144
	str.w	r0, [sp, #2416]
	str.w	r4, [sp, #2420]
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.144
	b	.LBB30_352
.LBB30_350:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.143
	str.w	r0, [sp, #2416]
	str.w	r8, [sp, #2420]
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.143
	b	.LBB30_352
.LBB30_351:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.142
	str.w	r0, [sp, #2416]
	str.w	r4, [sp, #2420]
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.142
.LBB30_352:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.364
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.364
	b	.LBB30_334
.LBB30_353:
	movw	r1, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.155
	str.w	r4, [sp, #2420]
	movt	r1, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.155
	str.w	r1, [sp, #2416]
	b	.LBB30_356
.LBB30_354:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.155
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.155
.LBB30_355:
	str.w	r0, [sp, #2416]
	movs	r0, #1
	str.w	r0, [sp, #2420]
	movs	r0, #0
.LBB30_356:
	movw	r1, :lower16:CORE_PERIPHERALS
	str.w	r0, [sp, #2424]
	movt	r1, :upper16:CORE_PERIPHERALS
	str.w	r0, [sp, #2428]
	str.w	r1, [sp, #2432]
	movw	r1, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.156
	movt	r1, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.156
.LBB30_357:
	str.w	r0, [sp, #2436]
	b	.LBB30_363
.LBB30_358:
	movw	r1, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.155
	str.w	r4, [sp, #2420]
	movt	r1, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.155
	str.w	r1, [sp, #2416]
	b	.LBB30_362
.LBB30_359:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.158
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.158
	b	.LBB30_361
.LBB30_360:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.160
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.160
.LBB30_361:
	str.w	r0, [sp, #2416]
	movs	r0, #1
	str.w	r0, [sp, #2420]
	movs	r0, #0
.LBB30_362:
	movw	r1, :lower16:CORE_PERIPHERALS
	str.w	r0, [sp, #2424]
	movt	r1, :upper16:CORE_PERIPHERALS
	str.w	r1, [sp, #2432]
	movw	r1, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.170
	str.w	r0, [sp, #2428]
	str.w	r0, [sp, #2436]
	movt	r1, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.170
.LBB30_363:
	add.w	r0, sp, #2416
	bl	core::panicking::panic_fmt::h679f68291595c801
	.inst.n	0xdefe
.LBB30_364:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.5
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.86
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.5
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.86
	b	.LBB30_378
.LBB30_365:
	ldrb.w	r0, [sp, #2417]
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.170
	strb.w	r0, [sp, #64]
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.366
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.170
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.366
	add	r2, sp, #64
	movs	r1, #43
	str	r6, [sp]
	bl	core::result::unwrap_failed::he67be68ddf63c991
	.inst.n	0xdefe
.LBB30_366:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.72
	movw	r2, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.73
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.72
	movt	r2, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.73
.LBB30_367:
	movs	r1, #27
	bl	core::option::expect_failed::h22026eb39ea9589c
	.inst.n	0xdefe
.LBB30_368:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.77
	movw	r1, :lower16:CORE_PERIPHERALS
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.77
	movt	r1, :upper16:CORE_PERIPHERALS
	str.w	r0, [sp, #2416]
	movs	r0, #1
	str.w	r1, [sp, #2432]
	movw	r1, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.78
	str.w	r0, [sp, #2420]
	movs	r0, #0
	str.w	r0, [sp, #2424]
	movt	r1, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.78
	str.w	r0, [sp, #2428]
	b	.LBB30_357
.LBB30_369:
	cmp	r1, #2
	bne	.LBB30_377
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.404
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.400
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.404
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.400
	movs	r1, #29
	bl	core::option::expect_failed::h22026eb39ea9589c
	.inst.n	0xdefe
.LBB30_371:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.5
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.394
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.5
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.394
	b	.LBB30_378
.LBB30_372:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.399
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.399
	b	.LBB30_374
.LBB30_373:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.397
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.397
.LBB30_374:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.394
	movs	r1, #30
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.394
	bl	core::option::expect_failed::h22026eb39ea9589c
	.inst.n	0xdefe
.LBB30_375:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.10
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.394
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.10
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.394
.LBB30_376:
	movs	r1, #15
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB30_377:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.5
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.400
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.5
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.400
.LBB30_378:
	movs	r1, #40
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB30_379:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.150
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.152
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.150
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.152
	movs	r1, #35
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.Lfunc_end30:
	.size	thermostat_eem::hardware::setup::setup::h69b53dfc2efddca9, .Lfunc_end30-thermostat_eem::hardware::setup::setup::h69b53dfc2efddca9
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN14thermostat_eem3net25NetworkUsers$LT$S$C$T$GT$6update17hb27cd5067be64adfE","ax",%progbits
	.p2align	2
	.type	thermostat_eem::net::NetworkUsers<S,T>::update::hb27cd5067be64adf,%function
	.code	16
	.thumb_func
thermostat_eem::net::NetworkUsers<S,T>::update::hb27cd5067be64adf:
.Lfunc_begin31:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#2484
	subw	sp, sp, #2484
	movw	r4, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	movt	r4, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	add.w	r5, r4, #2720
	mov	r0, r5
	bl	minimq::mqtt_client::MqttClient<TcpStack,Clock,_,_>::process::h160f6e2c1b0e553e
	uxtb	r0, r0
	mov	r2, r4
	cmp	r0, #9
	bne.w	.LBB31_56
	movw	r0, #4496
	ldrb	r0, [r2, r0]
	cmp	r0, #3
	it	ne
	cmpne	r0, #0
	bne.w	.LBB31_55
	add	r4, sp, #240
	mov.w	r1, #1024
	mov	r0, r4
	bl	__aeabi_memclr4
	mov	r0, r5
	mov	r1, r4
	bl	minimq::network_manager::InterfaceHolder<TcpStack,_>::read::hdad4c2469d70da69
	lsls	r0, r0, #31
	bne.w	.LBB31_52
	movw	r2, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	mov	r3, r1
	cmp	r1, #0
	movt	r2, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	str	r5, [sp, #96]
	beq.w	.LBB31_56
	cmp.w	r3, #1024
	bhi.w	.LBB31_723
	add.w	r0, sp, #1968
	movw	r4, #4500
	adds	r0, #8
	str	r0, [sp, #104]
	ldr	r0, [r2, r4]
	mov.w	r10, #0
	movw	r11, #4520
	adds	r6, r2, r4
	add.w	r9, sp, #1440
	movs	r5, #0
	str	r3, [sp, #88]
	str	r6, [sp, #100]
	b	.LBB31_8
.LBB31_6:
	ldr	r0, [r2, r4]
	cmp	r0, #4
	bhi.w	.LBB31_53
.LBB31_7:
	ldr	r5, [sp, #92]
	ldr	r3, [sp, #88]
	add	r5, r8
	cmp	r5, r3
	bhs.w	.LBB31_56
.LBB31_8:
	sub.w	r8, r3, r5
	rsb.w	r1, r0, #512
	cmp	r1, r8
	it	lo
	movlo	r8, r1
	cmp.w	r0, #512
	bhi.w	.LBB31_713
	add	r0, r2
	add	r1, sp, #240
	add	r1, r5
	add	r0, r11
	mov	r2, r8
	str	r5, [sp, #92]
	bl	__aeabi_memcpy
	movw	r0, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	movw	r1, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	movt	r0, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	movt	r1, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	ldr	r0, [r0, r4]
	add	r0, r8
	str	r0, [r1, r4]
	mov	r0, r6
	bl	minimq::de::packet_reader::PacketReader<_>::probe_fixed_header::h595f40dc1475742d
	movw	r2, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	cmp	r0, #1
	movt	r2, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	movw	r0, #4504
	ldr	r0, [r2, r0]
	bne	.LBB31_13
	cmp	r0, #0
	beq	.LBB31_6
	cmp.w	r1, #512
	bhi.w	.LBB31_53
	movs	r0, #1
.LBB31_13:
	cmp	r0, #0
	ldr	r0, [r2, r4]
	beq	.LBB31_7
	movw	r1, #4508
	ldr	r1, [r2, r1]
	cmp	r0, r1
	blo	.LBB31_7
.LBB31_15:
	add.w	r0, sp, #1968
	mov	r1, r6
	bl	minimq::de::deserialize::ReceivedPacket::parse_message::h034bbc7cb83704e5
	ldrb.w	r0, [sp, #1968]
	cmp	r0, #0
	bne.w	.LBB31_52
	movs	r2, #164
	mov	r0, r9
	ldr	r1, [sp, #104]
	ldr.w	r6, [sp, #1972]
	bl	__aeabi_memcpy4
	ldrh.w	r4, [sp, #2140]
	ldrb.w	r11, [sp, #2142]
	cbz	r6, .LBB31_19
	movw	r2, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	movw	r0, #4496
	movt	r2, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	ldrb	r0, [r2, r0]
	cmp	r0, #0
	beq	.LBB31_27
.LBB31_18:
	mov.w	r9, #6
	b	.LBB31_21
.LBB31_19:
	add.w	r5, sp, #1968
	ldrb.w	r6, [sp, #2143]
	movs	r2, #164
	mov	r0, r5
	mov	r1, r9
	bl	__aeabi_memcpy4
	ldr	r0, [sp, #96]
	mov	r1, r5
	strh.w	r4, [sp, #2132]
	strb.w	r11, [sp, #2134]
	strb.w	r6, [sp, #2135]
	bl	minimq::mqtt_client::MqttClient<TcpStack,Clock,_,_>::handle_connection_acknowledge::h72dc10860a87dbe3
	movw	r2, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	mov	r9, r0
.LBB31_20:
	movt	r2, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
.LBB31_21:
	movw	r0, #4504
	movw	r4, #4500
	ldr	r6, [sp, #100]
	ldr	r0, [r2, r0]
	cmp	r0, #1
	bne.w	.LBB31_56
	movw	r0, #4508
	ldr	r0, [r2, r0]
	cmp.w	r10, r0, lsr #9
	bne.w	.LBB31_638
	ldr	r1, [r2, r4]
	movw	r3, #4520
	subs	r5, r1, r0
	add	r0, r2
	adds	r1, r0, r3
	adds	r0, r2, r3
	mov	r2, r5
	movw	r11, #4520
	bl	__aeabi_memmove
	movw	r1, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	mov.w	r2, #4512
	movt	r1, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	ldr	r0, [r1, r2]
	str	r5, [r1, r4]
	cmp	r0, #0
	bne.w	.LBB31_707
	movw	r3, #4516
	movs	r0, #0
	str	r0, [r1, r2]
	mov.w	r10, #0
	str	r0, [r1, r3]
	mov	r0, r6
	bl	minimq::de::packet_reader::PacketReader<_>::probe_fixed_header::h595f40dc1475742d
	movw	r2, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	uxtb.w	r0, r9
	movt	r2, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	cmp	r0, #9
	bne.w	.LBB31_56
	movw	r0, #4504
	ldr	r0, [r2, r0]
	cmp	r0, #0
	ldr	r0, [r2, r4]
	beq.w	.LBB31_51
	movw	r1, #4508
	add.w	r9, sp, #1440
	ldr	r1, [r2, r1]
	cmp	r0, r1
	bhs.w	.LBB31_15
	b	.LBB31_7
.LBB31_27:
	subs	r0, r6, #1
	cmp	r0, #3
	bhi	.LBB31_43
	mov.w	r9, #9
.LCPI31_0:
	tbb	[pc, r0]
.LJTI31_0:
	.byte	(.LBB31_30-(.LCPI31_0+4))/2
	.byte	(.LBB31_31-(.LCPI31_0+4))/2
	.byte	(.LBB31_32-(.LCPI31_0+4))/2
	.byte	(.LBB31_42-(.LCPI31_0+4))/2
	.p2align	1
.LBB31_30:
	b	.LBB31_21
.LBB31_31:
	addw	r0, r2, #3256
	mov	r1, r4
	bl	minimq::session_state::SessionState<Clock,_,_>::handle_puback::h378a4214fd68aadc
	movw	r2, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	mov.w	r9, #9
	b	.LBB31_20
.LBB31_32:
	ldr.w	r12, [r2, #3356]
	cmp.w	r12, #0
	beq.w	.LBB31_18
	add.w	r1, r2, r12, lsl #1
	add.w	r0, r1, #3360
	movs	r1, #0
.LBB31_34:
	add.w	r3, r2, r1, lsl #1
	ldrh.w	r6, [r3, #3360]
	cmp	r4, r6
	beq	.LBB31_47
	add.w	r3, r3, #3360
	adds	r3, #2
	cmp	r3, r0
	beq.w	.LBB31_18
	ldrh	r6, [r3]
	cmp	r4, r6
	beq	.LBB31_44
	adds	r3, #2
	cmp	r3, r0
	beq.w	.LBB31_18
	ldrh	r6, [r3]
	cmp	r4, r6
	beq	.LBB31_45
	adds	r3, #2
	cmp	r3, r0
	beq.w	.LBB31_18
	ldrh	r6, [r3]
	cmp	r4, r6
	beq	.LBB31_46
	adds	r3, #2
	adds	r1, #4
	cmp	r3, r0
	mov.w	r9, #6
	bne	.LBB31_34
	b	.LBB31_21
.LBB31_42:
	str.w	r10, [r2, #3264]
	mov.w	r9, #9
	b	.LBB31_21
.LBB31_43:
	mov.w	r9, #3
	b	.LBB31_21
.LBB31_44:
	adds	r1, #1
	b	.LBB31_47
.LBB31_45:
	adds	r1, #2
	b	.LBB31_47
.LBB31_46:
	adds	r1, #3
.LBB31_47:
	cmp	r12, r1
	bls.w	.LBB31_738
	add.w	r4, r2, #3360
	cmp.w	r11, #0
	add.w	r0, r4, r12, lsl #1
	ldrh.w	r6, [r4, r1, lsl #1]
	ldrh	r3, [r0, #-2]
	strh.w	r3, [r4, r1, lsl #1]
	strh	r6, [r0, #-2]
	ldr.w	r0, [r2, #3356]
	sub.w	r0, r0, #1
	str.w	r0, [r2, #3356]
	beq	.LBB31_50
	mov.w	r9, #5
	b	.LBB31_21
.LBB31_50:
	mov.w	r9, #9
	b	.LBB31_21
.LBB31_51:
	add.w	r9, sp, #1440
	b	.LBB31_7
.LBB31_52:
	movw	r2, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	movt	r2, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	b	.LBB31_56
.LBB31_53:
	movw	r0, #4496
	ldrb	r0, [r2, r0]
	cmp	r0, #3
	bhi	.LBB31_55
	cmp	r0, #2
	ittt	ne
	movwne	r0, #4496
	movne	r1, #4
	strbne	r1, [r2, r0]
.LBB31_55:
	movw	r0, #4500
	movw	r1, #4504
	movs	r3, #0
	str	r3, [r2, r0]
	str	r3, [r2, r1]
.LBB31_56:
	ldr.w	r10, [r2, #2712]
	add.w	r9, r10, #288
	ldrexb	r0, [r9]
	cbnz	r0, .LBB31_60
	dmb	sy
	movs	r1, #1
.LBB31_58:
	strexb	r2, r1, [r9]
	cbz	r2, .LBB31_61
	ldrexb	r0, [r9]
	cmp	r0, #0
	beq	.LBB31_58
.LBB31_60:
	clrex
	movs	r1, #0
.LBB31_61:
	dmb	sy
	cmp	r1, #0
	beq.w	.LBB31_710
	ldr.w	r0, [r10, #272]
	blx	r0
	ldr.w	r1, [r10, #276]
	cmp	r1, #1
	bne	.LBB31_66
	ldr.w	r1, [r10, #280]
	subs	r4, r0, r1
	beq	.LBB31_67
	cmp.w	r4, #-1
	bgt	.LBB31_67
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.119
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.120
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.119
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.120
	b.w	.LBB31_715
.LBB31_66:
	movs	r4, #0
	movs	r1, #1
	strd	r1, r0, [r10, #276]
.LBB31_67:
	add	r0, sp, #240
	movs	r1, #1
	mov.w	r2, #1000
	movs	r3, #1
	mov.w	r6, #1000
	str	r6, [sp]
	bl	embedded_time::fraction::Fraction::checked_div::hd5f447229dd00813
	ldr	r0, [sp, #240]
	cmp	r0, #0
	beq.w	.LBB31_95
	ldr	r0, [sp, #244]
	movw	lr, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	umull	r0, r1, r4, r0
	movs	r2, #0
	movt	lr, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	cmp	r1, #0
	mov.w	r1, #1
	str	r1, [sp, #104]
	bne.w	.LBB31_96
	ldr	r1, [sp, #248]
	add.w	r12, sp, #240
	cmp	r1, #0
	beq.w	.LBB31_99
	cmp	r1, r0
	bhi	.LBB31_77
	udiv	r5, r0, r1
	ldrd	r0, r1, [r10, #96]
	ldr.w	r2, [r10, #276]
	mov.w	r4, #1000
	umlal	r0, r1, r5, r4
	cmp	r2, #0
	strd	r0, r1, [r10, #96]
	beq.w	.LBB31_724
	add	r0, sp, #240
	movs	r1, #1
	mov.w	r2, #1000
	movs	r3, #1
	ldr.w	r8, [r10, #280]
	str	r4, [sp]
	bl	embedded_time::fraction::Fraction::checked_div::hd5f447229dd00813
	ldr	r0, [sp, #240]
	cmp	r0, #0
	beq.w	.LBB31_714
	ldr	r0, [sp, #244]
	umull	r0, r1, r5, r0
	cmp	r1, #0
	bne.w	.LBB31_714
	ldr	r1, [sp, #248]
	cmp	r1, #0
	beq.w	.LBB31_714
	udiv	r0, r0, r1
	cmp.w	r0, #-1
	ble.w	.LBB31_714
	movs	r1, #1
	str.w	r1, [r10, #276]
	add	r0, r8
	str.w	r0, [r10, #280]
.LBB31_77:
	ldrd	r2, r3, [r10, #96]
	mov	r0, r10
	bl	smoltcp::iface::interface::Interface<DeviceT>::poll::he6084df7d1efd02c
	lsls	r0, r0, #31
	bne	.LBB31_97
	ldr.w	r0, [r10, #112]
	movw	lr, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	mov	r8, r1
	cmp	r0, #1
	movt	lr, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	add.w	r12, sp, #240
	bne.w	.LBB31_700
	ldr.w	r1, [r10, #88]
	ldr.w	r0, [r10, #116]
	cmp	r1, r0
	bls.w	.LBB31_703
	mov.w	r1, #392
	ldr.w	r2, [r10, #84]
	mla	r0, r0, r1, r2
	ldr	r1, [r0, #40]!
	cmp	r1, #3
	bne.w	.LBB31_725
	ldrb.w	r1, [r0, #92]
	cmp	r1, #0
	beq.w	.LBB31_700
	ldrd	r1, r2, [r0, #8]
	eor	r1, r1, #2
	orrs	r1, r2
	mov.w	r1, #0
	strb.w	r1, [r0, #92]
	bne	.LBB31_85
	ldrb.w	r11, [r0, #45]
	and	r1, r11, #3
	cmp	r1, #3
	beq.w	.LBB31_700
	cmp	r1, #2
	bne.w	.LBB31_562
.LBB31_85:
	add.w	r1, r10, #60
	add	r0, sp, #240
	bl	smoltcp::iface::route::Routes::remove_default_ipv4_route::h246da95b8708a486
	ldr.w	r1, [r10, #56]
	ldr.w	r0, [r10, #52]
	movs	r5, #0
	mov	r3, r0
	add.w	r2, r1, r1, lsl #3
	rsbs	r2, r2, #0
	lsl.w	r12, r2, #1
.LBB31_86:
	adds.w	r4, r12, r5
	beq.w	.LBB31_709
	ldrb	r2, [r0, r5]
	cmp	r2, #0
	add.w	r2, r0, r5
	beq.w	.LBB31_560
	adds.w	r6, r4, #18
	beq.w	.LBB31_709
	ldrb	r6, [r2, #18]
	add.w	lr, r3, #18
	cmp	r6, #0
	beq.w	.LBB31_561
	adds.w	r3, r4, #36
	beq.w	.LBB31_709
	ldrb.w	r3, [r2, #36]
	cmp	r3, #0
	beq.w	.LBB31_575
	adds.w	r3, r4, #54
	beq.w	.LBB31_709
	ldrb.w	r2, [r2, #54]
	add.w	r3, lr, #54
	adds	r5, #72
	cmp	r2, #0
	bne	.LBB31_86
	adds	r2, r0, r5
	add.w	lr, lr, #36
	subs	r2, #18
	b.w	.LBB31_576
.LBB31_95:
	movs	r2, #0
	movs	r0, #1
	str	r0, [sp, #104]
	b	.LBB31_98
.LBB31_96:
	add.w	r12, sp, #240
	b	.LBB31_99
.LBB31_97:
	movs	r0, #0
	str	r0, [sp, #104]
	movs	r2, #0
.LBB31_98:
	movw	lr, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	add.w	r12, sp, #240
	movt	lr, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
.LBB31_99:
	dmb	sy
	movs	r0, #0
	strb.w	r0, [r9]
	dmb	sy
	ldrb.w	r0, [lr, #1776]
	str	r2, [sp, #100]
	cbz	r0, .LBB31_106
	movs	r0, #3
.LBB31_101:
	strb.w	r0, [lr, #2444]
.LBB31_102:
	add	r5, sp, #108
	movs	r1, #132
	mov	r0, r5
	ldr.w	r9, [lr, #2448]
	ldr.w	r4, [lr, #2580]
	bl	__aeabi_memclr4
	cmp	r4, #128
	bhi.w	.LBB31_708
	cmp	r4, #0
	beq	.LBB31_113
	subs	r0, r4, #1
	and	r1, r4, #3
	cmp	r0, #3
	movw	r0, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	movt	r0, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	addw	r0, r0, #2584
	bhs	.LBB31_114
	movs	r3, #0
	b	.LBB31_145
.LBB31_106:
	ldrb.w	r0, [lr, #2444]
.LCPI31_1:
	tbh	[pc, r0, lsl #1]
.LJTI31_1:
	.short	(.LBB31_108-(.LCPI31_1+4))/2
	.short	(.LBB31_109-(.LCPI31_1+4))/2
	.short	(.LBB31_128-(.LCPI31_1+4))/2
	.short	(.LBB31_132-(.LCPI31_1+4))/2
	.short	(.LBB31_123-(.LCPI31_1+4))/2
	.short	(.LBB31_133-(.LCPI31_1+4))/2
	.p2align	1
.LBB31_108:
	b	.LBB31_102
.LBB31_109:
	add.w	r5, sp, #1968
	movs	r1, #132
	mov	r0, r5
	ldr.w	r4, [lr, #2448]
	bl	__aeabi_memclr4
	cmp	r4, #128
	bhi.w	.LBB31_708
	cmp	r4, #0
	beq.w	.LBB31_543
	movw	lr, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	subs	r0, r4, #1
	movt	lr, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	cmp	r0, #3
	and	r1, r4, #3
	addw	r0, lr, #2452
	bhs.w	.LBB31_548
	movs	r3, #0
	b.w	.LBB31_614
.LBB31_113:
	movs	r3, #0
	b	.LBB31_150
.LBB31_114:
	subs	r3, r4, #4
	movs	r2, #1
	cmp	r3, #12
	add.w	r2, r2, r3, lsr #2
	and	r12, r2, #3
	bhs	.LBB31_116
	movs	r3, #0
	b	.LBB31_118
.LBB31_116:
	bic	r4, r2, #3
	movs	r3, #0
	adds	r2, r5, #4
.LBB31_117:
	ldrb	r6, [r0], #16
	subs	r4, #4
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-15]
	ldr	r3, [sp, #108]
	add.w	r3, r3, #1
	str	r3, [sp, #108]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-14]
	ldr	r3, [sp, #108]
	add.w	r3, r3, #1
	str	r3, [sp, #108]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-13]
	ldr	r3, [sp, #108]
	add.w	r3, r3, #1
	str	r3, [sp, #108]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-12]
	ldr	r3, [sp, #108]
	add.w	r3, r3, #1
	str	r3, [sp, #108]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-11]
	ldr	r3, [sp, #108]
	add.w	r3, r3, #1
	str	r3, [sp, #108]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-10]
	ldr	r3, [sp, #108]
	add.w	r3, r3, #1
	str	r3, [sp, #108]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-9]
	ldr	r3, [sp, #108]
	add.w	r3, r3, #1
	str	r3, [sp, #108]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-8]
	ldr	r3, [sp, #108]
	add.w	r3, r3, #1
	str	r3, [sp, #108]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-7]
	ldr	r3, [sp, #108]
	add.w	r3, r3, #1
	str	r3, [sp, #108]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-6]
	ldr	r3, [sp, #108]
	add.w	r3, r3, #1
	str	r3, [sp, #108]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-5]
	ldr	r3, [sp, #108]
	add.w	r3, r3, #1
	str	r3, [sp, #108]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-4]
	ldr	r3, [sp, #108]
	add.w	r3, r3, #1
	str	r3, [sp, #108]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-3]
	ldr	r3, [sp, #108]
	add.w	r3, r3, #1
	str	r3, [sp, #108]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-2]
	ldr	r3, [sp, #108]
	add.w	r3, r3, #1
	str	r3, [sp, #108]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-1]
	ldr	r3, [sp, #108]
	add.w	r3, r3, #1
	str	r3, [sp, #108]
	strb	r6, [r2, r3]
	ldr	r6, [sp, #108]
	add.w	r3, r6, #1
	str	r3, [sp, #108]
	bne	.LBB31_117
.LBB31_118:
	cmp.w	r12, #0
	beq.w	.LBB31_145
	adds	r2, r5, #4
	ldrb	r6, [r0]
	cmp.w	r12, #1
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #1]
	ldr	r3, [sp, #108]
	add.w	r3, r3, #1
	str	r3, [sp, #108]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #2]
	ldr	r3, [sp, #108]
	add.w	r3, r3, #1
	str	r3, [sp, #108]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #3]
	ldr	r3, [sp, #108]
	add.w	r3, r3, #1
	str	r3, [sp, #108]
	strb	r6, [r2, r3]
	ldr	r6, [sp, #108]
	add.w	r3, r6, #1
	str	r3, [sp, #108]
	bne	.LBB31_121
	adds	r0, #4
	b	.LBB31_145
.LBB31_121:
	ldrb	r6, [r0, #4]
	cmp.w	r12, #2
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #5]
	ldr	r3, [sp, #108]
	add.w	r3, r3, #1
	str	r3, [sp, #108]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #6]
	ldr	r3, [sp, #108]
	add.w	r3, r3, #1
	str	r3, [sp, #108]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #7]
	ldr	r3, [sp, #108]
	add.w	r3, r3, #1
	str	r3, [sp, #108]
	strb	r6, [r2, r3]
	ldr	r6, [sp, #108]
	add.w	r3, r6, #1
	str	r3, [sp, #108]
	bne.w	.LBB31_144
	adds	r0, #8
	b	.LBB31_145
.LBB31_123:
	ldr.w	r0, [lr, #2404]
	cmp	r0, #1
	bne.w	.LBB31_102
	ldr.w	r0, [lr, #2400]
	ldr.w	r4, [lr, #2408]
	blx	r0
	movw	lr, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	subs	r0, r0, r4
	movt	lr, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	beq.w	.LBB31_102
	mvn	r1, #-2147483648
	cmp	r0, r1
	bhs.w	.LBB31_102
	ldrb.w	r0, [lr, #2444]
	cmp	r0, #4
	bne.w	.LBB31_740
	movs	r0, #0
	str.w	r0, [lr, #2412]
	str.w	r0, [lr, #2416]
	str.w	r0, [lr, #2420]
	str.w	r0, [lr, #2424]
	str.w	r0, [lr, #2428]
	str.w	r0, [lr, #2432]
	str.w	r0, [lr, #2436]
	str.w	r0, [lr, #2440]
	movs	r0, #5
	b	.LBB31_101
.LBB31_128:
	add.w	r5, sp, #1968
	movs	r1, #132
	mov	r0, r5
	ldr.w	r4, [lr, #2580]
	bl	__aeabi_memclr4
	cmp	r4, #128
	bhi.w	.LBB31_708
	cmp	r4, #0
	beq.w	.LBB31_542
	movw	lr, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	subs	r0, r4, #1
	movt	lr, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	cmp	r0, #3
	and	r1, r4, #3
	addw	r0, lr, #2584
	bhs.w	.LBB31_546
	movs	r3, #0
	b.w	.LBB31_602
.LBB31_132:
	movs	r0, #1
	b	.LBB31_101
.LBB31_133:
	ldr.w	r0, [lr, #12]
	cmp	r0, #1
	beq.w	.LBB31_102
	movw	r2, :lower16:.Lswitch.table._ZN14thermostat_eem3net25NetworkUsers$LT$S$C$T$GT$6update17hb27cd5067be64adfE
	movs	r1, #0
	movt	r2, :upper16:.Lswitch.table._ZN14thermostat_eem3net25NetworkUsers$LT$S$C$T$GT$6update17hb27cd5067be64adfE
	movs	r0, #0
	movs	r3, #0
	b	.LBB31_137
.LBB31_135:
	movs	r6, #1
	movs	r5, #3
.LBB31_136:
	cmp	r3, r5
	add.w	r1, r1, #1
	it	ls
	movls	r3, r5
	cmp	r0, r6
	it	ls
	movls	r0, r6
.LBB31_137:
	cbz	r1, .LBB31_143
	cmp	r1, #2
	beq	.LBB31_135
	cmp	r1, #1
	bne.w	.LBB31_318
	movs	r6, #2
	movs	r5, #0
	movs	r4, #0
	cmp	r5, #4
	bhi	.LBB31_142
.LBB31_141:
	ldr.w	r6, [r2, r5, lsl #2]
	adds	r5, #1
	cmp	r4, r6
	it	ls
	movls	r4, r6
	movs	r6, #3
	cmp	r5, #4
	bls	.LBB31_141
.LBB31_142:
	adds	r5, r4, #2
	cmp	r4, #0
	it	eq
	moveq	r5, #1
	adds	r5, #16
	b	.LBB31_136
.LBB31_143:
	movs	r6, #1
	movs	r5, #16
	b	.LBB31_136
.LBB31_144:
	ldrb	r6, [r0, #8]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #9]
	ldr	r3, [sp, #108]
	adds	r3, #1
	str	r3, [sp, #108]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #10]
	ldr	r3, [sp, #108]
	adds	r3, #1
	str	r3, [sp, #108]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #11]
	ldr	r3, [sp, #108]
	adds	r0, #12
	adds	r3, #1
	str	r3, [sp, #108]
	strb	r6, [r2, r3]
	ldr	r6, [sp, #108]
	adds	r3, r6, #1
	str	r3, [sp, #108]
.LBB31_145:
	cbz	r1, .LBB31_149
	adds	r2, r5, r3
	ldrb	r3, [r0]
	cmp	r1, #1
	strb	r3, [r2, #4]
	ldr	r6, [sp, #108]
	add.w	r3, r6, #1
	str	r3, [sp, #108]
	beq	.LBB31_149
	adds	r2, r5, r3
	ldrb	r3, [r0, #1]
	cmp	r1, #2
	strb	r3, [r2, #4]
	ldr	r6, [sp, #108]
	add.w	r3, r6, #1
	str	r3, [sp, #108]
	beq	.LBB31_149
	adds	r1, r5, r3
	ldrb	r0, [r0, #2]
	strb	r0, [r1, #4]
	ldr	r6, [sp, #108]
	adds	r3, r6, #1
	str	r3, [sp, #108]
.LBB31_149:
	sub.w	r0, r6, #124
	cmn.w	r0, #130
	bls.w	.LBB31_711
.LBB31_150:
	adds	r6, r5, #4
	movs	r0, #47
	movs	r1, #108
	movw	r4, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	strb	r0, [r6, r3]
	movt	r4, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	ldr	r0, [sp, #108]
	adds	r0, #1
	str	r0, [sp, #108]
	strb	r1, [r6, r0]
	movs	r1, #111
	ldr	r0, [sp, #108]
	adds	r0, #1
	str	r0, [sp, #108]
	strb	r1, [r6, r0]
	movs	r1, #103
	ldr	r0, [sp, #108]
	adds	r0, #1
	str	r0, [sp, #108]
	strb	r1, [r6, r0]
	ldr	r0, [sp, #108]
	adds	r0, #1
	str	r0, [sp, #84]
	str	r0, [sp, #108]
	mov	r0, r4
	bl	minimq::mqtt_client::MqttClient<TcpStack,Clock,_,_>::process::h160f6e2c1b0e553e
	mov	r11, r0
	uxtb	r0, r0
	cmp	r0, #9
	bne	.LBB31_157
	ldrb.w	r0, [r4, #1776]
	cmp	r0, #3
	it	ne
	cmpne	r0, #0
	bne	.LBB31_160
	add	r5, sp, #240
	mov.w	r1, #1024
	mov	r0, r5
	str.w	r9, [sp, #72]
	bl	__aeabi_memclr4
	movw	r9, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	mov	r1, r5
	movt	r9, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	mov	r0, r9
	bl	minimq::network_manager::InterfaceHolder<TcpStack,_>::read::hdad4c2469d70da69
	lsls	r2, r0, #31
	mov	r3, r1
	bne	.LBB31_156
	cmp	r3, #0
	beq	.LBB31_161
	cmp.w	r3, #1024
	str	r6, [sp, #56]
	bhi.w	.LBB31_723
	add.w	r6, sp, #1968
	add.w	r1, sp, #1440
	add.w	r0, r6, #8
	str	r0, [sp, #92]
	add.w	r0, r1, #168
	str	r0, [sp, #60]
	adds	r0, r6, #4
	str	r0, [sp, #52]
	addw	r0, sp, #1620
	add.w	r2, sp, #1744
	adds	r0, #4
	str	r0, [sp, #48]
	add.w	r0, r2, #8
	str	r0, [sp, #44]
	add.w	r0, r2, #140
	str	r0, [sp, #36]
	add.w	r0, r2, #141
	str	r0, [sp, #40]
	add.w	r0, r2, #12
	mov	r10, r4
	str	r0, [sp, #32]
	ldr.w	r0, [r9, #1780]
	subs	r1, #12
	addw	r5, sp, #1276
	movs	r4, #0
	add.w	r2, r6, #176
	str	r2, [sp, #88]
	str	r1, [sp, #28]
	movs	r1, #0
	str	r1, [sp, #68]
	str	r3, [sp, #64]
	b	.LBB31_166
.LBB31_156:
	lsrs	r0, r0, #8
	orr.w	r11, r0, r3, lsl #24
.LBB31_157:
	movs	r3, #0
	ldr	r2, [sp, #104]
	uxtb.w	r0, r11
	cmp	r0, #7
	beq.w	.LBB31_597
.LBB31_158:
	cmp	r0, #9
	beq	.LBB31_163
	movs	r1, #1
	b.w	.LBB31_598
.LBB31_160:
	movs	r3, #0
	ldr	r2, [sp, #104]
	str.w	r3, [r4, #1780]
	str.w	r3, [r4, #1784]
	b	.LBB31_163
.LBB31_161:
	movs	r0, #0
	str	r0, [sp, #68]
.LBB31_162:
	ldr	r2, [sp, #104]
	ldr	r3, [sp, #68]
.LBB31_163:
	movs	r1, #0
	mov	r11, r3
	b.w	.LBB31_598
.LBB31_164:
	ldr.w	r0, [r9, #1780]
	cmp	r0, #4
	bhi.w	.LBB31_592
.LBB31_165:
	mov	r10, r4
	ldr	r3, [sp, #64]
	ldrd	r1, r4, [sp, #76]
	add	r4, r1
	cmp	r4, r3
	bhs	.LBB31_162
.LBB31_166:
	subs	r2, r3, r4
	rsb.w	r1, r0, #512
	cmp	r1, r2
	it	lo
	movlo	r2, r1
	cmp.w	r0, #512
	bhi.w	.LBB31_713
	addw	r8, r9, #1780
	add	r1, sp, #240
	add	r0, r8
	add	r1, r4
	adds	r0, #20
	str	r4, [sp, #80]
	mov	r4, r2
	bl	__aeabi_memcpy
	ldr.w	r0, [r9, #1780]
	str	r4, [sp, #76]
	add	r0, r4
	str.w	r0, [r9, #1780]
	mov	r0, r8
	bl	minimq::de::packet_reader::PacketReader<_>::probe_fixed_header::h595f40dc1475742d
	cmp	r0, #1
	ldr.w	r0, [r9, #1784]
	bne	.LBB31_171
	cmp	r0, #0
	mov	r4, r10
	beq	.LBB31_164
	cmp.w	r1, #512
	bhi.w	.LBB31_592
	movs	r0, #1
	cmp	r0, #0
	ldr.w	r0, [r9, #1780]
	bne	.LBB31_172
	b	.LBB31_165
.LBB31_171:
	mov	r4, r10
	cmp	r0, #0
	ldr.w	r0, [r9, #1780]
	beq	.LBB31_165
.LBB31_172:
	ldr.w	r1, [r9, #1788]
	str.w	r8, [sp, #96]
	cmp	r0, r1
	blo	.LBB31_165
.LBB31_173:
	mov	r0, r6
	mov	r1, r8
	bl	minimq::de::deserialize::ReceivedPacket::parse_message::h034bbc7cb83704e5
	ldrb.w	r0, [sp, #1968]
	cmp	r0, #0
	bne.w	.LBB31_595
	movs	r2, #164
	mov	r0, r5
	ldr	r1, [sp, #92]
	ldr.w	r6, [sp, #1972]
	bl	__aeabi_memcpy4
	ldr	r2, [sp, #88]
	ldrh.w	r10, [sp, #2140]
	ldrb.w	r8, [sp, #2142]
	ldrb.w	r4, [sp, #2143]
	ldrd	r0, r1, [r2]
	str.w	r0, [sp, #1264]
	ldr	r0, [r2, #8]
	str.w	r1, [sp, #1268]
	str.w	r0, [sp, #1272]
	cbz	r6, .LBB31_178
	ldrb.w	r0, [r9, #1776]
	cmp	r0, #0
	beq	.LBB31_189
	mov.w	r11, #6
.LBB31_177:
	movw	r4, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	add.w	r6, sp, #1968
	b	.LBB31_180
.LBB31_178:
	add.w	r6, sp, #1968
	movs	r2, #164
	mov	r0, r6
	mov	r1, r5
	bl	__aeabi_memcpy4
	mov	r0, r9
	mov	r1, r6
	strh.w	r10, [sp, #2132]
	strb.w	r8, [sp, #2134]
	strb.w	r4, [sp, #2135]
	bl	minimq::mqtt_client::MqttClient<TcpStack,Clock,_,_>::handle_connection_acknowledge::h72dc10860a87dbe3
	mov	r11, r0
.LBB31_179:
	movw	r4, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
.LBB31_180:
	movt	r4, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
.LBB31_181:
	mov.w	r10, #0
.LBB31_182:
	ldr.w	r8, [sp, #96]
.LBB31_183:
	ldr.w	r0, [r9, #1784]
	cmp	r0, #1
	bne.w	.LBB31_595
	ldr.w	r0, [r9, #1788]
	cmp.w	r10, r0, lsr #9
	bne.w	.LBB31_638
	ldr.w	r1, [r9, #1780]
	add.w	r2, r8, r0
	subs	r5, r1, r0
	add.w	r1, r2, #20
	add.w	r0, r9, #1800
	mov	r2, r5
	bl	__aeabi_memmove
	ldr.w	r0, [r9, #1792]
	str.w	r5, [r9, #1780]
	cmp	r0, #0
	bne.w	.LBB31_707
	mov	r0, r8
	str.w	r10, [r9, #1792]
	str.w	r10, [r9, #1796]
	bl	minimq::de::packet_reader::PacketReader<_>::probe_fixed_header::h595f40dc1475742d
	uxtb.w	r0, r11
	cmp	r0, #9
	bne.w	.LBB31_596
	ldr.w	r0, [r9, #1784]
	cmp	r0, #0
	ldr.w	r0, [r9, #1780]
	beq.w	.LBB31_317
	ldr.w	r1, [r9, #1788]
	addw	r5, sp, #1276
	cmp	r0, r1
	bhs.w	.LBB31_173
	b	.LBB31_165
.LBB31_189:
	subs	r0, r6, #1
	cmp	r0, #3
	bhi	.LBB31_207
	add.w	r6, sp, #1968
.LCPI31_2:
	tbb	[pc, r0]
.LJTI31_4:
	.byte	(.LBB31_192-(.LCPI31_2+4))/2
	.byte	(.LBB31_206-(.LCPI31_2+4))/2
	.byte	(.LBB31_194-(.LCPI31_2+4))/2
	.byte	(.LBB31_205-(.LCPI31_2+4))/2
	.p2align	1
.LBB31_192:
	movs	r2, #164
	add.w	r0, sp, #1440
	mov	r1, r5
	bl	__aeabi_memcpy4
	strb.w	r4, [sp, #1607]
	ldr	r2, [sp, #60]
	ldr.w	r4, [sp, #1444]
	ldr	r6, [sp, #72]
	ldr.w	r0, [sp, #1264]
	cmp	r4, r6
	strh.w	r10, [sp, #1604]
	ldr.w	r1, [sp, #1268]
	strb.w	r8, [sp, #1606]
	str	r0, [r2]
	ldr.w	r0, [sp, #1272]
	str	r1, [r2, #4]
	str	r0, [r2, #8]
	bhs	.LBB31_208
	movw	r4, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	add.w	r6, sp, #1968
	movt	r4, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	mov.w	r10, #0
	ldr.w	r8, [sp, #96]
	mov.w	r11, #9
	b	.LBB31_183
.LBB31_194:
	ldr.w	r0, [r9, #636]
	cmp	r0, #0
	beq	.LBB31_210
	add.w	r1, r9, r0, lsl #1
	movw	r4, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	add.w	r2, r1, #640
	movs	r1, #0
	movt	r4, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
.LBB31_196:
	add.w	r3, r9, r1, lsl #1
	ldrh.w	r6, [r3, #640]
	cmp	r10, r6
	beq	.LBB31_219
	add.w	r3, r3, #640
	adds	r3, #2
	cmp	r3, r2
	beq	.LBB31_211
	ldrh	r6, [r3]
	cmp	r10, r6
	beq	.LBB31_216
	adds	r3, #2
	cmp	r3, r2
	beq	.LBB31_211
	ldrh	r6, [r3]
	cmp	r10, r6
	beq	.LBB31_217
	adds	r3, #2
	cmp	r3, r2
	beq	.LBB31_211
	ldrh	r6, [r3]
	cmp	r10, r6
	beq	.LBB31_218
	adds	r3, #2
	adds	r1, #4
	cmp	r3, r2
	mov.w	r11, #6
	bne	.LBB31_196
	add.w	r6, sp, #1968
	b	.LBB31_181
.LBB31_205:
	movw	r4, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	mov.w	r10, #0
	str.w	r10, [r9, #544]
	mov.w	r11, #9
	movt	r4, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	b	.LBB31_182
.LBB31_206:
	add.w	r0, r9, #536
	mov	r1, r10
	bl	minimq::session_state::SessionState<Clock,_,_>::handle_puback::h378a4214fd68aadc
	mov.w	r11, #9
	b	.LBB31_179
.LBB31_207:
	mov.w	r11, #3
	b	.LBB31_177
.LBB31_208:
	ldr.w	r0, [sp, #1612]
	ldr.w	r5, [sp, #1440]
	str	r0, [sp, #20]
	ldr.w	r0, [sp, #1616]
	str	r0, [sp, #24]
	addw	r0, r9, #2452
	mov	r1, r5
	mov	r2, r6
	ldr.w	r11, [sp, #1608]
	bl	memcmp
	mov.w	r10, #0
	ldr.w	r8, [sp, #96]
	cbz	r0, .LBB31_212
	movw	r4, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	add.w	r6, sp, #1968
	movt	r4, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	mov.w	r11, #9
	b	.LBB31_183
.LBB31_210:
	mov.w	r11, #6
	b	.LBB31_179
.LBB31_211:
	mov.w	r11, #6
	add.w	r6, sp, #1968
	b	.LBB31_181
.LBB31_212:
	mov	r8, r11
	subs.w	r11, r4, r6
	add.w	r10, r5, r6
	beq	.LBB31_223
	cmp.w	r11, #1
	ldr	r6, [sp, #56]
	beq	.LBB31_215
	ldrb.w	r0, [r10, #1]
	bl	core::num::<impl u8>::is_utf8_char_boundary::hce24739f4da7d511
	cmp	r0, #0
	beq.w	.LBB31_744
.LBB31_215:
	movw	r4, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	add.w	r10, r10, #1
	sub.w	r0, r11, #1
	movt	r4, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	add.w	r5, sp, #1968
	b	.LBB31_224
.LBB31_216:
	adds	r1, #1
	b	.LBB31_219
.LBB31_217:
	adds	r1, #2
	b	.LBB31_219
.LBB31_218:
	adds	r1, #3
.LBB31_219:
	cmp	r0, r1
	mov.w	r10, #0
	bls.w	.LBB31_738
	add.w	r2, r9, #640
	cmp.w	r8, #0
	add.w	r0, r2, r0, lsl #1
	ldrh.w	r6, [r2, r1, lsl #1]
	ldrh	r3, [r0, #-2]
	strh.w	r3, [r2, r1, lsl #1]
	strh	r6, [r0, #-2]
	ldr.w	r0, [r9, #636]
	sub.w	r0, r0, #1
	str.w	r0, [r9, #636]
	beq	.LBB31_222
	mov.w	r11, #5
	add.w	r6, sp, #1968
	b	.LBB31_182
.LBB31_222:
	mov.w	r11, #9
	add.w	r6, sp, #1968
	b	.LBB31_182
.LBB31_223:
	movw	r4, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	movs	r0, #0
	movt	r4, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	add.w	r5, sp, #1968
	ldr	r6, [sp, #56]
.LBB31_224:
	str.w	r0, [sp, #1696]
	movs	r1, #0
	str.w	r0, [sp, #1704]
	str.w	r0, [sp, #1712]
	movs	r0, #47
	str.w	r0, [sp, #1716]
	str.w	r0, [sp, #1724]
	addw	r0, sp, #1692
	str.w	r1, [sp, #1692]
	movs	r1, #1
	str.w	r10, [sp, #1700]
	mov.w	r10, #0
	str.w	r10, [sp, #1708]
	str.w	r1, [sp, #1720]
	strh.w	r1, [sp, #1728]
	str.w	r10, [sp, #1732]
	bl	<core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next::h8e334cc98268caf0
	mov	r11, r8
	cbz	r0, .LBB31_230
	cmp	r1, #3
	beq	.LBB31_231
	cmp	r1, #15
	beq	.LBB31_234
	cmp	r1, #16
	ldr.w	r8, [sp, #24]
	bne	.LBB31_235
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.255
	movs	r2, #16
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.255
	bl	memcmp
	cmp	r0, #0
	bne	.LBB31_235
	addw	r0, sp, #1692
	mov	r1, r5
	ldm	r0!, {r2, r3, r5, r6}
	stm	r1!, {r2, r3, r5, r6}
	ldm	r0!, {r2, r3, r5, r6}
	stm	r1!, {r2, r3, r5, r6}
	ldm.w	r0, {r2, r3, r4, r5, r6}
	stm	r1!, {r2, r3, r4, r5, r6}
	movw	r4, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	addw	r0, r9, #2312
	add.w	r1, sp, #1968
	ldr	r2, [sp, #20]
	mov	r3, r8
	ldr	r6, [sp, #56]
	movt	r4, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	bl	<f32 as miniconf::Miniconf>::string_set::h65f156fa2cd6ed1a
	b	.LBB31_233
.LBB31_230:
	movs	r1, #19
	b	.LBB31_263
.LBB31_231:
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.257
	movs	r2, #3
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.257
	bl	memcmp
	cbnz	r0, .LBB31_235
	addw	r0, sp, #1692
	mov	r1, r5
	ldm	r0!, {r2, r3, r5, r6}
	stm	r1!, {r2, r3, r5, r6}
	ldm	r0!, {r2, r3, r5, r6}
	stm	r1!, {r2, r3, r5, r6}
	ldm.w	r0, {r2, r3, r4, r5, r6}
	stm	r1!, {r2, r3, r4, r5, r6}
	movw	r4, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	addw	r0, r9, #2396
	add.w	r1, sp, #1968
	ldr	r6, [sp, #56]
	ldrd	r2, r3, [sp, #20]
	movt	r4, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	bl	<bool as miniconf::Miniconf>::string_set::hc172dc945a045a3a
.LBB31_233:
	uxtb	r1, r0
	b	.LBB31_262
.LBB31_234:
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.256
	movs	r2, #15
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.256
	bl	memcmp
	cbz	r0, .LBB31_236
.LBB31_235:
	movs	r1, #17
	b	.LBB31_263
.LBB31_236:
	addw	r0, sp, #1908
	addw	r1, sp, #1692
	mov	r12, r0
	ldm	r1!, {r2, r3, r5, r6}
	stm.w	r12!, {r2, r3, r5, r6}
	ldm	r1!, {r2, r3, r5, r6}
	stm.w	r12!, {r2, r3, r5, r6}
	ldm.w	r1, {r2, r3, r4, r5, r6}
	stm.w	r12, {r2, r3, r4, r5, r6}
	bl	<core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next::h8e334cc98268caf0
	cbz	r0, .LBB31_239
	mov	r2, r0
	mov	r3, r1
	add.w	r0, sp, #1968
	mov	r1, r2
	mov	r2, r3
	bl	serde_json_core::de::from_str::hba2caa47f21d3896
	ldrb.w	r0, [sp, #1968]
	cbz	r0, .LBB31_241
	movs	r1, #23
	b	.LBB31_240
.LBB31_239:
	movs	r1, #19
.LBB31_240:
	movw	r4, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	ldr	r6, [sp, #56]
	movt	r4, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	b	.LBB31_262
.LBB31_241:
	ldr.w	r11, [sp, #1972]
	cmp.w	r11, #3
	bls	.LBB31_243
	movs	r1, #23
	b	.LBB31_261
.LBB31_243:
	addw	r12, sp, #1908
	add.w	r0, sp, #1744
	mov	r1, r0
	ldm.w	r12!, {r2, r3, r4, r6}
	stm	r1!, {r2, r3, r4, r6}
	ldm.w	r12!, {r2, r3, r4, r6}
	stm	r1!, {r2, r3, r4, r6}
	ldm.w	r12, {r2, r3, r4, r5, r6}
	stm	r1!, {r2, r3, r4, r5, r6}
	bl	<core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next::h8e334cc98268caf0
	cmp	r0, #0
	beq	.LBB31_249
	mov	r10, r0
	subs	r0, r1, #7
	cmp	r0, #15
	mov.w	r1, #17
	bhi.w	.LBB31_261
.LCPI31_3:
	tbb	[pc, r0]
.LJTI31_5:
	.byte	(.LBB31_247-(.LCPI31_3+4))/2
	.byte	(.LBB31_250-(.LCPI31_3+4))/2
	.byte	(.LBB31_261-(.LCPI31_3+4))/2
	.byte	(.LBB31_261-(.LCPI31_3+4))/2
	.byte	(.LBB31_261-(.LCPI31_3+4))/2
	.byte	(.LBB31_261-(.LCPI31_3+4))/2
	.byte	(.LBB31_252-(.LCPI31_3+4))/2
	.byte	(.LBB31_261-(.LCPI31_3+4))/2
	.byte	(.LBB31_261-(.LCPI31_3+4))/2
	.byte	(.LBB31_261-(.LCPI31_3+4))/2
	.byte	(.LBB31_261-(.LCPI31_3+4))/2
	.byte	(.LBB31_261-(.LCPI31_3+4))/2
	.byte	(.LBB31_261-(.LCPI31_3+4))/2
	.byte	(.LBB31_261-(.LCPI31_3+4))/2
	.byte	(.LBB31_261-(.LCPI31_3+4))/2
	.byte	(.LBB31_254-(.LCPI31_3+4))/2
	.p2align	1
.LBB31_247:
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.242
	movs	r2, #7
	mov	r0, r10
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.242
	bl	memcmp
	cmp	r0, #0
	bne	.LBB31_256
	add.w	r1, sp, #1968
	add.w	r0, sp, #1744
	mov	lr, r1
	ldm	r0!, {r2, r3, r5, r6}
	stm.w	lr!, {r2, r3, r5, r6}
	add.w	r2, r11, r11, lsl #2
	ldm	r0!, {r3, r4, r5, r6}
	stm.w	lr!, {r3, r4, r5, r6}
	add.w	r12, r9, r2, lsl #2
	ldm.w	r0, {r2, r3, r4, r5, r6}
	stm.w	lr, {r2, r3, r4, r5, r6}
	addw	r0, r12, #2328
	b	.LBB31_259
.LBB31_249:
	movs	r1, #19
	b	.LBB31_261
.LBB31_250:
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.238
	movs	r2, #8
	mov	r0, r10
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.238
	bl	memcmp
	cmp	r0, #0
	bne	.LBB31_256
	add.w	r1, sp, #1968
	add.w	r0, sp, #1744
	mov	lr, r1
	ldm	r0!, {r2, r3, r5, r6}
	stm.w	lr!, {r2, r3, r5, r6}
	add.w	r2, r11, r11, lsl #2
	ldm	r0!, {r3, r4, r5, r6}
	stm.w	lr!, {r3, r4, r5, r6}
	add.w	r12, r9, r2, lsl #2
	ldm.w	r0, {r2, r3, r4, r5, r6}
	stm.w	lr, {r2, r3, r4, r5, r6}
	addw	r0, r12, #2332
	ldrd	r2, r3, [sp, #20]
	bl	<bool as miniconf::Miniconf>::string_set::hc172dc945a045a3a
	b	.LBB31_260
.LBB31_252:
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.241
	movs	r2, #13
	mov	r0, r10
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.241
	bl	memcmp
	cbnz	r0, .LBB31_256
	add.w	r1, sp, #1968
	add.w	r0, sp, #1744
	mov	lr, r1
	ldm	r0!, {r2, r3, r5, r6}
	stm.w	lr!, {r2, r3, r5, r6}
	add.w	r2, r11, r11, lsl #2
	ldm	r0!, {r3, r4, r5, r6}
	stm.w	lr!, {r3, r4, r5, r6}
	add.w	r12, r9, r2, lsl #2
	ldm.w	r0, {r2, r3, r4, r5, r6}
	stm.w	lr, {r2, r3, r4, r5, r6}
	addw	r0, r12, #2324
	b	.LBB31_259
.LBB31_254:
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.239
	movs	r2, #22
	mov	r0, r10
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.239
	bl	memcmp
	cbz	r0, .LBB31_257
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.240
	movs	r2, #22
	mov	r0, r10
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.240
	bl	memcmp
	cbz	r0, .LBB31_258
.LBB31_256:
	movs	r1, #17
	b	.LBB31_261
.LBB31_257:
	add.w	r1, sp, #1968
	add.w	r0, sp, #1744
	mov	lr, r1
	ldm	r0!, {r2, r3, r5, r6}
	stm.w	lr!, {r2, r3, r5, r6}
	add.w	r2, r11, r11, lsl #2
	ldm	r0!, {r3, r4, r5, r6}
	stm.w	lr!, {r3, r4, r5, r6}
	add.w	r12, r9, r2, lsl #2
	ldm.w	r0, {r2, r3, r4, r5, r6}
	addw	r0, r12, #2316
	stm.w	lr, {r2, r3, r4, r5, r6}
	b	.LBB31_259
.LBB31_258:
	add.w	r1, sp, #1968
	add.w	r0, sp, #1744
	mov	lr, r1
	ldm	r0!, {r2, r3, r5, r6}
	stm.w	lr!, {r2, r3, r5, r6}
	add.w	r2, r11, r11, lsl #2
	ldm	r0!, {r3, r4, r5, r6}
	stm.w	lr!, {r3, r4, r5, r6}
	add.w	r12, r9, r2, lsl #2
	ldm.w	r0, {r2, r3, r4, r5, r6}
	stm.w	lr, {r2, r3, r4, r5, r6}
	add.w	r0, r12, #2320
.LBB31_259:
	ldrd	r2, r3, [sp, #20]
	bl	<f32 as miniconf::Miniconf>::string_set::h65f156fa2cd6ed1a
.LBB31_260:
	uxtb	r1, r0
	cmp	r1, #24
	it	eq
	moveq	r1, #24
.LBB31_261:
	movw	r4, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	mov.w	r10, #0
	movt	r4, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	ldr	r6, [sp, #56]
	mov	r11, r8
.LBB31_262:
	ldr	r0, [sp, #68]
	cmp	r1, #24
	it	eq
	moveq	r0, #1
	str	r0, [sp, #68]
.LBB31_263:
	addw	r0, sp, #1620
	bl	<miniconf::mqtt_client::messages::SettingsResponse as core::convert::From<core::result::Result<(),miniconf::Error>>>::from::h7c53701d03be7865
	add.w	r0, r11, r11, lsl #2
	movs	r2, #0
	rsbs	r0, r0, #0
	str.w	r6, [sp, #1964]
	lsls	r0, r0, #2
	ldr	r1, [sp, #84]
	str.w	r1, [sp, #1960]
.LBB31_264:
	adds	r6, r0, r2
	mov.w	r1, #0
	beq	.LBB31_273
	add.w	r3, sp, #1440
	add	r3, r2
	ldrb	r5, [r3, #8]
	cmp	r5, #3
	beq	.LBB31_274
	adds.w	r5, r6, #20
	beq	.LBB31_273
	ldrb	r5, [r3, #28]
	cmp	r5, #3
	beq	.LBB31_275
	adds.w	r5, r6, #40
	beq	.LBB31_273
	ldrb.w	r5, [r3, #48]
	cmp	r5, #3
	beq	.LBB31_276
	adds	r6, #60
	beq	.LBB31_273
	ldrb.w	r3, [r3, #68]
	adds	r2, #80
	cmp	r3, #3
	bne	.LBB31_264
	ldr	r3, [sp, #28]
	add	r2, r3
	b	.LBB31_277
.LBB31_273:
	movs	r5, #0
	b	.LBB31_278
.LBB31_274:
	add.w	r2, r3, #8
	b	.LBB31_277
.LBB31_275:
	add.w	r2, r3, #28
	b	.LBB31_277
.LBB31_276:
	add.w	r2, r3, #48
.LBB31_277:
	adds	r5, r2, #4
.LBB31_278:
	str.w	r1, [sp, #1923]
	str.w	r1, [sp, #1920]
	str.w	r1, [sp, #1916]
	str.w	r1, [sp, #1912]
	str.w	r1, [sp, #1908]
.LBB31_279:
	adds	r3, r0, r1
	beq	.LBB31_288
	add.w	r2, sp, #1440
	add	r2, r1
	ldrb	r6, [r2, #8]
	cmp	r6, #4
	beq	.LBB31_289
	adds.w	r6, r3, #20
	beq	.LBB31_288
	ldrb	r6, [r2, #28]
	cmp	r6, #4
	beq	.LBB31_290
	adds.w	r6, r3, #40
	beq	.LBB31_288
	ldrb.w	r6, [r2, #48]
	cmp	r6, #4
	beq	.LBB31_291
	adds	r3, #60
	add.w	r6, sp, #1968
	beq.w	.LBB31_316
	ldrb.w	r2, [r2, #68]
	adds	r1, #80
	cmp	r2, #4
	bne	.LBB31_279
	ldr	r0, [sp, #28]
	add	r0, r1
	b	.LBB31_292
.LBB31_288:
	mov.w	r11, #0
	movs	r0, #0
	str	r0, [sp, #24]
	add.w	r6, sp, #1968
	b	.LBB31_294
.LBB31_289:
	add.w	r0, r2, #8
	b	.LBB31_292
.LBB31_290:
	add.w	r0, r2, #28
	b	.LBB31_292
.LBB31_291:
	add.w	r0, r2, #48
.LBB31_292:
	adds	r1, r0, #1
	movs	r2, #19
	addw	r0, sp, #1908
	add.w	r6, sp, #1968
	bl	__aeabi_memcpy
	mov.w	r11, #4
	movs	r0, #1
.LBB31_293:
	str	r0, [sp, #24]
.LBB31_294:
	mov	r0, r5
	add.w	r1, sp, #1960
	cmp	r5, #0
	addw	r2, sp, #1964
	it	ne
	addne	r1, r5, #4
	it	eq
	moveq	r0, r2
	ldr.w	r8, [r0]
	ldr	r5, [r1]
	movs	r1, #132
	mov	r0, r6
	bl	__aeabi_memclr4
	movs	r0, #0
.LBB31_295:
	add	r0, r6
	strb.w	r10, [r0, #4]
	ldr.w	r0, [sp, #1968]
	adds	r0, #1
	str.w	r0, [sp, #1968]
	cmp	r0, #127
	bhi	.LBB31_299
	add	r0, r6
	strb.w	r10, [r0, #4]
	ldr.w	r0, [sp, #1968]
	adds	r0, #1
	str.w	r0, [sp, #1968]
	cmp	r0, #127
	bhi	.LBB31_299
	add	r0, r6
	strb.w	r10, [r0, #4]
	ldr.w	r0, [sp, #1968]
	adds	r0, #1
	str.w	r0, [sp, #1968]
	cmp	r0, #127
	bhi	.LBB31_299
	add	r0, r6
	strb.w	r10, [r0, #4]
	ldr.w	r0, [sp, #1968]
	adds	r0, #1
	str.w	r0, [sp, #1968]
	cmp	r0, #128
	blo	.LBB31_295
.LBB31_299:
	ldr	r1, [sp, #52]
	str.w	r0, [sp, #1696]
	movw	r0, #8827
	str.w	r1, [sp, #1692]
	strh.w	r0, [sp, #1972]
	movs	r0, #2
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.82
	ldrb.w	r10, [sp, #1688]
	str.w	r0, [sp, #1700]
	movs	r2, #4
	addw	r0, sp, #1692
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.82
	bl	serde_json_core::ser::Serializer::extend_from_slice::h7ef655ceaae37f25
	cmp	r0, #0
	bne.w	.LBB31_599
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.140
	movs	r2, #2
	addw	r0, sp, #1692
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.140
	bl	serde_json_core::ser::Serializer::extend_from_slice::h7ef655ceaae37f25
	cmp	r0, #0
	bne.w	.LBB31_599
	addw	r0, sp, #1692
	mov	r1, r10
	bl	<&mut serde_json_core::ser::Serializer as serde::ser::Serializer>::serialize_u8::h2dfadc270344fb0a
	cmp	r0, #0
	bne.w	.LBB31_599
	ldr.w	r1, [sp, #1696]
	ldr.w	r0, [sp, #1700]
	cmp	r0, r1
	itttt	lo
	ldrlo.w	r1, [sp, #1692]
	movlo	r2, #44
	strblo	r2, [r1, r0]
	addlo	r1, r0, #1
	itt	lo
	ldrlo.w	r2, [sp, #1696]
	cmplo	r1, r2
	bhs.w	.LBB31_599
	ldr.w	r2, [sp, #1692]
	movs	r3, #34
	adds	r0, #2
	strb	r3, [r2, r1]
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.83
	str.w	r0, [sp, #1700]
	movs	r2, #3
	addw	r0, sp, #1692
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.83
	bl	serde_json_core::ser::Serializer::extend_from_slice::h7ef655ceaae37f25
	cmp	r0, #0
	bne.w	.LBB31_599
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.140
	movs	r2, #2
	addw	r0, sp, #1692
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.140
	bl	serde_json_core::ser::Serializer::extend_from_slice::h7ef655ceaae37f25
	cmp	r0, #0
	bne.w	.LBB31_599
	ldr.w	r2, [sp, #1620]
	addw	r0, sp, #1692
	ldr	r1, [sp, #48]
	bl	<&mut serde_json_core::ser::Serializer as serde::ser::Serializer>::serialize_str::h559be0d6eaa1ef8f
	cmp	r0, #0
	bne.w	.LBB31_599
	ldr.w	r1, [sp, #1696]
	ldr.w	r0, [sp, #1700]
	cmp	r0, r1
	bhs.w	.LBB31_599
	ldr.w	r1, [sp, #1692]
	movs	r2, #125
	mov	r10, r11
	strb	r2, [r1, r0]
	adds	r0, #1
	ldr.w	r1, [sp, #1968]
	movs	r2, #132
	cmp	r1, r0
	mov	r1, r6
	it	hi
	strhi.w	r0, [sp, #1968]
	ldr	r0, [sp, #44]
	bl	__aeabi_memcpy4
	movs	r2, #19
	ldr	r0, [sp, #40]
	addw	r1, sp, #1908
	mov	r11, r8
	str.w	r8, [sp, #1744]
	str.w	r5, [sp, #1748]
	strb.w	r10, [sp, #1884]
	bl	__aeabi_memcpy
	ldrb.w	r0, [r9, #2444]
	mov.w	r10, #0
	cmp	r0, #4
	ldr	r0, [sp, #24]
	str.w	r0, [sp, #1904]
	bne	.LBB31_309
	ldr.w	r0, [r9, #2400]
	blx	r0
	movs	r1, #2
	bl	<embedded_time::instant::Instant<Clock> as core::ops::arith::Add<Dur>>::add::hf35db1ad5ab0791a
	str.w	r0, [r9, #2408]
	movs	r0, #4
	ldr.w	r5, [sp, #1748]
	movs	r1, #1
	str.w	r1, [r9, #2404]
	strb.w	r0, [r9, #2444]
	ldr.w	r0, [sp, #1904]
	str	r0, [sp, #24]
.LBB31_309:
	ldrb.w	r0, [r9, #1776]
	ldr.w	r8, [sp, #96]
	cbnz	r0, .LBB31_315
	ldr.w	r0, [r9, #12]
	cmp	r0, #1
	beq	.LBB31_315
	mov.w	r1, #512
	mov	r0, r6
	ldr.w	r4, [sp, #1752]
	bl	__aeabi_memclr4
	ldr	r0, [sp, #32]
	mov	r1, r6
	stm.w	sp, {r0, r4, r10}
	ldr	r0, [sp, #36]
	str	r0, [sp, #12]
	ldr	r0, [sp, #24]
	str	r0, [sp, #16]
	addw	r0, sp, #1908
	mov	r2, r11
	mov	r3, r5
	bl	minimq::ser::serialize::publish_message::h3fe8b31b5970804e
	ldrb.w	r0, [sp, #1908]
	cbnz	r0, .LBB31_314
	ldr.w	r1, [sp, #1912]
	ldr.w	r2, [sp, #1916]
	mov	r0, r9
	bl	minimq::network_manager::InterfaceHolder<TcpStack,_>::write::h19b74f0c592580bd
	uxtb	r0, r0
	cmp	r0, #9
	bne	.LBB31_314
	ldrh.w	r0, [r9, #1236]
	adds	r0, #1
	uxth	r1, r0
	cmp	r1, r0
	it	ne
	movne	r1, #1
	strh.w	r1, [r9, #1236]
.LBB31_314:
	movw	r4, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	movt	r4, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
.LBB31_315:
	mov.w	r11, #9
	b.w	.LBB31_183
.LBB31_316:
	mov.w	r11, #0
	movs	r0, #0
	b	.LBB31_293
.LBB31_317:
	addw	r5, sp, #1276
	b.w	.LBB31_165
.LBB31_318:
	cmp	r3, #128
	bhi.w	.LBB31_735
	subs	r0, #8
	mov.w	r11, #0
	cmn.w	r0, #9
	blo.w	.LBB31_736
	add.w	r0, sp, #1744
	add.w	r1, sp, #1440
	adds	r0, #4
	str	r0, [sp, #88]
	adds	r0, r1, #4
	str	r0, [sp, #80]
	b	.LBB31_322
.LBB31_321:
	ldr.w	r0, [lr, #12]
	cmp	r0, #1
	beq.w	.LBB31_102
.LBB31_322:
	movs	r1, #132
	mov	r0, r12
	bl	__aeabi_memclr4
	movw	lr, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	add.w	r12, sp, #240
	movt	lr, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	mov.w	r9, #0
	movs	r4, #0
	mov.w	r8, #0
	ldr.w	r0, [lr, #2412]
	b	.LBB31_325
.LBB31_323:
	mov	r4, r6
	mov	r5, r6
.LBB31_324:
	ldr.w	r0, [lr, #2412]
	str.w	r11, [lr, #2416]
	adds	r0, #1
	str.w	r0, [lr, #2412]
	str.w	r11, [lr, #2420]
	mov	r9, r6
	str.w	r11, [lr, #2424]
	mov	r8, r5
	str.w	r11, [lr, #2428]
	str.w	r11, [lr, #2432]
	str.w	r11, [lr, #2436]
	str.w	r11, [lr, #2440]
.LBB31_325:
	cmp	r0, #2
	beq.w	.LBB31_338
	cmp	r0, #1
	beq	.LBB31_333
	cmp	r0, #0
	bne.w	.LBB31_544
	movs	r0, #17
	cmp.w	r9, #0
	it	eq
	moveq	r0, #16
	add.w	r1, r0, r9
	cmp	r1, #128
	bhi.w	.LBB31_706
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.260
	cmp.w	r9, #0
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.260
	movw	r4, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.255
	mov	r8, r1
	movt	r4, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.255
	it	eq
	moveq	r8, r4
	ands	r3, r0, #3
	beq.w	.LBB31_344
	add.w	r6, r12, r9
	adds	r2, r1, #1
	ldrb.w	r5, [r8]
	cmp.w	r9, #0
	it	eq
	addeq	r2, r4, #1
	strb	r5, [r6, #4]
	cmp	r3, #1
	ldr	r6, [sp, #240]
	add.w	r6, r6, #1
	str	r6, [sp, #240]
	beq.w	.LBB31_345
	add	r6, r12
	adds	r5, r1, #2
	ldrb	r2, [r2]
	cmp.w	r9, #0
	it	eq
	addeq	r5, r4, #2
	strb	r2, [r6, #4]
	cmp	r3, #2
	ldr	r2, [sp, #240]
	add.w	r6, r2, #1
	str	r6, [sp, #240]
	bne.w	.LBB31_479
	mov	r2, r5
	subs	r3, r0, #1
	cmp	r3, #3
	bhs.w	.LBB31_346
	b	.LBB31_348
.LBB31_333:
	movs	r0, #16
	cmp	r4, #0
	it	eq
	moveq	r0, #15
	adds	r1, r0, r4
	cmp	r1, #128
	bhi.w	.LBB31_706
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.259
	cmp	r4, #0
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.259
	mov	r10, r4
	mov	r12, r1
	movw	r4, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.256
	movt	r4, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.256
	it	eq
	moveq	r12, r4
	ands	r3, r0, #3
	str.w	r10, [sp, #96]
	beq	.LBB31_343
	add.w	r8, sp, #240
	adds	r2, r1, #1
	add.w	r6, r8, r10
	ldrb.w	r5, [r12]
	cmp.w	r10, #0
	it	eq
	addeq	r2, r4, #1
	strb	r5, [r6, #4]
	cmp	r3, #1
	ldr	r6, [sp, #240]
	add.w	r9, r6, #1
	str.w	r9, [sp, #240]
	beq.w	.LBB31_357
	add.w	r5, r8, r9
	adds	r6, r1, #2
	ldrb	r2, [r2]
	cmp.w	r10, #0
	it	eq
	addeq	r6, r4, #2
	strb	r2, [r5, #4]
	cmp	r3, #2
	ldr	r2, [sp, #240]
	add.w	r9, r2, #1
	str.w	r9, [sp, #240]
	bne.w	.LBB31_356
	mov	r4, r9
	mov	r2, r6
	b	.LBB31_358
.LBB31_338:
	movs	r0, #4
	cmp.w	r8, #0
	it	eq
	moveq	r0, #3
	add.w	r1, r0, r8
	movw	r12, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.258
	cmp	r1, #128
	movt	r12, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.258
	bhi.w	.LBB31_706
	mov	r3, r4
	cmp.w	r8, #0
	mov	r1, r12
	movw	r4, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.257
	movt	r4, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.257
	it	eq
	moveq	r1, r4
	ands	r6, r0, #3
	beq.w	.LBB31_353
	add.w	r11, sp, #240
	add.w	r2, r12, #1
	add.w	r3, r11, r8
	ldrb	r5, [r1]
	cmp.w	r8, #0
	it	eq
	addeq	r2, r4, #1
	strb	r5, [r3, #4]
	cmp	r6, #1
	ldr	r3, [sp, #240]
	add.w	r9, r3, #1
	str.w	r9, [sp, #240]
	beq.w	.LBB31_481
	add.w	r5, r11, r9
	add.w	r3, r12, #2
	ldrb	r2, [r2]
	cmp.w	r8, #0
	it	eq
	addeq	r3, r4, #2
	strb	r2, [r5, #4]
	cmp	r6, #2
	ldr	r2, [sp, #240]
	add.w	r9, r2, #1
	str.w	r9, [sp, #240]
	bne.w	.LBB31_480
	mov	r4, r9
	mov	r5, r9
	mov	r2, r3
	mov.w	r11, #0
	subs	r3, r0, #1
	cmp	r3, #3
	bhs	.LBB31_354
	b.w	.LBB31_482
.LBB31_343:
	mov	r4, r10
	mov	r2, r12
	b	.LBB31_358
.LBB31_344:
	mov	r6, r9
	mov	r2, r8
.LBB31_345:
	subs	r3, r0, #1
	cmp	r3, #3
	blo	.LBB31_348
.LBB31_346:
	add	r0, r8
	subs	r1, r2, #4
.LBB31_347:
	add.w	r2, r12, #4
	ldrb	r3, [r1, #4]!
	strb	r3, [r2, r6]
	ldrb	r6, [r1, #1]
	ldr	r3, [sp, #240]
	adds	r3, #1
	str	r3, [sp, #240]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #2]
	ldr	r3, [sp, #240]
	adds	r3, #1
	str	r3, [sp, #240]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #3]
	ldr	r3, [sp, #240]
	adds	r3, #1
	str	r3, [sp, #240]
	strb	r6, [r2, r3]
	adds	r2, r1, #4
	ldr	r3, [sp, #240]
	cmp	r2, r0
	add.w	r6, r3, #1
	str	r6, [sp, #240]
	bne	.LBB31_347
.LBB31_348:
	ldr.w	r0, [lr, #2416]
	str.w	r11, [lr, #2420]
	cmp	r0, #0
	add.w	r1, r0, #1
	str.w	r1, [lr, #2416]
	str.w	r11, [lr, #2424]
	str.w	r11, [lr, #2428]
	str.w	r11, [lr, #2432]
	str.w	r11, [lr, #2436]
	str.w	r11, [lr, #2440]
	beq.w	.LBB31_496
	cmp	r6, r9
	blo.w	.LBB31_323
	cmp.w	r9, #0
	beq.w	.LBB31_489
	cmp	r6, r9
	bls.w	.LBB31_488
	add.w	r0, r12, r9
	ldrb	r0, [r0, #4]
	bl	core::num::<impl u8>::is_utf8_char_boundary::hce24739f4da7d511
	movw	lr, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	add.w	r12, sp, #240
	movt	lr, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	cmp	r0, #0
	bne.w	.LBB31_489
	b.w	.LBB31_705
.LBB31_353:
	mov	r5, r8
	mov	r2, r1
	mov	r4, r3
	subs	r3, r0, #1
	cmp	r3, #3
	blo.w	.LBB31_482
.LBB31_354:
	add	r0, r1
	subs	r1, r2, #4
	mov	r6, r5
	add.w	r12, sp, #240
.LBB31_355:
	add.w	r2, r12, #4
	ldrb	r3, [r1, #4]!
	strb	r3, [r2, r6]
	ldrb	r6, [r1, #1]
	ldr	r3, [sp, #240]
	adds	r3, #1
	str	r3, [sp, #240]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #2]
	ldr	r3, [sp, #240]
	adds	r3, #1
	str	r3, [sp, #240]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #3]
	ldr	r3, [sp, #240]
	adds	r3, #1
	str	r3, [sp, #240]
	strb	r6, [r2, r3]
	adds	r3, r1, #4
	ldr	r2, [sp, #240]
	cmp	r3, r0
	add.w	r6, r2, #1
	str	r6, [sp, #240]
	mov	r4, r6
	mov	r5, r6
	mov	r9, r6
	bne	.LBB31_355
	b.w	.LBB31_483
.LBB31_356:
	add.w	r2, r8, r9
	ldrb	r3, [r6]
	cmp.w	r10, #0
	strb	r3, [r2, #4]
	add.w	r2, r1, #3
	ldr	r3, [sp, #240]
	add.w	r9, r3, #1
	it	eq
	addeq	r2, r4, #3
	str.w	r9, [sp, #240]
.LBB31_357:
	mov	r4, r9
.LBB31_358:
	subs	r3, r0, #1
	movw	r10, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.244
	cmp	r3, #3
	movt	r10, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.244
	bhs	.LBB31_360
	add.w	r12, sp, #240
	b	.LBB31_362
.LBB31_360:
	add	r0, r12
	subs	r1, r2, #4
	mov	r9, r4
	add.w	r12, sp, #240
.LBB31_361:
	add.w	r2, r12, #4
	ldrb	r3, [r1, #4]!
	ldrb	r6, [r1, #1]
	strb.w	r3, [r2, r9]
	ldr	r3, [sp, #240]
	adds	r3, #1
	str	r3, [sp, #240]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #2]
	ldr	r3, [sp, #240]
	adds	r3, #1
	str	r3, [sp, #240]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #3]
	ldr	r3, [sp, #240]
	adds	r3, #1
	str	r3, [sp, #240]
	strb	r6, [r2, r3]
	adds	r3, r1, #4
	ldr	r2, [sp, #240]
	cmp	r3, r0
	add.w	r9, r2, #1
	str.w	r9, [sp, #240]
	mov	r4, r9
	bne	.LBB31_361
.LBB31_362:
	ldr.w	r0, [lr, #2416]
	cmp	r0, #3
	bhi.w	.LBB31_473
	add.w	r0, r12, r9
	mov	r6, r9
	adds	r0, #4
	str	r0, [sp, #84]
.LBB31_364:
	cbz	r6, .LBB31_367
	cmp	r6, #127
	bhi.w	.LBB31_722
	add.w	r0, r12, r6
	movs	r1, #47
	strb	r1, [r0, #4]
	ldr	r0, [sp, #240]
	adds	r0, #1
	str	r0, [sp, #240]
.LBB31_367:
	add.w	r0, lr, #2416
	str.w	r0, [sp, #1440]
	movw	r0, :lower16:core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::h9d0ff72e374f98e7
	movs	r1, #1
	movt	r0, :upper16:core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::h9d0ff72e374f98e7
	str.w	r0, [sp, #1444]
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.114
	str.w	r1, [sp, #1972]
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.114
	str.w	r0, [sp, #1968]
	add.w	r0, sp, #1440
	str.w	r1, [sp, #1988]
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.379
	str.w	r0, [sp, #1984]
	add.w	r0, sp, #1744
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.379
	add.w	r2, sp, #1968
	str.w	r12, [sp, #1744]
	str.w	r11, [sp, #1976]
	mov	r4, lr
	str.w	r11, [sp, #1980]
	bl	core::fmt::write::h5d3fbef16e428eed
	cmp	r0, #0
	bne.w	.LBB31_717
	ldr.w	r0, [r4, #2416]
	str	r0, [sp, #92]
	cmp	r0, #4
	bhs.w	.LBB31_662
	mov	lr, r4
	ldr.w	r0, [r4, #2420]
	add.w	r12, sp, #240
	b	.LBB31_372
.LBB31_370:
	str.w	r8, [sp, #240]
.LBB31_371:
	str.w	r0, [lr, #2420]
	str.w	r11, [lr, #2424]
	str.w	r11, [lr, #2428]
	str.w	r11, [lr, #2432]
	str.w	r11, [lr, #2436]
	str.w	r11, [lr, #2440]
.LBB31_372:
	cmp	r0, #4
	bhi.w	.LBB31_465
.LCPI31_4:
	tbh	[pc, r0, lsl #1]
.LJTI31_2:
	.short	(.LBB31_375-(.LCPI31_4+4))/2
	.short	(.LBB31_395-(.LCPI31_4+4))/2
	.short	(.LBB31_385-(.LCPI31_4+4))/2
	.short	(.LBB31_390-(.LCPI31_4+4))/2
	.short	(.LBB31_380-(.LCPI31_4+4))/2
	.p2align	1
.LBB31_375:
	ldr.w	r8, [sp, #240]
	movs	r0, #9
	cmp.w	r8, #0
	it	eq
	moveq	r0, #8
	add.w	r1, r0, r8
	cmp	r1, #128
	bhi.w	.LBB31_704
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.247
	cmp.w	r8, #0
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.247
	movw	r12, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.238
	mov	r11, r1
	movt	r12, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.238
	it	eq
	moveq	r11, r12
	ands	r3, r0, #3
	beq.w	.LBB31_413
	add	r4, sp, #240
	adds	r2, r1, #1
	add.w	r6, r4, r8
	ldrb.w	r5, [r11]
	cmp.w	r8, #0
	it	eq
	addeq.w	r2, r12, #1
	strb	r5, [r6, #4]
	cmp	r3, #1
	ldr	r6, [sp, #240]
	add.w	r4, r6, #1
	str	r4, [sp, #240]
	beq.w	.LBB31_414
	add	r5, sp, #240
	adds	r6, r1, #2
	add	r5, r4
	ldrb	r2, [r2]
	cmp.w	r8, #0
	it	eq
	addeq.w	r6, r12, #2
	strb	r2, [r5, #4]
	cmp	r3, #2
	ldr	r2, [sp, #240]
	add.w	r4, r2, #1
	str	r4, [sp, #240]
	bne.w	.LBB31_445
	mov	r2, r6
	subs	r3, r0, #1
	add.w	r12, sp, #240
	cmp	r3, #3
	bhs.w	.LBB31_415
	b	.LBB31_417
.LBB31_380:
	ldr.w	r8, [sp, #240]
	movs	r0, #8
	cmp.w	r8, #0
	it	eq
	moveq	r0, #7
	add.w	r1, r0, r8
	cmp	r1, #128
	bhi.w	.LBB31_704
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.243
	mov	r10, r9
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.243
	mov	r9, lr
	cmp.w	r8, #0
	mov	r11, r1
	movw	lr, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.242
	movt	lr, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.242
	it	eq
	moveq	r11, lr
	ands	r3, r0, #3
	beq.w	.LBB31_401
	add.w	r6, r12, r8
	adds	r2, r1, #1
	ldrb.w	r5, [r11]
	cmp.w	r8, #0
	it	eq
	addeq.w	r2, lr, #1
	strb	r5, [r6, #4]
	cmp	r3, #1
	ldr	r6, [sp, #240]
	add.w	r4, r6, #1
	str	r4, [sp, #240]
	beq.w	.LBB31_402
	add.w	r5, r12, r4
	adds	r6, r1, #2
	ldrb	r2, [r2]
	cmp.w	r8, #0
	it	eq
	addeq.w	r6, lr, #2
	strb	r2, [r5, #4]
	cmp	r3, #2
	ldr	r2, [sp, #240]
	add.w	r4, r2, #1
	str	r4, [sp, #240]
	bne.w	.LBB31_424
	mov	r2, r6
	subs	r3, r0, #1
	mov	lr, r9
	cmp	r3, #3
	bhs.w	.LBB31_403
	b	.LBB31_405
.LBB31_385:
	ldr.w	r8, [sp, #240]
	movs	r0, #23
	cmp.w	r8, #0
	it	eq
	moveq	r0, #22
	add.w	r1, r0, r8
	cmp	r1, #128
	bhi.w	.LBB31_704
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.245
	cmp.w	r8, #0
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.245
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.240
	mov	r10, r1
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.240
	it	eq
	moveq	r10, r3
	ands	r12, r0, #3
	beq.w	.LBB31_411
	add.w	r11, sp, #240
	adds	r2, r1, #1
	add.w	r6, r11, r8
	ldrb.w	r5, [r10]
	cmp.w	r8, #0
	it	eq
	addeq	r2, r3, #1
	strb	r5, [r6, #4]
	cmp.w	r12, #1
	ldr	r6, [sp, #240]
	add.w	r4, r6, #1
	str	r4, [sp, #240]
	beq.w	.LBB31_426
	add.w	r5, r11, r4
	adds	r6, r1, #2
	ldrb	r2, [r2]
	cmp.w	r8, #0
	it	eq
	addeq	r6, r3, #2
	strb	r2, [r5, #4]
	cmp.w	r12, #2
	ldr	r2, [sp, #240]
	add.w	r4, r2, #1
	str	r4, [sp, #240]
	bne.w	.LBB31_425
	mov	r2, r6
	b	.LBB31_426
.LBB31_390:
	ldr.w	r8, [sp, #240]
	movs	r0, #14
	cmp.w	r8, #0
	it	eq
	moveq	r0, #13
	add.w	r1, r0, r8
	cmp	r1, #128
	bhi.w	.LBB31_704
	cmp.w	r8, #0
	mov	r1, r10
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.241
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.241
	it	eq
	moveq	r1, r3
	ands	r12, r0, #3
	beq.w	.LBB31_412
	add.w	r11, sp, #240
	add.w	r2, r10, #1
	add.w	r6, r11, r8
	ldrb	r5, [r1]
	cmp.w	r8, #0
	it	eq
	addeq	r2, r3, #1
	strb	r5, [r6, #4]
	cmp.w	r12, #1
	ldr	r6, [sp, #240]
	add.w	r4, r6, #1
	str	r4, [sp, #240]
	beq.w	.LBB31_436
	add.w	r5, r11, r4
	add.w	r6, r10, #2
	ldrb	r2, [r2]
	cmp.w	r8, #0
	it	eq
	addeq	r6, r3, #2
	strb	r2, [r5, #4]
	cmp.w	r12, #2
	ldr	r2, [sp, #240]
	add.w	r4, r2, #1
	str	r4, [sp, #240]
	bne.w	.LBB31_435
	mov	r2, r6
	b	.LBB31_436
.LBB31_395:
	ldr.w	r8, [sp, #240]
	movs	r0, #23
	cmp.w	r8, #0
	it	eq
	moveq	r0, #22
	add.w	r1, r0, r8
	cmp	r1, #128
	bhi.w	.LBB31_704
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.246
	cmp.w	r8, #0
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.246
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.239
	mov	r10, r1
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.239
	it	eq
	moveq	r10, r3
	ands	r12, r0, #3
	beq.w	.LBB31_423
	add.w	r11, sp, #240
	adds	r2, r1, #1
	add.w	r6, r11, r8
	ldrb.w	r5, [r10]
	cmp.w	r8, #0
	it	eq
	addeq	r2, r3, #1
	strb	r5, [r6, #4]
	cmp.w	r12, #1
	ldr	r6, [sp, #240]
	add.w	r4, r6, #1
	str	r4, [sp, #240]
	beq	.LBB31_400
	add.w	r5, r11, r4
	adds	r6, r1, #2
	ldrb	r2, [r2]
	cmp.w	r8, #0
	it	eq
	addeq	r6, r3, #2
	strb	r2, [r5, #4]
	cmp.w	r12, #2
	ldr	r2, [sp, #240]
	add.w	r4, r2, #1
	str	r4, [sp, #240]
	bne.w	.LBB31_446
	mov	r2, r6
.LBB31_400:
	mov	r12, r11
	subs	r3, r0, #1
	cmp	r3, #3
	blo.w	.LBB31_449
	b	.LBB31_447
.LBB31_401:
	mov	r4, r8
	mov	r2, r11
.LBB31_402:
	subs	r3, r0, #1
	mov	lr, r9
	cmp	r3, #3
	blo	.LBB31_405
.LBB31_403:
	add	r0, r11
	subs	r1, r2, #4
.LBB31_404:
	add.w	r2, r12, #4
	ldrb	r3, [r1, #4]!
	ldrb	r6, [r1, #1]
	strb	r3, [r2, r4]
	ldr	r3, [sp, #240]
	adds	r3, #1
	str	r3, [sp, #240]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #2]
	ldr	r3, [sp, #240]
	adds	r3, #1
	str	r3, [sp, #240]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #3]
	ldr	r3, [sp, #240]
	adds	r3, #1
	str	r3, [sp, #240]
	strb	r6, [r2, r3]
	adds	r2, r1, #4
	ldr	r3, [sp, #240]
	cmp	r2, r0
	add.w	r4, r3, #1
	str	r4, [sp, #240]
	bne	.LBB31_404
.LBB31_405:
	ldr.w	r0, [lr, #2424]
	mov	r9, r10
	movw	r10, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.244
	mov.w	r11, #0
	cmp	r0, #0
	movt	r10, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.244
	add.w	r1, r0, #1
	str.w	r1, [lr, #2424]
	str.w	r11, [lr, #2428]
	str.w	r11, [lr, #2432]
	str.w	r11, [lr, #2436]
	str.w	r11, [lr, #2440]
	beq.w	.LBB31_496
	cmp	r4, r8
	bhs	.LBB31_408
	movs	r0, #5
	b	.LBB31_371
.LBB31_408:
	cmp.w	r8, #0
	beq.w	.LBB31_456
	cmp	r4, r8
	bls.w	.LBB31_455
	add.w	r0, r12, r8
	ldrb	r0, [r0, #4]
	bl	core::num::<impl u8>::is_utf8_char_boundary::hce24739f4da7d511
	movw	lr, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	add.w	r12, sp, #240
	movt	lr, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	cmp	r0, #0
	bne.w	.LBB31_456
	b.w	.LBB31_705
.LBB31_411:
	mov	r4, r8
	mov	r2, r10
	add.w	r12, sp, #240
	subs	r3, r0, #1
	mov.w	r11, #0
	cmp	r3, #3
	bhs.w	.LBB31_427
	b	.LBB31_429
.LBB31_412:
	mov	r4, r8
	mov	r2, r1
	add.w	r12, sp, #240
	subs	r3, r0, #1
	mov.w	r11, #0
	cmp	r3, #3
	bhs.w	.LBB31_437
	b	.LBB31_439
.LBB31_413:
	mov	r4, r8
	mov	r2, r11
.LBB31_414:
	subs	r3, r0, #1
	add.w	r12, sp, #240
	cmp	r3, #3
	blo	.LBB31_417
.LBB31_415:
	add	r0, r11
	subs	r1, r2, #4
.LBB31_416:
	add.w	r2, r12, #4
	ldrb	r3, [r1, #4]!
	ldrb	r6, [r1, #1]
	strb	r3, [r2, r4]
	ldr	r3, [sp, #240]
	adds	r3, #1
	str	r3, [sp, #240]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #2]
	ldr	r3, [sp, #240]
	adds	r3, #1
	str	r3, [sp, #240]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #3]
	ldr	r3, [sp, #240]
	adds	r3, #1
	str	r3, [sp, #240]
	strb	r6, [r2, r3]
	adds	r2, r1, #4
	ldr	r3, [sp, #240]
	cmp	r2, r0
	add.w	r4, r3, #1
	str	r4, [sp, #240]
	bne	.LBB31_416
.LBB31_417:
	ldr.w	r0, [lr, #2424]
	mov.w	r11, #0
	cmp	r0, #0
	add.w	r1, r0, #1
	str.w	r1, [lr, #2424]
	str.w	r11, [lr, #2428]
	str.w	r11, [lr, #2432]
	str.w	r11, [lr, #2436]
	str.w	r11, [lr, #2440]
	beq.w	.LBB31_496
	cmp	r4, r8
	bhs	.LBB31_420
	movs	r0, #1
	b	.LBB31_371
.LBB31_420:
	cmp.w	r8, #0
	beq.w	.LBB31_462
	cmp	r4, r8
	bls.w	.LBB31_461
	add.w	r0, r12, r8
	ldrb	r0, [r0, #4]
	bl	core::num::<impl u8>::is_utf8_char_boundary::hce24739f4da7d511
	movw	lr, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	add.w	r12, sp, #240
	movt	lr, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	cmp	r0, #0
	bne.w	.LBB31_462
	b.w	.LBB31_705
.LBB31_423:
	mov	r4, r8
	mov	r2, r10
	add.w	r12, sp, #240
	subs	r3, r0, #1
	cmp	r3, #3
	bhs.w	.LBB31_447
	b	.LBB31_449
.LBB31_424:
	add.w	r3, r12, r4
	adds	r2, r1, #3
	ldrb	r6, [r6]
	cmp.w	r8, #0
	strb	r6, [r3, #4]
	it	eq
	addeq.w	r2, lr, #3
	ldr	r3, [sp, #240]
	adds	r4, r3, #1
	str	r4, [sp, #240]
	subs	r3, r0, #1
	mov	lr, r9
	cmp	r3, #3
	bhs.w	.LBB31_403
	b	.LBB31_405
.LBB31_425:
	add.w	r5, r11, r4
	adds	r2, r1, #3
	ldrb	r6, [r6]
	cmp.w	r8, #0
	strb	r6, [r5, #4]
	it	eq
	addeq	r2, r3, #3
	ldr	r3, [sp, #240]
	adds	r4, r3, #1
	str	r4, [sp, #240]
.LBB31_426:
	mov	r12, r11
	subs	r3, r0, #1
	mov.w	r11, #0
	cmp	r3, #3
	blo	.LBB31_429
.LBB31_427:
	add	r0, r10
	subs	r1, r2, #4
.LBB31_428:
	add.w	r2, r12, #4
	ldrb	r3, [r1, #4]!
	ldrb	r6, [r1, #1]
	strb	r3, [r2, r4]
	ldr	r3, [sp, #240]
	adds	r3, #1
	str	r3, [sp, #240]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #2]
	ldr	r3, [sp, #240]
	adds	r3, #1
	str	r3, [sp, #240]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #3]
	ldr	r3, [sp, #240]
	adds	r3, #1
	str	r3, [sp, #240]
	strb	r6, [r2, r3]
	adds	r2, r1, #4
	ldr	r3, [sp, #240]
	cmp	r2, r0
	add.w	r4, r3, #1
	str	r4, [sp, #240]
	bne	.LBB31_428
.LBB31_429:
	ldr.w	r0, [lr, #2424]
	movw	r10, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.244
	cmp	r0, #0
	movt	r10, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.244
	add.w	r1, r0, #1
	str.w	r1, [lr, #2424]
	str.w	r11, [lr, #2428]
	str.w	r11, [lr, #2432]
	str.w	r11, [lr, #2436]
	str.w	r11, [lr, #2440]
	beq.w	.LBB31_496
	cmp	r4, r8
	bhs	.LBB31_432
	movs	r0, #3
	b	.LBB31_371
.LBB31_432:
	cmp.w	r8, #0
	beq.w	.LBB31_458
	cmp	r4, r8
	bls.w	.LBB31_457
	add.w	r0, r12, r8
	ldrb	r0, [r0, #4]
	bl	core::num::<impl u8>::is_utf8_char_boundary::hce24739f4da7d511
	movw	lr, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	add.w	r12, sp, #240
	movt	lr, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	cmp	r0, #0
	bne.w	.LBB31_458
	b.w	.LBB31_705
.LBB31_435:
	add.w	r5, r11, r4
	add.w	r2, r10, #3
	ldrb	r6, [r6]
	cmp.w	r8, #0
	strb	r6, [r5, #4]
	it	eq
	addeq	r2, r3, #3
	ldr	r3, [sp, #240]
	adds	r4, r3, #1
	str	r4, [sp, #240]
.LBB31_436:
	mov	r12, r11
	subs	r3, r0, #1
	mov.w	r11, #0
	cmp	r3, #3
	blo	.LBB31_439
.LBB31_437:
	add	r0, r1
	subs	r1, r2, #4
.LBB31_438:
	add.w	r2, r12, #4
	ldrb	r3, [r1, #4]!
	ldrb	r6, [r1, #1]
	strb	r3, [r2, r4]
	ldr	r3, [sp, #240]
	adds	r3, #1
	str	r3, [sp, #240]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #2]
	ldr	r3, [sp, #240]
	adds	r3, #1
	str	r3, [sp, #240]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #3]
	ldr	r3, [sp, #240]
	adds	r3, #1
	str	r3, [sp, #240]
	strb	r6, [r2, r3]
	adds	r2, r1, #4
	ldr	r3, [sp, #240]
	cmp	r2, r0
	add.w	r4, r3, #1
	str	r4, [sp, #240]
	bne	.LBB31_438
.LBB31_439:
	ldr.w	r0, [lr, #2424]
	str.w	r11, [lr, #2428]
	cmp	r0, #0
	add.w	r1, r0, #1
	str.w	r1, [lr, #2424]
	str.w	r11, [lr, #2432]
	str.w	r11, [lr, #2436]
	str.w	r11, [lr, #2440]
	beq.w	.LBB31_496
	cmp	r4, r8
	bhs	.LBB31_442
	movs	r0, #4
	b	.LBB31_371
.LBB31_442:
	cmp.w	r8, #0
	beq.w	.LBB31_460
	cmp	r4, r8
	bls.w	.LBB31_459
	add.w	r0, r12, r8
	ldrb	r0, [r0, #4]
	bl	core::num::<impl u8>::is_utf8_char_boundary::hce24739f4da7d511
	movw	lr, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	add.w	r12, sp, #240
	movt	lr, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	cmp	r0, #0
	bne.w	.LBB31_460
	b.w	.LBB31_705
.LBB31_445:
	add	r2, sp, #240
	ldrb	r6, [r6]
	adds	r3, r2, r4
	adds	r2, r1, #3
	cmp.w	r8, #0
	strb	r6, [r3, #4]
	it	eq
	addeq.w	r2, r12, #3
	ldr	r3, [sp, #240]
	adds	r4, r3, #1
	str	r4, [sp, #240]
	subs	r3, r0, #1
	add.w	r12, sp, #240
	cmp	r3, #3
	bhs.w	.LBB31_415
	b	.LBB31_417
.LBB31_446:
	add.w	r5, r11, r4
	adds	r2, r1, #3
	ldrb	r6, [r6]
	cmp.w	r8, #0
	strb	r6, [r5, #4]
	it	eq
	addeq	r2, r3, #3
	ldr	r3, [sp, #240]
	adds	r4, r3, #1
	str	r4, [sp, #240]
	mov	r12, r11
	subs	r3, r0, #1
	cmp	r3, #3
	blo	.LBB31_449
.LBB31_447:
	add	r0, r10
	subs	r1, r2, #4
.LBB31_448:
	add.w	r2, r12, #4
	ldrb	r3, [r1, #4]!
	ldrb	r6, [r1, #1]
	strb	r3, [r2, r4]
	ldr	r3, [sp, #240]
	adds	r3, #1
	str	r3, [sp, #240]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #2]
	ldr	r3, [sp, #240]
	adds	r3, #1
	str	r3, [sp, #240]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #3]
	ldr	r3, [sp, #240]
	adds	r3, #1
	str	r3, [sp, #240]
	strb	r6, [r2, r3]
	adds	r2, r1, #4
	ldr	r3, [sp, #240]
	cmp	r2, r0
	add.w	r4, r3, #1
	str	r4, [sp, #240]
	bne	.LBB31_448
.LBB31_449:
	ldr.w	r0, [lr, #2424]
	movw	r10, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.244
	mov.w	r11, #0
	cmp	r0, #0
	movt	r10, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.244
	add.w	r1, r0, #1
	str.w	r1, [lr, #2424]
	str.w	r11, [lr, #2428]
	str.w	r11, [lr, #2432]
	str.w	r11, [lr, #2436]
	str.w	r11, [lr, #2440]
	beq.w	.LBB31_496
	cmp	r4, r8
	bhs	.LBB31_452
	movs	r0, #2
	b	.LBB31_371
.LBB31_452:
	cmp.w	r8, #0
	beq	.LBB31_464
	cmp	r4, r8
	bls	.LBB31_463
	add.w	r0, r12, r8
	ldrb	r0, [r0, #4]
	bl	core::num::<impl u8>::is_utf8_char_boundary::hce24739f4da7d511
	movw	lr, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	add.w	r12, sp, #240
	movt	lr, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	cbnz	r0, .LBB31_464
	b.w	.LBB31_705
.LBB31_455:
	bne.w	.LBB31_705
.LBB31_456:
	cmp	r4, r8
	mov.w	r0, #5
	bhi.w	.LBB31_370
	b	.LBB31_371
.LBB31_457:
	bne.w	.LBB31_705
.LBB31_458:
	cmp	r4, r8
	mov.w	r0, #3
	bhi.w	.LBB31_370
	b	.LBB31_371
.LBB31_459:
	bne.w	.LBB31_705
.LBB31_460:
	cmp	r4, r8
	mov.w	r0, #4
	bhi.w	.LBB31_370
	b	.LBB31_371
.LBB31_461:
	bne.w	.LBB31_705
.LBB31_462:
	cmp	r4, r8
	mov.w	r0, #1
	it	hi
	strhi.w	r8, [sp, #240]
	b	.LBB31_371
.LBB31_463:
	bne.w	.LBB31_705
.LBB31_464:
	cmp	r4, r8
	mov.w	r0, #2
	bhi.w	.LBB31_370
	b	.LBB31_371
.LBB31_465:
	ldr	r6, [sp, #240]
	cmp	r6, r9
	blo	.LBB31_472
	cmp.w	r9, #0
	beq	.LBB31_470
	cmp	r6, r9
	bls	.LBB31_469
	ldr	r0, [sp, #84]
	ldrb	r0, [r0]
	bl	core::num::<impl u8>::is_utf8_char_boundary::hce24739f4da7d511
	movw	lr, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	add.w	r12, sp, #240
	movt	lr, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	cbnz	r0, .LBB31_470
	b.w	.LBB31_705
.LBB31_469:
	bne.w	.LBB31_705
.LBB31_470:
	cmp	r6, r9
	bls	.LBB31_472
	mov	r6, r9
	str.w	r9, [sp, #240]
.LBB31_472:
	ldr	r0, [sp, #92]
	mov	r4, r6
	adds	r0, #1
	str.w	r0, [lr, #2416]
	cmp	r0, #4
	str.w	r11, [lr, #2420]
	str.w	r11, [lr, #2424]
	str.w	r11, [lr, #2428]
	str.w	r11, [lr, #2432]
	str.w	r11, [lr, #2436]
	str.w	r11, [lr, #2440]
	blo.w	.LBB31_364
	b	.LBB31_474
.LBB31_473:
	mov	r6, r9
.LBB31_474:
	ldr.w	r8, [sp, #96]
	cmp	r6, r8
	bhs	.LBB31_476
	mov	r5, r4
	b.w	.LBB31_324
.LBB31_476:
	cmp.w	r8, #0
	beq	.LBB31_494
	cmp	r6, r8
	bls	.LBB31_493
	add.w	r0, r12, r8
	ldrb	r0, [r0, #4]
	bl	core::num::<impl u8>::is_utf8_char_boundary::hce24739f4da7d511
	movw	lr, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	add.w	r12, sp, #240
	movt	lr, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	cmp	r0, #0
	bne	.LBB31_494
	b.w	.LBB31_705
.LBB31_479:
	add.w	r3, r12, r6
	adds	r2, r1, #3
	ldrb	r6, [r5]
	cmp.w	r9, #0
	strb	r6, [r3, #4]
	it	eq
	addeq	r2, r4, #3
	ldr	r3, [sp, #240]
	adds	r6, r3, #1
	str	r6, [sp, #240]
	subs	r3, r0, #1
	cmp	r3, #3
	bhs.w	.LBB31_346
	b.w	.LBB31_348
.LBB31_480:
	add.w	r2, r11, r9
	ldrb	r3, [r3]
	cmp.w	r8, #0
	strb	r3, [r2, #4]
	add.w	r2, r12, #3
	ldr	r3, [sp, #240]
	add.w	r9, r3, #1
	it	eq
	addeq	r2, r4, #3
	str.w	r9, [sp, #240]
.LBB31_481:
	mov	r4, r9
	mov	r5, r9
	mov.w	r11, #0
	subs	r3, r0, #1
	cmp	r3, #3
	bhs.w	.LBB31_354
.LBB31_482:
	mov	r6, r9
	add.w	r12, sp, #240
.LBB31_483:
	ldr.w	r0, [lr, #2416]
	str.w	r11, [lr, #2420]
	add.w	r1, r0, #1
	str.w	r1, [lr, #2416]
	str.w	r11, [lr, #2424]
	str.w	r11, [lr, #2428]
	str.w	r11, [lr, #2432]
	str.w	r11, [lr, #2436]
	str.w	r11, [lr, #2440]
	cbz	r0, .LBB31_496
	cmp	r9, r8
	blo.w	.LBB31_324
	cmp.w	r8, #0
	beq	.LBB31_492
	cmp	r9, r8
	bls	.LBB31_491
	add.w	r0, r12, r8
	ldrb	r0, [r0, #4]
	bl	core::num::<impl u8>::is_utf8_char_boundary::hce24739f4da7d511
	movw	lr, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	add.w	r12, sp, #240
	movt	lr, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	cbnz	r0, .LBB31_492
	b.w	.LBB31_705
.LBB31_488:
	bne.w	.LBB31_705
.LBB31_489:
	cmp	r6, r9
	mov	r4, r6
	mov	r5, r6
	bls.w	.LBB31_324
	str.w	r9, [sp, #240]
	mov	r6, r9
	mov	r4, r9
	mov	r5, r9
	b.w	.LBB31_324
.LBB31_491:
	bne.w	.LBB31_705
.LBB31_492:
	cmp	r9, r8
	bls.w	.LBB31_324
	b	.LBB31_495
.LBB31_493:
	bne.w	.LBB31_705
.LBB31_494:
	cmp	r6, r8
	mov	r5, r4
	bls.w	.LBB31_324
.LBB31_495:
	mov	r6, r8
	mov	r4, r8
	mov	r5, r8
	str.w	r8, [sp, #240]
	b.w	.LBB31_324
.LBB31_496:
	addw	r4, sp, #1276
	movs	r2, #132
	mov	r0, r4
	mov	r1, r12
	bl	__aeabi_memcpy4
	movs	r2, #132
	add.w	r0, sp, #1744
	mov	r1, r4
	bl	__aeabi_memcpy4
	mov.w	r1, #512
	add.w	r0, sp, #1968
	bl	__aeabi_memclr4
	ldr.w	r0, [sp, #1744]
	str.w	r0, [sp, #1624]
	str.w	r0, [sp, #1632]
	addw	r9, sp, #1620
	str.w	r0, [sp, #1640]
	movs	r0, #47
	ldr	r1, [sp, #88]
	str.w	r0, [sp, #1644]
	str.w	r0, [sp, #1652]
	mov	r0, r9
	str.w	r11, [sp, #1620]
	str.w	r1, [sp, #1628]
	movs	r1, #1
	str.w	r11, [sp, #1636]
	str.w	r1, [sp, #1648]
	strh.w	r1, [sp, #1656]
	str.w	r11, [sp, #1660]
	bl	<core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next::h8e334cc98268caf0
	cmp	r0, #0
	beq.w	.LBB31_718
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.257
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.256
	movw	r5, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.255
	cmp	r1, #3
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.257
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.256
	movt	r5, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.255
	beq	.LBB31_509
	cmp	r1, #15
	beq	.LBB31_504
	cmp	r1, #16
	bne.w	.LBB31_716
	movs	r2, #16
	mov	r1, r5
	bl	memcmp
	cmp	r0, #0
	bne.w	.LBB31_716
	mov	r12, r9
	add	r0, sp, #240
	mov	r1, r0
	ldm.w	r12!, {r2, r3, r5, r6}
	stm	r1!, {r2, r3, r5, r6}
	ldm.w	r12!, {r2, r3, r5, r6}
	stm	r1!, {r2, r3, r5, r6}
	ldm.w	r12, {r2, r3, r4, r5, r6}
	stm	r1!, {r2, r3, r4, r5, r6}
	bl	core::iter::adapters::peekable::Peekable<I>::peek::h2f6060bb9e66d6cf
	cmp	r0, #0
	bne	.LBB31_511
	movw	r0, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	add.w	r1, sp, #1968
	movt	r0, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	str.w	r1, [sp, #1440]
	addw	r0, r0, #2312
	mov.w	r1, #512
	str.w	r1, [sp, #1444]
	vldr	s0, [r0]
	add.w	r0, sp, #1440
	str.w	r11, [sp, #1448]
	bl	<&mut serde_json_core::ser::Serializer as serde::ser::Serializer>::serialize_f32::h9646727876011b6e
	cmp	r0, #0
	bne	.LBB31_513
.LBB31_503:
	ldr.w	r4, [sp, #1448]
	b	.LBB31_514
.LBB31_504:
	movs	r2, #15
	mov	r1, r6
	bl	memcmp
	cmp	r0, #0
	bne.w	.LBB31_716
	mov	r12, r9
	add	r0, sp, #108
	mov	r1, r0
	ldm.w	r12!, {r2, r3, r5, r6}
	stm	r1!, {r2, r3, r5, r6}
	ldm.w	r12!, {r2, r3, r5, r6}
	stm	r1!, {r2, r3, r5, r6}
	ldm.w	r12, {r2, r3, r4, r5, r6}
	stm	r1!, {r2, r3, r4, r5, r6}
	bl	<core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next::h8e334cc98268caf0
	cmp	r0, #0
	beq.w	.LBB31_521
	mov	r2, r0
	mov	r3, r1
	add	r0, sp, #240
	mov	r1, r2
	mov	r2, r3
	bl	serde_json_core::de::from_str::hba2caa47f21d3896
	ldrb.w	r0, [sp, #240]
	cbnz	r0, .LBB31_508
	ldr.w	r8, [sp, #244]
	cmp.w	r8, #3
	bls	.LBB31_515
.LBB31_508:
	movs	r0, #1
	movs	r5, #23
	b	.LBB31_522
.LBB31_509:
	movs	r2, #3
	mov	r1, r3
	bl	memcmp
	cmp	r0, #0
	bne.w	.LBB31_716
	mov	r12, r9
	add	r0, sp, #240
	mov	r1, r0
	ldm.w	r12!, {r2, r3, r5, r6}
	stm	r1!, {r2, r3, r5, r6}
	ldm.w	r12!, {r2, r3, r5, r6}
	stm	r1!, {r2, r3, r5, r6}
	ldm.w	r12, {r2, r3, r4, r5, r6}
	stm	r1!, {r2, r3, r4, r5, r6}
	bl	core::iter::adapters::peekable::Peekable<I>::peek::h2f6060bb9e66d6cf
	cbz	r0, .LBB31_512
.LBB31_511:
	movs	r0, #1
	movs	r5, #18
	b	.LBB31_522
.LBB31_512:
	movw	r0, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	str.w	r11, [sp, #1448]
	movt	r0, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	ldrb.w	r1, [r0, #2396]
	add.w	r0, sp, #1968
	str.w	r0, [sp, #1440]
	mov.w	r0, #512
	str.w	r0, [sp, #1444]
	add.w	r0, sp, #1440
	cmp	r1, #0
	it	ne
	movne	r1, #1
	bl	<&mut serde_json_core::ser::Serializer as serde::ser::Serializer>::serialize_bool::h099b6880f35ee002
	cmp	r0, #0
	beq	.LBB31_503
.LBB31_513:
.LBB31_514:
	movs	r5, #22
	lsls	r0, r0, #31
	beq	.LBB31_524
	b.w	.LBB31_719
.LBB31_515:
	add.w	r0, sp, #1440
	add	r1, sp, #108
	mov	r12, r0
	ldm	r1!, {r2, r3, r4, r6}
	stm.w	r12!, {r2, r3, r4, r6}
	ldm	r1!, {r2, r3, r4, r6}
	stm.w	r12!, {r2, r3, r4, r6}
	ldm.w	r1, {r2, r3, r4, r5, r6}
	stm.w	r12, {r2, r3, r4, r5, r6}
	bl	<core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next::h8e334cc98268caf0
	cmp	r0, #0
	beq	.LBB31_521
	subs	r2, r1, #7
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.242
	mov	r6, r0
	movs	r0, #1
	cmp	r2, #15
	mov.w	r5, #17
	mov.w	r4, #0
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.242
	bhi	.LBB31_523
.LCPI31_5:
	tbh	[pc, r2, lsl #1]
.LJTI31_3:
	.short	(.LBB31_519-(.LCPI31_5+4))/2
	.short	(.LBB31_531-(.LCPI31_5+4))/2
	.short	(.LBB31_523-(.LCPI31_5+4))/2
	.short	(.LBB31_523-(.LCPI31_5+4))/2
	.short	(.LBB31_523-(.LCPI31_5+4))/2
	.short	(.LBB31_523-(.LCPI31_5+4))/2
	.short	(.LBB31_533-(.LCPI31_5+4))/2
	.short	(.LBB31_523-(.LCPI31_5+4))/2
	.short	(.LBB31_523-(.LCPI31_5+4))/2
	.short	(.LBB31_523-(.LCPI31_5+4))/2
	.short	(.LBB31_523-(.LCPI31_5+4))/2
	.short	(.LBB31_523-(.LCPI31_5+4))/2
	.short	(.LBB31_523-(.LCPI31_5+4))/2
	.short	(.LBB31_523-(.LCPI31_5+4))/2
	.short	(.LBB31_523-(.LCPI31_5+4))/2
	.short	(.LBB31_535-(.LCPI31_5+4))/2
	.p2align	1
.LBB31_519:
	movs	r2, #7
	mov	r0, r6
	bl	memcmp
	cmp	r0, #0
	bne.w	.LBB31_537
	add.w	lr, sp, #1440
	add	r1, sp, #240
	mov	r0, r1
	ldm.w	lr!, {r2, r3, r5, r6}
	stm	r0!, {r2, r3, r5, r6}
	ldm.w	lr!, {r3, r4, r5, r6}
	add.w	r2, r8, r8, lsl #2
	stm	r0!, {r3, r4, r5, r6}
	movw	r3, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	movt	r3, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	add.w	r12, r3, r2, lsl #2
	ldm.w	lr, {r2, r3, r4, r5, r6}
	stm	r0!, {r2, r3, r4, r5, r6}
	addw	r0, r12, #2328
	b	.LBB31_540
.LBB31_521:
	movs	r0, #1
	movs	r5, #19
.LBB31_522:
	movs	r4, #0
.LBB31_523:
	lsls	r0, r0, #31
	bne.w	.LBB31_719
.LBB31_524:
	add.w	r5, sp, #1440
	movs	r1, #132
	mov	r0, r5
	bl	__aeabi_memclr4
	movw	r0, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	addw	r1, sp, #1908
	movt	r0, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	add	r2, sp, #240
	add.w	r0, r0, #2448
	str.w	r0, [sp, #1692]
	add.w	r0, sp, #1744
	str.w	r0, [sp, #1908]
	addw	r0, sp, #1692
	str	r0, [sp, #108]
	movw	r0, :lower16:<&T as core::fmt::Display>::fmt::hcf7955a8f7d2ca59
	str.w	r5, [sp, #1620]
	movt	r0, :upper16:<&T as core::fmt::Display>::fmt::hcf7955a8f7d2ca59
	str	r0, [sp, #112]
	strd	r1, r0, [sp, #116]
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.32
	add	r1, sp, #108
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.32
	str	r0, [sp, #240]
	movs	r0, #2
	str.w	r11, [sp, #252]
	strd	r1, r0, [sp, #256]
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.379
	strd	r0, r11, [sp, #244]
	mov	r0, r9
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.379
	bl	core::fmt::write::h5d3fbef16e428eed
	cmp	r0, #0
	bne.w	.LBB31_720
	cmp.w	r4, #512
	bhi.w	.LBB31_721
	movw	lr, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	add.w	r12, sp, #240
	movt	lr, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	ldrb.w	r0, [lr, #1776]
	cmp	r0, #0
	bne.w	.LBB31_321
	ldr.w	r0, [lr, #12]
	cmp	r0, #1
	beq.w	.LBB31_727
	mov.w	r1, #512
	mov	r0, r12
	ldr.w	r6, [sp, #1440]
	mov	r5, r12
	bl	__aeabi_memclr4
	add.w	r0, sp, #1968
	mov	r1, r5
	stm.w	sp, {r0, r4, r11}
	movw	r0, :lower16:CORE_PERIPHERALS
	ldr	r2, [sp, #80]
	movt	r0, :upper16:CORE_PERIPHERALS
	mov	r3, r6
	strd	r0, r11, [sp, #12]
	add	r0, sp, #108
	bl	minimq::ser::serialize::publish_message::h3fe8b31b5970804e
	ldrb.w	r0, [sp, #108]
	cmp	r0, #0
	bne.w	.LBB31_728
	movw	r4, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	movt	r4, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	ldrd	r1, r2, [sp, #112]
	mov	r0, r4
	bl	minimq::network_manager::InterfaceHolder<TcpStack,_>::write::h19b74f0c592580bd
	uxtb	r2, r0
	cmp	r2, #9
	bne.w	.LBB31_729
	ldrh.w	r0, [r4, #1236]
	mov	lr, r4
	add.w	r12, sp, #240
	adds	r0, #1
	uxth	r1, r0
	cmp	r1, r0
	it	ne
	movne	r1, #1
	strh.w	r1, [r4, #1236]
	b.w	.LBB31_321
.LBB31_531:
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.238
	movs	r2, #8
	mov	r0, r6
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.238
	bl	memcmp
	cmp	r0, #0
	bne	.LBB31_537
	add.w	lr, sp, #1440
	add	r1, sp, #240
	mov	r0, r1
	ldm.w	lr!, {r2, r3, r5, r6}
	stm	r0!, {r2, r3, r5, r6}
	ldm.w	lr!, {r3, r4, r5, r6}
	add.w	r2, r8, r8, lsl #2
	stm	r0!, {r3, r4, r5, r6}
	movw	r3, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	movt	r3, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	add.w	r12, r3, r2, lsl #2
	ldm.w	lr, {r2, r3, r4, r5, r6}
	stm	r0!, {r2, r3, r4, r5, r6}
	addw	r0, r12, #2332
	add.w	r2, sp, #1968
	bl	<bool as miniconf::Miniconf>::string_get::he0e03183ba0b45e9
	b	.LBB31_541
.LBB31_533:
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.241
	movs	r2, #13
	mov	r0, r6
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.241
	bl	memcmp
	cbnz	r0, .LBB31_537
	add.w	lr, sp, #1440
	add	r1, sp, #240
	mov	r0, r1
	ldm.w	lr!, {r2, r3, r5, r6}
	stm	r0!, {r2, r3, r5, r6}
	ldm.w	lr!, {r3, r4, r5, r6}
	add.w	r2, r8, r8, lsl #2
	stm	r0!, {r3, r4, r5, r6}
	movw	r3, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	movt	r3, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	add.w	r12, r3, r2, lsl #2
	ldm.w	lr, {r2, r3, r4, r5, r6}
	stm	r0!, {r2, r3, r4, r5, r6}
	addw	r0, r12, #2324
	b	.LBB31_540
.LBB31_535:
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.239
	movs	r2, #22
	mov	r0, r6
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.239
	bl	memcmp
	cbz	r0, .LBB31_538
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.240
	movs	r2, #22
	mov	r0, r6
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.240
	bl	memcmp
	cbz	r0, .LBB31_539
.LBB31_537:
	movs	r0, #1
	movs	r5, #17
	b	.LBB31_522
.LBB31_538:
	add.w	lr, sp, #1440
	add	r1, sp, #240
	mov	r0, r1
	ldm.w	lr!, {r2, r3, r5, r6}
	stm	r0!, {r2, r3, r5, r6}
	ldm.w	lr!, {r3, r4, r5, r6}
	add.w	r2, r8, r8, lsl #2
	stm	r0!, {r3, r4, r5, r6}
	movw	r3, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	movt	r3, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	add.w	r12, r3, r2, lsl #2
	ldm.w	lr, {r2, r3, r4, r5, r6}
	stm	r0!, {r2, r3, r4, r5, r6}
	addw	r0, r12, #2316
	b	.LBB31_540
.LBB31_539:
	add.w	lr, sp, #1440
	add	r1, sp, #240
	mov	r0, r1
	ldm.w	lr!, {r2, r3, r5, r6}
	stm	r0!, {r2, r3, r5, r6}
	ldm.w	lr!, {r3, r4, r5, r6}
	add.w	r2, r8, r8, lsl #2
	stm	r0!, {r3, r4, r5, r6}
	movw	r3, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	movt	r3, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	add.w	r12, r3, r2, lsl #2
	ldm.w	lr, {r2, r3, r4, r5, r6}
	stm	r0!, {r2, r3, r4, r5, r6}
	add.w	r0, r12, #2320
.LBB31_540:
	add.w	r2, sp, #1968
	bl	<f32 as miniconf::Miniconf>::string_get::h0cc957cb8457eede
.LBB31_541:
	lsrs	r2, r0, #8
	mov	r4, r1
	orr.w	r5, r2, r1, lsl #24
	lsls	r0, r0, #31
	beq.w	.LBB31_524
	b.w	.LBB31_719
.LBB31_542:
	movw	lr, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	movs	r3, #0
	movt	lr, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	b	.LBB31_607
.LBB31_543:
	movw	lr, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	movs	r3, #0
	movt	lr, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	b.w	.LBB31_619
.LBB31_544:
	ldrb.w	r0, [lr, #2444]
	cmp	r0, #5
	bne.w	.LBB31_739
	movs	r0, #0
	b.w	.LBB31_101
.LBB31_546:
	subs	r3, r4, #4
	movs	r2, #1
	cmp	r3, #12
	add.w	r2, r2, r3, lsr #2
	and	r12, r2, #3
	bhs	.LBB31_550
	movs	r3, #0
	b	.LBB31_552
.LBB31_548:
	subs	r3, r4, #4
	movs	r2, #1
	cmp	r3, #12
	add.w	r2, r2, r3, lsr #2
	and	r12, r2, #3
	bhs.w	.LBB31_555
	movs	r3, #0
	b	.LBB31_557
.LBB31_550:
	bic	r4, r2, #3
	movs	r3, #0
	adds	r2, r5, #4
.LBB31_551:
	ldrb	r6, [r0], #16
	subs	r4, #4
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-15]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-14]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-13]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-12]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-11]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-10]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-9]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-8]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-7]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-6]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-5]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-4]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-3]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-2]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-1]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldr.w	r6, [sp, #1968]
	add.w	r3, r6, #1
	str.w	r3, [sp, #1968]
	bne.w	.LBB31_551
.LBB31_552:
	cmp.w	r12, #0
	beq.w	.LBB31_602
	adds	r2, r5, #4
	ldrb	r6, [r0]
	cmp.w	r12, #1
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #1]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #2]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #3]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldr.w	r6, [sp, #1968]
	add.w	r3, r6, #1
	str.w	r3, [sp, #1968]
	bne.w	.LBB31_582
	adds	r0, #4
	b	.LBB31_602
.LBB31_555:
	bic	r4, r2, #3
	movs	r3, #0
	adds	r2, r5, #4
.LBB31_556:
	ldrb	r6, [r0], #16
	subs	r4, #4
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-15]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-14]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-13]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-12]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-11]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-10]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-9]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-8]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-7]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-6]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-5]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-4]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-3]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-2]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #-1]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldr.w	r6, [sp, #1968]
	add.w	r3, r6, #1
	str.w	r3, [sp, #1968]
	bne.w	.LBB31_556
.LBB31_557:
	cmp.w	r12, #0
	beq.w	.LBB31_614
	adds	r2, r5, #4
	ldrb	r6, [r0]
	cmp.w	r12, #1
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #1]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #2]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #3]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldr.w	r6, [sp, #1968]
	add.w	r3, r6, #1
	str.w	r3, [sp, #1968]
	bne.w	.LBB31_584
	adds	r0, #4
	b	.LBB31_614
.LBB31_560:
	mov	lr, r2
	b	.LBB31_576
.LBB31_561:
	adds	r2, #18
	b	.LBB31_576
.LBB31_562:
	ldr.w	lr, [r0, #40]
	ldrb.w	r3, [r0, #55]
	ldrb.w	r1, [r0, #50]
	ldrb.w	r4, [r0, #60]
	ldr.w	r2, [r0, #46]
	str	r1, [sp, #104]
	ldr.w	r6, [r0, #51]
	adds.w	r1, lr, #1
	ldr	r5, [r0, #56]
	ldr.w	r12, [r0, #61]
	beq.w	.LBB31_637
	uxtb.w	r1, lr
	str	r3, [sp, #96]
	and	r3, r1, #240
	cmp	r3, #224
	mov.w	r3, #0
	str	r3, [sp, #100]
	beq.w	.LBB31_669
	cmp	r1, #0
	ldr	r3, [sp, #96]
	beq.w	.LBB31_670
	ldr.w	r1, [r10, #56]
	ldr.w	r3, [r10, #52]
	strd	r4, r12, [sp, #84]
	ldrb.w	r12, [r0, #44]
	add.w	r0, r1, r1, lsl #3
	rsbs	r0, r0, #0
	str	r2, [sp, #92]
	strd	r6, r5, [sp, #76]
	lsls	r6, r0, #1
	movs	r0, #0
.LBB31_566:
	adds	r4, r6, r0
	beq.w	.LBB31_731
	ldrb	r1, [r3, r0]
	cmp	r1, #1
	add.w	r1, r3, r0
	bne.w	.LBB31_641
	adds.w	r2, r4, #18
	beq.w	.LBB31_731
	ldrb	r2, [r1, #18]
	cmp	r2, #1
	bne.w	.LBB31_639
	adds.w	r2, r4, #36
	beq.w	.LBB31_731
	ldrb.w	r2, [r1, #36]
	cmp	r2, #1
	bne.w	.LBB31_640
	adds.w	r2, r4, #54
	beq.w	.LBB31_731
	ldrb.w	r1, [r1, #54]
	adds	r0, #72
	cmp	r1, #1
	beq	.LBB31_566
	add	r0, r3
	sub.w	r1, r0, #18
	b	.LBB31_641
.LBB31_575:
	add.w	lr, lr, #18
	adds	r2, #36
.LBB31_576:
	movs	r3, #0
	strb.w	r3, [lr]
	strb	r3, [r2, #5]
	str.w	r3, [r2, #1]
	ldr.w	r4, [r10, #16]
	cmp	r4, #0
	beq.w	.LBB31_591
	ldr.w	r2, [r10, #20]
	cmp	r2, #0
	beq.w	.LBB31_591
	add.w	r6, r2, r2, lsl #2
	mvn	r0, #39
	add.w	r11, r0, r6, lsl #3
	movw	r0, #52429
	movt	r0, #52428
	umull	r0, r1, r11, r0
	movs	r0, #1
	add.w	r0, r0, r1, lsr #5
	ands	r1, r0, #3
	beq	.LBB31_586
	mov	r0, r4
	mov	r5, r1
	movs	r1, #39
	movs	r2, #3
	strb	r2, [r0], #1
	str.w	r11, [sp, #104]
	add.w	r11, r4, #40
	bl	__aeabi_memclr
	mov	r0, r11
	ldr.w	r11, [sp, #104]
	cmp	r5, #1
	beq	.LBB31_587
	add.w	r1, r4, #80
	str	r1, [sp, #100]
	movs	r1, #3
	strb.w	r1, [r4, #40]
	adds	r0, #1
	movs	r1, #39
	bl	__aeabi_memclr
	ldr	r1, [sp, #100]
	cmp	r5, #2
	mov	r0, r1
	beq	.LBB31_587
	movs	r0, #3
	strb.w	r0, [r4, #80]
	adds	r0, r1, #1
	movs	r1, #39
	add.w	r11, r4, #120
	bl	__aeabi_memclr
	mov	r0, r11
	ldr.w	r11, [sp, #104]
	b	.LBB31_587
.LBB31_582:
	ldrb	r6, [r0, #4]
	cmp.w	r12, #2
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #5]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #6]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #7]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldr.w	r6, [sp, #1968]
	add.w	r3, r6, #1
	str.w	r3, [sp, #1968]
	bne.w	.LBB31_601
	adds	r0, #8
	b	.LBB31_602
.LBB31_584:
	ldrb	r6, [r0, #4]
	cmp.w	r12, #2
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #5]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #6]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #7]
	ldr.w	r3, [sp, #1968]
	add.w	r3, r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldr.w	r6, [sp, #1968]
	add.w	r3, r6, #1
	str.w	r3, [sp, #1968]
	bne.w	.LBB31_613
	adds	r0, #8
	b	.LBB31_614
.LBB31_586:
	mov	r0, r4
.LBB31_587:
	cmp.w	r11, #120
	blo	.LBB31_590
	add.w	r6, r4, r6, lsl #3
	sub.w	r5, r0, #160
	movs	r4, #3
.LBB31_589:
	strb	r4, [r5, #160]!
	adds	r0, r5, #1
	movs	r1, #39
	bl	__aeabi_memclr
	add.w	r0, r5, #41
	movs	r1, #39
	strb.w	r4, [r5, #40]
	bl	__aeabi_memclr
	add.w	r0, r5, #81
	movs	r1, #39
	strb.w	r4, [r5, #80]
	bl	__aeabi_memclr
	add.w	r0, r5, #121
	movs	r1, #39
	strb.w	r4, [r5, #120]
	bl	__aeabi_memclr
	add.w	r0, r5, #160
	cmp	r6, r0
	bne	.LBB31_589
.LBB31_590:
	ldrd	r0, r1, [r10, #52]
.LBB31_591:
	bl	smoltcp::iface::interface::InterfaceInner::check_ip_addrs::h8be6ea0748102f65
	movs	r2, #1
	str.w	r8, [sp, #104]
	b.w	.LBB31_98
.LBB31_592:
	ldrb.w	r0, [r9, #1776]
	cmp	r0, #3
	bhi	.LBB31_594
	cmp	r0, #2
	itt	ne
	movne	r0, #4
	strbne.w	r0, [r9, #1776]
.LBB31_594:
	movs	r0, #0
	str.w	r0, [r9, #1780]
	str.w	r0, [r9, #1784]
.LBB31_595:
	mov.w	r11, #6
.LBB31_596:
	ldr	r2, [sp, #104]
	ldr	r3, [sp, #68]
	uxtb.w	r0, r11
	cmp	r0, #7
	bne.w	.LBB31_158
.LBB31_597:
	mov.w	r11, #0
	movs	r1, #0
	movs	r0, #3
	strb.w	r0, [r4, #2444]
.LBB31_598:
	lsls	r0, r2, #31
	mov.w	r2, #1
	it	eq
	moveq	r2, #2
	ldr	r3, [sp, #100]
	movs	r0, #1
	cmp	r3, #0
	it	eq
	moveq	r2, r0
	lsls.w	r0, r11, #31
	mov	r0, r2
	it	ne
	movne	r0, #0
	cmp	r1, #0
	it	ne
	movne	r0, r2
	addw	sp, sp, #2484
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB31_599:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.1
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.373
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.1
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.373
.LBB31_600:
	sub.w	r2, r7, #32
	movs	r1, #43
	str	r6, [sp]
	bl	core::result::unwrap_failed::he67be68ddf63c991
	.inst.n	0xdefe
.LBB31_601:
	ldrb	r6, [r0, #8]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #9]
	ldr.w	r3, [sp, #1968]
	adds	r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #10]
	ldr.w	r3, [sp, #1968]
	adds	r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #11]
	ldr.w	r3, [sp, #1968]
	adds	r0, #12
	adds	r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldr.w	r6, [sp, #1968]
	adds	r3, r6, #1
	str.w	r3, [sp, #1968]
.LBB31_602:
	cbz	r1, .LBB31_606
	adds	r2, r5, r3
	ldrb	r3, [r0]
	cmp	r1, #1
	strb	r3, [r2, #4]
	ldr.w	r6, [sp, #1968]
	add.w	r3, r6, #1
	str.w	r3, [sp, #1968]
	beq	.LBB31_606
	adds	r2, r5, r3
	ldrb	r3, [r0, #1]
	cmp	r1, #2
	strb	r3, [r2, #4]
	ldr.w	r6, [sp, #1968]
	add.w	r3, r6, #1
	str.w	r3, [sp, #1968]
	beq	.LBB31_606
	adds	r1, r5, r3
	ldrb	r0, [r0, #2]
	strb	r0, [r1, #4]
	ldr.w	r6, [sp, #1968]
	adds	r3, r6, #1
	str.w	r3, [sp, #1968]
.LBB31_606:
	sub.w	r0, r6, #122
	cmn.w	r0, #130
	bls.w	.LBB31_733
.LBB31_607:
	adds	r5, #4
	movs	r0, #47
	movs	r1, #97
	strb	r0, [r5, r3]
	ldr.w	r0, [sp, #1968]
	adds	r0, #1
	str.w	r0, [sp, #1968]
	strb	r1, [r5, r0]
	movs	r1, #108
	ldr.w	r0, [sp, #1968]
	adds	r0, #1
	str.w	r0, [sp, #1968]
	strb	r1, [r5, r0]
	movs	r1, #105
	ldr.w	r0, [sp, #1968]
	adds	r0, #1
	str.w	r0, [sp, #1968]
	strb	r1, [r5, r0]
	movs	r1, #118
	ldr.w	r0, [sp, #1968]
	adds	r0, #1
	str.w	r0, [sp, #1968]
	strb	r1, [r5, r0]
	movs	r1, #101
	ldr.w	r0, [sp, #1968]
	adds	r0, #1
	str.w	r0, [sp, #1968]
	strb	r1, [r5, r0]
	ldr.w	r0, [lr, #12]
	ldr.w	r1, [sp, #1968]
	cmp	r0, #1
	add.w	r6, r1, #1
	str.w	r6, [sp, #1968]
	beq.w	.LBB31_102
	add.w	r8, sp, #240
	mov.w	r1, #512
	mov	r0, r8
	bl	__aeabi_memclr4
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.44
	movw	r1, :lower16:CORE_PERIPHERALS
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.44
	movt	r1, :upper16:CORE_PERIPHERALS
	str	r0, [sp]
	movs	r0, #1
	strd	r0, r1, [sp, #8]
	movs	r1, #0
	str	r0, [sp, #4]
	add.w	r0, sp, #1440
	str	r1, [sp, #16]
	mov	r1, r8
	mov	r2, r5
	mov	r3, r6
	bl	minimq::ser::serialize::publish_message::h3fe8b31b5970804e
	ldrb.w	r0, [sp, #1440]
	cmp	r0, #0
	bne.w	.LBB31_636
	movw	r5, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	ldr.w	r1, [sp, #1444]
	movt	r5, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	ldr.w	r2, [sp, #1448]
	mov	r0, r5
	bl	minimq::network_manager::InterfaceHolder<TcpStack,_>::write::h19b74f0c592580bd
	uxtb	r0, r0
	cmp	r0, #9
	bne.w	.LBB31_636
	ldrh.w	r0, [r5, #1236]
	ldrb.w	r2, [r5, #2444]
	adds	r0, #1
	uxth	r1, r0
	cmp	r1, r0
	it	ne
	movne	r1, #1
	cmp	r2, #2
	strh.w	r1, [r5, #1236]
	bne.w	.LBB31_741
	ldr.w	r0, [r5, #2400]
	blx	r0
	movs	r1, #2
	bl	<embedded_time::instant::Instant<Clock> as core::ops::arith::Add<Dur>>::add::hf35db1ad5ab0791a
	movs	r1, #1
	str.w	r1, [r5, #2404]
	str.w	r0, [r5, #2408]
	movs	r0, #4
.LBB31_612:
	strb.w	r0, [r5, #2444]
	b	.LBB31_636
.LBB31_613:
	ldrb	r6, [r0, #8]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #9]
	ldr.w	r3, [sp, #1968]
	adds	r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #10]
	ldr.w	r3, [sp, #1968]
	adds	r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldrb	r6, [r0, #11]
	ldr.w	r3, [sp, #1968]
	adds	r0, #12
	adds	r3, #1
	str.w	r3, [sp, #1968]
	strb	r6, [r2, r3]
	ldr.w	r6, [sp, #1968]
	adds	r3, r6, #1
	str.w	r3, [sp, #1968]
.LBB31_614:
	cbz	r1, .LBB31_618
	adds	r2, r5, r3
	ldrb	r3, [r0]
	cmp	r1, #1
	strb	r3, [r2, #4]
	ldr.w	r6, [sp, #1968]
	add.w	r3, r6, #1
	str.w	r3, [sp, #1968]
	beq	.LBB31_618
	adds	r2, r5, r3
	ldrb	r3, [r0, #1]
	cmp	r1, #2
	strb	r3, [r2, #4]
	ldr.w	r6, [sp, #1968]
	add.w	r3, r6, #1
	str.w	r3, [sp, #1968]
	beq	.LBB31_618
	adds	r1, r5, r3
	ldrb	r0, [r0, #2]
	strb	r0, [r1, #4]
	ldr.w	r6, [sp, #1968]
	adds	r3, r6, #1
	str.w	r3, [sp, #1968]
.LBB31_618:
	sub.w	r0, r6, #126
	cmn.w	r0, #130
	bls.w	.LBB31_734
.LBB31_619:
	adds	r6, r5, #4
	movs	r0, #47
	ldr.w	r1, [lr, #12]
	strb	r0, [r6, r3]
	cmp	r1, #1
	ldr.w	r0, [sp, #1968]
	mov.w	r1, #35
	add.w	r0, r0, #1
	str.w	r0, [sp, #1968]
	strb	r1, [r6, r0]
	beq.w	.LBB31_102
	add.w	r8, sp, #240
	ldr.w	r11, [sp, #1968]
	ldrh.w	r9, [lr, #1236]
	movw	r10, :lower16:core::cmp::Ord::max::hdad388a91279e379
	mov.w	r1, #512
	mov	r0, r8
	add.w	r5, r11, #1
	movt	r10, :upper16:core::cmp::Ord::max::hdad388a91279e379
	bl	__aeabi_memclr4
	cmp	r5, r10
	bhi	.LBB31_636
	movs	r0, #0
	cmp.w	r0, r5, lsr #9
	bne	.LBB31_636
	rsb.w	r4, r11, #510
	mov	r1, r6
	add.w	r0, r8, r4
	mov	r2, r5
	bl	__aeabi_memcpy
	cmp	r4, #2
	blo	.LBB31_636
	rsb.w	r0, r11, #508
	cmp.w	r11, #508
	rev	r1, r5
	lsr.w	r1, r1, #16
	strh.w	r1, [r8, r0]
	beq	.LBB31_636
	cmp.w	r0, #512
	bhi.w	.LBB31_743
	movw	r0, #507
	movs	r1, #0
	sub.w	r0, r0, r11
	cmp	r0, #2
	strb.w	r1, [r8, r0]
	blo	.LBB31_636
	cmp.w	r0, #512
	bhi.w	.LBB31_743
	movw	r0, #505
	str.w	r8, [sp, #1440]
	sub.w	r0, r0, r11
	str.w	r0, [sp, #1448]
	rev16.w	r1, r9
	strh.w	r1, [r8, r0]
	mov.w	r1, #512
	str.w	r1, [sp, #1444]
	add.w	r1, r11, #7
	add.w	r0, sp, #1440
	bl	minimq::ser::packet_writer::ReversedPacketWriter::write_variable_length_integer::h1fe59e45f0b7bcb1
	uxtb	r0, r0
	cmp	r0, #11
	bne	.LBB31_636
	ldr.w	r0, [sp, #1448]
	cbz	r0, .LBB31_636
	ldr.w	r1, [sp, #1444]
	cmp	r0, r1
	bhi.w	.LBB31_745
	ldr.w	r2, [sp, #1440]
	subs	r0, #1
	cmp	r1, r0
	mov.w	r3, #130
	strb	r3, [r2, r0]
	beq	.LBB31_636
	blo.w	.LBB31_746
	movw	r5, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	adds	r3, r2, r0
	movt	r5, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	subs	r2, r1, r0
	mov	r0, r5
	mov	r1, r3
	bl	minimq::network_manager::InterfaceHolder<TcpStack,_>::write::h19b74f0c592580bd
	uxtb	r0, r0
	cmp	r0, #9
	bne	.LBB31_636
	ldr.w	r0, [r5, #636]
	cmp	r0, #32
	bhs	.LBB31_636
	add.w	r0, r5, r0, lsl #1
	strh.w	r9, [r0, #640]
	ldrh.w	r0, [r5, #1236]
	ldrb.w	r3, [r5, #2444]
	adds	r0, #1
	ldr.w	r1, [r5, #636]
	uxth	r2, r0
	adds	r1, #1
	cmp	r2, r0
	str.w	r1, [r5, #636]
	it	ne
	movne	r2, #1
	cmp	r3, #1
	strh.w	r2, [r5, #1236]
	bne.w	.LBB31_747
	movs	r0, #2
	b	.LBB31_612
.LBB31_636:
	movw	lr, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	movt	lr, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	b.w	.LBB31_102
.LBB31_637:
	movs	r0, #0
	str	r0, [sp, #100]
	b	.LBB31_670
.LBB31_638:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.17
	mov.w	r1, #512
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.17
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB31_639:
	adds	r1, #18
	b	.LBB31_641
.LBB31_640:
	adds	r1, #36
.LBB31_641:
	ldr.w	r0, [r1, #1]
	cmp	lr, r0
	bne	.LBB31_643
	movs	r0, #0
	b	.LBB31_668
.LBB31_643:
	movs	r0, #0
	mov	r2, r3
.LBB31_644:
	adds	r4, r6, r0
	beq.w	.LBB31_709
	ldrb	r1, [r3, r0]
	adds	r5, r3, r0
	cbz	r1, .LBB31_653
	adds.w	r1, r4, #18
	beq.w	.LBB31_709
	ldrb	r1, [r5, #18]
	cmp	r1, #0
	add.w	r1, r2, #18
	beq	.LBB31_654
	adds.w	r2, r4, #36
	beq.w	.LBB31_709
	ldrb.w	r2, [r5, #36]
	cbz	r2, .LBB31_655
	adds.w	r2, r4, #54
	beq.w	.LBB31_709
	ldrb.w	r2, [r5, #54]
	adds	r0, #72
	cmp	r2, #0
	add.w	r2, r1, #54
	bne	.LBB31_644
	add	r0, r3
	adds	r1, #36
	sub.w	r5, r0, #18
	b	.LBB31_656
.LBB31_653:
	mov	r1, r5
	b	.LBB31_656
.LBB31_654:
	adds	r5, #18
	b	.LBB31_656
.LBB31_655:
	adds	r1, #18
	adds	r5, #36
.LBB31_656:
	movs	r0, #0
	strb	r0, [r1]
	strb.w	r12, [r5, #5]
	str.w	lr, [r5, #1]
	ldr.w	r5, [r10, #16]
	cmp	r5, #0
	beq	.LBB31_667
	ldr.w	r0, [r10, #20]
	cmp	r0, #0
	beq	.LBB31_667
	add.w	r1, r0, r0, lsl #2
	mvn	r0, #39
	str	r1, [sp, #72]
	add.w	r1, r0, r1, lsl #3
	movw	r0, #52429
	movt	r0, #52428
	str	r1, [sp, #100]
	umull	r0, r1, r1, r0
	movs	r0, #1
	add.w	r0, r0, r1, lsr #5
	ands	r4, r0, #3
	beq	.LBB31_663
	mov	r0, r5
	movs	r1, #3
	add.w	r6, r5, #40
	strb	r1, [r0], #1
	movs	r1, #39
	bl	__aeabi_memclr
	cmp	r4, #1
	beq	.LBB31_664
	add.w	r0, r5, #80
	str	r0, [sp, #68]
	movs	r0, #3
	strb.w	r0, [r5, #40]
	adds	r0, r6, #1
	movs	r1, #39
	bl	__aeabi_memclr
	ldr	r1, [sp, #68]
	cmp	r4, #2
	mov	r6, r1
	beq	.LBB31_664
	movs	r0, #3
	strb.w	r0, [r5, #80]
	adds	r0, r1, #1
	movs	r1, #39
	add.w	r6, r5, #120
	bl	__aeabi_memclr
	b	.LBB31_664
.LBB31_662:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.80
	movs	r1, #4
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.80
	ldr	r0, [sp, #92]
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB31_663:
	mov	r6, r5
.LBB31_664:
	ldr	r0, [sp, #100]
	cmp	r0, #120
	blo	.LBB31_667
	ldr	r0, [sp, #72]
	sub.w	r4, r6, #160
	add.w	r0, r5, r0, lsl #3
	movs	r5, #3
	mov	r6, r0
.LBB31_666:
	strb	r5, [r4, #160]!
	adds	r0, r4, #1
	movs	r1, #39
	bl	__aeabi_memclr
	add.w	r0, r4, #41
	movs	r1, #39
	strb.w	r5, [r4, #40]
	bl	__aeabi_memclr
	add.w	r0, r4, #81
	movs	r1, #39
	strb.w	r5, [r4, #80]
	bl	__aeabi_memclr
	add.w	r0, r4, #121
	movs	r1, #39
	strb.w	r5, [r4, #120]
	bl	__aeabi_memclr
	add.w	r0, r4, #160
	cmp	r6, r0
	bne	.LBB31_666
.LBB31_667:
	ldrd	r0, r1, [r10, #52]
	bl	smoltcp::iface::interface::InterfaceInner::check_ip_addrs::h8be6ea0748102f65
	movs	r0, #1
.LBB31_668:
	ldr	r2, [sp, #92]
	str	r0, [sp, #100]
	ldrd	r4, r12, [sp, #84]
	ldrd	r6, r5, [sp, #76]
.LBB31_669:
	ldr	r3, [sp, #96]
.LBB31_670:
	ldr.w	r0, [r10, #256]
	cmp	r0, #0
	itt	ne
	movne	r0, #0
	strne.w	r0, [r10, #256]
	ldr	r0, [sp, #104]
	cbz	r0, .LBB31_674
	movs	r0, #1
	strd	r0, r6, [r10, #256]
	cbnz	r3, .LBB31_676
	cbz	r4, .LBB31_678
	movs	r0, #1
	b	.LBB31_677
.LBB31_674:
	cmp	r3, #0
	beq.w	.LBB31_701
	movs	r0, #0
.LBB31_676:
	add.w	r1, r10, #256
	add.w	r1, r1, r0, lsl #2
	add.w	r0, r0, #1
	str.w	r0, [r10, #256]
	str	r5, [r1, #4]
	cbz	r4, .LBB31_678
.LBB31_677:
	add.w	r1, r10, #256
	add.w	r0, r1, r0, lsl #2
	str.w	r12, [r0, #4]
	ldr.w	r0, [r10, #256]
	adds	r0, #1
	str.w	r0, [r10, #256]
.LBB31_678:
	add.w	r1, r10, #60
	add	r0, sp, #240
	cmp.w	r11, #0
	beq	.LBB31_681
	bl	smoltcp::iface::route::Routes::add_default_ipv4_route::ha591256f21e3a8bc
	ldrb.w	r0, [sp, #240]
	clz	r1, r0
	cmp	r0, #0
	mov	r0, r8
	lsr.w	r2, r1, #5
	it	ne
	movne	r0, #0
	str	r0, [sp, #104]
	bne.w	.LBB31_98
	ldr	r0, [sp, #100]
	movw	lr, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	eors	r0, r0, #1
	movt	lr, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	add.w	r12, sp, #240
	beq	.LBB31_682
	b.w	.LBB31_99
.LBB31_681:
	bl	smoltcp::iface::route::Routes::remove_default_ipv4_route::h246da95b8708a486
	ldr	r0, [sp, #100]
	movw	lr, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	cmp	r0, #0
	movt	lr, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	add.w	r12, sp, #240
	beq	.LBB31_700
.LBB31_682:
	ldr.w	r0, [r10, #88]
	mov.w	r1, #392
	ldr.w	r4, [r10, #84]
	mla	r0, r0, r1, r4
	movs	r1, #0
.LBB31_683:
	mov	r2, r4
.LBB31_684:
	cmp	r2, r0
	beq	.LBB31_700
	ldr	r5, [r2, #40]
	add.w	r3, r2, #392
	cmp	r5, #4
	bne	.LBB31_695
	cmp	r3, r0
	beq	.LBB31_700
	ldr.w	r5, [r2, #432]
	add.w	r4, r2, #784
	cmp	r5, #4
	bne	.LBB31_693
	cmp	r4, r0
	beq	.LBB31_700
	ldr.w	r5, [r2, #824]
	add.w	r3, r2, #1176
	cmp	r5, #4
	bne	.LBB31_694
	cmp	r3, r0
	beq	.LBB31_700
	ldr.w	r5, [r2, #1216]
	add.w	r4, r2, #1568
	cmp	r5, #4
	mov	r2, r4
	beq	.LBB31_684
	sub.w	r2, r4, #392
	b	.LBB31_696
.LBB31_693:
	mov	r2, r3
	b	.LBB31_696
.LBB31_694:
	mov	r2, r4
.LBB31_695:
	mov	r4, r3
.LBB31_696:
	cmp	r5, #2
	beq	.LBB31_699
	cmp	r5, #1
	bne	.LBB31_683
	strh.w	r1, [r2, #108]
	strb.w	r1, [r2, #110]
	strd	r1, r1, [r2, #100]
	strd	r1, r1, [r2, #84]
	strd	r1, r1, [r2, #68]
	strd	r1, r1, [r2, #52]
	b	.LBB31_683
.LBB31_699:
	strb.w	r1, [r2, #358]
	b	.LBB31_683
.LBB31_700:
	movs	r2, #1
	str.w	r8, [sp, #104]
	b.w	.LBB31_99
.LBB31_701:
	cmp	r4, #0
	beq.w	.LBB31_678
	movs	r0, #0
	b	.LBB31_677
.LBB31_703:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.153
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.153
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB31_704:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.237
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.237
	bl	core::panicking::unreachable_display::ha2cb2276c81f1a04
	.inst.n	0xdefe
.LBB31_705:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.180
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.182
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.180
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.182
	movs	r1, #48
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB31_706:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.254
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.254
	bl	core::panicking::unreachable_display::ha2cb2276c81f1a04
	.inst.n	0xdefe
.LBB31_707:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.18
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.352
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.362
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.18
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.352
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.362
	sub.w	r2, r7, #32
	movs	r1, #16
	str	r6, [sp]
	bl	core::result::unwrap_failed::he67be68ddf63c991
	.inst.n	0xdefe
.LBB31_708:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.183
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.183
	b	.LBB31_712
.LBB31_709:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.62
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.62
	movs	r1, #43
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB31_710:
	cmp	r0, #0
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.7
	it	ne
	movne	r0, #1
	strb.w	r0, [sp, #240]
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.5
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.360
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.7
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.5
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.360
	add	r2, sp, #240
	movs	r1, #12
	str	r6, [sp]
	bl	core::result::unwrap_failed::he67be68ddf63c991
	.inst.n	0xdefe
.LBB31_711:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.47
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.47
.LBB31_712:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.369
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.369
	b	.LBB31_600
.LBB31_713:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.19
	mov.w	r1, #512
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.19
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB31_714:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.116
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.118
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.116
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.118
.LBB31_715:
	movs	r1, #10
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB31_716:
	movs	r5, #17
	b	.LBB31_719
.LBB31_717:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.79
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.79
	bl	core::panicking::unreachable_display::ha2cb2276c81f1a04
	.inst.n	0xdefe
.LBB31_718:
	movs	r5, #19
.LBB31_719:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.30
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.374
	strb.w	r5, [sp, #240]
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.30
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.374
	b	.LBB31_730
.LBB31_720:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.33
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.377
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.33
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.377
	b.w	.LBB31_600
.LBB31_721:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.34
	mov.w	r1, #512
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.34
	mov	r0, r4
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB31_722:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.77
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.77
	bl	core::panicking::unreachable_display::ha2cb2276c81f1a04
	.inst.n	0xdefe
.LBB31_723:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.115
	mov.w	r1, #1024
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.115
	mov	r0, r3
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB31_724:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.60
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.60
	movs	r1, #43
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB31_725:
	cmp	r1, #4
	bne	.LBB31_732
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.156
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.157
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.156
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.157
	movs	r1, #39
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB31_727:
	movs	r0, #2
	b	.LBB31_729
.LBB31_728:
	ldrb.w	r1, [sp, #109]
	movs	r0, #6
.LBB31_729:
	strb.w	r0, [sp, #240]
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.35
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.365
	strb.w	r1, [sp, #241]
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.35
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.365
.LBB31_730:
	add	r2, sp, #240
	movs	r1, #43
	str	r6, [sp]
	bl	core::result::unwrap_failed::he67be68ddf63c991
	.inst.n	0xdefe
.LBB31_731:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.61
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.61
	movs	r1, #43
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB31_732:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.154
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.155
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.154
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.155
	movs	r1, #41
	bl	core::option::expect_failed::h22026eb39ea9589c
	.inst.n	0xdefe
.LBB31_733:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.43
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.43
	b	.LBB31_712
.LBB31_734:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.41
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.41
	b	.LBB31_712
.LBB31_735:
	movs	r0, #1
	b	.LBB31_737
.LBB31_736:
	movs	r0, #0
.LBB31_737:
	strb.w	r0, [sp, #240]
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.29
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.378
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.29
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.378
	b	.LBB31_730
.LBB31_738:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.218
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.219
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.218
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.219
	movs	r1, #34
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB31_739:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.36
	movs	r0, #0
	strb.w	r0, [sp, #240]
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.36
	b	.LBB31_742
.LBB31_740:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.46
	movs	r0, #0
	strb.w	r0, [sp, #240]
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.46
	b	.LBB31_742
.LBB31_741:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.45
	movs	r0, #0
	strb.w	r0, [sp, #240]
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.45
.LBB31_742:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.367
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.367
	b	.LBB31_730
.LBB31_743:
	movw	r2, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.4
	mov.w	r1, #512
	movt	r2, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.4
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB31_744:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.51
	movs	r2, #1
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.51
	str	r0, [sp]
	mov	r0, r10
	mov	r1, r11
	mov	r3, r11
	bl	core::str::slice_error_fail::h9b5dc962ae2d13f9
	.inst.n	0xdefe
.LBB31_745:
	movw	r2, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.4
	movt	r2, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.4
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB31_746:
	movw	r2, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.5
	movt	r2, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.5
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB31_747:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.42
	movs	r0, #0
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.42
	strb.w	r0, [sp, #240]
	b	.LBB31_742
.Lfunc_end31:
	.size	thermostat_eem::net::NetworkUsers<S,T>::update::hb27cd5067be64adf, .Lfunc_end31-thermostat_eem::net::NetworkUsers<S,T>::update::hb27cd5067be64adf
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN59_$LT$minimq..Error$LT$E$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17h0e1b5f1f74e22f8bE","ax",%progbits
	.p2align	2
	.type	<minimq::Error<E> as core::fmt::Debug>::fmt::h0e1b5f1f74e22f8b,%function
	.code	16
	.thumb_func
<minimq::Error<E> as core::fmt::Debug>::fmt::h0e1b5f1f74e22f8b:
.Lfunc_begin32:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r7, lr}
	push	{r4, r5, r7, lr}
	.cfi_def_cfa_offset 16
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r5, -12
	.cfi_offset r4, -16
	.setfp	r7, sp, #8
	add	r7, sp, #8
	.cfi_def_cfa r7, 8
	.pad	#16
	sub	sp, #16
	ldrb	r2, [r0]
.LCPI32_0:
	tbb	[pc, r2]
.LJTI32_0:
	.byte	(.LBB32_2-(.LCPI32_0+4))/2
	.byte	(.LBB32_3-(.LCPI32_0+4))/2
	.byte	(.LBB32_4-(.LCPI32_0+4))/2
	.byte	(.LBB32_5-(.LCPI32_0+4))/2
	.byte	(.LBB32_6-(.LCPI32_0+4))/2
	.byte	(.LBB32_7-(.LCPI32_0+4))/2
	.byte	(.LBB32_8-(.LCPI32_0+4))/2
	.byte	(.LBB32_9-(.LCPI32_0+4))/2
	.byte	(.LBB32_11-(.LCPI32_0+4))/2
	.p2align	1
.LBB32_2:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.214
	mov	r4, sp
	adds	r5, r0, #1
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.214
	movs	r3, #7
	mov	r0, r4
	bl	core::fmt::Formatter::debug_tuple::h9a9c92e1e856202e
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.215
	str	r5, [sp, #12]
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.215
	b	.LBB32_12
.LBB32_3:
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.213
	movs	r2, #9
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.213
	b	.LBB32_10
.LBB32_4:
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.212
	movs	r2, #8
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.212
	b	.LBB32_10
.LBB32_5:
	movw	r3, :lower16:.Lanon.d60fa0a6be4cd9bff433fd8cd5be529e.1
	movs	r2, #11
	movt	r3, :upper16:.Lanon.d60fa0a6be4cd9bff433fd8cd5be529e.1
	b	.LBB32_10
.LBB32_6:
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.210
	movs	r2, #23
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.210
	b	.LBB32_10
.LBB32_7:
	movw	r2, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.92
	mov	r4, sp
	adds	r5, r0, #1
	movt	r2, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.92
	movs	r3, #6
	mov	r0, r4
	bl	core::fmt::Formatter::debug_tuple::h9a9c92e1e856202e
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.209
	str	r5, [sp, #12]
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.209
	b	.LBB32_12
.LBB32_8:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.206
	mov	r4, sp
	adds	r5, r0, #1
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.206
	movs	r3, #8
	mov	r0, r4
	bl	core::fmt::Formatter::debug_tuple::h9a9c92e1e856202e
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.207
	str	r5, [sp, #12]
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.207
	b	.LBB32_12
.LBB32_9:
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.205
	movs	r2, #12
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.205
.LBB32_10:
	mov	r0, r1
	mov	r1, r3
	add	sp, #16
	pop.w	{r4, r5, r7, lr}
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB32_11:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.203
	mov	r4, sp
	adds	r5, r0, #1
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.203
	movs	r3, #5
	mov	r0, r4
	bl	core::fmt::Formatter::debug_tuple::h9a9c92e1e856202e
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.204
	str	r5, [sp, #12]
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.204
.LBB32_12:
	add	r1, sp, #12
	mov	r0, r4
	bl	core::fmt::builders::DebugTuple::field::h344a2bce7ddce2f6
	bl	core::fmt::builders::DebugTuple::finish::hfca393014b7f9d44
	add	sp, #16
	pop	{r4, r5, r7, pc}
.Lfunc_end32:
	.size	<minimq::Error<E> as core::fmt::Debug>::fmt::h0e1b5f1f74e22f8b, .Lfunc_end32-<minimq::Error<E> as core::fmt::Debug>::fmt::h0e1b5f1f74e22f8b
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN73_$LT$thermostat_eem..hardware..dac..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17hb696b91c26bd1c66E","ax",%progbits
	.p2align	1
	.type	<thermostat_eem::hardware::dac::Error as core::fmt::Debug>::fmt::hb696b91c26bd1c66,%function
	.code	16
	.thumb_func
<thermostat_eem::hardware::dac::Error as core::fmt::Debug>::fmt::hb696b91c26bd1c66:
.Lfunc_begin33:
	.fnstart
	.cfi_startproc
	movw	r3, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.94
	movs	r2, #6
	movt	r3, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.94
	mov	r0, r1
	mov	r1, r3
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.Lfunc_end33:
	.size	<thermostat_eem::hardware::dac::Error as core::fmt::Debug>::fmt::hb696b91c26bd1c66, .Lfunc_end33-<thermostat_eem::hardware::dac::Error as core::fmt::Debug>::fmt::hb696b91c26bd1c66
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN13stm32h7xx_hal8ethernet3eth17TDesRing$LT$_$GT$7release17h7bafb1196b8ee228E","ax",%progbits
	.p2align	1
	.type	stm32h7xx_hal::ethernet::eth::TDesRing<_>::release::h7bafb1196b8ee228,%function
	.code	16
	.thumb_func
stm32h7xx_hal::ethernet::eth::TDesRing<_>::release::h7bafb1196b8ee228:
.Lfunc_begin34:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r11}
	str	r11, [sp, #-4]!
	.cfi_offset r11, -24
	mov.w	r1, #6208
	ldr	r4, [r0, r1]
	cmp	r4, #3
	bhi	.LBB34_5
	add.w	r1, r0, r4, lsl #4
	mov	r5, r0
	mov	r0, r1
	ldr	r2, [r0, #12]!
	cmp	r2, #0
	bmi	.LBB34_6
	add.w	r2, r4, r4, lsl #1
	lsl.w	r12, r4, #4
	add.w	r2, r5, r2, lsl #9
	add.w	r3, r2, #64
	ldr	r2, [r1, #8]
	cmp.w	r2, #16384
	str.w	r3, [r5, r12]
	mov.w	r3, #0
	str	r3, [r1, #4]
	bhs	.LBB34_7
	cbz	r2, .LBB34_8
	add.w	r6, r5, #6208
	mov.w	r1, #-1342177280
	str	r1, [r0]
	bl	__dsb
	adds	r0, r4, #1
	movw	r1, #37152
	and	r0, r0, #3
	movt	r1, #16386
	add.w	r2, r5, r0, lsl #4
	str	r2, [r1]
	str	r0, [r6]
	ldr	r11, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.LBB34_5:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.228
	movs	r1, #4
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.228
	mov	r0, r4
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB34_6:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.229
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.230
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.229
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.230
	b	.LBB34_9
.LBB34_7:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.231
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.232
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.231
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.232
	movs	r1, #57
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB34_8:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.233
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.234
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.233
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.234
.LBB34_9:
	movs	r1, #55
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.Lfunc_end34:
	.size	stm32h7xx_hal::ethernet::eth::TDesRing<_>::release::h7bafb1196b8ee228, .Lfunc_end34-stm32h7xx_hal::ethernet::eth::TDesRing<_>::release::h7bafb1196b8ee228
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN14thermostat_eem3app4idle17h83cd5df0c2e22e91E,"ax",%progbits
	.p2align	1
	.type	thermostat_eem::app::idle::h83cd5df0c2e22e91,%function
	.code	16
	.thumb_func
thermostat_eem::app::idle::h83cd5df0c2e22e91:
.Lfunc_begin35:
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	.pad	#16
	sub	sp, #16
	movw	r6, :lower16:.L_MergedGlobals
	mov	r4, r0
	mov.w	r9, #1
	movt	r6, :upper16:.L_MergedGlobals
	add.w	r0, r6, #12
	str	r0, [sp, #8]
	b	.LBB35_2
.LBB35_1:
	movw	r0, #57864
	mov.w	r1, #16384
	movt	r0, #57344
	str	r1, [r0]
.LBB35_2:
	ldrb	r0, [r4]
	cbz	r0, .LBB35_4
	bl	thermostat_eem::net::NetworkUsers<S,T>::update::hb27cd5067be64adf
	mov	r5, r0
	lsls	r0, r5, #24
	bne	.LBB35_2
	b	.LBB35_5
.LBB35_4:
	movs	r0, #240
	strb.w	r9, [r4]
	bl	__basepri_w
	bl	thermostat_eem::net::NetworkUsers<S,T>::update::hb27cd5067be64adf
	mov	r5, r0
	movs	r0, #0
	bl	__basepri_w
	movs	r0, #0
	strb	r0, [r4]
	lsls	r0, r5, #24
	bne	.LBB35_2
.LBB35_5:
	bl	__primask_r
	mov	r5, r0
	bl	__cpsid
	ldr.w	r11, [r6, #12]
	ldr.w	r8, [r6, #16]
	dmb	sy
	cmp	r11, r8
	bne	.LBB35_8
	ands	r0, r5, #1
	beq	.LBB35_9
.LBB35_7:
	cmp	r11, r8
	bne	.LBB35_10
	b	.LBB35_12
.LBB35_8:
	ldr	r0, [sp, #8]
	add	r0, r11
	ldrb.w	r10, [r0, #8]
	bic.w	r0, r9, r11
	dmb	sy
	str	r0, [r6, #12]
	ands	r0, r5, #1
	bne	.LBB35_7
.LBB35_9:
	bl	__cpsie
	cmp	r11, r8
	beq	.LBB35_12
.LBB35_10:
	bl	__primask_r
	mov	r5, r0
	bl	__cpsid
	ldr	r0, [r6, #52]
	add.w	r1, r6, r0, lsl #1
	adds	r0, #1
	and	r0, r0, #3
	strb.w	r9, [r1, #56]
	strb.w	r10, [r1, #57]
	lsls	r1, r5, #31
	dmb	sy
	str	r0, [r6, #52]
	bne	.LBB35_1
	bl	__cpsie
	b	.LBB35_1
.LBB35_12:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.369
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.280
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.369
	add	r2, sp, #12
	movs	r1, #43
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.280
	str	r6, [sp]
	bl	core::result::unwrap_failed::he67be68ddf63c991
	.inst.n	0xdefe
.Lfunc_end35:
	.size	thermostat_eem::app::idle::h83cd5df0c2e22e91, .Lfunc_end35-thermostat_eem::app::idle::h83cd5df0c2e22e91
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text.ETH,"ax",%progbits
	.globl	ETH
	.p2align	1
	.type	ETH,%function
	.code	16
	.thumb_func
ETH:
.Lfunc_begin36:
	.fnstart
	.cfi_startproc
	movw	r1, #37216
	movw	r0, #32833
	movt	r1, #16386
	str	r0, [r1]
	movs	r0, #0
	ldr	r2, [r1]
	ldr	r1, [r1]
	b	__basepri_w
.Lfunc_end36:
	.size	ETH, .Lfunc_end36-ETH
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text.EXTI15_10,"ax",%progbits
	.globl	EXTI15_10
	.p2align	1
	.type	EXTI15_10,%function
	.code	16
	.thumb_func
EXTI15_10:
.Lfunc_begin37:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8}
	str	r8, [sp, #-4]!
	.cfi_offset r8, -24
	.pad	#40
	sub	sp, #40
	bl	__basepri_r
	movw	r6, :lower16:thermostat_eem::app::__rtic_internal_local_resource_adc::h99c6b0f7a5dfd579
	movt	r6, :upper16:thermostat_eem::app::__rtic_internal_local_resource_adc::h99c6b0f7a5dfd579
	ldr	r5, [r6]
	cmp	r5, #7
	bhi	.LBB37_4
	mov	r8, r0
	movs	r0, #0
	add	r1, sp, #32
	str	r0, [sp, #36]
	mov.w	r0, #1140850688
	adds	r1, #3
	movs	r3, #5
	str	r0, [sp, #32]
	adds	r0, r6, #4
	movs	r2, #5
	str	r3, [sp]
	mov	r3, r1
	bl	stm32h7xx_hal::spi::Spi<stm32h7::stm32h743v::SPI4,stm32h7xx_hal::spi::Enabled>::transfer_internal::h3a158811a6b4093e
	cmp	r0, #6
	bne	.LBB37_5
	movs	r2, #136
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.101
	movt	r2, #22528
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.101
	ldrb.w	r1, [sp, #39]
	mov.w	r3, #2048
	str	r3, [r2]
	ldrb.w	r3, [r0, r5, lsl #3]
	ldr	r4, [r2]
	ldr	r2, [r2]
	movw	r2, :lower16:.Lswitch.table.EXTI15_10
	movw	r4, #4120
	movt	r2, :upper16:.Lswitch.table.EXTI15_10
	movt	r4, #22530
	and	r1, r1, #3
	ldr.w	r2, [r2, r3, lsl #2]
	str	r2, [r4]
	ldr	r2, [r6]
	adds	r2, #1
	and	r2, r2, #7
	str	r2, [r6]
	ldrb.w	r3, [r0, r2, lsl #3]
	add.w	r0, r0, r5, lsl #3
	movw	r5, :lower16:.Lswitch.table.EXTI15_10.733
	ldr	r0, [r0, #4]
	movt	r5, :upper16:.Lswitch.table.EXTI15_10.733
	and	r0, r0, #1
	cmp	r1, r0
	ldr.w	r2, [r5, r3, lsl #2]
	str	r2, [r4]
	strb	r1, [r7, #-49]
	strb.w	r0, [sp, #32]
	itttt	eq
	moveq	r0, r8
	addeq	sp, #40
	ldreq	r8, [sp], #4
	popeq.w	{r4, r5, r6, r7, lr}
	it	eq
	beq	__basepri_w
.LBB37_3:
	movs	r0, #0
	add	r1, sp, #32
	strd	r0, r0, [sp, #24]
	strd	r0, r0, [sp, #16]
	strd	r0, r0, [sp, #8]
	sub.w	r0, r7, #49
	add	r2, sp, #8
	bl	core::panicking::assert_failed::h18fdc9bc0bdaf755
	.inst.n	0xdefe
.LBB37_4:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.104
	movs	r1, #8
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.104
	mov	r0, r5
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB37_5:
	strd	r0, r1, [sp, #8]
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.364
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.70
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.364
	add	r2, sp, #8
	movs	r1, #43
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.70
	str	r6, [sp]
	bl	core::result::unwrap_failed::he67be68ddf63c991
	.inst.n	0xdefe
.Lfunc_end37:
	.size	EXTI15_10, .Lfunc_end37-EXTI15_10
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp4wire3arp4Repr4emit17h3cd44cb979bfba56E,"ax",%progbits
	.p2align	1
	.type	smoltcp::wire::arp::Repr::emit::h3cd44cb979bfba56,%function
	.code	16
	.thumb_func
smoltcp::wire::arp::Repr::emit::h3cd44cb979bfba56:
.Lfunc_begin38:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r7, lr}
	push	{r4, r5, r7, lr}
	.cfi_def_cfa_offset 16
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r5, -12
	.cfi_offset r4, -16
	.setfp	r7, sp, #8
	add	r7, sp, #8
	.cfi_def_cfa r7, 8
	mov	r2, r1
	ldr	r1, [r1, #4]
	cmp	r1, #1
	bls	.LBB38_15
	ldrh	r4, [r0]
	ldr	r2, [r2]
	ldrh	r3, [r0, #2]
	ldr.w	r12, [r0, #20]
	ldr.w	lr, [r0, #10]
	cmp	r1, #3
	mov.w	r5, #256
	strh	r5, [r2]
	bls	.LBB38_16
	cmp	r1, #4
	mov.w	r5, #8
	strh	r5, [r2, #2]
	beq	.LBB38_13
	cmp	r1, #5
	mov.w	r5, #6
	strb	r5, [r2, #4]
	bls	.LBB38_14
	cmp	r1, #7
	mov.w	r5, #4
	strb	r5, [r2, #5]
	bls	.LBB38_17
	ands	r4, r4, #3
	beq	.LBB38_11
	cmp	r4, #1
	it	eq
	moveq	r3, #2
	cmp	r1, #13
	rev16	r3, r3
	strh	r3, [r2, #6]
	bls	.LBB38_12
.LBB38_7:
	adds	r3, r0, #4
	cmp	r1, #17
	ldrh	r4, [r3, #4]
	strh	r4, [r2, #12]
	ldr	r3, [r3]
	str	r3, [r2, #8]
	bls	.LBB38_18
	cmp	r1, #23
	str.w	lr, [r2, #14]
	bls	.LBB38_19
	adds	r0, #14
	cmp	r1, #27
	ldrh	r3, [r0, #4]
	strh	r3, [r2, #22]
	ldr	r0, [r0]
	str.w	r0, [r2, #18]
	itt	hi
	strhi.w	r12, [r2, #24]
	pophi	{r4, r5, r7, pc}
.LBB38_10:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.314
	movs	r0, #28
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.314
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB38_11:
	movs	r3, #1
	cmp	r1, #13
	rev16	r3, r3
	strh	r3, [r2, #6]
	bhi	.LBB38_7
.LBB38_12:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.308
	movs	r0, #14
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.308
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB38_13:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.305
	movs	r0, #4
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.305
	movs	r1, #4
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB38_14:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.306
	movs	r0, #5
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.306
	movs	r1, #5
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB38_15:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.303
	movs	r0, #2
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.303
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB38_16:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.304
	movs	r0, #4
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.304
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB38_17:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.307
	movs	r0, #8
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.307
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB38_18:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.310
	movs	r0, #18
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.310
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB38_19:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.312
	movs	r0, #24
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.312
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.Lfunc_end38:
	.size	smoltcp::wire::arp::Repr::emit::h3cd44cb979bfba56, .Lfunc_end38-smoltcp::wire::arp::Repr::emit::h3cd44cb979bfba56
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text.DCMI,"ax",%progbits
	.globl	DCMI
	.p2align	2
	.type	DCMI,%function
	.code	16
	.thumb_func
DCMI:
.Lfunc_begin39:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#4
	sub	sp, #4
	.vsave	{d8, d9, d10, d11, d12, d13, d14, d15}
	vpush	{d8, d9, d10, d11, d12, d13, d14, d15}
	.cfi_offset d15, -48
	.cfi_offset d14, -56
	.cfi_offset d13, -64
	.cfi_offset d12, -72
	.cfi_offset d11, -80
	.cfi_offset d10, -88
	.cfi_offset d9, -96
	.cfi_offset d8, -104
	.pad	#1200
	sub.w	sp, sp, #1200
	movw	r4, :lower16:.L_MergedGlobals
	movt	r4, :upper16:.L_MergedGlobals
	ldr	r0, [r4, #48]
	ldr	r1, [r4, #52]
	dmb	sy
	cmp	r0, r1
	bne	.LBB39_2
.LBB39_1:
	movs	r0, #0
	bl	__basepri_w
	add.w	sp, sp, #1200
	vpop	{d8, d9, d10, d11, d12, d13, d14, d15}
	add	sp, #4
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB39_2:
	movw	r2, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	movw	r1, #5036
	movt	r2, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	vmov.f32	s21, #1.000000e+01
	add	r1, r2
	str	r1, [sp, #28]
	add	r1, sp, #144
	vmov.f32	s25, #1.500000e+00
	adds	r2, r1, #1
	str	r2, [sp, #72]
	add	r2, sp, #660
	vmov.f32	s24, #3.000000e+00
	vmov.f32	s26, #-5.000000e-01
	vmov.f32	s28, #-1.200000e+01
	vmov.f32	s29, #7.500000e+00
	add	r3, sp, #76
	adds	r2, #4
	movw	r11, #0
	movw	r8, #24576
	movw	r10, #8192
	str	r2, [sp, #44]
	add.w	r2, r3, #16
	movw	r9, :lower16:thermostat_eem::app::__rtic_internal_local_resource_adc_internal::h7bbf580938bd99c8
	movt	r11, #65520
	movt	r8, #22530
	movt	r10, #16386
	vldr	s19, .LCPI39_11
	movw	lr, #65535
	vldr	s17, .LCPI39_12
	str	r2, [sp, #40]
	vldr	s30, .LCPI39_13
	add.w	r2, r3, #32
	vldr	s23, .LCPI39_14
	movt	r9, :upper16:thermostat_eem::app::__rtic_internal_local_resource_adc_internal::h7bbf580938bd99c8
	vldr	s27, .LCPI39_15
	str	r2, [sp, #36]
	add.w	r2, r3, #48
	str	r2, [sp, #32]
	adds	r1, #4
	str	r1, [sp, #24]
.LBB39_3:
	add.w	r1, r4, #48
	add.w	r1, r1, r0, lsl #1
	adds	r0, #1
	and	r0, r0, #3
	ldrh	r2, [r1, #8]
	dmb	sy
	str	r0, [r4, #48]
	lsrs	r1, r2, #8
	uxtb	r0, r2
.LCPI39_7:
	tbh	[pc, r0, lsl #1]
.LJTI39_0:
	.short	(.LBB39_6-(.LCPI39_7+4))/2
	.short	(.LBB39_32-(.LCPI39_7+4))/2
	.short	(.LBB39_65-(.LCPI39_7+4))/2
	.short	(.LBB39_5-(.LCPI39_7+4))/2
	.p2align	1
.LBB39_5:
	b	.LBB39_1
.LBB39_6:
	ldr	r0, [r4, #40]
	movw	r5, #33280
	adds	r2, r4, r0
	movt	r5, #16386
	strb.w	r1, [r2, #44]
	movs	r1, #1
	dmb	sy
	bic.w	r0, r1, r0
	str	r0, [r4, #40]
.LBB39_7:
	ldr	r0, [r5]
	lsls	r0, r0, #31
	beq	.LBB39_10
	ldr	r0, [r5]
	lsls	r0, r0, #31
	itt	ne
	ldrne	r0, [r5]
	lslsne.w	r0, r0, #31
	beq	.LBB39_10
	ldr	r0, [r5]
	lsls	r0, r0, #31
	bne	.LBB39_7
.LBB39_10:
	movw	r12, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	ldr	r0, [r5]
	movt	r12, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	movw	r3, #61682
	movt	r3, #64512
	ldrb.w	r1, [r12, #2716]
	ands	r0, r3
	ldrb.w	r2, [r12, #2717]
	and	r1, r1, #31
	and	r2, r2, #15
	orr.w	r0, r0, r1, lsl #21
	movs	r1, #13
	orr.w	r0, r0, r2, lsl #8
	movt	r1, #1
	orrs	r0, r1
	str	r0, [r5]
.LBB39_11:
	ldr	r0, [r5]
	lsls	r0, r0, #31
	beq	.LBB39_14
	ldr	r0, [r5]
	lsls	r0, r0, #31
	itt	ne
	ldrne	r0, [r5]
	lslsne.w	r0, r0, #31
	beq	.LBB39_14
	ldr	r0, [r5]
	lsls	r0, r0, #31
	bne	.LBB39_11
.LBB39_14:
	ldr	r0, [r5, #4]
.LBB39_15:
	ldr	r1, [r5]
	lsls	r1, r1, #31
	beq	.LBB39_18
	ldr	r1, [r5]
	lsls	r1, r1, #31
	itt	ne
	ldrne	r1, [r5]
	lslsne.w	r1, r1, #31
	beq	.LBB39_18
	ldr	r1, [r5]
	lsls	r1, r1, #31
	bne	.LBB39_15
.LBB39_18:
	ldr	r1, [r5]
	ldrb.w	r2, [r12, #2716]
	ldrb.w	r3, [r12, #2717]
	movw	r6, #61682
	and	r2, r2, #31
	movt	r6, #64512
	ands	r1, r6
	and	r3, r3, #15
	orr.w	r1, r1, r2, lsl #21
	movs	r2, #13
	orr.w	r1, r1, r3, lsl #8
	movt	r2, #1
	orrs	r1, r2
	orr	r1, r1, #1966080
	str	r1, [r5]
.LBB39_19:
	ldr	r1, [r5]
	lsls	r1, r1, #31
	beq	.LBB39_22
	ldr	r1, [r5]
	lsls	r1, r1, #31
	itt	ne
	ldrne	r1, [r5]
	lslsne.w	r1, r1, #31
	beq	.LBB39_22
	ldr	r1, [r5]
	lsls	r1, r1, #31
	bne	.LBB39_19
.LBB39_22:
	and	r0, r0, #36
	cmp	r0, #36
	ldr	r0, [r5, #4]
	bne.w	.LBB39_208
	ands	r1, r0, #4096
	beq.w	.LBB39_208
	uxth	r0, r0
	and	r1, r0, #28
	ldrb.w	r0, [r12, #2718]
	cmp	r1, #24
	bne.w	.LBB39_209
	cmp	r0, #0
	beq.w	.LBB39_314
	movs	r0, #0
	strb.w	r0, [r12, #2718]
	b.w	.LBB39_314
	.p2align	2
.LCPI39_11:
	.long	0x3d9b26ca
	.p2align	2
.LCPI39_12:
	.long	0x3e1b26ca
	.p2align	2
.LCPI39_13:
	.long	0xbe1b26ca
	.p2align	2
.LCPI39_14:
	.long	0x3d4ccccd
	.p2align	2
.LCPI39_15:
	.long	0x48aaaaab
	.p2align	1
.LBB39_32:
	ldr	r0, [r4, #16]
	movw	r5, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	adds	r2, r4, r0
	movt	r5, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	vmov.f32	s20, s27
	vmov.f32	s27, s17
	strb	r1, [r2, #20]
	movs	r1, #1
	dmb	sy
	bic.w	r0, r1, r0
	str	r0, [r4, #16]
	addw	r1, r5, #2316
	movw	r4, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_settings::haa2b499d3e77eee9
	movt	r4, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_settings::haa2b499d3e77eee9
	ldr.w	r0, [r5, #2312]
	vldr	s4, [r1]
	addw	r3, r5, #2324
	ldrh.w	r1, [r5, #2333]
	str	r0, [r4]
	strh.w	r1, [r4, #21]
	add.w	r1, r5, #2336
	addw	r0, r5, #2356
	vmov.f32	s8, s19
	vldr	s17, [r1]
	addw	r1, r5, #2344
	vldr	s6, [r3]
	addw	r3, r5, #2340
	vldr	s19, [r1]
	addw	r1, r5, #2360
	vldr	s26, [r0]
	addw	r0, r5, #2364
	vldr	s24, [r1]
	add.w	r1, r5, #2368
	vmov.f32	s29, s30
	vldr	s30, [r3]
	ldrh.w	r3, [r5, #2353]
	vldr	s28, [r0]
	addw	r0, r5, #2376
	strh.w	r3, [r4, #41]
	ldrb.w	r3, [r5, #2355]
	add.w	r2, r5, #2320
	vldr	s31, [r1]
	addw	r1, r5, #2380
	addw	r6, r5, #2328
	strb.w	r3, [r4, #43]
	ldrh.w	r3, [r5, #2373]
	vldr	s14, [r0]
	add.w	r0, r5, #2384
	strh.w	r3, [r4, #61]
	ldrh.w	r3, [r5, #2393]
	vldr	s12, [r1]
	addw	r1, r5, #2388
	vldr	s2, [r2]
	vldr	s0, [r6]
	ldrb.w	r2, [r5, #2335]
	ldrb.w	r6, [r5, #2375]
	strh.w	r3, [r4, #81]
	ldrb.w	r3, [r5, #2399]
	vldr	s22, [r0]
	ldrb.w	r0, [r5, #2396]
	strb	r2, [r4, #23]
	addw	r2, r5, #2348
	strb.w	r6, [r4, #63]
	ldrb.w	r6, [r5, #2395]
	strb.w	r3, [r4, #87]
	ldrh.w	r3, [r5, #2397]
	strb.w	r6, [r4, #83]
	vldr	s10, [r1]
	movw	r1, #6168
	ldrb.w	r11, [r5, #2332]
	strh.w	r3, [r4, #85]
	ldrb.w	r12, [r5, #2352]
	ldrb.w	r6, [r5, #2372]
	ldrb.w	r3, [r5, #2392]
	strb.w	r0, [r4, #84]
	cmp	r0, #0
	mov.w	r0, #512
	movt	r1, #22530
	vmov.f32	s18, s25
	vmov.f32	s25, s21
	vldr	s21, [r2]
	vstr	s4, [r4, #4]
	vmov.f32	s16, s23
	vstr	s2, [r4, #8]
	vmov.f32	s23, s8
	vstr	s6, [r4, #12]
	vmul.f32	s6, s6, s8
	vstr	s0, [r4, #16]
	strb.w	r11, [r4, #20]
	vstr	s17, [r4, #24]
	vstr	s30, [r4, #28]
	vstr	s19, [r4, #32]
	vstr	s21, [r4, #36]
	strb.w	r12, [r4, #40]
	vstr	s26, [r4, #44]
	vstr	s24, [r4, #48]
	vstr	s28, [r4, #52]
	vstr	s31, [r4, #56]
	strb.w	r6, [r4, #60]
	vstr	s14, [r4, #64]
	vstr	s12, [r4, #68]
	vstr	s22, [r4, #72]
	vstr	s10, [sp, #64]
	vstr	s10, [r4, #76]
	strb.w	r3, [r4, #80]
	it	eq
	moveq.w	r0, #33554432
	str	r0, [r1]
	movs	r0, #44
	movt	r0, #16385
	ldr	r0, [r0]
	uxth	r1, r0
	cmp	r1, lr
	it	ne
	addne	r1, r0, #1
	uxth	r0, r1
	vmov	s8, r0
	vcvt.f32.u32	s8, s8
	vmul.f32	s6, s6, s8
	vcvt.s32.f32	s6, s6
	vmov	r1, s6
	cmp	r1, #0
	bmi.w	.LBB39_359
	cmp	r1, r0
	bge.w	.LBB39_359
	uxth	r0, r1
	movs	r1, #44
	movt	r1, #16385
	movw	r2, #1068
	movt	r2, #16384
	vmul.f32	s4, s4, s27
	str	r0, [r1, #8]
	ldr.w	r0, [r2, #1024]
	uxth	r1, r0
	cmp	r1, lr
	it	ne
	addne	r1, r0, #1
	uxth	r0, r1
	vmov	s6, r0
	vcvt.f32.u32	s6, s6
	vmul.f32	s4, s4, s6
	vcvt.s32.f32	s4, s4
	vmov	r1, s4
	cmp	r1, #0
	bmi.w	.LBB39_360
	cmp	r1, r0
	bge.w	.LBB39_360
	uxth	r0, r1
	str.w	r0, [r2, #1032]
	ldr	r0, [r2]
	vmul.f32	s2, s2, s29
	uxth	r1, r0
	cmp	r1, lr
	it	ne
	addne	r1, r0, #1
	uxth	r1, r1
	vmov	s4, r1
	vcvt.f32.u32	s4, s4
	vmul.f32	s2, s2, s4
	vcvt.s32.f32	s2, s2
	vmov	r0, s2
	cmp	r0, #0
	bmi.w	.LBB39_361
	cmp	r0, r1
	bge.w	.LBB39_361
	vmul.f32	s0, s0, s25
	vmov.f32	s2, s18
	str.w	r12, [sp, #68]
	str	r6, [sp, #52]
	vmla.f32	s2, s0, s16
	vstr	s14, [sp, #56]
	vstr	s12, [sp, #60]
	str	r3, [sp, #48]
	uxth	r0, r0
	str	r0, [r2, #8]
	vmul.f32	s0, s2, s20
	vcvt.s32.f32	s0, s0
	vmov	r1, s0
	cmp.w	r1, #1048576
	bhs.w	.LBB39_362
	movw	r4, #6168
	rev	r0, r1
	movt	r4, #22530
	str	r0, [sp, #144]
	mov.w	r0, #524288
	str	r0, [r4]
	movw	r0, :lower16:thermostat_eem::app::__rtic_internal_local_resource_dac::ha17ee108b9c8f7a2
	movt	r0, :upper16:thermostat_eem::app::__rtic_internal_local_resource_dac::ha17ee108b9c8f7a2
	ldr	r1, [sp, #72]
	ldrb	r0, [r0]
	bl	<stm32h7xx_hal::spi::Spi<stm32h7::stm32h743v::SPI3,stm32h7xx_hal::spi::Enabled> as embedded_hal::blocking::spi::Write<u8>>::write::ha51d71009bfdfd7b
	cmp	r0, #6
	bne.w	.LBB39_364
	movs	r0, #8
	movs	r5, #44
	str	r0, [r4]
	mov.w	r0, #1048576
	movt	r5, #16385
	cmp.w	r11, #0
	it	eq
	moveq	r0, #16
	str	r0, [r4]
	movw	r3, #65535
	ldr	r0, [r5]
	vmul.f32	s0, s19, s23
	uxth	r1, r0
	movw	r2, #1068
	cmp	r1, r3
	movt	r2, #16384
	it	ne
	addne	r1, r0, #1
	uxth	r0, r1
	vmov	s2, r0
	vcvt.f32.u32	s2, s2
	vmul.f32	s0, s0, s2
	vcvt.s32.f32	s0, s0
	vmov	r1, s0
	cmp	r1, #0
	bmi.w	.LBB39_359
	cmp	r1, r0
	bge.w	.LBB39_359
	uxth	r0, r1
	str	r0, [r5, #12]
	ldr.w	r0, [r2, #1024]
	vmul.f32	s0, s17, s27
	uxth	r1, r0
	movw	r11, #2104
	cmp	r1, r3
	movt	r11, #16384
	it	ne
	addne	r1, r0, #1
	uxth	r0, r1
	vmov	s2, r0
	vcvt.f32.u32	s2, s2
	vmul.f32	s0, s0, s2
	vcvt.s32.f32	s0, s0
	vmov	r1, s0
	cmp	r1, #0
	bmi.w	.LBB39_360
	cmp	r1, r0
	bge.w	.LBB39_360
	uxth	r0, r1
	str.w	r0, [r11]
	ldr	r0, [r2]
	vmul.f32	s0, s30, s29
	uxth	r1, r0
	cmp	r1, r3
	it	ne
	addne	r1, r0, #1
	uxth	r1, r1
	vmov	s2, r1
	vcvt.f32.u32	s2, s2
	vmul.f32	s0, s0, s2
	vcvt.s32.f32	s0, s0
	vmov	r0, s0
	cmp	r0, #0
	bmi.w	.LBB39_361
	cmp	r0, r1
	bge.w	.LBB39_361
	vmul.f32	s0, s21, s25
	vmov.f32	s2, s18
	uxth	r0, r0
	str	r0, [r2, #12]
	vmla.f32	s2, s0, s16
	vmul.f32	s0, s2, s20
	vcvt.s32.f32	s0, s0
	vmov	r1, s0
	cmp.w	r1, #1048576
	bhs.w	.LBB39_362
	rev	r0, r1
	str	r0, [sp, #144]
	mov.w	r0, #262144
	str	r0, [r4]
	movw	r0, :lower16:thermostat_eem::app::__rtic_internal_local_resource_dac::ha17ee108b9c8f7a2
	ldr	r1, [sp, #72]
	movt	r0, :upper16:thermostat_eem::app::__rtic_internal_local_resource_dac::ha17ee108b9c8f7a2
	vmov.f32	s19, s23
	vmov.f32	s17, s27
	vmov.f32	s30, s29
	ldrb	r0, [r0]
	vmov.f32	s21, s25
	vmov.f32	s25, s18
	vmov.f32	s23, s16
	vmov.f32	s27, s20
	bl	<stm32h7xx_hal::spi::Spi<stm32h7::stm32h743v::SPI3,stm32h7xx_hal::spi::Enabled> as embedded_hal::blocking::spi::Write<u8>>::write::ha51d71009bfdfd7b
	cmp	r0, #6
	bne.w	.LBB39_365
	movs	r0, #4
	str	r0, [r4]
	ldr	r0, [sp, #68]
	movw	r3, #65535
	cmp	r0, #0
	mov.w	r0, #2097152
	it	eq
	moveq	r0, #32
	str	r0, [r4]
	vmul.f32	s0, s28, s19
	ldr	r0, [r5]
	movw	r2, #1068
	uxth	r1, r0
	movt	r2, #16384
	cmp	r1, r3
	it	ne
	addne	r1, r0, #1
	uxth	r0, r1
	vmov	s2, r0
	vcvt.f32.u32	s2, s2
	vmul.f32	s0, s0, s2
	vcvt.s32.f32	s0, s0
	vmov	r1, s0
	cmp	r1, #0
	bmi.w	.LBB39_359
	cmp	r1, r0
	bge.w	.LBB39_359
	uxth	r0, r1
	str	r0, [r5, #16]
	ldr.w	r0, [r2, #1024]
	vmul.f32	s0, s26, s17
	uxth	r1, r0
	cmp	r1, r3
	it	ne
	addne	r1, r0, #1
	uxth	r0, r1
	vmov	s2, r0
	vcvt.f32.u32	s2, s2
	vmul.f32	s0, s0, s2
	vcvt.s32.f32	s0, s0
	vmov	r1, s0
	cmp	r1, #0
	bmi.w	.LBB39_360
	cmp	r1, r0
	bge.w	.LBB39_360
	uxth	r0, r1
	str.w	r0, [r11, #4]
	ldr	r0, [r2]
	vmul.f32	s0, s24, s30
	uxth	r1, r0
	cmp	r1, r3
	it	ne
	addne	r1, r0, #1
	uxth	r1, r1
	vmov	s2, r1
	vcvt.f32.u32	s2, s2
	vmul.f32	s0, s0, s2
	vcvt.s32.f32	s0, s0
	vmov	r0, s0
	cmp	r0, #0
	bmi.w	.LBB39_361
	cmp	r0, r1
	bge.w	.LBB39_361
	vmul.f32	s0, s31, s21
	vmov.f32	s2, s25
	uxth	r0, r0
	str	r0, [r2, #16]
	vmla.f32	s2, s0, s23
	vmul.f32	s0, s2, s27
	vcvt.s32.f32	s0, s0
	vmov	r1, s0
	cmp.w	r1, #1048576
	bhs.w	.LBB39_362
	rev	r0, r1
	str	r0, [sp, #144]
	mov.w	r0, #131072
	str	r0, [r4]
	movw	r0, :lower16:thermostat_eem::app::__rtic_internal_local_resource_dac::ha17ee108b9c8f7a2
	ldr	r1, [sp, #72]
	movt	r0, :upper16:thermostat_eem::app::__rtic_internal_local_resource_dac::ha17ee108b9c8f7a2
	ldrb	r0, [r0]
	bl	<stm32h7xx_hal::spi::Spi<stm32h7::stm32h743v::SPI3,stm32h7xx_hal::spi::Enabled> as embedded_hal::blocking::spi::Write<u8>>::write::ha51d71009bfdfd7b
	vmov.f32	s24, #3.000000e+00
	vmov.f32	s26, #-5.000000e-01
	vmov.f32	s28, #-1.200000e+01
	vmov.f32	s29, #7.500000e+00
	cmp	r0, #6
	bne.w	.LBB39_366
	movs	r0, #2
	str	r0, [r4]
	ldr	r0, [sp, #52]
	movw	r3, #65535
	cmp	r0, #0
	mov.w	r0, #4194304
	it	eq
	moveq	r0, #64
	str	r0, [r4]
	vmul.f32	s0, s22, s19
	ldr	r0, [r5]
	movw	r2, #1068
	uxth	r1, r0
	movt	r2, #16384
	cmp	r1, r3
	it	ne
	addne	r1, r0, #1
	uxth	r0, r1
	vldr	s4, [sp, #60]
	vmov	s2, r0
	vcvt.f32.u32	s2, s2
	vmul.f32	s0, s0, s2
	vcvt.s32.f32	s0, s0
	vmov	r1, s0
	vldr	s0, [sp, #56]
	cmp	r1, #0
	bmi.w	.LBB39_359
	cmp	r1, r0
	bge.w	.LBB39_359
	uxth	r0, r1
	str	r0, [r5, #20]
	ldr.w	r0, [r2, #1024]
	vmul.f32	s0, s0, s17
	uxth	r1, r0
	cmp	r1, r3
	it	ne
	addne	r1, r0, #1
	uxth	r0, r1
	vmov	s2, r0
	vcvt.f32.u32	s2, s2
	vmul.f32	s0, s0, s2
	vcvt.s32.f32	s0, s0
	vmov	r1, s0
	cmp	r1, #0
	bmi.w	.LBB39_360
	cmp	r1, r0
	bge.w	.LBB39_360
	uxth	r0, r1
	str.w	r0, [r11, #8]
	ldr	r0, [r2]
	vmul.f32	s0, s4, s30
	uxth	r1, r0
	cmp	r1, r3
	it	ne
	addne	r1, r0, #1
	uxth	r1, r1
	vmov	s2, r1
	vcvt.f32.u32	s2, s2
	vmul.f32	s0, s0, s2
	vcvt.s32.f32	s0, s0
	vmov	r0, s0
	cmp	r0, #0
	bmi.w	.LBB39_361
	cmp	r0, r1
	bge.w	.LBB39_361
	vldr	s0, [sp, #64]
	vmov.f32	s2, s25
	vmul.f32	s0, s0, s21
	uxth	r0, r0
	str	r0, [r2, #20]
	vmla.f32	s2, s0, s23
	vmul.f32	s0, s2, s27
	vcvt.s32.f32	s0, s0
	vmov	r1, s0
	cmp.w	r1, #1048576
	bhs.w	.LBB39_362
	rev	r0, r1
	str	r0, [sp, #144]
	mov.w	r0, #65536
	str	r0, [r4]
	movw	r0, :lower16:thermostat_eem::app::__rtic_internal_local_resource_dac::ha17ee108b9c8f7a2
	ldr	r1, [sp, #72]
	movt	r0, :upper16:thermostat_eem::app::__rtic_internal_local_resource_dac::ha17ee108b9c8f7a2
	ldrb	r0, [r0]
	bl	<stm32h7xx_hal::spi::Spi<stm32h7::stm32h743v::SPI3,stm32h7xx_hal::spi::Enabled> as embedded_hal::blocking::spi::Write<u8>>::write::ha51d71009bfdfd7b
	cmp	r0, #6
	bne.w	.LBB39_367
	movs	r0, #1
	str	r0, [r4]
	ldr	r0, [sp, #48]
	movw	r11, #0
	cmp	r0, #0
	mov.w	r0, #8388608
	it	eq
	moveq	r0, #128
	str	r0, [r4]
	movw	r4, :lower16:.L_MergedGlobals
	movt	r4, :upper16:.L_MergedGlobals
	movt	r11, #65520
	b.w	.LBB39_345
.LBB39_65:
	ldr	r0, [r4, #28]
	adds	r2, r4, r0
	strb.w	r1, [r2, #32]
	movs	r1, #1
	dmb	sy
	bic.w	r0, r1, r0
	movw	r1, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_telemetry::hda6106852c11677f
	str	r0, [r4, #28]
	movs	r2, #68
	add	r0, sp, #76
	movt	r1, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_telemetry::hda6106852c11677f
	bl	__aeabi_memcpy4
	mov	r0, r9
	bl	thermostat_eem::hardware::adc_internal::AdcInternal::read_p3v3_voltage::h6384078c1e9603b1
	mov	r0, r9
	vmov.f32	s22, s0
	vstr	s0, [sp, #76]
	bl	thermostat_eem::hardware::adc_internal::AdcInternal::read_p5v_voltage::hd7943cf86bed6258
	mov	r0, r9
	vmov.f32	s20, s0
	vstr	s0, [sp, #80]
	bl	thermostat_eem::hardware::adc_internal::AdcInternal::read_p12v_voltage::h207bff0f1b1841c3
	mov	r0, r9
	vmov.f32	s18, s0
	vstr	s0, [sp, #84]
	bl	thermostat_eem::hardware::adc_internal::AdcInternal::read_p12v_current::hf5e87fe4806b3249
	vmov.f32	s16, s0
	movs	r4, #0
	vstr	s0, [sp, #88]
	b	.LBB39_68
.LBB39_66:
	adds	r0, #1
	movw	r1, :lower16:.Lswitch.table.DCMI.1533
	and	r0, r0, #7
	movt	r1, :upper16:.Lswitch.table.DCMI.1533
	ldr.w	r0, [r1, r0, lsl #2]
.LBB39_67:
	ldrb.w	r1, [r9, #2]
	mov.w	r2, #-1
	lsl.w	r0, r2, r0
	vcvt.f32.u32	s0, s0
	mvns	r0, r0
	and	r1, r1, #31
	lsls	r0, r1
	cmp	r5, #4
	vmov	s2, r0
	mov	r4, r5
	vcvt.f32.u32	s2, s2
	vdiv.f32	s0, s0, s2
	vadd.f32	s0, s0, s26
	vmul.f32	s0, s0, s29
	vstr	s0, [r6, #32]
	beq.w	.LBB39_143
.LBB39_68:
	cmp	r4, #3
	bhi.w	.LBB39_358
.LCPI39_8:
	tbh	[pc, r4, lsl #1]
.LJTI39_1:
	.short	(.LBB39_71-(.LCPI39_8+4))/2
	.short	(.LBB39_86-(.LCPI39_8+4))/2
	.short	(.LBB39_76-(.LCPI39_8+4))/2
	.short	(.LBB39_81-(.LCPI39_8+4))/2
	.p2align	1
.LBB39_71:
	bl	stm32h7xx_hal::adc::Adc<stm32h7::stm32h743v::ADC3,stm32h7xx_hal::adc::Enabled>::check_conversion_conditions::h48973f161e2166bd
	ldrb.w	r0, [r9, #6]
	ldr.w	r1, [r8, #12]
	movw	r2, :lower16:.Lswitch.table.DCMI
	bfi	r1, r0, #2, #3
	str.w	r1, [r8, #12]
	ldrb.w	r0, [r9, #7]
	ldr.w	r1, [r8, #16]
	bic	r1, r1, #-268435456
	movt	r2, :upper16:.Lswitch.table.DCMI
	orr.w	r0, r1, r0, lsl #28
	str.w	r0, [r8, #16]
	ldr.w	r0, [r8, #28]
	orr	r0, r0, #32
	str.w	r0, [r8, #28]
	ldrb.w	r0, [r9, #5]
	ldr.w	r1, [r8, #20]
	bic	r1, r1, #229376
	and	r0, r0, #7
	eor	r0, r0, #4
	ldr.w	r0, [r2, r0, lsl #2]
	orrs	r0, r1
	str.w	r0, [r8, #20]
	ldr.w	r0, [r8, #48]
	movw	r1, #1999
	bics	r0, r1
	add.w	r0, r0, #320
	str.w	r0, [r8, #48]
	movw	r0, #1281
	strh.w	r0, [r9, #8]
	ldr.w	r0, [r8, #8]
	orr	r0, r0, #4
	str.w	r0, [r8, #8]
	ldrb.w	r1, [r9, #8]
	ldrb.w	r0, [r9, #9]
.LBB39_72:
	cmp	r1, #0
	beq.w	.LBB39_356
	ldr.w	r2, [r8]
	lsls	r2, r2, #29
	bmi.w	.LBB39_91
	ldr.w	r2, [r8]
	lsls	r2, r2, #29
	itt	pl
	ldrpl.w	r2, [r8]
	lslspl.w	r2, r2, #29
	bmi.w	.LBB39_91
	ldr.w	r2, [r8]
	lsls	r2, r2, #29
	bpl	.LBB39_72
	b	.LBB39_91
.LBB39_76:
	bl	stm32h7xx_hal::adc::Adc<stm32h7::stm32h743v::ADC3,stm32h7xx_hal::adc::Enabled>::check_conversion_conditions::h48973f161e2166bd
	ldrb.w	r0, [r9, #6]
	ldr.w	r1, [r8, #12]
	movw	r2, :lower16:.Lswitch.table.DCMI.1521
	bfi	r1, r0, #2, #3
	str.w	r1, [r8, #12]
	ldrb.w	r0, [r9, #7]
	ldr.w	r1, [r8, #16]
	bic	r1, r1, #-268435456
	movt	r2, :upper16:.Lswitch.table.DCMI.1521
	orr.w	r0, r1, r0, lsl #28
	str.w	r0, [r8, #16]
	ldr.w	r0, [r8, #28]
	orr	r0, r0, #16
	str.w	r0, [r8, #28]
	ldrb.w	r0, [r9, #5]
	ldr.w	r1, [r8, #20]
	bic	r1, r1, #28672
	and	r0, r0, #7
	eor	r0, r0, #4
	ldr.w	r0, [r2, r0, lsl #2]
	orrs	r0, r1
	str.w	r0, [r8, #20]
	ldr.w	r0, [r8, #48]
	movw	r1, #1999
	bics	r0, r1
	add.w	r0, r0, #256
	str.w	r0, [r8, #48]
	movw	r0, #1025
	strh.w	r0, [r9, #8]
	ldr.w	r0, [r8, #8]
	orr	r0, r0, #4
	str.w	r0, [r8, #8]
	ldrb.w	r1, [r9, #8]
	ldrb.w	r0, [r9, #9]
.LBB39_77:
	cmp	r1, #0
	beq.w	.LBB39_356
	ldr.w	r2, [r8]
	lsls	r2, r2, #29
	bmi.w	.LBB39_91
	ldr.w	r2, [r8]
	lsls	r2, r2, #29
	itt	pl
	ldrpl.w	r2, [r8]
	lslspl.w	r2, r2, #29
	bmi.w	.LBB39_91
	ldr.w	r2, [r8]
	lsls	r2, r2, #29
	bpl	.LBB39_77
	b	.LBB39_91
.LBB39_81:
	bl	stm32h7xx_hal::adc::Adc<stm32h7::stm32h743v::ADC3,stm32h7xx_hal::adc::Enabled>::check_conversion_conditions::h48973f161e2166bd
	ldrb.w	r0, [r9, #6]
	ldr.w	r1, [r8, #12]
	movw	r2, :lower16:.Lswitch.table.DCMI.1522
	bfi	r1, r0, #2, #3
	str.w	r1, [r8, #12]
	ldrb.w	r0, [r9, #7]
	ldr.w	r1, [r8, #16]
	bic	r1, r1, #-268435456
	movt	r2, :upper16:.Lswitch.table.DCMI.1522
	orr.w	r0, r1, r0, lsl #28
	str.w	r0, [r8, #16]
	ldr.w	r0, [r8, #28]
	orr	r0, r0, #256
	str.w	r0, [r8, #28]
	ldrb.w	r0, [r9, #5]
	ldr.w	r1, [r8, #20]
	bic	r1, r1, #117440512
	and	r0, r0, #7
	eor	r0, r0, #4
	ldr.w	r0, [r2, r0, lsl #2]
	orrs	r0, r1
	str.w	r0, [r8, #20]
	ldr.w	r0, [r8, #48]
	movw	r1, #1999
	bics	r0, r1
	add.w	r0, r0, #512
	str.w	r0, [r8, #48]
	movw	r0, #2049
	strh.w	r0, [r9, #8]
	ldr.w	r0, [r8, #8]
	orr	r0, r0, #4
	str.w	r0, [r8, #8]
	ldrb.w	r1, [r9, #8]
	ldrb.w	r0, [r9, #9]
.LBB39_82:
	cmp	r1, #0
	beq.w	.LBB39_356
	ldr.w	r2, [r8]
	lsls	r2, r2, #29
	bmi	.LBB39_91
	ldr.w	r2, [r8]
	lsls	r2, r2, #29
	itt	pl
	ldrpl.w	r2, [r8]
	lslspl.w	r2, r2, #29
	bmi	.LBB39_91
	ldr.w	r2, [r8]
	lsls	r2, r2, #29
	bpl	.LBB39_82
	b	.LBB39_91
.LBB39_86:
	bl	stm32h7xx_hal::adc::Adc<stm32h7::stm32h743v::ADC3,stm32h7xx_hal::adc::Enabled>::check_conversion_conditions::h48973f161e2166bd
	ldrb.w	r0, [r9, #6]
	ldr.w	r1, [r8, #12]
	movw	r2, :lower16:.Lswitch.table.DCMI.1520
	bfi	r1, r0, #2, #3
	str.w	r1, [r8, #12]
	ldrb.w	r0, [r9, #7]
	ldr.w	r1, [r8, #16]
	bic	r1, r1, #-268435456
	movt	r2, :upper16:.Lswitch.table.DCMI.1520
	orr.w	r0, r1, r0, lsl #28
	str.w	r0, [r8, #16]
	ldr.w	r0, [r8, #28]
	orr	r0, r0, #512
	str.w	r0, [r8, #28]
	ldrb.w	r0, [r9, #5]
	ldr.w	r1, [r8, #20]
	bic	r1, r1, #939524096
	and	r0, r0, #7
	eor	r0, r0, #4
	ldr.w	r0, [r2, r0, lsl #2]
	orrs	r0, r1
	str.w	r0, [r8, #20]
	ldr.w	r0, [r8, #48]
	movw	r1, #1999
	bics	r0, r1
	add.w	r0, r0, #576
	str.w	r0, [r8, #48]
	movw	r0, #2305
	strh.w	r0, [r9, #8]
	ldr.w	r0, [r8, #8]
	orr	r0, r0, #4
	str.w	r0, [r8, #8]
	ldrb.w	r1, [r9, #8]
	ldrb.w	r0, [r9, #9]
.LBB39_87:
	cmp	r1, #0
	beq.w	.LBB39_356
	ldr.w	r2, [r8]
	lsls	r2, r2, #29
	bmi	.LBB39_91
	ldr.w	r2, [r8]
	lsls	r2, r2, #29
	itt	pl
	ldrpl.w	r2, [r8]
	lslspl.w	r2, r2, #29
	bmi	.LBB39_91
	ldr.w	r2, [r8]
	lsls	r2, r2, #29
	bpl	.LBB39_87
.LBB39_91:
	and	r0, r0, #31
	movs	r1, #1
	lsl.w	r0, r1, r0
	ldr.w	r1, [r8, #28]
	orn	r0, r11, r0
	ands	r0, r1
	str.w	r0, [r8, #28]
	movs	r0, #0
	strb.w	r0, [r9, #8]
	ldr.w	r0, [r8, #64]
	ldrb.w	r1, [r9, #6]
	sbfx	r2, r1, #0, #3
	cmp.w	r2, #-1
	blt	.LBB39_93
	adds	r1, #1
	movw	r2, :lower16:.Lswitch.table.DCMI.1531
	and	r1, r1, #7
	movt	r2, :upper16:.Lswitch.table.DCMI.1531
	ldr.w	r1, [r2, r1, lsl #2]
	b	.LBB39_94
.LBB39_93:
	movs	r1, #16
.LBB39_94:
	ldrb.w	r2, [r9, #7]
	vmov	s0, r0
	mov.w	r0, #-1
	adds	r5, r4, #1
	lsls	r0, r1
	and	r1, r2, #31
	mvns	r0, r0
	vcvt.f32.u32	s0, s0
	lsls	r0, r1
	vmov	s2, r0
	add	r0, sp, #76
	add.w	r6, r0, r4, lsl #2
	vcvt.f32.u32	s2, s2
	vdiv.f32	s0, s0, s2
	vmul.f32	s0, s0, s24
	vstr	s0, [r6, #16]
.LCPI39_9:
	tbh	[pc, r4, lsl #1]
.LJTI39_2:
	.short	(.LBB39_96-(.LCPI39_9+4))/2
	.short	(.LBB39_101-(.LCPI39_9+4))/2
	.short	(.LBB39_106-(.LCPI39_9+4))/2
	.short	(.LBB39_111-(.LCPI39_9+4))/2
	.p2align	1
.LBB39_96:
	bl	stm32h7xx_hal::adc::Adc<stm32h7::stm32h743v::ADC1,stm32h7xx_hal::adc::Enabled>::check_conversion_conditions::h7b40729b58c989da
	ldrb.w	r0, [r9, #1]
	ldr.w	r1, [r10, #12]
	movw	r2, :lower16:.Lswitch.table.DCMI.1523
	bfi	r1, r0, #2, #3
	str.w	r1, [r10, #12]
	ldrb.w	r0, [r9, #2]
	ldr.w	r1, [r10, #16]
	bic	r1, r1, #-268435456
	movt	r2, :upper16:.Lswitch.table.DCMI.1523
	orr.w	r0, r1, r0, lsl #28
	str.w	r0, [r10, #16]
	ldr.w	r0, [r10, #28]
	orr	r0, r0, #8192
	str.w	r0, [r10, #28]
	ldrb.w	r0, [r9]
	ldr.w	r1, [r10, #24]
	bic	r1, r1, #3584
	and	r0, r0, #7
	eor	r0, r0, #4
	ldr.w	r0, [r2, r0, lsl #2]
	orrs	r0, r1
	str.w	r0, [r10, #24]
	ldr.w	r0, [r10, #48]
	movw	r1, #1999
	bics	r0, r1
	add.w	r0, r0, #832
	str.w	r0, [r10, #48]
	movw	r0, #3329
	strh.w	r0, [r9, #3]
	ldr.w	r0, [r10, #8]
	orr	r0, r0, #4
	str.w	r0, [r10, #8]
	ldrb.w	r1, [r9, #3]
	ldrb.w	r0, [r9, #4]
.LBB39_97:
	cmp	r1, #0
	beq.w	.LBB39_354
	ldr.w	r2, [r10]
	lsls	r2, r2, #29
	bmi.w	.LBB39_116
	ldr.w	r2, [r10]
	lsls	r2, r2, #29
	itt	pl
	ldrpl.w	r2, [r10]
	lslspl.w	r2, r2, #29
	bmi.w	.LBB39_116
	ldr.w	r2, [r10]
	lsls	r2, r2, #29
	bpl	.LBB39_97
	b	.LBB39_116
.LBB39_101:
	bl	stm32h7xx_hal::adc::Adc<stm32h7::stm32h743v::ADC1,stm32h7xx_hal::adc::Enabled>::check_conversion_conditions::h7b40729b58c989da
	ldrb.w	r0, [r9, #1]
	ldr.w	r1, [r10, #12]
	movw	r2, :lower16:.Lswitch.table.DCMI.1524
	bfi	r1, r0, #2, #3
	str.w	r1, [r10, #12]
	ldrb.w	r0, [r9, #2]
	ldr.w	r1, [r10, #16]
	bic	r1, r1, #-268435456
	movt	r2, :upper16:.Lswitch.table.DCMI.1524
	orr.w	r0, r1, r0, lsl #28
	str.w	r0, [r10, #16]
	ldr.w	r0, [r10, #28]
	orr	r0, r0, #65536
	str.w	r0, [r10, #28]
	ldrb.w	r0, [r9]
	ldr.w	r1, [r10, #24]
	bic	r1, r1, #1835008
	and	r0, r0, #7
	eor	r0, r0, #4
	ldr.w	r0, [r2, r0, lsl #2]
	orrs	r0, r1
	str.w	r0, [r10, #24]
	ldr.w	r0, [r10, #48]
	movw	r1, #1999
	bics	r0, r1
	add.w	r0, r0, #1024
	str.w	r0, [r10, #48]
	movw	r0, #4097
	strh.w	r0, [r9, #3]
	ldr.w	r0, [r10, #8]
	orr	r0, r0, #4
	str.w	r0, [r10, #8]
	ldrb.w	r1, [r9, #3]
	ldrb.w	r0, [r9, #4]
.LBB39_102:
	cmp	r1, #0
	beq.w	.LBB39_354
	ldr.w	r2, [r10]
	lsls	r2, r2, #29
	bmi.w	.LBB39_116
	ldr.w	r2, [r10]
	lsls	r2, r2, #29
	itt	pl
	ldrpl.w	r2, [r10]
	lslspl.w	r2, r2, #29
	bmi.w	.LBB39_116
	ldr.w	r2, [r10]
	lsls	r2, r2, #29
	bpl	.LBB39_102
	b	.LBB39_116
.LBB39_106:
	bl	stm32h7xx_hal::adc::Adc<stm32h7::stm32h743v::ADC1,stm32h7xx_hal::adc::Enabled>::check_conversion_conditions::h7b40729b58c989da
	ldrb.w	r0, [r9, #1]
	ldr.w	r1, [r10, #12]
	movw	r2, :lower16:.Lswitch.table.DCMI.1525
	bfi	r1, r0, #2, #3
	str.w	r1, [r10, #12]
	ldrb.w	r0, [r9, #2]
	ldr.w	r1, [r10, #16]
	bic	r1, r1, #-268435456
	movt	r2, :upper16:.Lswitch.table.DCMI.1525
	orr.w	r0, r1, r0, lsl #28
	str.w	r0, [r10, #16]
	ldr.w	r0, [r10, #28]
	orr	r0, r0, #32768
	str.w	r0, [r10, #28]
	ldrb.w	r0, [r9]
	ldr.w	r1, [r10, #24]
	bic	r1, r1, #229376
	and	r0, r0, #7
	eor	r0, r0, #4
	ldr.w	r0, [r2, r0, lsl #2]
	orrs	r0, r1
	str.w	r0, [r10, #24]
	ldr.w	r0, [r10, #48]
	movw	r1, #1999
	bics	r0, r1
	add.w	r0, r0, #960
	str.w	r0, [r10, #48]
	movw	r0, #3841
	strh.w	r0, [r9, #3]
	ldr.w	r0, [r10, #8]
	orr	r0, r0, #4
	str.w	r0, [r10, #8]
	ldrb.w	r1, [r9, #3]
	ldrb.w	r0, [r9, #4]
.LBB39_107:
	cmp	r1, #0
	beq.w	.LBB39_354
	ldr.w	r2, [r10]
	lsls	r2, r2, #29
	bmi	.LBB39_116
	ldr.w	r2, [r10]
	lsls	r2, r2, #29
	itt	pl
	ldrpl.w	r2, [r10]
	lslspl.w	r2, r2, #29
	bmi	.LBB39_116
	ldr.w	r2, [r10]
	lsls	r2, r2, #29
	bpl	.LBB39_107
	b	.LBB39_116
.LBB39_111:
	bl	stm32h7xx_hal::adc::Adc<stm32h7::stm32h743v::ADC1,stm32h7xx_hal::adc::Enabled>::check_conversion_conditions::h7b40729b58c989da
	ldrb.w	r0, [r9, #1]
	ldr.w	r1, [r10, #12]
	movw	r2, :lower16:.Lswitch.table.DCMI.1526
	bfi	r1, r0, #2, #3
	str.w	r1, [r10, #12]
	ldrb.w	r0, [r9, #2]
	ldr.w	r1, [r10, #16]
	bic	r1, r1, #-268435456
	movt	r2, :upper16:.Lswitch.table.DCMI.1526
	orr.w	r0, r1, r0, lsl #28
	str.w	r0, [r10, #16]
	ldr.w	r0, [r10, #28]
	orr	r0, r0, #262144
	str.w	r0, [r10, #28]
	ldrb.w	r0, [r9]
	ldr.w	r1, [r10, #24]
	bic	r1, r1, #117440512
	and	r0, r0, #7
	eor	r0, r0, #4
	ldr.w	r0, [r2, r0, lsl #2]
	orrs	r0, r1
	str.w	r0, [r10, #24]
	ldr.w	r0, [r10, #48]
	movw	r1, #1999
	bics	r0, r1
	add.w	r0, r0, #1152
	str.w	r0, [r10, #48]
	movw	r0, #4609
	strh.w	r0, [r9, #3]
	ldr.w	r0, [r10, #8]
	orr	r0, r0, #4
	str.w	r0, [r10, #8]
	ldrb.w	r1, [r9, #3]
	ldrb.w	r0, [r9, #4]
.LBB39_112:
	cmp	r1, #0
	beq.w	.LBB39_354
	ldr.w	r2, [r10]
	lsls	r2, r2, #29
	bmi	.LBB39_116
	ldr.w	r2, [r10]
	lsls	r2, r2, #29
	itt	pl
	ldrpl.w	r2, [r10]
	lslspl.w	r2, r2, #29
	bmi	.LBB39_116
	ldr.w	r2, [r10]
	lsls	r2, r2, #29
	bpl	.LBB39_112
.LBB39_116:
	and	r0, r0, #31
	movs	r1, #1
	lsl.w	r0, r1, r0
	ldr.w	r1, [r10, #28]
	orn	r0, r11, r0
	ands	r0, r1
	str.w	r0, [r10, #28]
	movs	r0, #0
	strb.w	r0, [r9, #3]
	vldr	s0, [r10, #64]
	ldrb.w	r0, [r9, #1]
	sbfx	r1, r0, #0, #3
	cmp.w	r1, #-1
	blt	.LBB39_118
	adds	r0, #1
	movw	r1, :lower16:.Lswitch.table.DCMI.1532
	and	r0, r0, #7
	movt	r1, :upper16:.Lswitch.table.DCMI.1532
	ldr.w	r0, [r1, r0, lsl #2]
	b	.LBB39_119
.LBB39_118:
	movs	r0, #16
.LBB39_119:
	ldrb.w	r1, [r9, #2]
	mov.w	r2, #-1
	lsl.w	r0, r2, r0
	vcvt.f32.u32	s0, s0
	mvns	r0, r0
	and	r1, r1, #31
	lsls	r0, r1
	vmov	s2, r0
	vcvt.f32.u32	s2, s2
	vdiv.f32	s0, s0, s2
	vadd.f32	s0, s0, s26
	vmul.f32	s0, s0, s28
	vstr	s0, [r6, #48]
.LCPI39_10:
	tbh	[pc, r4, lsl #1]
.LJTI39_3:
	.short	(.LBB39_121-(.LCPI39_10+4))/2
	.short	(.LBB39_131-(.LCPI39_10+4))/2
	.short	(.LBB39_126-(.LCPI39_10+4))/2
	.short	(.LBB39_136-(.LCPI39_10+4))/2
	.p2align	1
.LBB39_121:
	bl	stm32h7xx_hal::adc::Adc<stm32h7::stm32h743v::ADC1,stm32h7xx_hal::adc::Enabled>::check_conversion_conditions::h7b40729b58c989da
	ldrb.w	r0, [r9, #1]
	ldr.w	r1, [r10, #12]
	movw	r2, :lower16:.Lswitch.table.DCMI.1527
	bfi	r1, r0, #2, #3
	str.w	r1, [r10, #12]
	ldrb.w	r0, [r9, #2]
	ldr.w	r1, [r10, #16]
	bic	r1, r1, #-268435456
	movt	r2, :upper16:.Lswitch.table.DCMI.1527
	orr.w	r0, r1, r0, lsl #28
	str.w	r0, [r10, #16]
	ldr.w	r0, [r10, #28]
	orr	r0, r0, #524288
	str.w	r0, [r10, #28]
	ldrb.w	r0, [r9]
	ldr.w	r1, [r10, #24]
	bic	r1, r1, #939524096
	and	r0, r0, #7
	eor	r0, r0, #4
	ldr.w	r0, [r2, r0, lsl #2]
	orrs	r0, r1
	str.w	r0, [r10, #24]
	ldr.w	r0, [r10, #48]
	movw	r1, #1999
	bics	r0, r1
	add.w	r0, r0, #1216
	str.w	r0, [r10, #48]
	movw	r0, #4865
	strh.w	r0, [r9, #3]
	ldr.w	r0, [r10, #8]
	orr	r0, r0, #4
	str.w	r0, [r10, #8]
	ldrb.w	r1, [r9, #3]
	ldrb.w	r0, [r9, #4]
.LBB39_122:
	cmp	r1, #0
	beq.w	.LBB39_354
	ldr.w	r2, [r10]
	lsls	r2, r2, #29
	bmi.w	.LBB39_141
	ldr.w	r2, [r10]
	lsls	r2, r2, #29
	itt	pl
	ldrpl.w	r2, [r10]
	lslspl.w	r2, r2, #29
	bmi.w	.LBB39_141
	ldr.w	r2, [r10]
	lsls	r2, r2, #29
	bpl	.LBB39_122
	b	.LBB39_141
.LBB39_126:
	bl	stm32h7xx_hal::adc::Adc<stm32h7::stm32h743v::ADC1,stm32h7xx_hal::adc::Enabled>::check_conversion_conditions::h7b40729b58c989da
	ldrb.w	r0, [r9, #1]
	ldr.w	r1, [r10, #12]
	movw	r2, :lower16:.Lswitch.table.DCMI.1529
	bfi	r1, r0, #2, #3
	str.w	r1, [r10, #12]
	ldrb.w	r0, [r9, #2]
	ldr.w	r1, [r10, #16]
	bic	r1, r1, #-268435456
	movt	r2, :upper16:.Lswitch.table.DCMI.1529
	orr.w	r0, r1, r0, lsl #28
	str.w	r0, [r10, #16]
	ldr.w	r0, [r10, #28]
	orr	r0, r0, #512
	str.w	r0, [r10, #28]
	ldrb.w	r0, [r9]
	ldr.w	r1, [r10, #20]
	bic	r1, r1, #939524096
	and	r0, r0, #7
	eor	r0, r0, #4
	ldr.w	r0, [r2, r0, lsl #2]
	orrs	r0, r1
	str.w	r0, [r10, #20]
	ldr.w	r0, [r10, #48]
	movw	r1, #1999
	bics	r0, r1
	add.w	r0, r0, #576
	str.w	r0, [r10, #48]
	movw	r0, #2305
	strh.w	r0, [r9, #3]
	ldr.w	r0, [r10, #8]
	orr	r0, r0, #4
	str.w	r0, [r10, #8]
	ldrb.w	r1, [r9, #3]
	ldrb.w	r0, [r9, #4]
.LBB39_127:
	cmp	r1, #0
	beq.w	.LBB39_354
	ldr.w	r2, [r10]
	lsls	r2, r2, #29
	bmi.w	.LBB39_141
	ldr.w	r2, [r10]
	lsls	r2, r2, #29
	itt	pl
	ldrpl.w	r2, [r10]
	lslspl.w	r2, r2, #29
	bmi.w	.LBB39_141
	ldr.w	r2, [r10]
	lsls	r2, r2, #29
	bpl	.LBB39_127
	b	.LBB39_141
.LBB39_131:
	bl	stm32h7xx_hal::adc::Adc<stm32h7::stm32h743v::ADC1,stm32h7xx_hal::adc::Enabled>::check_conversion_conditions::h7b40729b58c989da
	ldrb.w	r0, [r9, #1]
	ldr.w	r1, [r10, #12]
	movw	r2, :lower16:.Lswitch.table.DCMI.1528
	bfi	r1, r0, #2, #3
	str.w	r1, [r10, #12]
	ldrb.w	r0, [r9, #2]
	ldr.w	r1, [r10, #16]
	bic	r1, r1, #-268435456
	movt	r2, :upper16:.Lswitch.table.DCMI.1528
	orr.w	r0, r1, r0, lsl #28
	str.w	r0, [r10, #16]
	ldr.w	r0, [r10, #28]
	orr	r0, r0, #8
	str.w	r0, [r10, #28]
	ldrb.w	r0, [r9]
	ldr.w	r1, [r10, #20]
	bic	r1, r1, #3584
	and	r0, r0, #7
	eor	r0, r0, #4
	ldr.w	r0, [r2, r0, lsl #2]
	orrs	r0, r1
	str.w	r0, [r10, #20]
	ldr.w	r0, [r10, #48]
	movw	r1, #1999
	bics	r0, r1
	adds	r0, #192
	str.w	r0, [r10, #48]
	movw	r0, #769
	strh.w	r0, [r9, #3]
	ldr.w	r0, [r10, #8]
	orr	r0, r0, #4
	str.w	r0, [r10, #8]
	ldrb.w	r1, [r9, #3]
	ldrb.w	r0, [r9, #4]
.LBB39_132:
	cmp	r1, #0
	beq.w	.LBB39_354
	ldr.w	r2, [r10]
	lsls	r2, r2, #29
	bmi	.LBB39_141
	ldr.w	r2, [r10]
	lsls	r2, r2, #29
	itt	pl
	ldrpl.w	r2, [r10]
	lslspl.w	r2, r2, #29
	bmi	.LBB39_141
	ldr.w	r2, [r10]
	lsls	r2, r2, #29
	bpl	.LBB39_132
	b	.LBB39_141
.LBB39_136:
	bl	stm32h7xx_hal::adc::Adc<stm32h7::stm32h743v::ADC1,stm32h7xx_hal::adc::Enabled>::check_conversion_conditions::h7b40729b58c989da
	ldrb.w	r0, [r9, #1]
	ldr.w	r1, [r10, #12]
	movw	r2, :lower16:.Lswitch.table.DCMI.1530
	bfi	r1, r0, #2, #3
	str.w	r1, [r10, #12]
	ldrb.w	r0, [r9, #2]
	ldr.w	r1, [r10, #16]
	bic	r1, r1, #-268435456
	movt	r2, :upper16:.Lswitch.table.DCMI.1530
	orr.w	r0, r1, r0, lsl #28
	str.w	r0, [r10, #16]
	ldr.w	r0, [r10, #28]
	orr	r0, r0, #32
	str.w	r0, [r10, #28]
	ldrb.w	r0, [r9]
	ldr.w	r1, [r10, #20]
	bic	r1, r1, #229376
	and	r0, r0, #7
	eor	r0, r0, #4
	ldr.w	r0, [r2, r0, lsl #2]
	orrs	r0, r1
	str.w	r0, [r10, #20]
	ldr.w	r0, [r10, #48]
	movw	r1, #1999
	bics	r0, r1
	add.w	r0, r0, #320
	str.w	r0, [r10, #48]
	movw	r0, #1281
	strh.w	r0, [r9, #3]
	ldr.w	r0, [r10, #8]
	orr	r0, r0, #4
	str.w	r0, [r10, #8]
	ldrb.w	r1, [r9, #3]
	ldrb.w	r0, [r9, #4]
.LBB39_137:
	cmp	r1, #0
	beq.w	.LBB39_354
	ldr.w	r2, [r10]
	lsls	r2, r2, #29
	bmi	.LBB39_141
	ldr.w	r2, [r10]
	lsls	r2, r2, #29
	itt	pl
	ldrpl.w	r2, [r10]
	lslspl.w	r2, r2, #29
	bmi	.LBB39_141
	ldr.w	r2, [r10]
	lsls	r2, r2, #29
	bpl	.LBB39_137
.LBB39_141:
	and	r0, r0, #31
	movs	r1, #1
	lsl.w	r0, r1, r0
	ldr.w	r1, [r10, #28]
	orn	r0, r11, r0
	ands	r0, r1
	str.w	r0, [r10, #28]
	movs	r0, #0
	strb.w	r0, [r9, #3]
	vldr	s0, [r10, #64]
	ldrb.w	r0, [r9, #1]
	sbfx	r1, r0, #0, #3
	cmp.w	r1, #-1
	bge.w	.LBB39_66
	movs	r0, #16
	b.w	.LBB39_67
.LBB39_143:
	movw	r1, #4112
	movs	r2, #1
	movt	r1, #22530
	add	r4, sp, #660
	ldr.w	r0, [r1, #2048]
	bic.w	r0, r2, r0, lsr #12
	str	r0, [sp, #64]
	strb.w	r0, [sp, #141]
	ldr.w	r0, [r1, #1024]
	ldr	r1, [r1]
	lsls	r1, r1, #24
	mov.w	r1, #2
	lsl.w	r0, r0, #29
	it	pl
	movpl	r1, #1
	and.w	r0, r1, r0, asr #31
	str	r0, [sp, #68]
	strb.w	r0, [sp, #140]
	mov.w	r1, #516
	mov	r0, r4
	bl	__aeabi_memclr4
	movs	r0, #0
	movs	r1, #0
.LBB39_144:
	add	r0, r4
	strb	r1, [r0, #4]
	ldr	r0, [sp, #660]
	adds	r0, #1
	str	r0, [sp, #660]
	cmp.w	r1, r0, lsr #9
	bne	.LBB39_148
	add	r0, r4
	strb	r1, [r0, #4]
	ldr	r0, [sp, #660]
	adds	r0, #1
	str	r0, [sp, #660]
	cmp.w	r1, r0, lsr #9
	bne	.LBB39_148
	add	r0, r4
	strb	r1, [r0, #4]
	ldr	r0, [sp, #660]
	adds	r0, #1
	str	r0, [sp, #660]
	cmp.w	r1, r0, lsr #9
	bne	.LBB39_148
	add	r0, r4
	strb	r1, [r0, #4]
	ldr	r0, [sp, #660]
	adds	r0, #1
	str	r0, [sp, #660]
	cmp.w	r0, #512
	blo	.LBB39_144
.LBB39_148:
	ldr	r1, [sp, #44]
	vmov.f32	s0, s22
	strd	r1, r0, [r7, #-112]
	movw	r1, #13174
	movw	r0, #8827
	movt	r1, #30303
	str	r1, [sp, #668]
	movw	r1, #27759
	movt	r0, #13168
	movt	r1, #24948
	str	r1, [sp, #672]
	movw	r1, #25959
	str	r0, [sp, #664]
	sub.w	r0, r7, #112
	movt	r1, #14882
	str	r0, [r7, #-120]
	str	r1, [sp, #676]
	movs	r1, #16
	str	r1, [r7, #-104]
	bl	<&mut serde_json_core::ser::Serializer as serde::ser::Serializer>::serialize_f32::h9646727876011b6e
	cmp	r0, #0
	bne.w	.LBB39_351
	ldrd	r0, r2, [r7, #-108]
	cmp	r2, r0
	itttt	lo
	ldrlo	r0, [r7, #-112]
	movlo	r1, #44
	strblo	r1, [r0, r2]
	addlo	r0, r2, #1
	itt	lo
	ldrlo	r1, [r7, #-108]
	cmplo	r0, r1
	bhs.w	.LBB39_351
	ldr	r1, [r7, #-112]
	movs	r3, #34
	add.w	r12, r2, #13
	adds	r4, r2, #2
	strb	r3, [r1, r0]
	ldr	r1, [r7, #-108]
	str	r4, [r7, #-104]
	cmp	r12, r1
	bhi.w	.LBB39_351
	cmp	r1, r4
	mov	r0, r4
	it	hi
	movhi	r0, r1
	cmp	r4, r1
	bhs.w	.LBB39_353
	ldr	r6, [r7, #-112]
	adds	r5, r2, #3
	cmp	r5, r0
	mov.w	r3, #112
	strb	r3, [r6, r4]
	str	r5, [r7, #-104]
	beq.w	.LBB39_353
	adds	r4, r2, #4
	movs	r3, #53
	cmp	r4, r0
	strb	r3, [r6, r5]
	str	r4, [r7, #-104]
	beq.w	.LBB39_353
	adds	r5, r2, #5
	movs	r3, #118
	cmp	r5, r0
	strb	r3, [r6, r4]
	str	r5, [r7, #-104]
	beq.w	.LBB39_353
	adds	r4, r2, #6
	movs	r3, #95
	cmp	r4, r0
	strb	r3, [r6, r5]
	str	r4, [r7, #-104]
	beq.w	.LBB39_353
	adds	r5, r2, #7
	movs	r3, #118
	cmp	r5, r0
	strb	r3, [r6, r4]
	str	r5, [r7, #-104]
	beq.w	.LBB39_353
	add.w	r4, r2, #8
	movs	r3, #111
	cmp	r4, r0
	strb	r3, [r6, r5]
	str	r4, [r7, #-104]
	beq.w	.LBB39_353
	add.w	r5, r2, #9
	movs	r3, #108
	cmp	r5, r0
	strb	r3, [r6, r4]
	str	r5, [r7, #-104]
	beq.w	.LBB39_353
	add.w	r4, r2, #10
	movs	r3, #116
	cmp	r4, r0
	strb	r3, [r6, r5]
	str	r4, [r7, #-104]
	beq.w	.LBB39_353
	add.w	r5, r2, #11
	movs	r3, #97
	cmp	r5, r0
	strb	r3, [r6, r4]
	str	r5, [r7, #-104]
	beq.w	.LBB39_353
	add.w	r4, r2, #12
	movs	r3, #103
	cmp	r4, r0
	strb	r3, [r6, r5]
	str	r4, [r7, #-104]
	beq.w	.LBB39_353
	movs	r0, #101
	strb	r0, [r6, r4]
	add.w	r6, r2, #15
	ldr	r1, [r7, #-108]
	cmp	r6, r1
	str	r12, [r7, #-104]
	bhi.w	.LBB39_351
	cmp	r1, r12
	mov	r0, r12
	it	hi
	movhi	r0, r1
	cmp	r12, r1
	bhs.w	.LBB39_353
	ldr	r4, [r7, #-112]
	adds	r2, #14
	cmp	r2, r0
	mov.w	r5, #34
	strb.w	r5, [r4, r12]
	str	r2, [r7, #-104]
	beq.w	.LBB39_353
	vmov.f32	s0, s20
	movs	r0, #58
	strb	r0, [r4, r2]
	sub.w	r0, r7, #112
	str	r6, [r7, #-104]
	bl	<&mut serde_json_core::ser::Serializer as serde::ser::Serializer>::serialize_f32::h9646727876011b6e
	cmp	r0, #0
	bne.w	.LBB39_351
	ldrd	r0, r2, [r7, #-108]
	cmp	r2, r0
	itttt	lo
	ldrlo	r0, [r7, #-112]
	movlo	r1, #44
	strblo	r1, [r0, r2]
	addlo	r0, r2, #1
	itt	lo
	ldrlo	r1, [r7, #-108]
	cmplo	r0, r1
	bhs.w	.LBB39_351
	ldr	r1, [r7, #-112]
	movs	r3, #34
	add.w	r12, r2, #14
	adds	r4, r2, #2
	strb	r3, [r1, r0]
	ldr	r1, [r7, #-108]
	str	r4, [r7, #-104]
	cmp	r12, r1
	bhi.w	.LBB39_351
	cmp	r1, r4
	mov	r0, r4
	it	hi
	movhi	r0, r1
	cmp	r4, r1
	bhs.w	.LBB39_353
	ldr	r6, [r7, #-112]
	adds	r5, r2, #3
	cmp	r5, r0
	mov.w	r3, #112
	strb	r3, [r6, r4]
	str	r5, [r7, #-104]
	beq.w	.LBB39_353
	adds	r4, r2, #4
	movs	r3, #49
	cmp	r4, r0
	strb	r3, [r6, r5]
	str	r4, [r7, #-104]
	beq.w	.LBB39_353
	adds	r5, r2, #5
	movs	r3, #50
	cmp	r5, r0
	strb	r3, [r6, r4]
	str	r5, [r7, #-104]
	beq.w	.LBB39_353
	adds	r4, r2, #6
	movs	r3, #118
	cmp	r4, r0
	strb	r3, [r6, r5]
	str	r4, [r7, #-104]
	beq.w	.LBB39_353
	adds	r5, r2, #7
	movs	r3, #95
	cmp	r5, r0
	strb	r3, [r6, r4]
	str	r5, [r7, #-104]
	beq.w	.LBB39_353
	add.w	r4, r2, #8
	movs	r3, #118
	cmp	r4, r0
	strb	r3, [r6, r5]
	str	r4, [r7, #-104]
	beq.w	.LBB39_353
	add.w	r5, r2, #9
	movs	r3, #111
	cmp	r5, r0
	strb	r3, [r6, r4]
	str	r5, [r7, #-104]
	beq.w	.LBB39_353
	add.w	r4, r2, #10
	movs	r3, #108
	cmp	r4, r0
	strb	r3, [r6, r5]
	str	r4, [r7, #-104]
	beq.w	.LBB39_353
	add.w	r5, r2, #11
	movs	r3, #116
	cmp	r5, r0
	strb	r3, [r6, r4]
	str	r5, [r7, #-104]
	beq.w	.LBB39_353
	add.w	r4, r2, #12
	movs	r3, #97
	cmp	r4, r0
	strb	r3, [r6, r5]
	str	r4, [r7, #-104]
	beq.w	.LBB39_353
	add.w	r5, r2, #13
	movs	r3, #103
	cmp	r5, r0
	strb	r3, [r6, r4]
	str	r5, [r7, #-104]
	beq.w	.LBB39_353
	movs	r0, #101
	strb	r0, [r6, r5]
	add.w	r6, r2, #16
	ldr	r1, [r7, #-108]
	cmp	r6, r1
	str	r12, [r7, #-104]
	bhi.w	.LBB39_351
	cmp	r1, r12
	mov	r0, r12
	it	hi
	movhi	r0, r1
	cmp	r12, r1
	bhs.w	.LBB39_353
	ldr	r4, [r7, #-112]
	adds	r2, #15
	cmp	r2, r0
	mov.w	r5, #34
	strb.w	r5, [r4, r12]
	str	r2, [r7, #-104]
	beq.w	.LBB39_353
	vmov.f32	s0, s18
	movs	r0, #58
	strb	r0, [r4, r2]
	sub.w	r0, r7, #112
	str	r6, [r7, #-104]
	bl	<&mut serde_json_core::ser::Serializer as serde::ser::Serializer>::serialize_f32::h9646727876011b6e
	cmp	r0, #0
	bne.w	.LBB39_351
	ldrd	r0, r2, [r7, #-108]
	cmp	r2, r0
	bhs.w	.LBB39_351
	ldr	r0, [r7, #-112]
	movs	r1, #44
	strb	r1, [r0, r2]
	adds	r0, r2, #1
	ldr	r1, [r7, #-108]
	cmp	r0, r1
	mov.w	r1, #0
	strb	r1, [r7, #-116]
	bhs.w	.LBB39_351
	ldr	r1, [r7, #-112]
	movs	r3, #34
	add.w	r12, r2, #14
	adds	r4, r2, #2
	strb	r3, [r1, r0]
	ldr	r1, [r7, #-108]
	str	r4, [r7, #-104]
	cmp	r12, r1
	bhi.w	.LBB39_351
	cmp	r1, r4
	mov	r0, r4
	it	hi
	movhi	r0, r1
	cmp	r4, r1
	bhs.w	.LBB39_353
	ldr	r6, [r7, #-112]
	adds	r5, r2, #3
	cmp	r5, r0
	mov.w	r3, #112
	strb	r3, [r6, r4]
	str	r5, [r7, #-104]
	beq.w	.LBB39_353
	adds	r4, r2, #4
	movs	r3, #49
	cmp	r4, r0
	strb	r3, [r6, r5]
	str	r4, [r7, #-104]
	beq.w	.LBB39_353
	adds	r5, r2, #5
	movs	r3, #50
	cmp	r5, r0
	strb	r3, [r6, r4]
	str	r5, [r7, #-104]
	beq.w	.LBB39_353
	adds	r4, r2, #6
	movs	r3, #118
	cmp	r4, r0
	strb	r3, [r6, r5]
	str	r4, [r7, #-104]
	beq.w	.LBB39_353
	adds	r5, r2, #7
	movs	r3, #95
	cmp	r5, r0
	strb	r3, [r6, r4]
	str	r5, [r7, #-104]
	beq.w	.LBB39_353
	add.w	r4, r2, #8
	movs	r3, #99
	cmp	r4, r0
	strb	r3, [r6, r5]
	str	r4, [r7, #-104]
	beq.w	.LBB39_353
	add.w	r5, r2, #9
	movs	r3, #117
	cmp	r5, r0
	strb	r3, [r6, r4]
	str	r5, [r7, #-104]
	beq.w	.LBB39_353
	add.w	r4, r2, #10
	movs	r3, #114
	cmp	r4, r0
	strb	r3, [r6, r5]
	str	r4, [r7, #-104]
	beq.w	.LBB39_353
	add.w	r5, r2, #11
	movs	r3, #114
	cmp	r5, r0
	strb	r3, [r6, r4]
	str	r5, [r7, #-104]
	beq.w	.LBB39_353
	add.w	r4, r2, #12
	movs	r3, #101
	cmp	r4, r0
	strb	r3, [r6, r5]
	str	r4, [r7, #-104]
	beq.w	.LBB39_353
	add.w	r5, r2, #13
	movs	r3, #110
	cmp	r5, r0
	strb	r3, [r6, r4]
	str	r5, [r7, #-104]
	beq.w	.LBB39_353
	movs	r0, #116
	strb	r0, [r6, r5]
	add.w	r6, r2, #16
	ldr	r1, [r7, #-108]
	cmp	r6, r1
	str	r12, [r7, #-104]
	bhi.w	.LBB39_351
	cmp	r1, r12
	mov	r0, r12
	it	hi
	movhi	r0, r1
	cmp	r12, r1
	bhs.w	.LBB39_353
	ldr	r4, [r7, #-112]
	adds	r2, #15
	cmp	r2, r0
	mov.w	r5, #34
	strb.w	r5, [r4, r12]
	str	r2, [r7, #-104]
	beq.w	.LBB39_353
	vmov.f32	s0, s16
	movs	r0, #58
	strb	r0, [r4, r2]
	sub.w	r0, r7, #112
	str	r6, [r7, #-104]
	bl	<&mut serde_json_core::ser::Serializer as serde::ser::Serializer>::serialize_f32::h9646727876011b6e
	cmp	r0, #0
	bne.w	.LBB39_351
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.269
	movs	r2, #11
	sub.w	r0, r7, #120
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.269
	ldr	r3, [sp, #40]
	bl	<serde_json_core::ser::struct_::SerializeStruct as serde::ser::SerializeStruct>::serialize_field::h9b0dd3205c6f882a
	cmp	r0, #0
	bne.w	.LBB39_351
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.270
	movs	r2, #14
	sub.w	r0, r7, #120
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.270
	ldr	r3, [sp, #36]
	bl	<serde_json_core::ser::struct_::SerializeStruct as serde::ser::SerializeStruct>::serialize_field::h9b0dd3205c6f882a
	cmp	r0, #0
	bne.w	.LBB39_351
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.271
	movs	r2, #14
	sub.w	r0, r7, #120
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.271
	ldr	r3, [sp, #32]
	bl	<serde_json_core::ser::struct_::SerializeStruct as serde::ser::SerializeStruct>::serialize_field::h9b0dd3205c6f882a
	cmp	r0, #0
	bne.w	.LBB39_351
	ldrb	r0, [r7, #-116]
	ldr	r11, [r7, #-120]
	cmp	r0, #0
	beq.w	.LBB39_249
	ldr.w	r12, [r11, #8]
	ldr.w	r0, [r11, #4]
	cmp	r12, r0
	blo.w	.LBB39_251
	b.w	.LBB39_351
.LBB39_208:
	ldrb.w	r0, [r12, #2718]
.LBB39_209:
	cmp	r0, #0
	bne.w	.LBB39_314
	ldr.w	r11, [r12, #2712]
	movs	r0, #1
	add.w	r1, r11, #288
	strb.w	r0, [r12, #2718]
	ldrexb	r0, [r1]
	cbz	r0, .LBB39_212
	movs	r4, #3
	b	.LBB39_215
.LBB39_212:
	dmb	sy
	movs	r4, #3
.LBB39_213:
	movs	r2, #1
	strexb	r3, r2, [r1]
	cbz	r3, .LBB39_216
	ldrexb	r0, [r1]
	cmp	r0, #0
	beq	.LBB39_213
.LBB39_215:
	clrex
	movs	r2, #0
.LBB39_216:
	dmb	sy
	cmp	r2, #0
	beq.w	.LBB39_371
	ldr.w	r0, [r11, #112]
	cmp	r0, #1
	bne	.LBB39_223
	ldr.w	r1, [r11, #88]
	ldr.w	r0, [r11, #116]
	cmp	r1, r0
	bls.w	.LBB39_355
	mov.w	r2, #392
	ldr.w	r1, [r11, #84]
	mla	r0, r0, r2, r1
	ldr	r1, [r0, #40]!
	cmp	r1, #3
	bne.w	.LBB39_372
	mov	r1, r0
	ldr	r2, [r1, #8]!
	ldr	r3, [r1, #4]
	eor	r2, r2, #2
	orrs	r2, r3
	bne	.LBB39_222
	movs	r2, #1
	strb.w	r2, [r0, #92]
.LBB39_222:
	movs	r0, #0
	strd	r0, r0, [r1]
	strd	r0, r0, [r1, #8]
.LBB39_223:
	ldrd	r6, r0, [r11, #84]
	mov.w	r1, #392
	mla	r0, r0, r1, r6
.LBB39_224:
	mov	r1, r6
.LBB39_225:
	cmp	r1, r0
	beq	.LBB39_241
	ldr	r3, [r1, #40]
	add.w	r2, r1, #392
	cmp	r3, #4
	bne	.LBB39_236
	cmp	r2, r0
	beq	.LBB39_241
	ldr.w	r3, [r1, #432]
	add.w	r6, r1, #784
	cmp	r3, #4
	bne	.LBB39_234
	cmp	r6, r0
	beq	.LBB39_241
	ldr.w	r3, [r1, #824]
	add.w	r2, r1, #1176
	cmp	r3, #4
	bne	.LBB39_235
	cmp	r2, r0
	beq	.LBB39_241
	ldr.w	r3, [r1, #1216]
	add.w	r6, r1, #1568
	cmp	r3, #4
	mov	r1, r6
	beq	.LBB39_225
	sub.w	r1, r6, #392
	b	.LBB39_237
.LBB39_234:
	mov	r1, r2
	b	.LBB39_237
.LBB39_235:
	mov	r1, r6
.LBB39_236:
	mov	r6, r2
.LBB39_237:
	cmp	r3, #2
	beq	.LBB39_240
	cmp	r3, #1
	bne	.LBB39_224
	movs	r2, #0
	strh.w	r2, [r1, #108]
	strb.w	r2, [r1, #110]
	strd	r2, r2, [r1, #100]
	strd	r2, r2, [r1, #84]
	strd	r2, r2, [r1, #68]
	strd	r2, r2, [r1, #52]
	b	.LBB39_224
.LBB39_240:
	movs	r2, #0
	strb.w	r2, [r1, #358]
	b	.LBB39_224
.LBB39_241:
	ldr.w	r0, [r11, #56]
	movs	r1, #0
	cbz	r0, .LBB39_243
	ldr.w	r0, [r11, #52]
	strb	r1, [r0]
	strb	r1, [r0, #5]
	str.w	r1, [r0, #1]
.LBB39_243:
	ldr.w	r5, [r11, #16]
	cmp	r5, #0
	beq.w	.LBB39_313
	ldr.w	r0, [r11, #20]
	cmp	r0, #0
	beq.w	.LBB39_313
	add.w	r1, r0, r0, lsl #2
	mvn	r0, #39
	str	r1, [sp, #64]
	add.w	r6, r0, r1, lsl #3
	movw	r0, #52429
	movt	r0, #52428
	umull	r0, r1, r6, r0
	movs	r0, #1
	add.w	r0, r0, r1, lsr #5
	ands	r0, r0, #3
	beq.w	.LBB39_309
	str	r0, [sp, #68]
	mov	r0, r5
	movs	r1, #39
	strb	r4, [r0], #1
	add.w	r4, r5, #40
	bl	__aeabi_memclr
	ldr	r0, [sp, #68]
	mov	r1, r4
	movs	r4, #3
	cmp	r0, #1
	beq.w	.LBB39_310
	adds	r0, r1, #1
	movs	r1, #39
	add.w	r2, r5, #80
	str	r2, [sp, #60]
	strb.w	r4, [r5, #40]
	bl	__aeabi_memclr
	ldr	r0, [sp, #60]
	movs	r4, #3
	ldr	r1, [sp, #68]
	cmp	r1, #2
	mov	r1, r0
	beq.w	.LBB39_310
	add.w	r1, r5, #120
	str	r1, [sp, #68]
	adds	r0, #1
	movs	r1, #39
	strb.w	r4, [r5, #80]
	bl	__aeabi_memclr
	ldr	r1, [sp, #68]
	movs	r4, #3
	b	.LBB39_310
.LBB39_249:
	ldrd	r1, r0, [r11, #4]
	cmp	r0, r1
	bhs.w	.LBB39_351
	ldr.w	r1, [r11]
	movs	r2, #44
	add.w	r12, r0, #1
	strb	r2, [r1, r0]
	str.w	r12, [r11, #8]
	ldr.w	r0, [r11, #4]
	cmp	r12, r0
	bhs.w	.LBB39_351
.LBB39_251:
	ldr.w	r0, [r11]
	movs	r1, #34
	add.w	r3, r12, #4
	add.w	r4, r12, #1
	strb.w	r1, [r0, r12]
	ldr.w	r1, [r11, #4]
	str.w	r4, [r11, #8]
	cmp	r3, r1
	bhi.w	.LBB39_351
	cmp	r1, r4
	mov	r0, r4
	it	hi
	movhi	r0, r1
	cmp	r4, r1
	bhs.w	.LBB39_353
	ldr.w	r6, [r11]
	add.w	r5, r12, #2
	cmp	r5, r0
	mov.w	r2, #112
	strb	r2, [r6, r4]
	str.w	r5, [r11, #8]
	beq.w	.LBB39_353
	add.w	r4, r12, #3
	movs	r2, #111
	cmp	r4, r0
	strb	r2, [r6, r5]
	str.w	r4, [r11, #8]
	beq.w	.LBB39_353
	movs	r0, #101
	strb	r0, [r6, r4]
	add.w	r6, r12, #6
	ldr.w	r1, [r11, #4]
	cmp	r6, r1
	str.w	r3, [r11, #8]
	bhi.w	.LBB39_351
	cmp	r1, r3
	mov	r0, r3
	it	hi
	movhi	r0, r1
	cmp	r3, r1
	bhs.w	.LBB39_353
	ldr.w	r4, [r11]
	add.w	r2, r12, #5
	cmp	r2, r0
	mov.w	r5, #34
	strb	r5, [r4, r3]
	str.w	r2, [r11, #8]
	beq.w	.LBB39_353
	movs	r0, #58
	strb	r0, [r4, r2]
	ldr	r0, [sp, #68]
	str.w	r6, [r11, #8]
	cbz	r0, .LBB39_261
	cmp	r0, #1
	bne	.LBB39_262
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.224
	movs	r2, #3
	mov	r0, r11
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.224
	b	.LBB39_263
.LBB39_261:
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.225
	movs	r2, #6
	mov	r0, r11
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.225
	b	.LBB39_263
.LBB39_262:
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.223
	movs	r2, #4
	mov	r0, r11
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.223
.LBB39_263:
	bl	<&mut serde_json_core::ser::Serializer as serde::ser::Serializer>::serialize_str::h559be0d6eaa1ef8f
	cmp	r0, #0
	bne.w	.LBB39_351
	ldrd	r0, r2, [r11, #4]
	cmp	r2, r0
	bhs.w	.LBB39_351
	ldr.w	r0, [r11]
	movs	r1, #44
	strb	r1, [r0, r2]
	adds	r0, r2, #1
	ldr.w	r1, [r11, #4]
	str.w	r0, [r11, #8]
	cmp	r0, r1
	bhs.w	.LBB39_351
	ldr.w	r1, [r11]
	movs	r3, #34
	add.w	r12, r2, #10
	adds	r5, r2, #2
	strb	r3, [r1, r0]
	ldr.w	r1, [r11, #4]
	str.w	r5, [r11, #8]
	cmp	r12, r1
	bhi.w	.LBB39_351
	cmp	r1, r5
	mov	r0, r5
	it	hi
	movhi	r0, r1
	cmp	r5, r1
	bhs.w	.LBB39_353
	ldr.w	r6, [r11]
	adds	r4, r2, #3
	cmp	r4, r0
	mov.w	r3, #111
	strb	r3, [r6, r5]
	str.w	r4, [r11, #8]
	beq.w	.LBB39_353
	adds	r5, r2, #4
	movs	r3, #118
	cmp	r5, r0
	strb	r3, [r6, r4]
	str.w	r5, [r11, #8]
	beq.w	.LBB39_353
	adds	r4, r2, #5
	movs	r3, #101
	cmp	r4, r0
	strb	r3, [r6, r5]
	str.w	r4, [r11, #8]
	beq.w	.LBB39_353
	adds	r5, r2, #6
	movs	r3, #114
	cmp	r5, r0
	strb	r3, [r6, r4]
	str.w	r5, [r11, #8]
	beq.w	.LBB39_353
	adds	r4, r2, #7
	movs	r3, #116
	cmp	r4, r0
	strb	r3, [r6, r5]
	str.w	r4, [r11, #8]
	beq.w	.LBB39_353
	add.w	r5, r2, #8
	movs	r3, #101
	cmp	r5, r0
	strb	r3, [r6, r4]
	str.w	r5, [r11, #8]
	beq.w	.LBB39_353
	add.w	r4, r2, #9
	movs	r3, #109
	cmp	r4, r0
	strb	r3, [r6, r5]
	str.w	r4, [r11, #8]
	beq.w	.LBB39_353
	movs	r0, #112
	strb	r0, [r6, r4]
	add.w	r6, r2, #12
	ldr.w	r1, [r11, #4]
	cmp	r6, r1
	str.w	r12, [r11, #8]
	bhi.w	.LBB39_351
	cmp	r1, r12
	mov	r0, r12
	it	hi
	movhi	r0, r1
	cmp	r12, r1
	bhs.w	.LBB39_353
	ldr.w	r5, [r11]
	adds	r2, #11
	cmp	r2, r0
	mov.w	r4, #34
	strb.w	r4, [r5, r12]
	str.w	r2, [r11, #8]
	beq.w	.LBB39_353
	movs	r0, #58
	strb	r0, [r5, r2]
	mov	r0, r11
	ldr	r1, [sp, #64]
	str.w	r6, [r11, #8]
	bl	<&mut serde_json_core::ser::Serializer as serde::ser::Serializer>::serialize_bool::h099b6880f35ee002
	cmp	r0, #0
	bne.w	.LBB39_351
	ldrd	r1, r0, [r11, #4]
	cmp	r0, r1
	bhs.w	.LBB39_351
	ldr.w	r1, [r11]
	movs	r2, #125
	strb	r2, [r1, r0]
	adds	r0, #1
	str.w	r0, [r11, #8]
	ldr	r1, [sp, #660]
	ldr	r0, [r7, #-104]
	mov.w	r2, #516
	cmp	r1, r0
	add	r1, sp, #660
	it	hi
	strhi	r0, [sp, #660]
	add	r0, sp, #144
	bl	__aeabi_memcpy4
	movw	r6, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	movw	r0, #4496
	movt	r6, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	movw	r11, :lower16:.L_MergedGlobals
	movt	r11, :upper16:.L_MergedGlobals
	ldrb	r0, [r6, r0]
	cbnz	r0, .LBB39_286
	ldr.w	r0, [r6, #2732]
	cmp	r0, #1
	beq	.LBB39_286
	movw	r0, #5032
	add.w	r11, sp, #660
	mov.w	r1, #512
	ldr	r5, [sp, #144]
	ldr	r4, [r6, r0]
	mov	r0, r11
	bl	__aeabi_memclr4
	ldr	r0, [sp, #24]
	movw	r1, :lower16:CORE_PERIPHERALS
	strd	r0, r5, [sp]
	movs	r0, #0
	movt	r1, :upper16:CORE_PERIPHERALS
	str	r0, [sp, #8]
	ldr	r2, [sp, #28]
	strd	r1, r0, [sp, #12]
	sub.w	r0, r7, #112
	mov	r1, r11
	mov	r3, r4
	bl	minimq::ser::serialize::publish_message::h3fe8b31b5970804e
	ldrb	r0, [r7, #-112]
	cbnz	r0, .LBB39_285
	ldrd	r1, r2, [r7, #-108]
	add.w	r0, r6, #2720
	bl	minimq::network_manager::InterfaceHolder<TcpStack,_>::write::h19b74f0c592580bd
	uxtb	r0, r0
	cmp	r0, #9
	bne	.LBB39_285
	movw	r2, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	movt	r2, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	ldrh.w	r0, [r2, #3956]
	adds	r0, #1
	uxth	r1, r0
	cmp	r1, r0
	it	ne
	movne	r1, #1
	strh.w	r1, [r2, #3956]
.LBB39_285:
	movw	r11, :lower16:.L_MergedGlobals
	movt	r11, :upper16:.L_MergedGlobals
.LBB39_286:
	movw	r0, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_settings::haa2b499d3e77eee9
	vldr	s2, .LCPI39_16
	movt	r0, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_settings::haa2b499d3e77eee9
	vldr	s0, [r0]
	vmul.f32	s16, s0, s2
	vmov	r0, s16
	bl	__aeabi_f2ulz
	vcmp.f32	s16, #0
	vldr	s0, .LCPI39_17
	mov	r6, r1
	mov	r5, r0
	vmrs	APSR_nzcv, fpscr
	vcmp.f32	s16, s0
	it	lt
	movlt	r6, #0
	vmrs	APSR_nzcv, fpscr
	vcmp.f32	s16, #0
	it	gt
	movgt.w	r6, #-1
	vmrs	APSR_nzcv, fpscr
	it	lt
	movlt	r5, #0
	vcmp.f32	s16, s0
	vmrs	APSR_nzcv, fpscr
	it	gt
	movgt.w	r5, #-1
	bl	__primask_r
	str	r0, [sp, #68]
	bl	__cpsid
	ldrd	r0, r1, [r11, #64]
	eor	r0, r0, #1
	orrs	r0, r1
	bne	.LBB39_289
	movw	r0, #57360
	movt	r0, #57344
	ldr	r0, [r0]
	lsls	r0, r0, #15
	mov	r0, r11
	ldrd	r4, r11, [r11, #72]
	bpl	.LBB39_290
	adds	r4, #1
	adc	r11, r11, #0
	strd	r4, r11, [r0, #72]
	b	.LBB39_290
.LBB39_289:
	movs	r4, #0
	mov.w	r11, #0
.LBB39_290:
	ldr	r0, [sp, #68]
	ands	r0, r0, #1
	bne	.LBB39_292
	bl	__cpsie
.LBB39_292:
	adds	r0, r4, r5
	str	r0, [sp, #68]
	adc.w	r0, r11, r6
	str	r0, [sp, #64]
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	movw	r0, :lower16:.L_MergedGlobals
	movt	r0, :upper16:.L_MergedGlobals
	ldr.w	r11, [r0, #24]
	ldr	r5, [r0, #28]
	dmb	sy
	cmp	r11, r5
	bne	.LBB39_295
	ands	r0, r4, #1
	beq	.LBB39_296
.LBB39_294:
	cmp	r11, r5
	bne	.LBB39_297
	b	.LBB39_374
.LBB39_295:
	movw	r1, :lower16:.L_MergedGlobals
	movt	r1, :upper16:.L_MergedGlobals
	add.w	r0, r1, #24
	add	r0, r11
	ldrb	r0, [r0, #8]
	str	r0, [sp, #56]
	movs	r0, #1
	dmb	sy
	bic.w	r0, r0, r11
	str	r0, [r1, #24]
	ands	r0, r4, #1
	bne	.LBB39_294
.LBB39_296:
	bl	__cpsie
	cmp	r11, r5
	beq.w	.LBB39_374
.LBB39_297:
	bl	__primask_r
	str	r0, [sp, #60]
	bl	__cpsid
	movw	r0, :lower16:thermostat_eem::app::__rtic_internal_TQ_Mono::h16029fb9efc906be
	movw	r3, :lower16:.L_MergedGlobals
	movt	r0, :upper16:thermostat_eem::app::__rtic_internal_TQ_Mono::h16029fb9efc906be
	movt	r3, :upper16:.L_MergedGlobals
	movw	lr, #65535
	ldrh.w	r0, [r0, #72]
	ldr	r2, [r3, #8]
	adds	r1, r2, #1
	str	r1, [r3, #8]
	cmp	r0, lr
	ldrd	r3, r6, [sp, #64]
	beq	.LBB39_300
	add.w	r0, r0, r0, lsl #1
	movw	r5, :lower16:thermostat_eem::app::__rtic_internal_TQ_Mono::h16029fb9efc906be
	movt	r5, :upper16:thermostat_eem::app::__rtic_internal_TQ_Mono::h16029fb9efc906be
	add.w	r1, r5, r0, lsl #3
	ldr.w	r0, [r5, r0, lsl #3]
	ldr	r1, [r1, #4]
	eor.w	r4, r6, r0
	eor.w	r5, r3, r1
	subs	r0, r6, r0
	orr.w	r5, r5, r4
	sbc.w	r0, r3, r1
	cbz	r5, .LBB39_301
	cmp.w	r0, #-1
	bgt	.LBB39_301
.LBB39_300:
	movw	r0, #60676
	mov.w	r1, #67108864
	movt	r0, #57344
	str	r1, [r0]
.LBB39_301:
	movw	r1, :lower16:thermostat_eem::app::__rtic_internal_TQ_Mono::h16029fb9efc906be
	ldr	r0, [sp, #56]
	movt	r1, :upper16:thermostat_eem::app::__rtic_internal_TQ_Mono::h16029fb9efc906be
	ldrh.w	r4, [r1, #74]
	add.w	r5, r4, r4, lsl #1
	add.w	r11, r1, r5, lsl #3
	str.w	r6, [r1, r5, lsl #3]
	strd	r3, r2, [r11, #4]
	ldrh.w	r2, [r1, #72]
	ldrh.w	r3, [r11, #16]
	strb.w	r0, [r11, #12]
	movs	r0, #1
	cmp	r2, lr
	strb.w	r0, [r11, #13]
	strh.w	r3, [r1, #74]
	beq	.LBB39_307
	add.w	r3, r2, r2, lsl #1
	str	r4, [sp, #68]
	ldr.w	r12, [r11, #4]
	add.w	r6, r1, r3, lsl #3
	ldr.w	r0, [r1, r3, lsl #3]
	ldr	r4, [r6, #4]
	ldr.w	r6, [r1, r5, lsl #3]
	eor.w	lr, r0, r6
	eor.w	r5, r4, r12
	orr.w	r5, r5, lr
	subs	r0, r0, r6
	movw	lr, #65535
	sbc.w	r0, r4, r12
	cbz	r5, .LBB39_308
	cmp.w	r0, #-1
	bgt	.LBB39_308
.LBB39_304:
	add.w	r0, r2, r2, lsl #1
	add.w	r5, r1, r0, lsl #3
	ldrh	r2, [r5, #16]
	cmp	r2, lr
	beq.w	.LBB39_347
	add.w	r0, r2, r2, lsl #1
	add.w	r4, r1, r0, lsl #3
	ldr.w	r0, [r1, r0, lsl #3]
	eor.w	r1, r0, r6
	subs	r0, r0, r6
	ldr	r4, [r4, #4]
	eor.w	r3, r4, r12
	sbc.w	r4, r4, r12
	orrs	r1, r3
	cmp	r1, #0
	beq.w	.LBB39_348
	movw	r1, :lower16:thermostat_eem::app::__rtic_internal_TQ_Mono::h16029fb9efc906be
	cmp	r4, #0
	movt	r1, :upper16:thermostat_eem::app::__rtic_internal_TQ_Mono::h16029fb9efc906be
	bmi	.LBB39_304
	b	.LBB39_348
.LBB39_307:
	strh.w	lr, [r11, #16]
	adds	r1, #72
	b	.LBB39_350
.LBB39_308:
	strh.w	r2, [r11, #16]
	adds	r1, #72
	b	.LBB39_349
.LBB39_309:
	mov	r1, r5
.LBB39_310:
	cmp	r6, #120
	blo	.LBB39_313
	ldr	r0, [sp, #64]
	sub.w	r6, r1, #160
	add.w	r5, r5, r0, lsl #3
.LBB39_312:
	strb	r4, [r6, #160]!
	adds	r0, r6, #1
	movs	r1, #39
	movs	r4, #3
	bl	__aeabi_memclr
	add.w	r0, r6, #41
	movs	r1, #39
	strb.w	r4, [r6, #40]
	bl	__aeabi_memclr
	add.w	r0, r6, #81
	movs	r1, #39
	strb.w	r4, [r6, #80]
	bl	__aeabi_memclr
	add.w	r0, r6, #121
	movs	r1, #39
	strb.w	r4, [r6, #120]
	bl	__aeabi_memclr
	add.w	r0, r6, #160
	movs	r4, #3
	cmp	r5, r0
	bne	.LBB39_312
.LBB39_313:
	ldrd	r0, r1, [r11, #52]
	bl	smoltcp::iface::interface::InterfaceInner::check_ip_addrs::h8be6ea0748102f65
	dmb	sy
	movs	r0, #0
	strb.w	r0, [r11, #288]
	dmb	sy
	movw	r4, :lower16:.L_MergedGlobals
	movt	r4, :upper16:.L_MergedGlobals
.LBB39_314:
	bl	__primask_r
	mov	r11, r0
	bl	__cpsid
	ldrd	r0, r1, [r4, #64]
	eor	r0, r0, #1
	orrs	r0, r1
	bne	.LBB39_317
	movw	r0, #57360
	movt	r0, #57344
	ldr	r0, [r0]
	lsls	r0, r0, #15
	ldrd	r5, r6, [r4, #72]
	bpl	.LBB39_318
	adds	r5, #1
	adc	r6, r6, #0
	strd	r5, r6, [r4, #72]
	b	.LBB39_318
.LBB39_317:
	movs	r5, #0
	movs	r6, #0
.LBB39_318:
	ands	r0, r11, #1
	bne	.LBB39_320
	bl	__cpsie
.LBB39_320:
	adds.w	r0, r5, #1000
	str	r0, [sp, #68]
	adc	r0, r6, #0
	str	r0, [sp, #64]
	bl	__primask_r
	mov	r6, r0
	bl	__cpsid
	ldr.w	r11, [r4, #36]
	ldr	r5, [r4, #40]
	dmb	sy
	cmp	r11, r5
	bne	.LBB39_325
	ands	r0, r6, #1
	beq	.LBB39_326
.LBB39_322:
	cmp	r11, r5
	bne	.LBB39_327
	b	.LBB39_369
	.p2align	2
.LCPI39_16:
	.long	0x447a0000
	.p2align	2
.LCPI39_17:
	.long	0x5f7fffff
	.p2align	1
.LBB39_325:
	movw	r1, :lower16:.L_MergedGlobals
	movt	r1, :upper16:.L_MergedGlobals
	add.w	r0, r1, #36
	add	r0, r11
	ldrb	r0, [r0, #8]
	str	r0, [sp, #56]
	movs	r0, #1
	dmb	sy
	bic.w	r0, r0, r11
	str	r0, [r1, #36]
	ands	r0, r6, #1
	bne	.LBB39_322
.LBB39_326:
	bl	__cpsie
	cmp	r11, r5
	beq.w	.LBB39_369
.LBB39_327:
	bl	__primask_r
	str	r0, [sp, #60]
	bl	__cpsid
	movw	r0, :lower16:thermostat_eem::app::__rtic_internal_TQ_Mono::h16029fb9efc906be
	movw	r3, :lower16:.L_MergedGlobals
	movt	r0, :upper16:thermostat_eem::app::__rtic_internal_TQ_Mono::h16029fb9efc906be
	movt	r3, :upper16:.L_MergedGlobals
	movw	lr, #65535
	ldrh.w	r0, [r0, #72]
	ldr	r2, [r3, #8]
	adds	r1, r2, #1
	str	r1, [r3, #8]
	cmp	r0, lr
	ldrd	r3, r4, [sp, #64]
	beq	.LBB39_330
	add.w	r0, r0, r0, lsl #1
	movw	r6, :lower16:thermostat_eem::app::__rtic_internal_TQ_Mono::h16029fb9efc906be
	movt	r6, :upper16:thermostat_eem::app::__rtic_internal_TQ_Mono::h16029fb9efc906be
	add.w	r1, r6, r0, lsl #3
	ldr.w	r0, [r6, r0, lsl #3]
	ldr	r1, [r1, #4]
	eor.w	r6, r4, r0
	eor.w	r5, r3, r1
	subs	r0, r4, r0
	orr.w	r6, r6, r5
	sbc.w	r0, r3, r1
	cbz	r6, .LBB39_331
	cmp.w	r0, #-1
	bgt	.LBB39_331
.LBB39_330:
	movw	r0, #60676
	mov.w	r1, #67108864
	movt	r0, #57344
	str	r1, [r0]
.LBB39_331:
	movw	r1, :lower16:thermostat_eem::app::__rtic_internal_TQ_Mono::h16029fb9efc906be
	ldr	r0, [sp, #56]
	movt	r1, :upper16:thermostat_eem::app::__rtic_internal_TQ_Mono::h16029fb9efc906be
	ldrh.w	r6, [r1, #74]
	add.w	r5, r6, r6, lsl #1
	add.w	r11, r1, r5, lsl #3
	str.w	r4, [r1, r5, lsl #3]
	strd	r3, r2, [r11, #4]
	ldrh.w	r2, [r1, #72]
	ldrh.w	r3, [r11, #16]
	strb.w	r0, [r11, #12]
	movs	r0, #2
	cmp	r2, lr
	strb.w	r0, [r11, #13]
	strh.w	r3, [r1, #74]
	beq	.LBB39_337
	add.w	r3, r2, r2, lsl #1
	str	r6, [sp, #68]
	ldr.w	r12, [r11, #4]
	add.w	r6, r1, r3, lsl #3
	ldr.w	r0, [r1, r3, lsl #3]
	ldr	r4, [r6, #4]
	ldr.w	r6, [r1, r5, lsl #3]
	eor.w	lr, r0, r6
	eor.w	r5, r4, r12
	orr.w	r5, r5, lr
	subs	r0, r0, r6
	movw	lr, #65535
	sbc.w	r0, r4, r12
	cbz	r5, .LBB39_338
	cmp.w	r0, #-1
	bgt	.LBB39_338
.LBB39_334:
	add.w	r0, r2, r2, lsl #1
	add.w	r5, r1, r0, lsl #3
	ldrh	r2, [r5, #16]
	cmp	r2, lr
	beq	.LBB39_339
	add.w	r0, r2, r2, lsl #1
	add.w	r4, r1, r0, lsl #3
	ldr.w	r0, [r1, r0, lsl #3]
	eor.w	r1, r0, r6
	subs	r0, r0, r6
	ldr	r4, [r4, #4]
	eor.w	r3, r4, r12
	sbc.w	r4, r4, r12
	orrs	r1, r3
	cbz	r1, .LBB39_340
	movw	r1, :lower16:thermostat_eem::app::__rtic_internal_TQ_Mono::h16029fb9efc906be
	cmp	r4, #0
	movt	r1, :upper16:thermostat_eem::app::__rtic_internal_TQ_Mono::h16029fb9efc906be
	bmi	.LBB39_334
	b	.LBB39_340
.LBB39_337:
	strh.w	lr, [r11, #16]
	adds	r1, #72
	ldr	r0, [sp, #60]
	b	.LBB39_342
.LBB39_338:
	strh.w	r2, [r11, #16]
	adds	r1, #72
	b	.LBB39_341
.LBB39_339:
	movw	r2, #65535
.LBB39_340:
	add.w	r1, r5, #16
	strh.w	r2, [r11, #16]
.LBB39_341:
	ldr	r0, [sp, #60]
	ldr	r6, [sp, #68]
.LBB39_342:
	ands	r0, r0, #1
	strh	r6, [r1]
.LBB39_343:
	movw	r4, :lower16:.L_MergedGlobals
	movw	r11, #0
	movt	r4, :upper16:.L_MergedGlobals
	movt	r11, #65520
	bne	.LBB39_346
	bl	__cpsie
.LBB39_345:
	movw	lr, #65535
.LBB39_346:
	ldr	r0, [r4, #48]
	ldr	r1, [r4, #52]
	dmb	sy
	cmp	r0, r1
	bne.w	.LBB39_3
	b.w	.LBB39_1
.LBB39_347:
	movw	r2, #65535
.LBB39_348:
	add.w	r1, r5, #16
	strh.w	r2, [r11, #16]
.LBB39_349:
	ldr	r4, [sp, #68]
.LBB39_350:
	ldr	r0, [sp, #60]
	strh	r4, [r1]
	ands	r0, r0, #1
	b	.LBB39_343
.LBB39_351:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.187
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.373
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.187
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.373
.LBB39_352:
	add	r2, sp, #660
	movs	r1, #43
	str	r6, [sp]
	bl	core::result::unwrap_failed::he67be68ddf63c991
	.inst.n	0xdefe
.LBB39_353:
	movw	r2, :lower16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.25
	movt	r2, :upper16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.25
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB39_354:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.161
	movw	r2, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.156
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.161
	movt	r2, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.156
	b	.LBB39_357
.LBB39_355:
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.153
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.153
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB39_356:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.161
	movw	r2, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.170
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.161
	movt	r2, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.170
.LBB39_357:
	movs	r1, #51
	bl	core::option::expect_failed::h22026eb39ea9589c
	.inst.n	0xdefe
.LBB39_358:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.287
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.376
	str	r4, [sp, #660]
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.287
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.376
	b	.LBB39_352
.LBB39_359:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.283
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.283
	b	.LBB39_363
.LBB39_360:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.284
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.284
	b	.LBB39_363
.LBB39_361:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.285
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.285
	b	.LBB39_363
.LBB39_362:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.286
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.286
.LBB39_363:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.375
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.375
	b	.LBB39_352
.LBB39_364:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.145
	str	r0, [sp, #660]
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.145
	movs	r0, #0
	str	r0, [sp, #664]
	b	.LBB39_368
.LBB39_365:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.144
	str	r0, [sp, #660]
	movs	r0, #0
	str	r0, [sp, #664]
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.144
	b	.LBB39_368
.LBB39_366:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.143
	str	r0, [sp, #660]
	movs	r0, #0
	str	r0, [sp, #664]
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.143
	b	.LBB39_368
.LBB39_367:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.142
	str	r0, [sp, #660]
	movs	r0, #0
	str	r0, [sp, #664]
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.142
.LBB39_368:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.364
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.364
	b	.LBB39_352
.LBB39_369:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.289
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.289
.LBB39_370:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.369
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.369
	b	.LBB39_352
.LBB39_371:
	cmp	r0, #0
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.7
	it	ne
	movne	r0, #1
	strb.w	r0, [sp, #660]
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.5
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.360
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.7
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.5
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.360
	add	r2, sp, #660
	movs	r1, #12
	str	r6, [sp]
	bl	core::result::unwrap_failed::he67be68ddf63c991
	.inst.n	0xdefe
.LBB39_372:
	cmp	r1, #4
	bne	.LBB39_375
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.156
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.157
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.156
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.157
	movs	r1, #39
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB39_374:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.288
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.288
	b	.LBB39_370
.LBB39_375:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.154
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.155
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.154
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.155
	movs	r1, #41
	bl	core::option::expect_failed::h22026eb39ea9589c
	.inst.n	0xdefe
.Lfunc_end39:
	.size	DCMI, .Lfunc_end39-DCMI
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text.SysTick,"ax",%progbits
	.globl	SysTick
	.p2align	2
	.type	SysTick,%function
	.code	16
	.thumb_func
SysTick:
.Lfunc_begin40:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#4
	sub	sp, #4
	movw	r5, #57360
	movw	r6, :lower16:thermostat_eem::app::__rtic_internal_TQ_Mono::h16029fb9efc906be
	movw	r10, :lower16:.L_MergedGlobals
	movt	r5, #57344
	movt	r6, :upper16:thermostat_eem::app::__rtic_internal_TQ_Mono::h16029fb9efc906be
	movt	r10, :upper16:.L_MergedGlobals
	b	.LBB40_2
.LBB40_1:
	mov.w	r0, #16384
	str.w	r0, [r5, #504]
.LBB40_2:
	bl	__primask_r
	mov	r8, r0
	bl	__cpsid
	ldrh.w	r0, [r6, #72]
	movw	r1, #65535
	cmp	r0, r1
	beq	.LBB40_17
	add.w	r2, r0, r0, lsl #1
	mov	r11, r6
	mov	r9, r5
	add.w	r1, r6, r2, lsl #3
	ldr.w	r12, [r6, r2, lsl #3]
	ldr.w	lr, [r1, #4]
	ldr	r2, [r5]
	lsls	r2, r2, #15
	ldrd	r6, r5, [r10, #72]
	bpl	.LBB40_5
	adds	r6, #1
	adc	r5, r5, #0
	strd	r6, r5, [r10, #72]
.LBB40_5:
	eor.w	r2, r12, r6
	eor.w	r4, lr, r5
	orr.w	r3, r2, r4
	subs.w	r4, r12, r6
	sbc.w	r2, lr, r5
	cbz	r3, .LBB40_12
	subs.w	r3, r4, #-1
	mvn	r3, #-2147483648
	sbcs.w	r3, r2, r3
	bhs	.LBB40_12
	ldr.w	r3, [r9]
	lsls	r3, r3, #15
	bpl	.LBB40_9
	adds	r6, #1
	adc	r5, r5, #0
	subs.w	r4, r12, r6
	sbc.w	r2, lr, r5
	strd	r6, r5, [r10, #72]
.LBB40_9:
	mvn	r3, #1
	subs	r3, r3, r4
	mvn	r3, #-2147483648
	sbcs.w	r2, r3, r2
	blo	.LBB40_12
	eor.w	r2, r12, r6
	eor.w	r3, lr, r5
	orrs	r2, r3
	beq	.LBB40_12
	mov.w	r10, #0
	movs	r4, #3
	mov	r5, r9
	mov	r6, r11
	ands	r0, r8, #1
	beq	.LBB40_13
	b	.LBB40_14
.LBB40_12:
	ldrh	r2, [r1, #16]
	ldrb.w	r10, [r1, #12]
	strh.w	r2, [r11, #72]
	ldrh.w	r2, [r11, #74]
	ldrb	r4, [r1, #13]
	mov	r6, r11
	strh	r2, [r1, #16]
	mov	r5, r9
	strh.w	r0, [r11, #74]
	ands	r0, r8, #1
	bne	.LBB40_14
.LBB40_13:
	bl	__cpsie
.LBB40_14:
.LCPI40_0:
	tbb	[pc, r4]
.LJTI40_0:
	.byte	(.LBB40_16-(.LCPI40_0+4))/2
	.byte	(.LBB40_18-(.LCPI40_0+4))/2
	.byte	(.LBB40_19-(.LCPI40_0+4))/2
	.byte	(.LBB40_22-(.LCPI40_0+4))/2
	.p2align	1
.LBB40_16:
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	movw	r2, :lower16:.L_MergedGlobals
	movs	r3, #1
	b	.LBB40_20
.LBB40_17:
	mov.w	r10, #0
	movs	r4, #3
	ands	r0, r8, #1
	beq	.LBB40_13
	b	.LBB40_14
.LBB40_18:
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	movw	r2, :lower16:.L_MergedGlobals
	movs	r3, #2
	b	.LBB40_20
.LBB40_19:
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	movw	r2, :lower16:.L_MergedGlobals
	movs	r3, #0
.LBB40_20:
	movt	r2, :upper16:.L_MergedGlobals
	ldr	r0, [r2, #52]
	add.w	r1, r2, r0, lsl #1
	strb.w	r3, [r1, #56]
	adds	r0, #1
	strb.w	r10, [r1, #57]
	mov	r10, r2
	dmb	sy
	lsls	r1, r4, #31
	and	r0, r0, #3
	str	r0, [r2, #52]
	bne.w	.LBB40_1
	bl	__cpsie
	b	.LBB40_1
.LBB40_22:
	bl	__primask_r
	and	r4, r0, #1
	bl	__cpsid
	movw	r2, :lower16:.L_MergedGlobals
	movt	r2, :upper16:.L_MergedGlobals
	ldrd	r0, r1, [r2, #64]
	orrs	r0, r1
	it	ne
	addne.w	r0, r2, #72
	beq	.LBB40_25
	ldr	r1, [r5]
	lsls	r1, r1, #15
	bpl	.LBB40_25
	ldrd	r1, r2, [r0]
	adds	r1, #1
	adc	r2, r2, #0
	strd	r1, r2, [r0]
.LBB40_25:
	cbnz	r4, .LBB40_27
	add	sp, #4
	pop.w	{r8, r9, r10, r11}
	pop.w	{r4, r5, r6, r7, lr}
	b	__cpsie
.LBB40_27:
	add	sp, #4
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.Lfunc_end40:
	.size	SysTick, .Lfunc_end40-SysTick
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text.main,"ax",%progbits
	.globl	main
	.p2align	1
	.type	main,%function
	.code	16
	.thumb_func
main:
.Lfunc_begin41:
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	.pad	#8
	sub	sp, #8
	bl	cortex_m::interrupt::disable::hb29bc2bb0325fad7
	bl	core::iter::traits::iterator::Iterator::for_each::h79579232ccdef713
	bl	core::iter::traits::iterator::Iterator::for_each::hbff1aca20846a807
	bl	core::iter::traits::iterator::Iterator::for_each::hdd4a86373ad0bc79
	movw	r0, #58429
	movw	r2, #57360
	movt	r0, #57344
	movt	r2, #57344
	movs	r1, #240
	mov.w	r3, #16384
	strb	r1, [r0, #17]
	movs	r4, #0
	str.w	r3, [r2, #248]
	strb	r1, [r0]
	mov.w	r0, #536870912
	str.w	r0, [r2, #244]
	movs	r0, #224
	strb.w	r0, [r2, #1048]
	mov.w	r0, #256
	str.w	r0, [r2, #244]
	movw	r0, #60707
	movt	r0, #57344
	strb	r4, [r0]
	ldr	r0, [r2]
	orr	r0, r0, #2
	str	r0, [r2]
	bl	thermostat_eem::app::rtic_ext::main::__rtic_init_resources::h9d4547472bd32894
	subs	r0, r7, #1
	strb	r4, [r7, #-1]
	bl	thermostat_eem::app::idle::h83cd5df0c2e22e91
	.inst.n	0xdefe
.Lfunc_end41:
	.size	main, .Lfunc_end41-main
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN14thermostat_eem3app8rtic_ext4main21__rtic_init_resources17h9d4547472bd32894E,"ax",%progbits
	.p2align	1
	.type	thermostat_eem::app::rtic_ext::main::__rtic_init_resources::h9d4547472bd32894,%function
	.code	16
	.thumb_func
thermostat_eem::app::rtic_ext::main::__rtic_init_resources::h9d4547472bd32894:
.Lfunc_begin42:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#7808
	sub.w	sp, sp, #7808
	.pad	#28
	sub	sp, #28
	movw	r1, :lower16:.L_MergedGlobals
	movw	r2, #57360
	movt	r1, :upper16:.L_MergedGlobals
	movt	r2, #57344
	movs	r0, #1
	add.w	lr, sp, #24
	strb	r0, [r1, #5]
	add.w	r10, lr, #4192
	ldr	r0, [r2]
	bic	r0, r0, #1
	str	r0, [r2]
	ldr	r0, [r2]
	orr	r0, r0, #4
	str	r0, [r2]
	movw	r0, #6783
	movt	r0, #6
	str	r0, [r2, #4]
	add.w	r0, sp, #1136
	bl	thermostat_eem::hardware::setup::setup::h69b53dfc2efddca9
	ldrb.w	r0, [sp, #1425]
	add.w	lr, sp, #8
	ldrb.w	r11, [sp, #1424]
	str	r0, [sp, #16]
	ldrh.w	r9, [sp, #1430]
	movw	r8, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.275
	add.w	r0, lr, #6112
	movt	r8, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.275
	ldr.w	r4, [sp, #1426]
	str.w	r8, [r10, #1904]
	movs	r6, #9
	str.w	r6, [r10, #1908]
	movs	r5, #0
	str.w	r5, [r10, #1912]
	bl	no_std_net::parser::Parser::read_ipv4_addr::hbfba6d08fe551d9a
	lsls	r2, r0, #31
	str.w	r11, [sp, #20]
	strd	r9, r4, [sp, #68]
	beq	.LBB42_3
	ldr.w	r2, [r10, #1908]
	ldr.w	r3, [r10, #1912]
	cmp	r3, r2
	bne	.LBB42_3
	lsrs	r0, r0, #8
	orr.w	r0, r0, r1, lsl #24
	str	r0, [sp, #76]
	movs	r0, #0
	str	r0, [sp, #64]
	b	.LBB42_18
.LBB42_3:
	add.w	lr, sp, #16
	addw	r0, sp, #2120
	add.w	r1, lr, #5440
	movs	r2, #8
	str.w	r8, [sp, #2120]
	str.w	r6, [sp, #2124]
	str.w	r5, [sp, #2128]
	str.w	r5, [r10, #1240]
	str.w	r5, [r10, #1244]
	str.w	r5, [r10, #1248]
	str.w	r5, [r10, #1252]
	bl	no_std_net::parser::Parser::read_ipv6_addr_impl::read_groups::hd512b6e9aa5cf889
	cmp	r0, #8
	bne	.LBB42_5
	add.w	lr, sp, #4096
	add.w	r0, sp, #4096
	ldrh.w	r6, [lr, #1364]
	add.w	lr, sp, #4096
	ldrh.w	r5, [r0, #1370]
	add.w	r0, sp, #4096
	ldrh.w	r9, [lr, #1360]
	add.w	lr, sp, #4096
	ldrh.w	r4, [r0, #1372]
	add.w	r0, sp, #4096
	ldrh.w	r3, [lr, #1366]
	add.w	lr, sp, #4096
	ldrh.w	r1, [r0, #1374]
	lsrs	r0, r5, #8
	str	r0, [sp, #28]
	add.w	r0, sp, #4096
	ldrh.w	r2, [lr, #1368]
	lsr.w	lr, r6, #8
	ldrh.w	r12, [r0, #1362]
	b	.LBB42_16
.LBB42_5:
	mov	r5, r0
	lsls	r0, r1, #31
	bne.w	.LBB42_207
	ldr.w	r1, [sp, #2124]
	ldr.w	r0, [sp, #2128]
	cmp	r0, r1
	beq.w	.LBB42_207
	bhs.w	.LBB42_199
	ldr.w	r2, [sp, #2120]
	ldrb	r3, [r2, r0]
	cmp	r3, #58
	bne.w	.LBB42_207
	adds	r3, r0, #1
	cmp	r3, r1
	beq.w	.LBB42_207
	bhs.w	.LBB42_200
	ldrb	r1, [r2, r3]
	cmp	r1, #58
	bne.w	.LBB42_207
	adds	r0, #2
	str.w	r0, [sp, #2128]
	movs	r0, #0
	add.w	lr, sp, #24
	str.w	r0, [r10, #2432]
	rsb.w	r2, r5, #7
	str.w	r0, [r10, #2436]
	add.w	r1, lr, #6624
	str.w	r0, [r10, #2440]
	str.w	r0, [r10, #2444]
	addw	r0, sp, #2120
	bl	no_std_net::parser::Parser::read_ipv6_addr_impl::read_groups::hd512b6e9aa5cf889
	cmp	r5, #9
	bhs.w	.LBB42_221
	mov	r6, r0
	cmp	r0, #9
	bhs.w	.LBB42_222
	adds	r0, r6, r5
	cmp	r0, #9
	bhs.w	.LBB42_223
	add.w	lr, sp, #8
	movs	r0, #16
	add.w	r9, lr, #7232
	sub.w	r1, r0, r5, lsl #1
	add.w	r0, r9, r5, lsl #1
	lsl.w	r8, r5, #1
	bl	__aeabi_memclr
	add.w	lr, sp, #16
	mov	r0, r9
	add.w	r1, lr, #5440
	mov	r2, r8
	bl	__aeabi_memcpy4
	rsb.w	r0, r6, #8
	add.w	lr, sp, #24
	lsls	r2, r6, #1
	add.w	r1, lr, #6624
	add.w	r0, r9, r0, lsl #1
	bl	__aeabi_memcpy
	add.w	lr, sp, #4096
	add.w	r0, sp, #4096
	ldrh.w	r6, [lr, #3148]
	add.w	lr, sp, #4096
	ldrh.w	r5, [r0, #3154]
	add.w	r0, sp, #4096
	ldrh.w	r9, [lr, #3144]
	add.w	lr, sp, #4096
	ldrh.w	r4, [r0, #3156]
	add.w	r0, sp, #4096
	ldrh.w	r3, [lr, #3150]
	add.w	lr, sp, #4096
	ldrh.w	r1, [r0, #3158]
	lsrs	r0, r5, #8
	str	r0, [sp, #28]
	add.w	r0, sp, #4096
	ldrh.w	r2, [lr, #3152]
	lsr.w	lr, r6, #8
	ldrh.w	r12, [r0, #3146]
.LBB42_16:
	lsr.w	r8, r3, #8
	lsr.w	r11, r2, #8
	strd	r3, r2, [sp, #56]
	ldr.w	r2, [sp, #2124]
	ldr.w	r3, [sp, #2128]
	lsrs	r0, r4, #8
	cmp	r3, r2
	str	r0, [sp, #24]
	lsr.w	r0, r1, #8
	strd	r11, r8, [sp, #32]
	strd	r0, r1, [sp, #4]
	strd	lr, r4, [sp, #40]
	strd	r5, r6, [sp, #48]
	bne.w	.LBB42_207
	uxtb.w	r2, r9
	rev.w	r1, r12
	orr.w	r1, r1, r2, lsl #8
	orr.w	r0, r1, r9, lsr #8
	str	r0, [sp, #76]
	movs	r0, #1
	str	r0, [sp, #64]
.LBB42_18:
	bl	__primask_r
	and	r9, r0, #1
	bl	__cpsid
	movw	r6, :lower16:thermostat_eem::net::NetworkUsers<S,T>::new::{{closure}}::VAR::hde997f617c25c583
	movs	r4, #0
	movt	r6, :upper16:thermostat_eem::net::NetworkUsers<S,T>::new::{{closure}}::VAR::hde997f617c25c583
	ldrd	r0, r1, [r6]
	eor	r0, r0, #1
	orrs.w	r8, r0, r1
	bne	.LBB42_22
	cmp.w	r9, #0
	str	r4, [sp, #12]
	bne	.LBB42_23
.LBB42_20:
	bl	__cpsie
	cmp.w	r8, #0
	ldr	r4, [sp, #72]
	bne	.LBB42_24
.LBB42_21:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.193
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.193
	movs	r1, #43
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB42_22:
	add.w	r5, r6, #8
	add.w	r1, sp, #1136
	mov.w	r2, #288
	mov	r0, r5
	bl	__aeabi_memcpy8
	movs	r0, #1
	strb.w	r4, [r6, #296]
	strd	r0, r4, [r6]
	mov	r4, r5
	cmp.w	r9, #0
	str	r4, [sp, #12]
	beq	.LBB42_20
.LBB42_23:
	cmp.w	r8, #0
	ldr	r4, [sp, #72]
	beq	.LBB42_21
.LBB42_24:
	movs	r0, #14
	movw	r5, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.274
	str.w	r0, [r10, #1244]
	movs	r1, #132
	mov	r0, r10
	movt	r5, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.274
	str.w	r5, [r10, #1240]
	ldr.w	r11, [sp, #68]
	strh.w	r11, [sp, #2124]
	str.w	r4, [sp, #2120]
	bl	__aeabi_memclr4
	add.w	lr, sp, #16
	addw	r1, sp, #2120
	add.w	r0, lr, #5440
	str.w	r0, [r10, #2432]
	movw	r0, :lower16:<smoltcp::wire::ethernet::Address as core::fmt::Display>::fmt::h8290af5f199f6c5a
	add.w	lr, sp, #24
	movt	r0, :upper16:<smoltcp::wire::ethernet::Address as core::fmt::Display>::fmt::h8290af5f199f6c5a
	str.w	r0, [r10, #2444]
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.201
	str.w	r1, [r10, #2440]
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.201
	add.w	r1, lr, #6624
	add.w	lr, sp, #8
	str.w	r0, [r10, #3024]
	movs	r0, #2
	str.w	r1, [r10, #3040]
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.379
	add.w	r9, lr, #6112
	add.w	lr, sp, #8
	movw	r8, :lower16:<&T as core::fmt::Display>::fmt::h46598aa20843e58b
	str.w	r0, [r10, #3028]
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.379
	str.w	r0, [r10, #3044]
	add.w	r2, lr, #7232
	mov	r0, r9
	movt	r8, :upper16:<&T as core::fmt::Display>::fmt::h46598aa20843e58b
	str.w	r8, [r10, #2436]
	movs	r6, #0
	str.w	r10, [r10, #1904]
	str.w	r6, [r10, #3032]
	str.w	r6, [r10, #3036]
	bl	core::fmt::write::h5d3fbef16e428eed
	cmp	r0, #0
	bne.w	.LBB42_208
	movs	r0, #14
	str.w	r0, [sp, #2124]
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.194
	str.w	r5, [sp, #2120]
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.194
	str.w	r0, [r10, #1240]
	movs	r0, #8
	add.w	lr, sp, #4096
	addw	r5, sp, #2916
	str.w	r0, [r10, #1244]
	movs	r1, #68
	mov	r0, r5
	strh.w	r11, [lr, #2028]
	str.w	r4, [r10, #1904]
	bl	__aeabi_memclr4
	add.w	r1, r10, #2432
	addw	r0, sp, #2120
	add.w	lr, sp, #16
	str.w	r8, [r10, #2452]
	stm.w	r1, {r0, r8, r9}
	movw	r0, :lower16:<smoltcp::wire::ethernet::Address as core::fmt::Display>::fmt::h8290af5f199f6c5a
	str.w	r5, [r10, #196]
	movt	r0, :upper16:<smoltcp::wire::ethernet::Address as core::fmt::Display>::fmt::h8290af5f199f6c5a
	str.w	r0, [r10, #2444]
	add.w	r0, lr, #5440
	str.w	r0, [r10, #2448]
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.198
	add.w	lr, sp, #24
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.198
	add.w	r1, lr, #6624
	add.w	lr, sp, #28
	str.w	r0, [r10, #3024]
	movs	r0, #3
	str.w	r1, [r10, #3040]
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.380
	add.w	r4, lr, #4384
	add.w	lr, sp, #8
	str.w	r0, [r10, #3028]
	str.w	r0, [r10, #3044]
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.380
	add.w	r2, lr, #7232
	mov	r0, r4
	str.w	r6, [r10, #3032]
	str.w	r6, [r10, #3036]
	bl	core::fmt::write::h5d3fbef16e428eed
	cmp	r0, #0
	bne.w	.LBB42_205
	add.w	lr, sp, #8
	ldr.w	r0, [r10]
	add.w	r8, lr, #4928
	str	r0, [sp, #80]
	movs	r1, #68
	mov	r0, r8
	ldr.w	r6, [sp, #2916]
	bl	__aeabi_memclr4
	cmp	r6, #64
	bhi.w	.LBB42_210
	cmp	r6, #0
	beq.w	.LBB42_44
	subs	r0, r6, #1
	and	r1, r6, #3
	cmp	r0, #3
	add.w	r0, r5, #4
	bhs	.LBB42_30
	movs	r5, #0
	b	.LBB42_40
.LBB42_30:
	subs	r2, r6, #4
	movs	r3, #1
	cmp	r2, #12
	add.w	r3, r3, r2, lsr #2
	and	r12, r3, #3
	bhs	.LBB42_32
	movs	r5, #0
	b	.LBB42_34
.LBB42_32:
	movw	r2, #65532
	movs	r5, #0
	movt	r2, #32767
	add.w	r6, r8, #4
	ands	r3, r2
.LBB42_33:
	ldrb	r2, [r0], #16
	subs	r3, #4
	strb	r2, [r6, r5]
	ldrb	r5, [r0, #-15]
	ldr.w	r2, [r10, #720]
	add.w	r2, r2, #1
	str.w	r2, [r10, #720]
	strb	r5, [r6, r2]
	ldrb	r5, [r0, #-14]
	ldr.w	r2, [r10, #720]
	add.w	r2, r2, #1
	str.w	r2, [r10, #720]
	strb	r5, [r6, r2]
	ldrb	r5, [r0, #-13]
	ldr.w	r2, [r10, #720]
	add.w	r2, r2, #1
	str.w	r2, [r10, #720]
	strb	r5, [r6, r2]
	ldrb	r5, [r0, #-12]
	ldr.w	r2, [r10, #720]
	add.w	r2, r2, #1
	str.w	r2, [r10, #720]
	strb	r5, [r6, r2]
	ldrb	r5, [r0, #-11]
	ldr.w	r2, [r10, #720]
	add.w	r2, r2, #1
	str.w	r2, [r10, #720]
	strb	r5, [r6, r2]
	ldrb	r5, [r0, #-10]
	ldr.w	r2, [r10, #720]
	add.w	r2, r2, #1
	str.w	r2, [r10, #720]
	strb	r5, [r6, r2]
	ldrb	r5, [r0, #-9]
	ldr.w	r2, [r10, #720]
	add.w	r2, r2, #1
	str.w	r2, [r10, #720]
	strb	r5, [r6, r2]
	ldrb	r5, [r0, #-8]
	ldr.w	r2, [r10, #720]
	add.w	r2, r2, #1
	str.w	r2, [r10, #720]
	strb	r5, [r6, r2]
	ldrb	r5, [r0, #-7]
	ldr.w	r2, [r10, #720]
	add.w	r2, r2, #1
	str.w	r2, [r10, #720]
	strb	r5, [r6, r2]
	ldrb	r5, [r0, #-6]
	ldr.w	r2, [r10, #720]
	add.w	r2, r2, #1
	str.w	r2, [r10, #720]
	strb	r5, [r6, r2]
	ldrb	r5, [r0, #-5]
	ldr.w	r2, [r10, #720]
	add.w	r2, r2, #1
	str.w	r2, [r10, #720]
	strb	r5, [r6, r2]
	ldrb	r5, [r0, #-4]
	ldr.w	r2, [r10, #720]
	add.w	r2, r2, #1
	str.w	r2, [r10, #720]
	strb	r5, [r6, r2]
	ldrb	r5, [r0, #-3]
	ldr.w	r2, [r10, #720]
	add.w	r2, r2, #1
	str.w	r2, [r10, #720]
	strb	r5, [r6, r2]
	ldrb	r5, [r0, #-2]
	ldr.w	r2, [r10, #720]
	add.w	r2, r2, #1
	str.w	r2, [r10, #720]
	strb	r5, [r6, r2]
	ldrb	r5, [r0, #-1]
	ldr.w	r2, [r10, #720]
	add.w	r2, r2, #1
	str.w	r2, [r10, #720]
	strb	r5, [r6, r2]
	ldr.w	r2, [r10, #720]
	add.w	r5, r2, #1
	str.w	r5, [r10, #720]
	bne.w	.LBB42_33
.LBB42_34:
	cmp.w	r12, #0
	beq	.LBB42_40
	add.w	r3, r8, #4
	ldrb	r2, [r0]
	ldrb	r6, [r0, #1]
	cmp.w	r12, #1
	strb	r2, [r3, r5]
	ldr.w	r2, [r10, #720]
	add.w	r2, r2, #1
	str.w	r2, [r10, #720]
	strb	r6, [r3, r2]
	ldrb	r6, [r0, #2]
	ldr.w	r2, [r10, #720]
	add.w	r2, r2, #1
	str.w	r2, [r10, #720]
	strb	r6, [r3, r2]
	ldrb	r6, [r0, #3]
	ldr.w	r2, [r10, #720]
	add.w	r2, r2, #1
	str.w	r2, [r10, #720]
	strb	r6, [r3, r2]
	ldr.w	r2, [r10, #720]
	add.w	r5, r2, #1
	str.w	r5, [r10, #720]
	bne	.LBB42_37
	adds	r0, #4
	b	.LBB42_40
.LBB42_37:
	ldrb	r2, [r0, #4]
	cmp.w	r12, #2
	strb	r2, [r3, r5]
	ldrb	r6, [r0, #5]
	ldr.w	r2, [r10, #720]
	add.w	r2, r2, #1
	str.w	r2, [r10, #720]
	strb	r6, [r3, r2]
	ldrb	r6, [r0, #6]
	ldr.w	r2, [r10, #720]
	add.w	r2, r2, #1
	str.w	r2, [r10, #720]
	strb	r6, [r3, r2]
	ldrb	r6, [r0, #7]
	ldr.w	r2, [r10, #720]
	add.w	r2, r2, #1
	str.w	r2, [r10, #720]
	strb	r6, [r3, r2]
	ldr.w	r2, [r10, #720]
	add.w	r5, r2, #1
	str.w	r5, [r10, #720]
	bne	.LBB42_39
	adds	r0, #8
	b	.LBB42_40
.LBB42_39:
	ldrb	r2, [r0, #8]
	strb	r2, [r3, r5]
	ldrb	r6, [r0, #9]
	ldr.w	r2, [r10, #720]
	adds	r2, #1
	str.w	r2, [r10, #720]
	strb	r6, [r3, r2]
	ldrb	r6, [r0, #10]
	ldr.w	r2, [r10, #720]
	adds	r2, #1
	str.w	r2, [r10, #720]
	strb	r6, [r3, r2]
	ldrb	r6, [r0, #11]
	ldr.w	r2, [r10, #720]
	adds	r0, #12
	adds	r2, #1
	str.w	r2, [r10, #720]
	strb	r6, [r3, r2]
	ldr.w	r2, [r10, #720]
	adds	r5, r2, #1
	str.w	r5, [r10, #720]
.LBB42_40:
	cbz	r1, .LBB42_44
	add.w	r2, r8, r5
	ldrb	r3, [r0]
	cmp	r1, #1
	strb	r3, [r2, #4]
	ldr.w	r2, [r10, #720]
	add.w	r2, r2, #1
	str.w	r2, [r10, #720]
	beq	.LBB42_44
	add	r2, r8
	ldrb	r3, [r0, #1]
	cmp	r1, #2
	strb	r3, [r2, #4]
	ldr.w	r2, [r10, #720]
	add.w	r1, r2, #1
	str.w	r1, [r10, #720]
	beq	.LBB42_44
	add	r1, r8
	ldrb	r0, [r0, #2]
	strb	r0, [r1, #4]
	ldr.w	r0, [r10, #720]
	adds	r0, #1
	str.w	r0, [r10, #720]
.LBB42_44:
	addw	r5, sp, #3700
	add.w	lr, sp, #8
	add.w	r1, lr, #4928
	movs	r2, #68
	mov	r0, r5
	bl	__aeabi_memcpy4
	add.w	lr, sp, #16
	movs	r2, #68
	add.w	r8, lr, #5440
	mov	r1, r5
	add.w	r6, r8, #1
	mov	r0, r6
	bl	__aeabi_memcpy
	adds	r5, r4, #1
	movs	r2, #68
	mov	r0, r5
	mov	r1, r6
	bl	__aeabi_memcpy
	add.w	r0, r9, #4
	movs	r2, #68
	mov	r1, r5
	bl	__aeabi_memcpy
	add.w	lr, sp, #8
	mov.w	r1, #524
	add.w	r4, lr, #7232
	add.w	r0, r4, #64
	bl	__aeabi_memclr4
	add.w	r0, r8, #4
	mov.w	r1, #520
	bl	__aeabi_memclr4
	addw	r0, sp, #2120
	mov.w	r2, #524
	mov	r1, r8
	bl	__aeabi_memcpy4
	add	r0, sp, #616
	movs	r2, #72
	mov	r1, r9
	bl	__aeabi_memcpy4
	add.w	lr, sp, #24
	mov.w	r2, #588
	add.w	r0, lr, #6624
	mov	r1, r4
	bl	__aeabi_memcpy4
	add.w	r0, sp, #1592
	mov.w	r1, #516
	bl	__aeabi_memclr4
	addw	r4, sp, #3112
	movs	r1, #132
	mov	r0, r4
	bl	__aeabi_memclr4
	ldr	r1, [sp, #80]
	cmp	r1, #128
	bhi.w	.LBB42_206
	add.w	r8, r10, #4
	cbz	r1, .LBB42_48
	subs	r0, r1, #1
	cmp	r0, #3
	and	r0, r1, #3
	bhs	.LBB42_49
	movs	r3, #0
	mov	r1, r8
	b	.LBB42_59
.LBB42_48:
	movs	r3, #0
	b	.LBB42_64
.LBB42_49:
	subs	r2, r1, #4
	movs	r1, #1
	cmp	r2, #12
	add.w	r1, r1, r2, lsr #2
	and	r12, r1, #3
	bhs	.LBB42_51
	movs	r3, #0
	mov	r1, r8
	b	.LBB42_53
.LBB42_51:
	movw	r2, #65532
	movs	r3, #0
	movt	r2, #32767
	and.w	r5, r1, r2
	adds	r2, r4, #4
	mov	r1, r8
.LBB42_52:
	ldrb	r6, [r1], #16
	subs	r5, #4
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #-15]
	ldr.w	r3, [sp, #3112]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3112]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #-14]
	ldr.w	r3, [sp, #3112]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3112]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #-13]
	ldr.w	r3, [sp, #3112]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3112]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #-12]
	ldr.w	r3, [sp, #3112]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3112]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #-11]
	ldr.w	r3, [sp, #3112]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3112]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #-10]
	ldr.w	r3, [sp, #3112]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3112]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #-9]
	ldr.w	r3, [sp, #3112]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3112]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #-8]
	ldr.w	r3, [sp, #3112]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3112]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #-7]
	ldr.w	r3, [sp, #3112]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3112]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #-6]
	ldr.w	r3, [sp, #3112]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3112]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #-5]
	ldr.w	r3, [sp, #3112]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3112]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #-4]
	ldr.w	r3, [sp, #3112]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3112]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #-3]
	ldr.w	r3, [sp, #3112]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3112]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #-2]
	ldr.w	r3, [sp, #3112]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3112]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #-1]
	ldr.w	r3, [sp, #3112]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3112]
	strb	r6, [r2, r3]
	ldr.w	r6, [sp, #3112]
	add.w	r3, r6, #1
	str.w	r3, [sp, #3112]
	bne.w	.LBB42_52
.LBB42_53:
	cmp.w	r12, #0
	beq	.LBB42_59
	adds	r2, r4, #4
	ldrb	r6, [r1]
	cmp.w	r12, #1
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #1]
	ldr.w	r3, [sp, #3112]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3112]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #2]
	ldr.w	r3, [sp, #3112]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3112]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #3]
	ldr.w	r3, [sp, #3112]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3112]
	strb	r6, [r2, r3]
	ldr.w	r6, [sp, #3112]
	add.w	r3, r6, #1
	str.w	r3, [sp, #3112]
	bne	.LBB42_56
	adds	r1, #4
	b	.LBB42_59
.LBB42_56:
	ldrb	r6, [r1, #4]
	cmp.w	r12, #2
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #5]
	ldr.w	r3, [sp, #3112]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3112]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #6]
	ldr.w	r3, [sp, #3112]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3112]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #7]
	ldr.w	r3, [sp, #3112]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3112]
	strb	r6, [r2, r3]
	ldr.w	r6, [sp, #3112]
	add.w	r3, r6, #1
	str.w	r3, [sp, #3112]
	bne	.LBB42_58
	adds	r1, #8
	b	.LBB42_59
.LBB42_58:
	ldrb	r6, [r1, #8]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #9]
	ldr.w	r3, [sp, #3112]
	adds	r3, #1
	str.w	r3, [sp, #3112]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #10]
	ldr.w	r3, [sp, #3112]
	adds	r3, #1
	str.w	r3, [sp, #3112]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #11]
	ldr.w	r3, [sp, #3112]
	adds	r1, #12
	adds	r3, #1
	str.w	r3, [sp, #3112]
	strb	r6, [r2, r3]
	ldr.w	r6, [sp, #3112]
	adds	r3, r6, #1
	str.w	r3, [sp, #3112]
.LBB42_59:
	cbz	r0, .LBB42_63
	adds	r2, r4, r3
	ldrb	r3, [r1]
	cmp	r0, #1
	strb	r3, [r2, #4]
	ldr.w	r6, [sp, #3112]
	add.w	r3, r6, #1
	str.w	r3, [sp, #3112]
	beq	.LBB42_63
	adds	r2, r4, r3
	ldrb	r3, [r1, #1]
	cmp	r0, #2
	strb	r3, [r2, #4]
	ldr.w	r6, [sp, #3112]
	add.w	r3, r6, #1
	str.w	r3, [sp, #3112]
	beq	.LBB42_63
	adds	r0, r4, r3
	ldrb	r1, [r1, #2]
	strb	r1, [r0, #4]
	ldr.w	r6, [sp, #3112]
	adds	r3, r6, #1
	str.w	r3, [sp, #3112]
.LBB42_63:
	sub.w	r0, r6, #122
	cmn.w	r0, #130
	bls.w	.LBB42_215
.LBB42_64:
	add.w	r9, r4, #4
	movs	r0, #47
	movs	r1, #97
	add.w	lr, sp, #28
	strb.w	r0, [r9, r3]
	add.w	r6, lr, #4384
	ldr.w	r0, [sp, #3112]
	mov.w	r4, #512
	adds	r0, #1
	str.w	r0, [sp, #3112]
	strb.w	r1, [r9, r0]
	movs	r1, #108
	ldr.w	r0, [sp, #3112]
	adds	r0, #1
	str.w	r0, [sp, #3112]
	strb.w	r1, [r9, r0]
	movs	r1, #105
	ldr.w	r0, [sp, #3112]
	adds	r0, #1
	str.w	r0, [sp, #3112]
	strb.w	r1, [r9, r0]
	movs	r1, #118
	ldr.w	r0, [sp, #3112]
	adds	r0, #1
	str.w	r0, [sp, #3112]
	strb.w	r1, [r9, r0]
	movs	r1, #101
	ldr.w	r0, [sp, #3112]
	adds	r0, #1
	str.w	r0, [sp, #3112]
	strb.w	r1, [r9, r0]
	mov.w	r1, #512
	ldr.w	r11, [sp, #3112]
	mov	r0, r6
	add.w	r5, r11, #1
	str.w	r5, [sp, #3112]
	bl	__aeabi_memclr4
	movw	r0, :lower16:core::cmp::Ord::max::hdad388a91279e379
	str.w	r6, [r10, #720]
	movt	r0, :upper16:core::cmp::Ord::max::hdad388a91279e379
	str.w	r4, [r10, #724]
	cmp	r0, #0
	beq.w	.LBB42_201
	add.w	lr, sp, #4096
	movs	r1, #48
	cmp	r5, r0
	mov.w	r0, #256
	strb.w	r1, [lr, #827]
	add.w	lr, sp, #4096
	strh.w	r0, [lr, #825]
	bhi.w	.LBB42_201
	lsrs	r0, r5, #1
	add.w	lr, sp, #28
	cmp	r0, #254
	add.w	r4, lr, #4384
	bhi.w	.LBB42_202
	rsb.w	r6, r11, #508
	mov	r1, r9
	adds	r0, r4, r6
	mov	r2, r5
	bl	__aeabi_memcpy
	cmp	r6, #2
	blo.w	.LBB42_202
	rsb.w	r0, r11, #506
	add.w	lr, sp, #8
	rev	r1, r5
	str.w	r0, [r10, #728]
	lsrs	r1, r1, #16
	strh	r1, [r4, r0]
	add.w	r0, lr, #4928
	movs	r1, #0
	bl	minimq::ser::packet_writer::ReversedPacketWriter::write_variable_length_integer::h1fe59e45f0b7bcb1
	uxtb	r0, r0
	cmp	r0, #11
	bne.w	.LBB42_203
	ldrd	r1, r5, [r10, #724]
	cmp	r1, r5
	blo.w	.LBB42_211
	add.w	lr, sp, #8
	subs	r6, r1, r5
	add.w	r0, lr, #6112
	mov.w	r1, #516
	ldr.w	r4, [r10, #720]
	bl	__aeabi_memclr4
	cmp.w	r6, #512
	bhi.w	.LBB42_212
	cmp	r6, #0
	beq.w	.LBB42_88
	subs	r0, r6, #1
	and	lr, r6, #3
	cmp	r0, #3
	add.w	r0, r4, r5
	bhs	.LBB42_74
	mov.w	r11, #0
	b	.LBB42_84
.LBB42_74:
	subs	r2, r6, #4
	movs	r3, #1
	cmp	r2, #12
	add.w	r3, r3, r2, lsr #2
	and	r12, r3, #3
	bhs	.LBB42_76
	mov.w	r11, #0
	b	.LBB42_78
.LBB42_76:
	movw	r1, #65532
	mov.w	r11, #0
	movt	r1, #32767
	ands	r3, r1
	add	r1, sp, #8
	add.w	r1, r1, #6112
	adds	r6, r1, #4
.LBB42_77:
	ldrb	r2, [r0], #16
	subs	r3, #4
	ldrb	r1, [r0, #-15]
	ldrb	r4, [r0, #-14]
	ldrb	r5, [r0, #-13]
	strb.w	r2, [r6, r11]
	ldr.w	r2, [r10, #1904]
	add.w	r2, r2, #1
	str.w	r2, [r10, #1904]
	strb	r1, [r6, r2]
	ldr.w	r1, [r10, #1904]
	add.w	r1, r1, #1
	str.w	r1, [r10, #1904]
	strb	r4, [r6, r1]
	ldr.w	r1, [r10, #1904]
	add.w	r1, r1, #1
	str.w	r1, [r10, #1904]
	strb	r5, [r6, r1]
	ldr.w	r1, [r10, #1904]
	add.w	r1, r1, #1
	str.w	r1, [r10, #1904]
	ldrb	r2, [r0, #-12]
	strb	r2, [r6, r1]
	ldr.w	r1, [r10, #1904]
	add.w	r1, r1, #1
	str.w	r1, [r10, #1904]
	ldrb	r2, [r0, #-11]
	strb	r2, [r6, r1]
	ldr.w	r1, [r10, #1904]
	add.w	r1, r1, #1
	str.w	r1, [r10, #1904]
	ldrb	r2, [r0, #-10]
	strb	r2, [r6, r1]
	ldr.w	r1, [r10, #1904]
	add.w	r1, r1, #1
	str.w	r1, [r10, #1904]
	ldrb	r2, [r0, #-9]
	strb	r2, [r6, r1]
	ldr.w	r1, [r10, #1904]
	add.w	r1, r1, #1
	str.w	r1, [r10, #1904]
	ldrb	r2, [r0, #-8]
	strb	r2, [r6, r1]
	ldr.w	r1, [r10, #1904]
	add.w	r1, r1, #1
	str.w	r1, [r10, #1904]
	ldrb	r2, [r0, #-7]
	strb	r2, [r6, r1]
	ldr.w	r1, [r10, #1904]
	add.w	r1, r1, #1
	str.w	r1, [r10, #1904]
	ldrb	r2, [r0, #-6]
	strb	r2, [r6, r1]
	ldr.w	r1, [r10, #1904]
	add.w	r1, r1, #1
	str.w	r1, [r10, #1904]
	ldrb	r2, [r0, #-5]
	strb	r2, [r6, r1]
	ldr.w	r1, [r10, #1904]
	add.w	r1, r1, #1
	str.w	r1, [r10, #1904]
	ldrb	r2, [r0, #-4]
	strb	r2, [r6, r1]
	ldr.w	r1, [r10, #1904]
	add.w	r1, r1, #1
	str.w	r1, [r10, #1904]
	ldrb	r2, [r0, #-3]
	strb	r2, [r6, r1]
	ldr.w	r1, [r10, #1904]
	add.w	r1, r1, #1
	str.w	r1, [r10, #1904]
	ldrb	r2, [r0, #-2]
	strb	r2, [r6, r1]
	ldr.w	r1, [r10, #1904]
	add.w	r1, r1, #1
	str.w	r1, [r10, #1904]
	ldrb	r2, [r0, #-1]
	strb	r2, [r6, r1]
	ldr.w	r1, [r10, #1904]
	add.w	r11, r1, #1
	str.w	r11, [r10, #1904]
	bne.w	.LBB42_77
.LBB42_78:
	cmp.w	r12, #0
	beq	.LBB42_84
	add	r1, sp, #8
	ldrb	r2, [r0, #1]
	add.w	r1, r1, #6112
	ldrb	r4, [r0, #2]
	adds	r3, r1, #4
	ldrb	r1, [r0]
	ldrb	r5, [r0, #3]
	cmp.w	r12, #1
	strb.w	r1, [r3, r11]
	ldr.w	r1, [r10, #1904]
	add.w	r1, r1, #1
	str.w	r1, [r10, #1904]
	strb	r2, [r3, r1]
	ldr.w	r1, [r10, #1904]
	add.w	r1, r1, #1
	str.w	r1, [r10, #1904]
	strb	r4, [r3, r1]
	ldr.w	r1, [r10, #1904]
	add.w	r1, r1, #1
	str.w	r1, [r10, #1904]
	strb	r5, [r3, r1]
	ldr.w	r1, [r10, #1904]
	add.w	r11, r1, #1
	str.w	r11, [r10, #1904]
	bne	.LBB42_81
	adds	r0, #4
	b	.LBB42_84
.LBB42_81:
	ldrb	r1, [r0, #4]
	cmp.w	r12, #2
	ldrb	r2, [r0, #5]
	ldrb	r4, [r0, #6]
	ldrb	r5, [r0, #7]
	strb.w	r1, [r3, r11]
	ldr.w	r1, [r10, #1904]
	add.w	r1, r1, #1
	str.w	r1, [r10, #1904]
	strb	r2, [r3, r1]
	ldr.w	r1, [r10, #1904]
	add.w	r1, r1, #1
	str.w	r1, [r10, #1904]
	strb	r4, [r3, r1]
	ldr.w	r1, [r10, #1904]
	add.w	r1, r1, #1
	str.w	r1, [r10, #1904]
	strb	r5, [r3, r1]
	ldr.w	r1, [r10, #1904]
	add.w	r11, r1, #1
	str.w	r11, [r10, #1904]
	bne	.LBB42_83
	adds	r0, #8
	b	.LBB42_84
.LBB42_83:
	ldrb	r1, [r0, #8]
	ldrb	r2, [r0, #9]
	ldrb	r6, [r0, #10]
	ldrb	r5, [r0, #11]
	strb.w	r1, [r3, r11]
	ldr.w	r1, [r10, #1904]
	adds	r0, #12
	adds	r1, #1
	str.w	r1, [r10, #1904]
	strb	r2, [r3, r1]
	ldr.w	r1, [r10, #1904]
	adds	r1, #1
	str.w	r1, [r10, #1904]
	strb	r6, [r3, r1]
	ldr.w	r1, [r10, #1904]
	adds	r1, #1
	str.w	r1, [r10, #1904]
	strb	r5, [r3, r1]
	ldr.w	r1, [r10, #1904]
	add.w	r11, r1, #1
	str.w	r11, [r10, #1904]
.LBB42_84:
	cmp.w	lr, #0
	beq	.LBB42_88
	add	r1, sp, #8
	ldrb	r2, [r0]
	add.w	r1, r1, #6112
	cmp.w	lr, #1
	add	r1, r11
	strb	r2, [r1, #4]
	ldr.w	r1, [r10, #1904]
	add.w	r2, r1, #1
	str.w	r2, [r10, #1904]
	beq	.LBB42_88
	add	r1, sp, #8
	cmp.w	lr, #2
	add.w	r1, r1, #6112
	add	r1, r2
	ldrb	r2, [r0, #1]
	strb	r2, [r1, #4]
	ldr.w	r1, [r10, #1904]
	add.w	r1, r1, #1
	str.w	r1, [r10, #1904]
	beq	.LBB42_88
	add.w	lr, sp, #8
	ldrb	r0, [r0, #2]
	add.w	r2, lr, #6112
	add	r1, r2
	strb	r0, [r1, #4]
	ldr.w	r0, [r10, #1904]
	adds	r0, #1
	str.w	r0, [r10, #1904]
.LBB42_88:
	add.w	lr, sp, #8
	mov.w	r2, #516
	add.w	r0, lr, #7232
	add.w	lr, sp, #8
	adds	r5, r0, #2
	add.w	r1, lr, #6112
	mov	r0, r5
	bl	__aeabi_memcpy
	add.w	lr, sp, #16
	mov.w	r2, #516
	add.w	r0, lr, #5440
	mov	r1, r5
	adds	r6, r0, #2
	mov	r0, r6
	bl	__aeabi_memcpy
	add.w	r0, sp, #1592
	mov.w	r2, #516
	mov	r1, r6
	bl	__aeabi_memcpy
	addw	r4, sp, #3700
	movs	r1, #132
	mov	r0, r4
	bl	__aeabi_memclr4
	ldr	r1, [sp, #80]
	cbz	r1, .LBB42_91
	subs	r0, r1, #1
	cmp	r0, #3
	and	r0, r1, #3
	bhs	.LBB42_92
	movs	r3, #0
	mov	r1, r8
	b	.LBB42_102
.LBB42_91:
	movs	r3, #0
	b	.LBB42_107
.LBB42_92:
	subs	r2, r1, #4
	movs	r1, #1
	cmp	r2, #12
	add.w	r1, r1, r2, lsr #2
	and	r12, r1, #3
	bhs	.LBB42_94
	movs	r3, #0
	mov	r1, r8
	b	.LBB42_96
.LBB42_94:
	movw	r2, #65532
	movs	r3, #0
	movt	r2, #32767
	adds	r5, r4, #4
	ands	r2, r1
	mov	r1, r8
.LBB42_95:
	ldrb	r6, [r1], #16
	subs	r2, #4
	strb	r6, [r5, r3]
	ldrb	r6, [r1, #-15]
	ldr.w	r3, [sp, #3700]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3700]
	strb	r6, [r5, r3]
	ldrb	r6, [r1, #-14]
	ldr.w	r3, [sp, #3700]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3700]
	strb	r6, [r5, r3]
	ldrb	r6, [r1, #-13]
	ldr.w	r3, [sp, #3700]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3700]
	strb	r6, [r5, r3]
	ldrb	r6, [r1, #-12]
	ldr.w	r3, [sp, #3700]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3700]
	strb	r6, [r5, r3]
	ldrb	r6, [r1, #-11]
	ldr.w	r3, [sp, #3700]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3700]
	strb	r6, [r5, r3]
	ldrb	r6, [r1, #-10]
	ldr.w	r3, [sp, #3700]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3700]
	strb	r6, [r5, r3]
	ldrb	r6, [r1, #-9]
	ldr.w	r3, [sp, #3700]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3700]
	strb	r6, [r5, r3]
	ldrb	r6, [r1, #-8]
	ldr.w	r3, [sp, #3700]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3700]
	strb	r6, [r5, r3]
	ldrb	r6, [r1, #-7]
	ldr.w	r3, [sp, #3700]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3700]
	strb	r6, [r5, r3]
	ldrb	r6, [r1, #-6]
	ldr.w	r3, [sp, #3700]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3700]
	strb	r6, [r5, r3]
	ldrb	r6, [r1, #-5]
	ldr.w	r3, [sp, #3700]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3700]
	strb	r6, [r5, r3]
	ldrb	r6, [r1, #-4]
	ldr.w	r3, [sp, #3700]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3700]
	strb	r6, [r5, r3]
	ldrb	r6, [r1, #-3]
	ldr.w	r3, [sp, #3700]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3700]
	strb	r6, [r5, r3]
	ldrb	r6, [r1, #-2]
	ldr.w	r3, [sp, #3700]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3700]
	strb	r6, [r5, r3]
	ldrb	r6, [r1, #-1]
	ldr.w	r3, [sp, #3700]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3700]
	strb	r6, [r5, r3]
	ldr.w	r6, [sp, #3700]
	add.w	r3, r6, #1
	str.w	r3, [sp, #3700]
	bne.w	.LBB42_95
.LBB42_96:
	cmp.w	r12, #0
	beq	.LBB42_102
	adds	r2, r4, #4
	ldrb	r6, [r1]
	cmp.w	r12, #1
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #1]
	ldr.w	r3, [sp, #3700]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3700]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #2]
	ldr.w	r3, [sp, #3700]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3700]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #3]
	ldr.w	r3, [sp, #3700]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3700]
	strb	r6, [r2, r3]
	ldr.w	r6, [sp, #3700]
	add.w	r3, r6, #1
	str.w	r3, [sp, #3700]
	bne	.LBB42_99
	adds	r1, #4
	b	.LBB42_102
.LBB42_99:
	ldrb	r6, [r1, #4]
	cmp.w	r12, #2
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #5]
	ldr.w	r3, [sp, #3700]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3700]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #6]
	ldr.w	r3, [sp, #3700]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3700]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #7]
	ldr.w	r3, [sp, #3700]
	add.w	r3, r3, #1
	str.w	r3, [sp, #3700]
	strb	r6, [r2, r3]
	ldr.w	r6, [sp, #3700]
	add.w	r3, r6, #1
	str.w	r3, [sp, #3700]
	bne	.LBB42_101
	adds	r1, #8
	b	.LBB42_102
.LBB42_101:
	ldrb	r6, [r1, #8]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #9]
	ldr.w	r3, [sp, #3700]
	adds	r3, #1
	str.w	r3, [sp, #3700]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #10]
	ldr.w	r3, [sp, #3700]
	adds	r3, #1
	str.w	r3, [sp, #3700]
	strb	r6, [r2, r3]
	ldrb	r6, [r1, #11]
	ldr.w	r3, [sp, #3700]
	adds	r1, #12
	adds	r3, #1
	str.w	r3, [sp, #3700]
	strb	r6, [r2, r3]
	ldr.w	r6, [sp, #3700]
	adds	r3, r6, #1
	str.w	r3, [sp, #3700]
.LBB42_102:
	cbz	r0, .LBB42_106
	adds	r2, r4, r3
	ldrb	r3, [r1]
	cmp	r0, #1
	strb	r3, [r2, #4]
	ldr.w	r6, [sp, #3700]
	add.w	r3, r6, #1
	str.w	r3, [sp, #3700]
	beq	.LBB42_106
	adds	r2, r4, r3
	ldrb	r3, [r1, #1]
	cmp	r0, #2
	strb	r3, [r2, #4]
	ldr.w	r6, [sp, #3700]
	add.w	r3, r6, #1
	str.w	r3, [sp, #3700]
	beq	.LBB42_106
	adds	r0, r4, r3
	ldrb	r1, [r1, #2]
	strb	r1, [r0, #4]
	ldr.w	r6, [sp, #3700]
	adds	r3, r6, #1
	str.w	r3, [sp, #3700]
.LBB42_106:
	sub.w	r0, r6, #119
	cmn.w	r0, #130
	bls.w	.LBB42_216
.LBB42_107:
	adds	r0, r4, #4
	movs	r1, #47
	strb	r1, [r0, r3]
	movs	r3, #101
	ldr.w	r1, [sp, #3700]
	adds	r2, r1, #1
	str.w	r2, [sp, #3700]
	movs	r1, #115
	strb	r1, [r0, r2]
	ldr.w	r2, [sp, #3700]
	adds	r2, #1
	str.w	r2, [sp, #3700]
	strb	r3, [r0, r2]
	movs	r3, #116
	ldr.w	r2, [sp, #3700]
	adds	r2, #1
	str.w	r2, [sp, #3700]
	strb	r3, [r0, r2]
	ldr.w	r2, [sp, #3700]
	adds	r2, #1
	str.w	r2, [sp, #3700]
	strb	r3, [r0, r2]
	movs	r3, #105
	ldr.w	r2, [sp, #3700]
	adds	r2, #1
	str.w	r2, [sp, #3700]
	strb	r3, [r0, r2]
	movs	r3, #110
	ldr.w	r2, [sp, #3700]
	adds	r2, #1
	str.w	r2, [sp, #3700]
	strb	r3, [r0, r2]
	movs	r3, #103
	ldr.w	r2, [sp, #3700]
	adds	r2, #1
	str.w	r2, [sp, #3700]
	strb	r3, [r0, r2]
	movs	r3, #0
	ldr.w	r2, [sp, #3700]
	adds	r2, #1
	str.w	r2, [sp, #3700]
	strb	r1, [r0, r2]
	movw	r2, :lower16:.Lswitch.table._ZN14thermostat_eem3app8rtic_ext4main21__rtic_init_resources17h9d4547472bd32894E
	ldr.w	r0, [sp, #3700]
	movt	r2, :upper16:.Lswitch.table._ZN14thermostat_eem3app8rtic_ext4main21__rtic_init_resources17h9d4547472bd32894E
	adds	r1, r0, #1
	str.w	r1, [sp, #3700]
	movs	r1, #0
	b	.LBB42_110
.LBB42_108:
	movs	r6, #3
.LBB42_109:
	cmp	r3, r6
	add.w	r1, r1, #1
	it	ls
	movls	r3, r6
.LBB42_110:
	cbz	r1, .LBB42_116
	cmp	r1, #2
	beq	.LBB42_108
	cmp	r1, #1
	bne	.LBB42_117
	movs	r6, #0
	movs	r5, #0
	cmp	r6, #4
	bhi	.LBB42_115
.LBB42_114:
	ldr.w	r4, [r2, r6, lsl #2]
	adds	r6, #1
	cmp	r5, r4
	it	ls
	movls	r5, r4
	cmp	r6, #4
	bls	.LBB42_114
.LBB42_115:
	add.w	r6, r5, #18
	cmp	r5, #0
	it	eq
	moveq	r6, #17
	b	.LBB42_109
.LBB42_116:
	movs	r6, #16
	b	.LBB42_109
.LBB42_117:
	add	r0, r3
	adds	r0, #2
	cmp	r0, #128
	bhi.w	.LBB42_213
	movs	r0, #0
	add.w	r1, sp, #2784
	add.w	lr, sp, #8
	str.w	r0, [r10, #3028]
	str.w	r0, [r10, #3032]
	str.w	r0, [r10, #3036]
	str.w	r0, [r10, #3040]
	str.w	r0, [r10, #3044]
	str.w	r0, [r10, #3048]
	str.w	r0, [r10, #3052]
	str.w	r0, [r10, #3056]
	mov	r0, r1
	add.w	r1, lr, #7232
	add.w	lr, sp, #8
	ldm	r1!, {r2, r3, r4, r6}
	stm	r0!, {r2, r3, r4, r6}
	ldm.w	r1, {r2, r3, r4, r5, r6}
	stm	r0!, {r2, r3, r4, r5, r6}
	add.w	r4, lr, #6112
	movs	r1, #132
	mov	r0, r4
	bl	__aeabi_memclr4
	ldr	r1, [sp, #80]
	cmp	r1, #0
	beq.w	.LBB42_135
	subs	r0, r1, #1
	and	lr, r1, #3
	cmp	r0, #3
	bhs	.LBB42_121
	movs	r0, #0
	mov	r1, r8
	b	.LBB42_131
.LBB42_121:
	subs	r1, #4
	movs	r0, #1
	cmp	r1, #12
	add.w	r0, r0, r1, lsr #2
	and	r12, r0, #3
	bhs	.LBB42_123
	movs	r0, #0
	mov	r1, r8
	b	.LBB42_125
.LBB42_123:
	movw	r1, #65532
	adds	r2, r4, #4
	movt	r1, #32767
	and.w	r3, r0, r1
	movs	r0, #0
	mov	r1, r8
.LBB42_124:
	ldrb	r5, [r1], #16
	subs	r3, #4
	strb	r5, [r2, r0]
	ldrb	r5, [r1, #-15]
	ldr.w	r0, [r10, #1904]
	add.w	r0, r0, #1
	str.w	r0, [r10, #1904]
	strb	r5, [r2, r0]
	ldrb	r5, [r1, #-14]
	ldr.w	r0, [r10, #1904]
	add.w	r0, r0, #1
	str.w	r0, [r10, #1904]
	strb	r5, [r2, r0]
	ldrb	r5, [r1, #-13]
	ldr.w	r0, [r10, #1904]
	add.w	r0, r0, #1
	str.w	r0, [r10, #1904]
	strb	r5, [r2, r0]
	ldrb	r5, [r1, #-12]
	ldr.w	r0, [r10, #1904]
	add.w	r0, r0, #1
	str.w	r0, [r10, #1904]
	strb	r5, [r2, r0]
	ldrb	r5, [r1, #-11]
	ldr.w	r0, [r10, #1904]
	add.w	r0, r0, #1
	str.w	r0, [r10, #1904]
	strb	r5, [r2, r0]
	ldrb	r5, [r1, #-10]
	ldr.w	r0, [r10, #1904]
	add.w	r0, r0, #1
	str.w	r0, [r10, #1904]
	strb	r5, [r2, r0]
	ldrb	r5, [r1, #-9]
	ldr.w	r0, [r10, #1904]
	add.w	r0, r0, #1
	str.w	r0, [r10, #1904]
	strb	r5, [r2, r0]
	ldrb	r5, [r1, #-8]
	ldr.w	r0, [r10, #1904]
	add.w	r0, r0, #1
	str.w	r0, [r10, #1904]
	strb	r5, [r2, r0]
	ldrb	r5, [r1, #-7]
	ldr.w	r0, [r10, #1904]
	add.w	r0, r0, #1
	str.w	r0, [r10, #1904]
	strb	r5, [r2, r0]
	ldrb	r5, [r1, #-6]
	ldr.w	r0, [r10, #1904]
	add.w	r0, r0, #1
	str.w	r0, [r10, #1904]
	strb	r5, [r2, r0]
	ldrb	r5, [r1, #-5]
	ldr.w	r0, [r10, #1904]
	add.w	r0, r0, #1
	str.w	r0, [r10, #1904]
	strb	r5, [r2, r0]
	ldrb	r5, [r1, #-4]
	ldr.w	r0, [r10, #1904]
	add.w	r0, r0, #1
	str.w	r0, [r10, #1904]
	strb	r5, [r2, r0]
	ldrb	r5, [r1, #-3]
	ldr.w	r0, [r10, #1904]
	add.w	r0, r0, #1
	str.w	r0, [r10, #1904]
	strb	r5, [r2, r0]
	ldrb	r5, [r1, #-2]
	ldr.w	r0, [r10, #1904]
	add.w	r0, r0, #1
	str.w	r0, [r10, #1904]
	strb	r5, [r2, r0]
	ldrb	r5, [r1, #-1]
	ldr.w	r0, [r10, #1904]
	add.w	r0, r0, #1
	str.w	r0, [r10, #1904]
	strb	r5, [r2, r0]
	ldr.w	r0, [r10, #1904]
	add.w	r0, r0, #1
	str.w	r0, [r10, #1904]
	bne.w	.LBB42_124
.LBB42_125:
	cmp.w	r12, #0
	beq	.LBB42_131
	adds	r2, r4, #4
	ldrb	r3, [r1]
	cmp.w	r12, #1
	strb	r3, [r2, r0]
	ldrb	r3, [r1, #1]
	ldr.w	r0, [r10, #1904]
	add.w	r0, r0, #1
	str.w	r0, [r10, #1904]
	strb	r3, [r2, r0]
	ldrb	r3, [r1, #2]
	ldr.w	r0, [r10, #1904]
	add.w	r0, r0, #1
	str.w	r0, [r10, #1904]
	strb	r3, [r2, r0]
	ldrb	r3, [r1, #3]
	ldr.w	r0, [r10, #1904]
	add.w	r0, r0, #1
	str.w	r0, [r10, #1904]
	strb	r3, [r2, r0]
	ldr.w	r0, [r10, #1904]
	add.w	r0, r0, #1
	str.w	r0, [r10, #1904]
	bne	.LBB42_128
	adds	r1, #4
	b	.LBB42_131
.LBB42_128:
	ldrb	r3, [r1, #4]
	cmp.w	r12, #2
	strb	r3, [r2, r0]
	ldrb	r3, [r1, #5]
	ldr.w	r0, [r10, #1904]
	add.w	r0, r0, #1
	str.w	r0, [r10, #1904]
	strb	r3, [r2, r0]
	ldrb	r3, [r1, #6]
	ldr.w	r0, [r10, #1904]
	add.w	r0, r0, #1
	str.w	r0, [r10, #1904]
	strb	r3, [r2, r0]
	ldrb	r3, [r1, #7]
	ldr.w	r0, [r10, #1904]
	add.w	r0, r0, #1
	str.w	r0, [r10, #1904]
	strb	r3, [r2, r0]
	ldr.w	r0, [r10, #1904]
	add.w	r0, r0, #1
	str.w	r0, [r10, #1904]
	bne	.LBB42_130
	adds	r1, #8
	b	.LBB42_131
.LBB42_130:
	ldrb	r3, [r1, #8]
	strb	r3, [r2, r0]
	ldrb	r3, [r1, #9]
	ldr.w	r0, [r10, #1904]
	adds	r0, #1
	str.w	r0, [r10, #1904]
	strb	r3, [r2, r0]
	ldrb	r3, [r1, #10]
	ldr.w	r0, [r10, #1904]
	adds	r0, #1
	str.w	r0, [r10, #1904]
	strb	r3, [r2, r0]
	ldrb	r3, [r1, #11]
	ldr.w	r0, [r10, #1904]
	adds	r1, #12
	adds	r0, #1
	str.w	r0, [r10, #1904]
	strb	r3, [r2, r0]
	ldr.w	r0, [r10, #1904]
	adds	r0, #1
	str.w	r0, [r10, #1904]
.LBB42_131:
	cmp.w	lr, #0
	beq	.LBB42_135
	add	r0, r4
	ldrb	r2, [r1]
	cmp.w	lr, #1
	strb	r2, [r0, #4]
	ldr.w	r0, [r10, #1904]
	add.w	r0, r0, #1
	str.w	r0, [r10, #1904]
	beq	.LBB42_135
	add	r0, r4
	ldrb	r2, [r1, #1]
	cmp.w	lr, #2
	strb	r2, [r0, #4]
	ldr.w	r0, [r10, #1904]
	add.w	r0, r0, #1
	str.w	r0, [r10, #1904]
	beq	.LBB42_135
	add	r0, r4
	ldrb	r1, [r1, #2]
	strb	r1, [r0, #4]
	ldr.w	r0, [r10, #1904]
	adds	r0, #1
	str.w	r0, [r10, #1904]
.LBB42_135:
	add.w	r0, sp, #6048
	add	r1, sp, #616
	movs	r2, #72
	bl	__aeabi_memcpy4
	add.w	lr, sp, #16
	mov.w	r2, #588
	add.w	r0, lr, #5440
	add.w	lr, sp, #24
	add.w	r1, lr, #6624
	bl	__aeabi_memcpy4
	add.w	lr, sp, #8
	add.w	r1, sp, #1592
	add.w	r0, lr, #4928
	mov.w	r2, #516
	bl	__aeabi_memcpy4
	add.w	lr, sp, #28
	addw	r11, sp, #2120
	add.w	r0, lr, #4384
	mov.w	r2, #524
	mov	r1, r11
	bl	__aeabi_memcpy4
	add.w	lr, sp, #4096
	ldrb.w	r0, [sp, #1462]
	add.w	r1, sp, #4352
	add.w	r4, sp, #2784
	strb.w	r0, [lr, #314]
	add.w	lr, sp, #4096
	ldrh.w	r0, [sp, #1460]
	strh.w	r0, [lr, #312]
	add.w	lr, sp, #4096
	ldrh.w	r0, [sp, #3628]
	strh.w	r0, [lr, #308]
	add.w	lr, sp, #4096
	ldrb.w	r0, [sp, #3630]
	strb.w	r0, [lr, #310]
	add.w	lr, sp, #4096
	ldrh.w	r0, [sp, #2712]
	strh.w	r0, [lr, #304]
	add.w	lr, sp, #4096
	ldrb.w	r0, [sp, #2714]
	strb.w	r0, [lr, #306]
	add.w	lr, sp, #4096
	ldrh.w	r0, [sp, #3052]
	strh.w	r0, [lr, #300]
	add.w	lr, sp, #4096
	ldrb.w	r0, [sp, #3054]
	strb.w	r0, [lr, #302]
	add.w	lr, sp, #4096
	ldrb.w	r0, [sp, #86]
	strb.w	r0, [lr, #298]
	add.w	lr, sp, #4096
	ldrh.w	r0, [sp, #84]
	strh.w	r0, [lr, #296]
	mov	r0, r1
	ldm	r4!, {r1, r2, r3, r6}
	stm	r0!, {r1, r2, r3, r6}
	ldm.w	r4, {r1, r2, r3, r5, r6}
	add.w	lr, sp, #8
	stm	r0!, {r1, r2, r3, r5, r6}
	add.w	r5, lr, #7232
	addw	r1, sp, #3700
	adds	r0, r5, #3
	movs	r2, #132
	bl	__aeabi_memcpy
	add.w	lr, sp, #8
	add	r0, sp, #96
	add.w	r4, lr, #6112
	movs	r2, #132
	mov	r1, r4
	bl	__aeabi_memcpy4
	add	r0, sp, #616
	movs	r2, #135
	mov	r1, r5
	bl	__aeabi_memcpy4
	movs	r0, #14
	str.w	r0, [r10, #1908]
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.196
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.274
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.196
	str.w	r0, [sp, #2120]
	ldr	r0, [sp, #68]
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.274
	strh.w	r0, [sp, #1596]
	ldr	r0, [sp, #72]
	addw	r6, sp, #3112
	str.w	r1, [r10, #1904]
	str.w	r0, [sp, #1592]
	movs	r1, #68
	mov	r0, r6
	movs	r5, #3
	str.w	r5, [sp, #2124]
	bl	__aeabi_memclr4
	movw	r0, :lower16:<&T as core::fmt::Display>::fmt::h46598aa20843e58b
	add.w	r1, sp, #1592
	movt	r0, :upper16:<&T as core::fmt::Display>::fmt::h46598aa20843e58b
	str.w	r0, [r10, #2436]
	str.w	r0, [r10, #2452]
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.198
	str.w	r1, [r10, #2440]
	movw	r1, :lower16:<smoltcp::wire::ethernet::Address as core::fmt::Display>::fmt::h8290af5f199f6c5a
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.198
	movt	r1, :upper16:<smoltcp::wire::ethernet::Address as core::fmt::Display>::fmt::h8290af5f199f6c5a
	str.w	r0, [r10, #3024]
	movs	r0, #0
	add.w	lr, sp, #24
	str.w	r1, [r10, #2444]
	str.w	r0, [r10, #3032]
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.380
	str.w	r0, [r10, #3036]
	add.w	r0, lr, #6624
	add.w	lr, sp, #8
	str.w	r0, [r10, #3040]
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.380
	addw	r0, sp, #3700
	add.w	r2, lr, #7232
	str.w	r4, [r10, #2432]
	str.w	r11, [r10, #2448]
	str.w	r6, [sp, #3700]
	str.w	r5, [r10, #3028]
	str.w	r5, [r10, #3044]
	bl	core::fmt::write::h5d3fbef16e428eed
	cmp	r0, #0
	bne.w	.LBB42_205
	add.w	r6, sp, #1592
	movs	r1, #68
	mov	r0, r6
	ldr.w	r5, [sp, #3112]
	ldr.w	r4, [r10]
	bl	__aeabi_memclr4
	movw	r11, :lower16:.L_MergedGlobals
	cmp	r5, #64
	movt	r11, :upper16:.L_MergedGlobals
	bhi.w	.LBB42_214
	cmp	r5, #0
	str	r4, [sp, #80]
	beq.w	.LBB42_154
	subs	r0, r5, #1
	cmp	r0, #3
	and	r0, r5, #3
	bhs	.LBB42_140
	movs	r5, #0
	b	.LBB42_150
.LBB42_140:
	subs	r1, r5, #4
	movs	r2, #1
	cmp	r1, #12
	add.w	r2, r2, r1, lsr #2
	and	r12, r2, #3
	bhs	.LBB42_142
	movs	r5, #0
	b	.LBB42_144
.LBB42_142:
	movw	r1, #65532
	movs	r5, #0
	movt	r1, #32767
	adds	r3, r6, #4
	ands	r2, r1
.LBB42_143:
	ldrb	r1, [r9], #16
	subs	r2, #4
	strb	r1, [r3, r5]
	ldrb	r5, [r9, #-15]
	ldr.w	r1, [sp, #1592]
	add.w	r1, r1, #1
	str.w	r1, [sp, #1592]
	strb	r5, [r3, r1]
	ldrb	r5, [r9, #-14]
	ldr.w	r1, [sp, #1592]
	add.w	r1, r1, #1
	str.w	r1, [sp, #1592]
	strb	r5, [r3, r1]
	ldrb	r5, [r9, #-13]
	ldr.w	r1, [sp, #1592]
	add.w	r1, r1, #1
	str.w	r1, [sp, #1592]
	strb	r5, [r3, r1]
	ldrb	r5, [r9, #-12]
	ldr.w	r1, [sp, #1592]
	add.w	r1, r1, #1
	str.w	r1, [sp, #1592]
	strb	r5, [r3, r1]
	ldrb	r5, [r9, #-11]
	ldr.w	r1, [sp, #1592]
	add.w	r1, r1, #1
	str.w	r1, [sp, #1592]
	strb	r5, [r3, r1]
	ldrb	r5, [r9, #-10]
	ldr.w	r1, [sp, #1592]
	add.w	r1, r1, #1
	str.w	r1, [sp, #1592]
	strb	r5, [r3, r1]
	ldrb	r5, [r9, #-9]
	ldr.w	r1, [sp, #1592]
	add.w	r1, r1, #1
	str.w	r1, [sp, #1592]
	strb	r5, [r3, r1]
	ldrb	r5, [r9, #-8]
	ldr.w	r1, [sp, #1592]
	add.w	r1, r1, #1
	str.w	r1, [sp, #1592]
	strb	r5, [r3, r1]
	ldrb	r5, [r9, #-7]
	ldr.w	r1, [sp, #1592]
	add.w	r1, r1, #1
	str.w	r1, [sp, #1592]
	strb	r5, [r3, r1]
	ldrb	r5, [r9, #-6]
	ldr.w	r1, [sp, #1592]
	add.w	r1, r1, #1
	str.w	r1, [sp, #1592]
	strb	r5, [r3, r1]
	ldrb	r5, [r9, #-5]
	ldr.w	r1, [sp, #1592]
	add.w	r1, r1, #1
	str.w	r1, [sp, #1592]
	strb	r5, [r3, r1]
	ldrb	r5, [r9, #-4]
	ldr.w	r1, [sp, #1592]
	add.w	r1, r1, #1
	str.w	r1, [sp, #1592]
	strb	r5, [r3, r1]
	ldrb	r5, [r9, #-3]
	ldr.w	r1, [sp, #1592]
	add.w	r1, r1, #1
	str.w	r1, [sp, #1592]
	strb	r5, [r3, r1]
	ldrb	r5, [r9, #-2]
	ldr.w	r1, [sp, #1592]
	add.w	r1, r1, #1
	str.w	r1, [sp, #1592]
	strb	r5, [r3, r1]
	ldrb	r5, [r9, #-1]
	ldr.w	r1, [sp, #1592]
	add.w	r1, r1, #1
	str.w	r1, [sp, #1592]
	strb	r5, [r3, r1]
	ldr.w	r1, [sp, #1592]
	add.w	r5, r1, #1
	str.w	r5, [sp, #1592]
	bne.w	.LBB42_143
.LBB42_144:
	cmp.w	r12, #0
	beq	.LBB42_150
	adds	r2, r6, #4
	ldrb.w	r1, [r9]
	ldrb.w	r3, [r9, #1]
	cmp.w	r12, #1
	strb	r1, [r2, r5]
	ldr.w	r1, [sp, #1592]
	add.w	r1, r1, #1
	str.w	r1, [sp, #1592]
	strb	r3, [r2, r1]
	ldrb.w	r3, [r9, #2]
	ldr.w	r1, [sp, #1592]
	add.w	r1, r1, #1
	str.w	r1, [sp, #1592]
	strb	r3, [r2, r1]
	ldrb.w	r3, [r9, #3]
	ldr.w	r1, [sp, #1592]
	add.w	r1, r1, #1
	str.w	r1, [sp, #1592]
	strb	r3, [r2, r1]
	ldr.w	r1, [sp, #1592]
	add.w	r5, r1, #1
	str.w	r5, [sp, #1592]
	bne	.LBB42_147
	add.w	r9, r9, #4
	b	.LBB42_150
.LBB42_147:
	ldrb.w	r1, [r9, #4]
	cmp.w	r12, #2
	strb	r1, [r2, r5]
	ldrb.w	r3, [r9, #5]
	ldr.w	r1, [sp, #1592]
	add.w	r1, r1, #1
	str.w	r1, [sp, #1592]
	strb	r3, [r2, r1]
	ldrb.w	r3, [r9, #6]
	ldr.w	r1, [sp, #1592]
	add.w	r1, r1, #1
	str.w	r1, [sp, #1592]
	strb	r3, [r2, r1]
	ldrb.w	r3, [r9, #7]
	ldr.w	r1, [sp, #1592]
	add.w	r1, r1, #1
	str.w	r1, [sp, #1592]
	strb	r3, [r2, r1]
	ldr.w	r1, [sp, #1592]
	add.w	r5, r1, #1
	str.w	r5, [sp, #1592]
	bne	.LBB42_149
	add.w	r9, r9, #8
	b	.LBB42_150
.LBB42_149:
	ldrb.w	r1, [r9, #8]
	strb	r1, [r2, r5]
	ldrb.w	r3, [r9, #9]
	ldr.w	r1, [sp, #1592]
	adds	r1, #1
	str.w	r1, [sp, #1592]
	strb	r3, [r2, r1]
	ldrb.w	r3, [r9, #10]
	ldr.w	r1, [sp, #1592]
	adds	r1, #1
	str.w	r1, [sp, #1592]
	strb	r3, [r2, r1]
	ldrb.w	r3, [r9, #11]
	ldr.w	r1, [sp, #1592]
	add.w	r9, r9, #12
	adds	r1, #1
	str.w	r1, [sp, #1592]
	strb	r3, [r2, r1]
	ldr.w	r1, [sp, #1592]
	adds	r5, r1, #1
	str.w	r5, [sp, #1592]
.LBB42_150:
	cbz	r0, .LBB42_154
	adds	r1, r6, r5
	ldrb.w	r2, [r9]
	cmp	r0, #1
	strb	r2, [r1, #4]
	ldr.w	r1, [sp, #1592]
	add.w	r1, r1, #1
	str.w	r1, [sp, #1592]
	beq	.LBB42_154
	add	r1, r6
	ldrb.w	r2, [r9, #1]
	cmp	r0, #2
	strb	r2, [r1, #4]
	ldr.w	r1, [sp, #1592]
	add.w	r0, r1, #1
	str.w	r0, [sp, #1592]
	beq	.LBB42_154
	add	r0, r6
	ldrb.w	r1, [r9, #2]
	strb	r1, [r0, #4]
	ldr.w	r0, [sp, #1592]
	adds	r0, #1
	str.w	r0, [sp, #1592]
.LBB42_154:
	addw	r6, sp, #3700
	add.w	r1, sp, #1592
	movs	r2, #68
	mov	r0, r6
	bl	__aeabi_memcpy4
	add.w	lr, sp, #24
	movs	r2, #68
	add.w	r4, lr, #6624
	mov	r1, r6
	adds	r5, r4, #1
	mov	r0, r5
	bl	__aeabi_memcpy
	add.w	lr, sp, #8
	movs	r2, #68
	add.w	r0, lr, #6112
	mov	r1, r5
	adds	r6, r0, #1
	mov	r0, r6
	bl	__aeabi_memcpy
	addw	r5, sp, #2120
	movs	r2, #68
	adds	r0, r5, #4
	mov	r1, r6
	bl	__aeabi_memcpy
	add.w	lr, sp, #8
	mov.w	r1, #524
	add.w	r6, lr, #7232
	add.w	r0, r6, #64
	bl	__aeabi_memclr4
	adds	r0, r4, #4
	mov.w	r1, #520
	bl	__aeabi_memclr4
	add.w	lr, sp, #8
	mov.w	r2, #524
	add.w	r0, lr, #6112
	mov	r1, r4
	bl	__aeabi_memcpy4
	addw	r0, sp, #3700
	movs	r2, #72
	mov	r1, r5
	bl	__aeabi_memcpy4
	add.w	lr, sp, #24
	mov.w	r2, #588
	add.w	r0, lr, #6624
	mov	r1, r6
	bl	__aeabi_memcpy4
	add.w	lr, sp, #8
	movs	r1, #132
	add.w	r5, lr, #7232
	mov	r0, r5
	bl	__aeabi_memclr4
	ldr	r1, [sp, #80]
	cmp	r1, #128
	bhi.w	.LBB42_206
	cbz	r1, .LBB42_158
	subs	r0, r1, #1
	cmp	r0, #3
	and	r0, r1, #3
	bhs	.LBB42_159
	movs	r2, #0
	b	.LBB42_169
.LBB42_158:
	movs	r2, #0
	b	.LBB42_174
.LBB42_159:
	subs	r2, r1, #4
	movs	r1, #1
	cmp	r2, #12
	add.w	r1, r1, r2, lsr #2
	and	r12, r1, #3
	bhs	.LBB42_161
	movs	r2, #0
	b	.LBB42_163
.LBB42_161:
	movw	r2, #65532
	movt	r2, #32767
	and.w	r6, r1, r2
	movs	r2, #0
	adds	r1, r5, #4
.LBB42_162:
	ldrb	r3, [r8], #16
	subs	r6, #4
	strb	r3, [r1, r2]
	ldrb	r3, [r8, #-15]
	ldr.w	r2, [r10, #3024]
	add.w	r2, r2, #1
	str.w	r2, [r10, #3024]
	strb	r3, [r1, r2]
	ldrb	r3, [r8, #-14]
	ldr.w	r2, [r10, #3024]
	add.w	r2, r2, #1
	str.w	r2, [r10, #3024]
	strb	r3, [r1, r2]
	ldrb	r3, [r8, #-13]
	ldr.w	r2, [r10, #3024]
	add.w	r2, r2, #1
	str.w	r2, [r10, #3024]
	strb	r3, [r1, r2]
	ldrb	r3, [r8, #-12]
	ldr.w	r2, [r10, #3024]
	add.w	r2, r2, #1
	str.w	r2, [r10, #3024]
	strb	r3, [r1, r2]
	ldrb	r3, [r8, #-11]
	ldr.w	r2, [r10, #3024]
	add.w	r2, r2, #1
	str.w	r2, [r10, #3024]
	strb	r3, [r1, r2]
	ldrb	r3, [r8, #-10]
	ldr.w	r2, [r10, #3024]
	add.w	r2, r2, #1
	str.w	r2, [r10, #3024]
	strb	r3, [r1, r2]
	ldrb	r3, [r8, #-9]
	ldr.w	r2, [r10, #3024]
	add.w	r2, r2, #1
	str.w	r2, [r10, #3024]
	strb	r3, [r1, r2]
	ldrb	r3, [r8, #-8]
	ldr.w	r2, [r10, #3024]
	add.w	r2, r2, #1
	str.w	r2, [r10, #3024]
	strb	r3, [r1, r2]
	ldrb	r3, [r8, #-7]
	ldr.w	r2, [r10, #3024]
	add.w	r2, r2, #1
	str.w	r2, [r10, #3024]
	strb	r3, [r1, r2]
	ldrb	r3, [r8, #-6]
	ldr.w	r2, [r10, #3024]
	add.w	r2, r2, #1
	str.w	r2, [r10, #3024]
	strb	r3, [r1, r2]
	ldrb	r3, [r8, #-5]
	ldr.w	r2, [r10, #3024]
	add.w	r2, r2, #1
	str.w	r2, [r10, #3024]
	strb	r3, [r1, r2]
	ldrb	r3, [r8, #-4]
	ldr.w	r2, [r10, #3024]
	add.w	r2, r2, #1
	str.w	r2, [r10, #3024]
	strb	r3, [r1, r2]
	ldrb	r3, [r8, #-3]
	ldr.w	r2, [r10, #3024]
	add.w	r2, r2, #1
	str.w	r2, [r10, #3024]
	strb	r3, [r1, r2]
	ldrb	r3, [r8, #-2]
	ldr.w	r2, [r10, #3024]
	add.w	r2, r2, #1
	str.w	r2, [r10, #3024]
	strb	r3, [r1, r2]
	ldrb	r3, [r8, #-1]
	ldr.w	r2, [r10, #3024]
	add.w	r2, r2, #1
	str.w	r2, [r10, #3024]
	strb	r3, [r1, r2]
	ldr.w	r3, [r10, #3024]
	add.w	r2, r3, #1
	str.w	r2, [r10, #3024]
	bne.w	.LBB42_162
.LBB42_163:
	cmp.w	r12, #0
	beq	.LBB42_169
	adds	r1, r5, #4
	ldrb.w	r3, [r8]
	cmp.w	r12, #1
	strb	r3, [r1, r2]
	ldrb.w	r3, [r8, #1]
	ldr.w	r2, [r10, #3024]
	add.w	r2, r2, #1
	str.w	r2, [r10, #3024]
	strb	r3, [r1, r2]
	ldrb.w	r3, [r8, #2]
	ldr.w	r2, [r10, #3024]
	add.w	r2, r2, #1
	str.w	r2, [r10, #3024]
	strb	r3, [r1, r2]
	ldrb.w	r3, [r8, #3]
	ldr.w	r2, [r10, #3024]
	add.w	r2, r2, #1
	str.w	r2, [r10, #3024]
	strb	r3, [r1, r2]
	ldr.w	r3, [r10, #3024]
	add.w	r2, r3, #1
	str.w	r2, [r10, #3024]
	bne	.LBB42_166
	add.w	r8, r8, #4
	b	.LBB42_169
.LBB42_166:
	ldrb.w	r3, [r8, #4]
	cmp.w	r12, #2
	strb	r3, [r1, r2]
	ldrb.w	r3, [r8, #5]
	ldr.w	r2, [r10, #3024]
	add.w	r2, r2, #1
	str.w	r2, [r10, #3024]
	strb	r3, [r1, r2]
	ldrb.w	r3, [r8, #6]
	ldr.w	r2, [r10, #3024]
	add.w	r2, r2, #1
	str.w	r2, [r10, #3024]
	strb	r3, [r1, r2]
	ldrb.w	r3, [r8, #7]
	ldr.w	r2, [r10, #3024]
	add.w	r2, r2, #1
	str.w	r2, [r10, #3024]
	strb	r3, [r1, r2]
	ldr.w	r3, [r10, #3024]
	add.w	r2, r3, #1
	str.w	r2, [r10, #3024]
	bne	.LBB42_168
	add.w	r8, r8, #8
	b	.LBB42_169
.LBB42_168:
	ldrb.w	r3, [r8, #8]
	strb	r3, [r1, r2]
	ldrb.w	r3, [r8, #9]
	ldr.w	r2, [r10, #3024]
	adds	r2, #1
	str.w	r2, [r10, #3024]
	strb	r3, [r1, r2]
	ldrb.w	r3, [r8, #10]
	ldr.w	r2, [r10, #3024]
	adds	r2, #1
	str.w	r2, [r10, #3024]
	strb	r3, [r1, r2]
	ldrb.w	r3, [r8, #11]
	ldr.w	r2, [r10, #3024]
	add.w	r8, r8, #12
	adds	r2, #1
	str.w	r2, [r10, #3024]
	strb	r3, [r1, r2]
	ldr.w	r3, [r10, #3024]
	adds	r2, r3, #1
	str.w	r2, [r10, #3024]
.LBB42_169:
	cbz	r0, .LBB42_173
	adds	r1, r5, r2
	ldrb.w	r2, [r8]
	cmp	r0, #1
	strb	r2, [r1, #4]
	ldr.w	r3, [r10, #3024]
	add.w	r2, r3, #1
	str.w	r2, [r10, #3024]
	beq	.LBB42_173
	adds	r1, r5, r2
	ldrb.w	r2, [r8, #1]
	cmp	r0, #2
	strb	r2, [r1, #4]
	ldr.w	r3, [r10, #3024]
	add.w	r2, r3, #1
	str.w	r2, [r10, #3024]
	beq	.LBB42_173
	adds	r0, r5, r2
	ldrb.w	r1, [r8, #2]
	strb	r1, [r0, #4]
	ldr.w	r3, [r10, #3024]
	adds	r2, r3, #1
	str.w	r2, [r10, #3024]
.LBB42_173:
	sub.w	r0, r3, #118
	cmn.w	r0, #130
	bls.w	.LBB42_217
.LBB42_174:
	adds	r0, r5, #4
	movs	r1, #47
	movs	r3, #101
	movs	r6, #108
	strb	r1, [r0, r2]
	ldr.w	r1, [r10, #3024]
	adds	r2, r1, #1
	str.w	r2, [r10, #3024]
	movs	r1, #116
	strb	r1, [r0, r2]
	ldr.w	r2, [r10, #3024]
	adds	r2, #1
	str.w	r2, [r10, #3024]
	strb	r3, [r0, r2]
	ldr.w	r2, [r10, #3024]
	adds	r2, #1
	str.w	r2, [r10, #3024]
	strb	r6, [r0, r2]
	movs	r6, #109
	ldr.w	r2, [r10, #3024]
	adds	r2, #1
	str.w	r2, [r10, #3024]
	strb	r3, [r0, r2]
	ldr.w	r2, [r10, #3024]
	adds	r2, #1
	str.w	r2, [r10, #3024]
	strb	r6, [r0, r2]
	ldr.w	r2, [r10, #3024]
	adds	r2, #1
	str.w	r2, [r10, #3024]
	strb	r3, [r0, r2]
	ldr.w	r2, [r10, #3024]
	adds	r2, #1
	str.w	r2, [r10, #3024]
	strb	r1, [r0, r2]
	movs	r2, #114
	ldr.w	r1, [r10, #3024]
	adds	r1, #1
	str.w	r1, [r10, #3024]
	strb	r2, [r0, r1]
	movs	r2, #121
	ldr.w	r1, [r10, #3024]
	adds	r1, #1
	str.w	r1, [r10, #3024]
	strb	r2, [r0, r1]
	addw	r1, sp, #3700
	ldr.w	r0, [r10, #3024]
	movs	r2, #72
	adds	r0, #1
	str.w	r0, [r10, #3024]
	addw	r0, sp, #2712
	bl	__aeabi_memcpy4
	add.w	lr, sp, #24
	addw	r0, sp, #2120
	add.w	r1, lr, #6624
	mov.w	r2, #588
	bl	__aeabi_memcpy4
	add.w	lr, sp, #8
	add.w	r0, sp, #1592
	add.w	r1, lr, #6112
	mov.w	r2, #524
	bl	__aeabi_memcpy4
	addw	r0, sp, #1460
	movs	r2, #132
	mov	r1, r5
	bl	__aeabi_memcpy4
	add.w	lr, sp, #24
	addw	r0, sp, #3700
	add.w	r1, lr, #6624
	mov.w	r2, #516
	bl	__aeabi_memcpy4
	addw	r0, sp, #3628
	add.w	r1, sp, #6048
	movs	r2, #72
	bl	__aeabi_memcpy4
	add.w	lr, sp, #8
	mov.w	r2, #588
	add.w	r0, lr, #7232
	add.w	lr, sp, #16
	add.w	r1, lr, #5440
	bl	__aeabi_memcpy4
	add.w	lr, sp, #8
	addw	r0, sp, #3112
	add.w	r1, lr, #4928
	mov.w	r2, #516
	bl	__aeabi_memcpy4
	ldrb.w	r0, [sp, #86]
	add.w	lr, sp, #8
	strb.w	r0, [sp, #3110]
	ldrh.w	r0, [sp, #84]
	strh.w	r0, [sp, #3108]
	add.w	r0, lr, #6112
	add.w	lr, sp, #28
	mov.w	r2, #524
	add.w	r1, lr, #4384
	bl	__aeabi_memcpy4
	add.w	lr, sp, #4096
	addw	r1, sp, #3052
	ldrb.w	r0, [lr, #314]
	add.w	lr, sp, #4096
	strb.w	r0, [sp, #3106]
	ldrh.w	r0, [lr, #312]
	add.w	lr, sp, #4096
	strh.w	r0, [sp, #3104]
	ldrh.w	r0, [lr, #308]
	add.w	lr, sp, #4096
	strh.w	r0, [sp, #3100]
	ldrb.w	r0, [lr, #310]
	add.w	lr, sp, #4096
	strb.w	r0, [sp, #3102]
	ldrh.w	r0, [lr, #304]
	add.w	lr, sp, #4096
	strh.w	r0, [sp, #3096]
	ldrb.w	r0, [lr, #306]
	add.w	lr, sp, #4096
	strb.w	r0, [sp, #3098]
	ldrh.w	r0, [lr, #300]
	add.w	lr, sp, #4096
	strh.w	r0, [sp, #3092]
	ldrb.w	r0, [lr, #302]
	add.w	lr, sp, #4096
	strb.w	r0, [sp, #3094]
	ldrb.w	r0, [lr, #298]
	add.w	lr, sp, #4096
	strb.w	r0, [sp, #3090]
	ldrh.w	r0, [lr, #296]
	strh.w	r0, [sp, #3088]
	mov	r0, r1
	add.w	r1, sp, #4352
	ldm	r1!, {r2, r3, r5, r6}
	stm	r0!, {r2, r3, r5, r6}
	ldm.w	r1, {r2, r3, r4, r5, r6}
	stm	r0!, {r2, r3, r4, r5, r6}
	addw	r0, sp, #2916
	add	r1, sp, #616
	movs	r2, #135
	bl	__aeabi_memcpy4
	add.w	r0, sp, #2784
	add	r1, sp, #96
	movs	r2, #132
	bl	__aeabi_memcpy4
	bl	__primask_r
	and	r5, r0, #1
	bl	__cpsid
	ldr.w	r4, [r11, #36]
	ldr.w	r6, [r11, #40]
	dmb	sy
	cmp	r4, r6
	bne	.LBB42_178
	movw	r8, #57360
	movt	r8, #57344
	cbnz	r5, .LBB42_179
.LBB42_176:
	bl	__cpsie
	cmp	r4, r6
	bne	.LBB42_180
.LBB42_177:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.277
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.277
	b	.LBB42_218
.LBB42_178:
	add.w	r0, r11, #36
	add	r0, r4
	ldrb.w	r9, [r0, #8]
	movs	r0, #1
	dmb	sy
	bics	r0, r4
	str.w	r0, [r11, #36]
	movw	r8, #57360
	cmp	r5, #0
	movt	r8, #57344
	beq	.LBB42_176
.LBB42_179:
	cmp	r4, r6
	beq	.LBB42_177
.LBB42_180:
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	ldr.w	r0, [r11, #52]
	movs	r2, #0
	add.w	r1, r11, r0, lsl #1
	adds	r0, #1
	and	r0, r0, #3
	strb.w	r2, [r1, #56]
	strb.w	r9, [r1, #57]
	lsls	r1, r4, #31
	dmb	sy
	str.w	r0, [r11, #52]
	bne	.LBB42_182
	bl	__cpsie
.LBB42_182:
	mov.w	r0, #16384
	str.w	r0, [r8, #504]
	bl	__primask_r
	and	r5, r0, #1
	bl	__cpsid
	ldr.w	r4, [r11, #12]
	ldr.w	r6, [r11, #16]
	dmb	sy
	cmp	r4, r6
	bne	.LBB42_186
	cbnz	r5, .LBB42_187
.LBB42_184:
	bl	__cpsie
	cmp	r4, r6
	bne	.LBB42_188
.LBB42_185:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.278
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.278
	b	.LBB42_218
.LBB42_186:
	add.w	r0, r11, #12
	add	r0, r4
	ldrb.w	r9, [r0, #8]
	movs	r0, #1
	dmb	sy
	bics	r0, r4
	str.w	r0, [r11, #12]
	cmp	r5, #0
	beq	.LBB42_184
.LBB42_187:
	cmp	r4, r6
	beq	.LBB42_185
.LBB42_188:
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	ldr.w	r0, [r11, #52]
	movs	r2, #1
	add.w	r1, r11, r0, lsl #1
	adds	r0, #1
	and	r0, r0, #3
	strb.w	r2, [r1, #56]
	strb.w	r9, [r1, #57]
	lsls	r1, r4, #31
	dmb	sy
	str.w	r0, [r11, #52]
	bne	.LBB42_190
	bl	__cpsie
.LBB42_190:
	mov.w	r0, #16384
	str.w	r0, [r8, #504]
	bl	__primask_r
	and	r5, r0, #1
	bl	__cpsid
	ldr.w	r4, [r11, #24]
	ldr.w	r6, [r11, #28]
	dmb	sy
	cmp	r4, r6
	bne	.LBB42_194
	cbnz	r5, .LBB42_195
.LBB42_192:
	bl	__cpsie
	cmp	r4, r6
	bne	.LBB42_196
.LBB42_193:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.279
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.279
	b	.LBB42_218
.LBB42_194:
	add.w	r0, r11, #24
	add	r0, r4
	ldrb.w	r9, [r0, #8]
	movs	r0, #1
	dmb	sy
	bics	r0, r4
	str.w	r0, [r11, #24]
	cmp	r5, #0
	beq	.LBB42_192
.LBB42_195:
	cmp	r4, r6
	beq	.LBB42_193
.LBB42_196:
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	ldr.w	r0, [r11, #52]
	movs	r2, #2
	add.w	r1, r11, r0, lsl #1
	adds	r0, #1
	and	r0, r0, #3
	strb.w	r2, [r1, #56]
	strb.w	r9, [r1, #57]
	lsls	r1, r4, #31
	dmb	sy
	str.w	r0, [r11, #52]
	bne	.LBB42_198
	bl	__cpsie
.LBB42_198:
	mov.w	r0, #16384
	str.w	r0, [r8, #504]
	ldrd	r1, r0, [sp, #16]
	add.w	lr, sp, #8
	mov.w	r2, #516
	orr.w	r0, r0, r1, lsl #8
	str	r0, [sp, #20]
	ldrb.w	r0, [sp, #1436]
	ldr.w	r1, [sp, #1432]
	str	r0, [sp, #72]
	ldrb.w	r0, [sp, #1440]
	str	r0, [sp, #80]
	ldr.w	r0, [sp, #1441]
	str	r0, [sp, #84]
	ldr.w	r0, [sp, #1445]
	str	r0, [sp, #88]
	ldrh.w	r0, [sp, #1449]
	str	r1, [sp, #68]
	addw	r1, sp, #3700
	strh.w	r0, [sp, #92]
	add.w	r0, lr, #4928
	bl	__aeabi_memcpy4
	movw	r9, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	addw	r1, sp, #3628
	movt	r9, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164
	movs	r2, #72
	add.w	r0, r9, #564
	bl	__aeabi_memcpy4
	add.w	lr, sp, #24
	mov.w	r2, #588
	add.w	r0, lr, #6624
	add.w	lr, sp, #8
	add.w	r1, lr, #7232
	bl	__aeabi_memcpy4
	ldr	r0, [sp, #64]
	strb.w	r0, [r9, #1238]
	ldr	r0, [sp, #76]
	str.w	r0, [r9, #1239]
	ldr	r0, [sp, #40]
	strb.w	r0, [r9, #1243]
	ldr	r0, [sp, #52]
	strb.w	r0, [r9, #1244]
	ldr	r0, [sp, #36]
	strb.w	r0, [r9, #1245]
	ldr	r0, [sp, #56]
	strb.w	r0, [r9, #1246]
	ldr	r0, [sp, #32]
	strb.w	r0, [r9, #1247]
	ldr	r0, [sp, #60]
	strb.w	r0, [r9, #1248]
	ldr	r0, [sp, #28]
	strb.w	r0, [r9, #1249]
	ldr	r0, [sp, #48]
	strb.w	r0, [r9, #1250]
	ldr	r0, [sp, #24]
	strb.w	r0, [r9, #1251]
	ldr	r0, [sp, #44]
	strb.w	r0, [r9, #1252]
	add	r0, sp, #616
	addw	r1, sp, #3112
	mov.w	r2, #516
	ldr.w	r8, [sp, #4]
	strb.w	r8, [r9, #1253]
	ldr.w	r11, [sp, #8]
	strb.w	r11, [r9, #1254]
	bl	__aeabi_memcpy4
	ldrb.w	r0, [sp, #3110]
	add.w	lr, sp, #8
	strb.w	r0, [r9, #1779]
	ldrh.w	r0, [sp, #3108]
	strh.w	r0, [r9, #1777]
	addw	r0, r9, #1788
	add.w	r1, lr, #6112
	mov.w	r2, #524
	bl	__aeabi_memcpy4
	ldrb.w	r0, [sp, #3106]
	add.w	r10, sp, #4352
	strb.w	r0, [r9, #2335]
	ldrh.w	r0, [sp, #3104]
	strh.w	r0, [r9, #2333]
	ldrh.w	r0, [sp, #3100]
	strh.w	r0, [r9, #2353]
	ldrb.w	r0, [sp, #3102]
	strb.w	r0, [r9, #2355]
	ldrh.w	r0, [sp, #3096]
	strh.w	r0, [r9, #2373]
	ldrb.w	r0, [sp, #3098]
	strb.w	r0, [r9, #2375]
	ldrh.w	r0, [sp, #3092]
	strh.w	r0, [r9, #2393]
	ldrb.w	r0, [sp, #3094]
	strb.w	r0, [r9, #2395]
	ldrb.w	r0, [sp, #3090]
	strb.w	r0, [r9, #2399]
	ldrh.w	r0, [sp, #3088]
	addw	r5, sp, #3052
	strh.w	r0, [r9, #2397]
	mov	r0, r10
	ldm	r5!, {r1, r2, r3, r6}
	stm	r0!, {r1, r2, r3, r6}
	ldm.w	r5, {r1, r2, r3, r4, r6}
	stm	r0!, {r1, r2, r3, r4, r6}
	addw	r0, r9, #2445
	addw	r1, sp, #2916
	movs	r2, #135
	bl	__aeabi_memcpy
	addw	r0, r9, #2580
	add.w	r1, sp, #2784
	movs	r2, #132
	bl	__aeabi_memcpy4
	add.w	lr, sp, #28
	add	r0, sp, #96
	add.w	r1, lr, #4384
	mov.w	r2, #516
	bl	__aeabi_memcpy4
	addw	r0, r9, #3284
	addw	r1, sp, #2712
	movs	r2, #72
	bl	__aeabi_memcpy4
	add.w	lr, sp, #16
	addw	r1, sp, #2120
	add.w	r0, lr, #5440
	mov.w	r2, #588
	bl	__aeabi_memcpy4
	add.w	lr, sp, #4096
	movw	r0, #4497
	add.w	r2, r9, r0
	strb.w	r8, [r9, #3973]
	ldrh.w	r1, [lr, #312]
	add.w	lr, sp, #4096
	strh.w	r1, [r9, r0]
	add.w	r1, sp, #1592
	ldrb.w	r0, [lr, #314]
	strb.w	r11, [r9, #3974]
	strb	r0, [r2, #2]
	ldr	r0, [sp, #64]
	strb.w	r0, [r9, #3958]
	ldr	r0, [sp, #76]
	str.w	r0, [r9, #3959]
	ldr	r0, [sp, #40]
	strb.w	r0, [r9, #3963]
	ldr	r0, [sp, #52]
	strb.w	r0, [r9, #3964]
	ldr	r0, [sp, #36]
	strb.w	r0, [r9, #3965]
	ldr	r0, [sp, #56]
	strb.w	r0, [r9, #3966]
	ldr	r0, [sp, #32]
	strb.w	r0, [r9, #3967]
	ldr	r0, [sp, #60]
	strb.w	r0, [r9, #3968]
	ldr	r0, [sp, #28]
	strb.w	r0, [r9, #3969]
	ldr	r0, [sp, #48]
	strb.w	r0, [r9, #3970]
	ldr	r0, [sp, #24]
	strb.w	r0, [r9, #3971]
	ldr	r0, [sp, #44]
	strb.w	r0, [r9, #3972]
	movw	r0, #4508
	add	r0, r9
	mov.w	r2, #524
	bl	__aeabi_memcpy4
	add.w	lr, sp, #24
	addw	r1, sp, #1460
	add.w	r0, lr, #4192
	movs	r2, #132
	bl	__aeabi_memcpy4
	add.w	r0, sp, #6048
	movs	r1, #66
	adds	r0, #3
	bl	__aeabi_memclr
	add.w	lr, sp, #8
	add.w	r0, r9, #16
	mov.w	r2, #516
	add.w	r1, lr, #4928
	bl	__aeabi_memcpy4
	add.w	lr, sp, #24
	add.w	r0, r9, #640
	mov.w	r2, #588
	add.w	r1, lr, #6624
	bl	__aeabi_memcpy4
	add.w	r0, r9, #1256
	mov.w	r2, #516
	add	r1, sp, #616
	bl	__aeabi_memcpy4
	mov.w	r0, #1065353216
	str.w	r0, [r9, #2312]
	mov.w	r0, #-1090519040
	mov.w	r8, #1056964608
	str.w	r8, [r9, #2316]
	movs	r5, #0
	str.w	r0, [r9, #2320]
	mov.w	r11, #1
	str.w	r8, [r9, #2324]
	str.w	r5, [r9, #2328]
	strb.w	r11, [r9, #2332]
	str.w	r8, [r9, #2336]
	str.w	r0, [r9, #2340]
	str.w	r8, [r9, #2344]
	str.w	r5, [r9, #2348]
	strb.w	r11, [r9, #2352]
	str.w	r8, [r9, #2356]
	str.w	r0, [r9, #2360]
	str.w	r8, [r9, #2364]
	str.w	r5, [r9, #2368]
	strb.w	r11, [r9, #2372]
	str.w	r8, [r9, #2376]
	str.w	r0, [r9, #2380]
	addw	r0, r9, #2408
	str.w	r8, [r9, #2384]
	str.w	r5, [r9, #2388]
	strb.w	r11, [r9, #2392]
	strb.w	r5, [r9, #2396]
	ldm.w	r10!, {r1, r2, r3, r6}
	stm	r0!, {r1, r2, r3, r6}
	ldm.w	r10, {r1, r2, r3, r4, r6}
	stm	r0!, {r1, r2, r3, r4, r6}
	add.w	r0, r9, #2736
	mov.w	r2, #516
	add	r1, sp, #96
	bl	__aeabi_memcpy4
	add.w	lr, sp, #16
	add.w	r0, r9, #3360
	mov.w	r2, #588
	add.w	r1, lr, #5440
	bl	__aeabi_memcpy4
	movw	r0, #5032
	add.w	lr, sp, #24
	add	r0, r9
	movs	r2, #132
	add.w	r1, lr, #4192
	bl	__aeabi_memcpy4
	add.w	lr, sp, #4096
	movw	r6, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_settings::haa2b499d3e77eee9
	movt	r6, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_settings::haa2b499d3e77eee9
	movs	r2, #69
	ldrb.w	r0, [lr, #2026]
	add.w	lr, sp, #4096
	strb	r0, [r6, #23]
	add.w	r1, sp, #6048
	ldrh.w	r0, [lr, #2024]
	add.w	lr, sp, #4096
	strh.w	r0, [r6, #21]
	ldrh.w	r0, [lr, #316]
	add.w	lr, sp, #4096
	strh.w	r0, [r6, #41]
	ldrb.w	r0, [lr, #318]
	add.w	lr, sp, #8
	strb.w	r0, [r6, #43]
	ldrh.w	r0, [sp, #1592]
	strh.w	r0, [r6, #61]
	ldrb.w	r0, [sp, #1594]
	strb.w	r0, [r6, #63]
	ldrh.w	r0, [sp, #3700]
	strh.w	r0, [r6, #81]
	ldrb.w	r0, [sp, #3702]
	add.w	r4, lr, #7232
	strb.w	r0, [r6, #83]
	mov	r0, r4
	bl	__aeabi_memcpy4
	ldrh.w	r0, [sp, #92]
	movw	r1, #517
	strh.w	r0, [sp, #2128]
	ldr	r0, [sp, #88]
	str.w	r0, [sp, #2124]
	ldr	r0, [sp, #84]
	str.w	r0, [sp, #2120]
	addw	r0, r9, #3976
	bl	__aeabi_memclr4
	movw	r1, :lower16:core::ops::function::FnOnce::call_once::h4b33d2a68af58905
	ldr	r3, [sp, #12]
	movt	r1, :upper16:core::ops::function::FnOnce::call_once::h4b33d2a68af58905
	str.w	r1, [r9, #2400]
	strd	r1, r11, [r9, #532]
	str.w	r1, [r9, #3252]
	movw	r1, #59000
	str.w	r1, [r9, #3260]
	movw	r1, #4493
	movw	r0, #60000
	str.w	r3, [r9, #2712]
	strd	r3, r5, [r9, #8]
	strd	r0, r5, [r9, #540]
	mov.w	r0, #256
	str.w	r3, [r9, #2728]
	movs	r3, #2
	strb.w	r3, [r9, r1]
	movw	r1, #4496
	str.w	r0, [r9, #1772]
	movs	r0, #4
	strb.w	r0, [r9, #1776]
	strb.w	r0, [r9, r1]
	movw	r0, #4504
	add.w	lr, sp, #4096
	movs	r2, #3
	str.w	r5, [r9, r0]
	adds	r1, r4, #3
	ldrb.w	r0, [lr, #3146]
	add.w	lr, sp, #4096
	strb.w	r2, [r9, #2444]
	ldr	r2, [sp, #20]
	strb.w	r0, [r6, #87]
	ldrh.w	r0, [lr, #3144]
	str.w	r2, [r9, #2716]
	movw	r2, #4494
	strh.w	r0, [r6, #85]
	mov.w	r0, #1065353216
	strd	r0, r8, [r6]
	mov.w	r0, #-1090519040
	strh.w	r5, [r9, r2]
	movw	r2, #4500
	str.w	r5, [r9]
	strd	r0, r8, [r6, #8]
	strd	r8, r0, [r6, #24]
	strd	r8, r0, [r6, #44]
	mov.w	r0, #-1090519040
	str.w	r5, [r9, r2]
	strd	r8, r0, [r6, #64]
	movw	r0, :lower16:thermostat_eem::app::__rtic_internal_shared_resource_telemetry::hda6106852c11677f
	movs	r2, #66
	movt	r0, :upper16:thermostat_eem::app::__rtic_internal_shared_resource_telemetry::hda6106852c11677f
	str.w	r5, [r9, #552]
	str.w	r5, [r9, #560]
	str.w	r5, [r9, #636]
	str.w	r5, [r9, #1228]
	str.w	r5, [r9, #1232]
	strh.w	r11, [r9, #1236]
	strb.w	r5, [r9, #1255]
	str.w	r5, [r9, #1780]
	str.w	r5, [r9, #1784]
	str.w	r5, [r9, #2404]
	str.w	r5, [r9, #2720]
	str.w	r5, [r9, #2732]
	str.w	r11, [r9, #3256]
	str.w	r5, [r9, #3264]
	str.w	r5, [r9, #3272]
	str.w	r5, [r9, #3280]
	str.w	r5, [r9, #3356]
	str.w	r5, [r9, #3948]
	str.w	r5, [r9, #3952]
	strh.w	r11, [r9, #3956]
	strb.w	r5, [r9, #3975]
	str	r5, [r6, #16]
	strb.w	r11, [r6, #20]
	strd	r8, r5, [r6, #32]
	strb.w	r11, [r6, #40]
	strd	r8, r5, [r6, #52]
	strb.w	r11, [r6, #60]
	strd	r8, r5, [r6, #72]
	strb.w	r11, [r6, #80]
	strb.w	r5, [r6, #84]
	bl	__aeabi_memcpy
	movw	r0, :lower16:thermostat_eem::app::__rtic_internal_local_resource_adc::h99c6b0f7a5dfd579
	ldr	r1, [sp, #68]
	movt	r0, :upper16:thermostat_eem::app::__rtic_internal_local_resource_adc::h99c6b0f7a5dfd579
	ldr.w	r2, [sp, #2124]
	str	r1, [r0]
	ldr	r1, [sp, #72]
	strb	r1, [r0, #4]
	movw	r0, :lower16:thermostat_eem::app::__rtic_internal_local_resource_dac::ha17ee108b9c8f7a2
	movt	r0, :upper16:thermostat_eem::app::__rtic_internal_local_resource_dac::ha17ee108b9c8f7a2
	ldr	r1, [sp, #80]
	strb	r1, [r0]
	movw	r0, :lower16:thermostat_eem::app::__rtic_internal_local_resource_adc_internal::h7bbf580938bd99c8
	movt	r0, :upper16:thermostat_eem::app::__rtic_internal_local_resource_adc_internal::h7bbf580938bd99c8
	ldr.w	r1, [sp, #2120]
	str	r1, [r0]
	ldrh.w	r1, [sp, #2128]
	strh	r1, [r0, #8]
	movw	r1, #57360
	movt	r1, #57344
	str	r2, [r0, #4]
	str	r5, [r1, #8]
	ldr	r0, [r1]
	orr	r0, r0, #1
	str	r0, [r1]
	movw	r0, :lower16:.L_MergedGlobals
	movt	r0, :upper16:.L_MergedGlobals
	strd	r11, r5, [r0, #64]
	strd	r5, r5, [r0, #72]
	bl	__cpsie
	add.w	sp, sp, #7808
	add	sp, #28
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB42_199:
	movw	r2, :lower16:.Lanon.bf09494b05510f7f30f8c8768d91b265.21
	movt	r2, :upper16:.Lanon.bf09494b05510f7f30f8c8768d91b265.21
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB42_200:
	movw	r2, :lower16:.Lanon.bf09494b05510f7f30f8c8768d91b265.21
	mov	r0, r3
	movt	r2, :upper16:.Lanon.bf09494b05510f7f30f8c8768d91b265.21
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB42_201:
	movs	r0, #1
	b	.LBB42_203
.LBB42_202:
	movs	r0, #0
.LBB42_203:
	add.w	lr, sp, #4096
	movs	r1, #6
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.25
	strb.w	r1, [lr, #3144]
	add.w	lr, sp, #4096
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.25
	strb.w	r0, [lr, #3145]
.LBB42_204:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.365
	add.w	lr, sp, #8
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.365
	add.w	r2, lr, #7232
	b	.LBB42_220
.LBB42_205:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.199
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.199
	b	.LBB42_209
.LBB42_206:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.183
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.183
	b	.LBB42_218
.LBB42_207:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.276
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.371
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.276
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.371
	b	.LBB42_219
.LBB42_208:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.202
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.202
.LBB42_209:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.377
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.377
	b	.LBB42_219
.LBB42_210:
	add.w	lr, sp, #4096
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.195
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.195
	movs	r0, #4
	strb.w	r0, [lr, #3144]
	b	.LBB42_204
.LBB42_211:
	movw	r2, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.6
	mov	r0, r5
	movt	r2, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.6
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB42_212:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.159
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.159
	b	.LBB42_218
.LBB42_213:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.27
	movw	r2, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.28
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.27
	movt	r2, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.28
	movs	r1, #109
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB42_214:
	add.w	lr, sp, #4096
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.185
	movs	r0, #4
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.185
	strb.w	r0, [lr, #3144]
	b	.LBB42_204
.LBB42_215:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.22
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.22
	b	.LBB42_218
.LBB42_216:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.26
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.26
	b	.LBB42_218
.LBB42_217:
	movw	r6, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.186
	movt	r6, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.186
.LBB42_218:
	movw	r0, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.369
	movt	r0, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.369
.LBB42_219:
	sub.w	r2, r7, #36
.LBB42_220:
	movs	r1, #43
	str	r6, [sp]
	bl	core::result::unwrap_failed::he67be68ddf63c991
	.inst.n	0xdefe
.LBB42_221:
	movw	r2, :lower16:.Lanon.bf09494b05510f7f30f8c8768d91b265.22
	movs	r1, #8
	movt	r2, :upper16:.Lanon.bf09494b05510f7f30f8c8768d91b265.22
	mov	r0, r5
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB42_222:
	movw	r2, :lower16:.Lanon.bf09494b05510f7f30f8c8768d91b265.23
	movs	r1, #8
	movt	r2, :upper16:.Lanon.bf09494b05510f7f30f8c8768d91b265.23
	mov	r0, r6
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB42_223:
	movw	r0, :lower16:.Lanon.bf09494b05510f7f30f8c8768d91b265.24
	movw	r2, :lower16:.Lanon.bf09494b05510f7f30f8c8768d91b265.25
	movt	r0, :upper16:.Lanon.bf09494b05510f7f30f8c8768d91b265.24
	movt	r2, :upper16:.Lanon.bf09494b05510f7f30f8c8768d91b265.25
	movs	r1, #46
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.Lfunc_end42:
	.size	thermostat_eem::app::rtic_ext::main::__rtic_init_resources::h9d4547472bd32894, .Lfunc_end42-thermostat_eem::app::rtic_ext::main::__rtic_init_resources::h9d4547472bd32894
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN108_$LT$core..iter..adapters..peekable..Peekable$LT$I$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h8e334cc98268caf0E","ax",%progbits
	.p2align	1
	.type	<core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next::h8e334cc98268caf0,%function
	.code	16
	.thumb_func
<core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next::h8e334cc98268caf0:
.Lfunc_begin43:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#12
	sub	sp, #12
	mov	r4, r0
	ldrd	r2, r0, [r0, #40]
	ldr	r1, [r4, #48]
	cmp	r2, #0
	mov.w	r2, #0
	str	r2, [r4, #40]
	beq	.LBB43_2
	add	sp, #12
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB43_2:
	ldrb.w	r0, [r4, #37]
	cmp	r0, #0
	bne.w	.LBB43_82
	ldrd	r6, r10, [r4, #16]
	subs.w	r2, r10, r6
	ldr.w	r9, [r4, #8]
	blo.w	.LBB43_80
	ldr	r0, [r4, #12]
	str	r0, [sp, #8]
	cmp	r10, r0
	bhi.w	.LBB43_80
	ldr	r5, [r4, #28]
	add.w	r0, r4, #32
	str	r0, [sp, #4]
	add	r0, r5
	cmp	r5, #4
	sub.w	r8, r0, #1
	bls	.LBB43_43
	b	.LBB43_7
.LBB43_6:
	subs.w	r2, r10, r6
	it	lo
	movlo	r2, #0
	blo.w	.LBB43_80
.LBB43_7:
	ldrb.w	r0, [r8]
	cmp	r2, #8
	add.w	r1, r9, r6
	bhs	.LBB43_12
	cbz	r2, .LBB43_13
	ldrb	r3, [r1]
	cmp	r3, r0
	bne	.LBB43_14
	movs	r1, #0
.LBB43_11:
	movs	r0, #1
	b	.LBB43_16
.LBB43_12:
	bl	core::slice::memchr::memchr_general_case::h79cbfa5db1e3b72b
	b	.LBB43_16
.LBB43_13:
	movs	r1, #0
	movs	r0, #0
	b	.LBB43_16
.LBB43_14:
	cmp	r2, #1
	bne	.LBB43_19
	movs	r0, #0
	movs	r1, #1
.LBB43_16:
	cmp	r0, #1
	bne.w	.LBB43_79
	adds	r0, r6, r1
	adds	r6, r0, #1
	str	r6, [r4, #16]
	cmp	r6, r5
	blo	.LBB43_6
	ldr	r0, [sp, #8]
	cmp	r6, r0
	bhi	.LBB43_6
	b	.LBB43_84
.LBB43_19:
	ldrb	r3, [r1, #1]
	cmp	r3, r0
	bne	.LBB43_21
	movs	r1, #1
	b	.LBB43_11
.LBB43_21:
	cmp	r2, #2
	bne	.LBB43_23
	movs	r0, #0
	movs	r1, #2
	b	.LBB43_16
.LBB43_23:
	ldrb	r3, [r1, #2]
	cmp	r3, r0
	bne	.LBB43_25
	movs	r1, #2
	b	.LBB43_11
.LBB43_25:
	cmp	r2, #3
	bne	.LBB43_27
	movs	r0, #0
	movs	r1, #3
	b	.LBB43_16
.LBB43_27:
	ldrb	r3, [r1, #3]
	cmp	r3, r0
	bne	.LBB43_29
	movs	r1, #3
	b	.LBB43_11
.LBB43_29:
	cmp	r2, #4
	bne	.LBB43_31
	movs	r0, #0
	movs	r1, #4
	b	.LBB43_16
.LBB43_31:
	ldrb	r3, [r1, #4]
	cmp	r3, r0
	bne	.LBB43_33
	movs	r1, #4
	b	.LBB43_11
.LBB43_33:
	cmp	r2, #5
	bne	.LBB43_35
	movs	r0, #0
	movs	r1, #5
	b	.LBB43_16
.LBB43_35:
	ldrb	r3, [r1, #5]
	cmp	r3, r0
	bne	.LBB43_37
	movs	r1, #5
	b	.LBB43_11
.LBB43_37:
	cmp	r2, #6
	bne	.LBB43_39
	movs	r0, #0
	movs	r1, #6
	b	.LBB43_16
.LBB43_39:
	ldrb	r1, [r1, #6]
	cmp	r1, r0
	bne	.LBB43_41
	movs	r1, #6
	b	.LBB43_11
.LBB43_41:
	movs	r0, #0
	movs	r1, #7
	b	.LBB43_16
.LBB43_42:
	subs.w	r2, r10, r6
	it	lo
	movlo	r2, #0
	blo	.LBB43_80
.LBB43_43:
	ldrb.w	r0, [r8]
	cmp	r2, #8
	add.w	r1, r9, r6
	bhs	.LBB43_47
	cbz	r2, .LBB43_48
	ldrb	r3, [r1]
	cmp	r3, r0
	bne	.LBB43_49
	movs	r1, #0
	b	.LBB43_65
.LBB43_47:
	bl	core::slice::memchr::memchr_general_case::h79cbfa5db1e3b72b
	b	.LBB43_66
.LBB43_48:
	movs	r1, #0
	movs	r0, #0
	b	.LBB43_66
.LBB43_49:
	cmp	r2, #1
	bne	.LBB43_51
	movs	r0, #0
	movs	r1, #1
	b	.LBB43_66
.LBB43_51:
	ldrb	r3, [r1, #1]
	cmp	r3, r0
	bne	.LBB43_53
	movs	r1, #1
	b	.LBB43_65
.LBB43_53:
	cmp	r2, #2
	bne	.LBB43_55
	movs	r0, #0
	movs	r1, #2
	b	.LBB43_66
.LBB43_55:
	ldrb	r3, [r1, #2]
	cmp	r3, r0
	bne	.LBB43_57
	movs	r1, #2
	b	.LBB43_65
.LBB43_57:
	cmp	r2, #3
	bne	.LBB43_59
	movs	r0, #0
	movs	r1, #3
	b	.LBB43_66
.LBB43_59:
	ldrb	r3, [r1, #3]
	cmp	r3, r0
	bne	.LBB43_61
	movs	r1, #3
	b	.LBB43_65
.LBB43_61:
	cmp	r2, #4
	bne	.LBB43_63
	movs	r0, #0
	movs	r1, #4
	b	.LBB43_66
.LBB43_63:
	ldrb	r3, [r1, #4]
	cmp	r3, r0
	bne	.LBB43_70
	movs	r1, #4
.LBB43_65:
	movs	r0, #1
.LBB43_66:
	cmp	r0, #1
	bne	.LBB43_79
	adds	r0, r6, r1
	adds	r6, r0, #1
	str	r6, [r4, #16]
	cmp	r6, r5
	blo	.LBB43_42
	ldr	r0, [sp, #8]
	cmp	r6, r0
	bhi	.LBB43_42
	sub.w	r11, r6, r5
	ldr	r1, [sp, #4]
	add.w	r0, r9, r11
	mov	r2, r5
	bl	memcmp
	cmp	r0, #0
	bne	.LBB43_42
	b	.LBB43_83
.LBB43_70:
	cmp	r2, #5
	bne	.LBB43_72
	movs	r0, #0
	movs	r1, #5
	b	.LBB43_66
.LBB43_72:
	ldrb	r3, [r1, #5]
	cmp	r3, r0
	bne	.LBB43_74
	movs	r1, #5
	b	.LBB43_65
.LBB43_74:
	cmp	r2, #6
	bne	.LBB43_76
	movs	r0, #0
	movs	r1, #6
	b	.LBB43_66
.LBB43_76:
	ldrb	r1, [r1, #6]
	cmp	r1, r0
	bne	.LBB43_78
	movs	r1, #6
	b	.LBB43_65
.LBB43_78:
	movs	r0, #0
	movs	r1, #7
	b	.LBB43_66
.LBB43_79:
	str.w	r10, [r4, #16]
.LBB43_80:
	ldrb.w	r0, [r4, #36]
	ldrd	r1, r2, [r4]
	cmp	r0, #0
	it	eq
	cmpeq	r2, r1
	beq	.LBB43_82
	movs	r0, #1
	strb.w	r0, [r4, #37]
	add.w	r0, r9, r1
	subs	r1, r2, r1
	add	sp, #12
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB43_82:
	movs	r1, #0
	movs	r0, #0
	add	sp, #12
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB43_83:
	ldr	r1, [r4]
	str	r6, [r4]
	add.w	r0, r9, r1
	sub.w	r1, r11, r1
	add	sp, #12
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB43_84:
	movw	r2, :lower16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.30
	movs	r1, #4
	movt	r2, :upper16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.30
	mov	r0, r5
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.Lfunc_end43:
	.size	<core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next::h8e334cc98268caf0, .Lfunc_end43-<core::iter::adapters::peekable::Peekable<I> as core::iter::traits::iterator::Iterator>::next::h8e334cc98268caf0
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN4core4iter6traits8iterator8Iterator8for_each17h79579232ccdef713E,"ax",%progbits
	.p2align	1
	.type	core::iter::traits::iterator::Iterator::for_each::h79579232ccdef713,%function
	.code	16
	.thumb_func
core::iter::traits::iterator::Iterator::for_each::h79579232ccdef713:
.Lfunc_begin44:
	.fnstart
	.cfi_startproc
	movw	r0, :lower16:.L_MergedGlobals
	movs	r3, #0
	movt	r0, :upper16:.L_MergedGlobals
	ldr	r1, [r0, #16]
	adds	r2, r0, r1
	strb	r3, [r2, #20]
	movs	r2, #1
	dmb	sy
	bic.w	r1, r2, r1
	str	r1, [r0, #16]
	bx	lr
.Lfunc_end44:
	.size	core::iter::traits::iterator::Iterator::for_each::h79579232ccdef713, .Lfunc_end44-core::iter::traits::iterator::Iterator::for_each::h79579232ccdef713
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN4core4iter6traits8iterator8Iterator8for_each17hbff1aca20846a807E,"ax",%progbits
	.p2align	1
	.type	core::iter::traits::iterator::Iterator::for_each::hbff1aca20846a807,%function
	.code	16
	.thumb_func
core::iter::traits::iterator::Iterator::for_each::hbff1aca20846a807:
.Lfunc_begin45:
	.fnstart
	.cfi_startproc
	movw	r0, :lower16:.L_MergedGlobals
	movs	r3, #0
	movt	r0, :upper16:.L_MergedGlobals
	ldr	r1, [r0, #28]
	adds	r2, r0, r1
	strb.w	r3, [r2, #32]
	movs	r2, #1
	dmb	sy
	bic.w	r1, r2, r1
	str	r1, [r0, #28]
	bx	lr
.Lfunc_end45:
	.size	core::iter::traits::iterator::Iterator::for_each::hbff1aca20846a807, .Lfunc_end45-core::iter::traits::iterator::Iterator::for_each::hbff1aca20846a807
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN4core4iter6traits8iterator8Iterator8for_each17hdd4a86373ad0bc79E,"ax",%progbits
	.p2align	1
	.type	core::iter::traits::iterator::Iterator::for_each::hdd4a86373ad0bc79,%function
	.code	16
	.thumb_func
core::iter::traits::iterator::Iterator::for_each::hdd4a86373ad0bc79:
.Lfunc_begin46:
	.fnstart
	.cfi_startproc
	movw	r0, :lower16:.L_MergedGlobals
	movs	r3, #0
	movt	r0, :upper16:.L_MergedGlobals
	ldr	r1, [r0, #40]
	adds	r2, r0, r1
	strb.w	r3, [r2, #44]
	movs	r2, #1
	dmb	sy
	bic.w	r1, r2, r1
	str	r1, [r0, #40]
	bx	lr
.Lfunc_end46:
	.size	core::iter::traits::iterator::Iterator::for_each::hdd4a86373ad0bc79, .Lfunc_end46-core::iter::traits::iterator::Iterator::for_each::hdd4a86373ad0bc79
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN4core9panicking19unreachable_display17ha2cb2276c81f1a04E,"ax",%progbits
	.p2align	1
	.type	core::panicking::unreachable_display::ha2cb2276c81f1a04,%function
	.code	16
	.thumb_func
core::panicking::unreachable_display::ha2cb2276c81f1a04:
.Lfunc_begin47:
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	.pad	#32
	sub	sp, #32
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.76
	movs	r2, #1
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.76
	str	r1, [sp, #24]
	movw	r1, :lower16:<&T as core::fmt::Display>::fmt::h46598aa20843e58b
	str	r2, [sp, #4]
	movt	r1, :upper16:<&T as core::fmt::Display>::fmt::h46598aa20843e58b
	str	r1, [sp, #28]
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.358
	str	r2, [sp, #20]
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.358
	str	r1, [sp]
	movs	r1, #0
	strd	r1, r1, [sp, #8]
	add	r1, sp, #24
	str	r1, [sp, #16]
	mov	r1, r0
	mov	r0, sp
	bl	core::panicking::panic_fmt::h679f68291595c801
	.inst.n	0xdefe
.Lfunc_end47:
	.size	core::panicking::unreachable_display::ha2cb2276c81f1a04, .Lfunc_end47-core::panicking::unreachable_display::ha2cb2276c81f1a04
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text.unlikely._ZN4core9panicking13assert_failed17h18fdc9bc0bdaf755E,"ax",%progbits
	.p2align	1
	.type	core::panicking::assert_failed::h18fdc9bc0bdaf755,%function
	.code	16
	.thumb_func
core::panicking::assert_failed::h18fdc9bc0bdaf755:
.Lfunc_begin48:
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	.pad	#40
	sub	sp, #40
	add.w	r12, sp, #16
	str	r0, [sp, #8]
	str	r1, [sp, #12]
	mov	r1, r12
	ldm.w	r2, {r0, r3, r4, r5, r6, lr}
	stm.w	r1, {r0, r3, r4, r5, r6, lr}
	movw	r3, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.105
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.209
	movt	r3, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.105
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.209
	add	r0, sp, #8
	add	r2, sp, #12
	str	r3, [sp, #4]
	mov	r3, r1
	str.w	r12, [sp]
	bl	core::panicking::assert_failed_inner::h492fc9c36dcbce8b
	.inst.n	0xdefe
.Lfunc_end48:
	.size	core::panicking::assert_failed::h18fdc9bc0bdaf755, .Lfunc_end48-core::panicking::assert_failed::h18fdc9bc0bdaf755
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h23afcdcb16176a7eE","ax",%progbits
	.p2align	1
	.type	<&mut W as core::fmt::Write>::write_str::h23afcdcb16176a7e,%function
	.code	16
	.thumb_func
<&mut W as core::fmt::Write>::write_str::h23afcdcb16176a7e:
.Lfunc_begin49:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r11}
	str	r11, [sp, #-4]!
	.cfi_offset r11, -24
	ldr	r0, [r0]
	ldr	r3, [r0]
	add.w	r12, r3, r2
	cmp.w	r12, #128
	bhi	.LBB49_9
	cbz	r2, .LBB49_9
	ands	r5, r2, #3
	sub.w	lr, r2, #1
	mov	r4, r1
	beq	.LBB49_6
	add	r3, r0
	ldrb	r6, [r4], #1
	cmp	r5, #1
	strb	r6, [r3, #4]
	ldr	r3, [r0]
	add.w	r3, r3, #1
	str	r3, [r0]
	beq	.LBB49_6
	add	r3, r0
	ldrb	r4, [r1, #1]
	cmp	r5, #2
	strb	r4, [r3, #4]
	ldr	r3, [r0]
	add.w	r3, r3, #1
	str	r3, [r0]
	bne	.LBB49_10
	adds	r4, r1, #2
.LBB49_6:
	cmp.w	lr, #3
	blo	.LBB49_9
.LBB49_7:
	add	r1, r2
	subs	r2, r4, #4
	adds	r4, r0, #4
.LBB49_8:
	ldrb	r6, [r2, #4]!
	strb	r6, [r4, r3]
	ldrb	r6, [r2, #1]
	ldr	r3, [r0]
	adds	r3, #1
	str	r3, [r0]
	strb	r6, [r4, r3]
	ldrb	r6, [r2, #2]
	ldr	r3, [r0]
	adds	r3, #1
	str	r3, [r0]
	strb	r6, [r4, r3]
	ldrb	r6, [r2, #3]
	ldr	r3, [r0]
	adds	r3, #1
	str	r3, [r0]
	strb	r6, [r4, r3]
	adds	r3, r2, #4
	ldr	r6, [r0]
	cmp	r3, r1
	add.w	r3, r6, #1
	str	r3, [r0]
	bne	.LBB49_8
.LBB49_9:
	movs	r0, #0
	cmp.w	r12, #128
	it	hi
	movhi	r0, #1
	ldr	r11, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.LBB49_10:
	add	r3, r0
	ldrb	r4, [r1, #2]
	strb	r4, [r3, #4]
	adds	r4, r1, #3
	ldr	r3, [r0]
	adds	r3, #1
	str	r3, [r0]
	cmp.w	lr, #3
	bhs	.LBB49_7
	b	.LBB49_9
.Lfunc_end49:
	.size	<&mut W as core::fmt::Write>::write_str::h23afcdcb16176a7e, .Lfunc_end49-<&mut W as core::fmt::Write>::write_str::h23afcdcb16176a7e
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h76dae6f71e4f6d54E","ax",%progbits
	.p2align	1
	.type	<&mut W as core::fmt::Write>::write_str::h76dae6f71e4f6d54,%function
	.code	16
	.thumb_func
<&mut W as core::fmt::Write>::write_str::h76dae6f71e4f6d54:
.Lfunc_begin50:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r11}
	str	r11, [sp, #-4]!
	.cfi_offset r11, -24
	ldr	r0, [r0]
	ldr	r3, [r0]
	add.w	r12, r3, r2
	cmp.w	r12, #64
	bhi	.LBB50_9
	cbz	r2, .LBB50_9
	ands	r5, r2, #3
	sub.w	lr, r2, #1
	mov	r4, r1
	beq	.LBB50_6
	add	r3, r0
	ldrb	r6, [r4], #1
	cmp	r5, #1
	strb	r6, [r3, #4]
	ldr	r3, [r0]
	add.w	r3, r3, #1
	str	r3, [r0]
	beq	.LBB50_6
	add	r3, r0
	ldrb	r4, [r1, #1]
	cmp	r5, #2
	strb	r4, [r3, #4]
	ldr	r3, [r0]
	add.w	r3, r3, #1
	str	r3, [r0]
	bne	.LBB50_10
	adds	r4, r1, #2
.LBB50_6:
	cmp.w	lr, #3
	blo	.LBB50_9
.LBB50_7:
	add	r1, r2
	subs	r2, r4, #4
	adds	r4, r0, #4
.LBB50_8:
	ldrb	r6, [r2, #4]!
	strb	r6, [r4, r3]
	ldrb	r6, [r2, #1]
	ldr	r3, [r0]
	adds	r3, #1
	str	r3, [r0]
	strb	r6, [r4, r3]
	ldrb	r6, [r2, #2]
	ldr	r3, [r0]
	adds	r3, #1
	str	r3, [r0]
	strb	r6, [r4, r3]
	ldrb	r6, [r2, #3]
	ldr	r3, [r0]
	adds	r3, #1
	str	r3, [r0]
	strb	r6, [r4, r3]
	adds	r3, r2, #4
	ldr	r6, [r0]
	cmp	r3, r1
	add.w	r3, r6, #1
	str	r3, [r0]
	bne	.LBB50_8
.LBB50_9:
	movs	r0, #0
	cmp.w	r12, #64
	it	hi
	movhi	r0, #1
	ldr	r11, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.LBB50_10:
	add	r3, r0
	ldrb	r4, [r1, #2]
	strb	r4, [r3, #4]
	adds	r4, r1, #3
	ldr	r3, [r0]
	adds	r3, #1
	str	r3, [r0]
	cmp.w	lr, #3
	bhs	.LBB50_7
	b	.LBB50_9
.Lfunc_end50:
	.size	<&mut W as core::fmt::Write>::write_str::h76dae6f71e4f6d54, .Lfunc_end50-<&mut W as core::fmt::Write>::write_str::h76dae6f71e4f6d54
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h051094ac7bc79ffdE","ax",%progbits
	.p2align	1
	.type	<&mut W as core::fmt::Write>::write_char::h051094ac7bc79ffd,%function
	.code	16
	.thumb_func
<&mut W as core::fmt::Write>::write_char::h051094ac7bc79ffd:
.Lfunc_begin51:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8}
	str	r8, [sp, #-4]!
	.cfi_offset r8, -24
	.pad	#4
	sub	sp, #4
	cmp	r1, #128
	ldr	r2, [r0]
	bhs	.LBB51_4
	ldr	r3, [r2]
	cmp	r3, #63
	bhi	.LBB51_3
	adds	r0, r2, r3
	strb	r1, [r0, #4]
	ldr	r0, [r2]
	adds	r0, #1
	str	r0, [r2]
.LBB51_3:
	movs	r0, #0
	cmp	r3, #63
	it	hi
	movhi	r0, #1
	b	.LBB51_22
.LBB51_4:
	cmp.w	r1, #2048
	mov.w	r0, #0
	str	r0, [sp]
	bhs	.LBB51_6
	mvn	r0, #63
	movs	r3, #2
	orr.w	r12, r0, r1, lsr #6
	movw	r0, #65534
	movt	r0, #1023
	strb.w	r12, [sp]
	bfi	r1, r0, #6, #26
	strb.w	r1, [sp, #1]
	mov.w	lr, #0
	movs	r4, #0
	b	.LBB51_10
.LBB51_6:
	cmp.w	r1, #65536
	bhs	.LBB51_8
	movw	r3, #65534
	mvn	r0, #31
	movt	r3, #1023
	orr.w	r12, r0, r1, lsr #12
	lsrs	r0, r1, #6
	strb.w	r12, [sp]
	bfi	r1, r3, #6, #26
	strb.w	r1, [sp, #2]
	bfi	r0, r3, #6, #26
	strb.w	r0, [sp, #1]
	movs	r3, #3
	mov.w	lr, #0
	mov	r4, r1
	b	.LBB51_9
.LBB51_8:
	movw	r3, #65534
	mvn	r0, #15
	movt	r3, #1023
	orr.w	r12, r0, r1, lsr #18
	lsrs	r0, r1, #12
	strb.w	r12, [sp]
	lsrs	r4, r1, #6
	bfi	r1, r3, #6, #26
	strb.w	r1, [sp, #3]
	bfi	r0, r3, #6, #26
	mov	lr, r1
	bfi	r4, r3, #6, #26
	movs	r3, #4
	strb.w	r0, [sp, #1]
	strb.w	r4, [sp, #2]
.LBB51_9:
	mov	r1, r0
.LBB51_10:
	ldr	r5, [r2]
	movs	r0, #0
	adds	r6, r5, r3
	cmp	r6, #64
	it	hi
	movhi	r0, #1
	bhi	.LBB51_22
	add	r5, r2
	cmp	r3, #1
	strb.w	r12, [r5, #4]
	ldr	r6, [r2]
	add.w	r6, r6, #1
	str	r6, [r2]
	beq	.LBB51_22
	add	r6, r2
	mov	r8, sp
	add.w	r12, r8, r3
	add.w	r5, r8, #2
	strb	r1, [r6, #4]
	cmp	r5, r12
	ldr	r1, [r2]
	add.w	r1, r1, #1
	str	r1, [r2]
	beq	.LBB51_22
	adds	r5, r2, r1
	add.w	r1, r8, #3
	cmp	r1, r12
	strb	r4, [r5, #4]
	ldr	r4, [r2]
	add.w	r4, r4, #1
	str	r4, [r2]
	beq	.LBB51_22
	adds	r5, r3, #1
	subs	r3, #4
	ands	r6, r5, #3
	beq	.LBB51_19
	add	r4, r2
	add.w	r1, r8, #4
	cmp	r6, #1
	strb.w	lr, [r4, #4]
	ldr	r5, [r2]
	add.w	r4, r5, #1
	str	r4, [r2]
	beq	.LBB51_19
	ldr	r5, [r2]
	cmp	r6, #2
	add.w	r4, r5, #1
	str	r4, [r2]
	bne	.LBB51_18
	adds	r1, #1
	b	.LBB51_19
.LBB51_18:
	ldr	r6, [r2]
	adds	r1, #2
	adds	r4, r6, #1
	str	r4, [r2]
.LBB51_19:
	cmp	r3, #3
	blo	.LBB51_22
	subs	r1, #4
	adds	r3, r2, #4
.LBB51_21:
	ldrb	r6, [r1, #4]!
	strb	r6, [r3, r4]
	ldrb	r5, [r1, #1]
	ldr	r6, [r2]
	adds	r6, #1
	str	r6, [r2]
	strb	r5, [r3, r6]
	ldrb	r5, [r1, #2]
	ldr	r6, [r2]
	adds	r6, #1
	str	r6, [r2]
	strb	r5, [r3, r6]
	ldrb	r5, [r1, #3]
	ldr	r6, [r2]
	adds	r6, #1
	str	r6, [r2]
	strb	r5, [r3, r6]
	adds	r6, r1, #4
	ldr	r5, [r2]
	cmp	r6, r12
	add.w	r4, r5, #1
	str	r4, [r2]
	bne	.LBB51_21
.LBB51_22:
	add	sp, #4
	ldr	r8, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.Lfunc_end51:
	.size	<&mut W as core::fmt::Write>::write_char::h051094ac7bc79ffd, .Lfunc_end51-<&mut W as core::fmt::Write>::write_char::h051094ac7bc79ffd
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h60688cb82a934564E","ax",%progbits
	.p2align	1
	.type	<&mut W as core::fmt::Write>::write_char::h60688cb82a934564,%function
	.code	16
	.thumb_func
<&mut W as core::fmt::Write>::write_char::h60688cb82a934564:
.Lfunc_begin52:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8}
	str	r8, [sp, #-4]!
	.cfi_offset r8, -24
	.pad	#4
	sub	sp, #4
	cmp	r1, #128
	ldr	r2, [r0]
	bhs	.LBB52_4
	ldr	r3, [r2]
	cmp	r3, #127
	bhi	.LBB52_3
	adds	r0, r2, r3
	strb	r1, [r0, #4]
	ldr	r0, [r2]
	adds	r0, #1
	str	r0, [r2]
.LBB52_3:
	movs	r0, #0
	cmp	r3, #127
	it	hi
	movhi	r0, #1
	b	.LBB52_22
.LBB52_4:
	cmp.w	r1, #2048
	mov.w	r0, #0
	str	r0, [sp]
	bhs	.LBB52_6
	mvn	r0, #63
	movs	r3, #2
	orr.w	r12, r0, r1, lsr #6
	movw	r0, #65534
	movt	r0, #1023
	strb.w	r12, [sp]
	bfi	r1, r0, #6, #26
	strb.w	r1, [sp, #1]
	mov.w	lr, #0
	movs	r4, #0
	b	.LBB52_10
.LBB52_6:
	cmp.w	r1, #65536
	bhs	.LBB52_8
	movw	r3, #65534
	mvn	r0, #31
	movt	r3, #1023
	orr.w	r12, r0, r1, lsr #12
	lsrs	r0, r1, #6
	strb.w	r12, [sp]
	bfi	r1, r3, #6, #26
	strb.w	r1, [sp, #2]
	bfi	r0, r3, #6, #26
	strb.w	r0, [sp, #1]
	movs	r3, #3
	mov.w	lr, #0
	mov	r4, r1
	b	.LBB52_9
.LBB52_8:
	movw	r3, #65534
	mvn	r0, #15
	movt	r3, #1023
	orr.w	r12, r0, r1, lsr #18
	lsrs	r0, r1, #12
	strb.w	r12, [sp]
	lsrs	r4, r1, #6
	bfi	r1, r3, #6, #26
	strb.w	r1, [sp, #3]
	bfi	r0, r3, #6, #26
	mov	lr, r1
	bfi	r4, r3, #6, #26
	movs	r3, #4
	strb.w	r0, [sp, #1]
	strb.w	r4, [sp, #2]
.LBB52_9:
	mov	r1, r0
.LBB52_10:
	ldr	r5, [r2]
	movs	r0, #0
	adds	r6, r5, r3
	cmp	r6, #128
	it	hi
	movhi	r0, #1
	bhi	.LBB52_22
	add	r5, r2
	cmp	r3, #1
	strb.w	r12, [r5, #4]
	ldr	r6, [r2]
	add.w	r6, r6, #1
	str	r6, [r2]
	beq	.LBB52_22
	add	r6, r2
	mov	r8, sp
	add.w	r12, r8, r3
	add.w	r5, r8, #2
	strb	r1, [r6, #4]
	cmp	r5, r12
	ldr	r1, [r2]
	add.w	r1, r1, #1
	str	r1, [r2]
	beq	.LBB52_22
	adds	r5, r2, r1
	add.w	r1, r8, #3
	cmp	r1, r12
	strb	r4, [r5, #4]
	ldr	r4, [r2]
	add.w	r4, r4, #1
	str	r4, [r2]
	beq	.LBB52_22
	adds	r5, r3, #1
	subs	r3, #4
	ands	r6, r5, #3
	beq	.LBB52_19
	add	r4, r2
	add.w	r1, r8, #4
	cmp	r6, #1
	strb.w	lr, [r4, #4]
	ldr	r5, [r2]
	add.w	r4, r5, #1
	str	r4, [r2]
	beq	.LBB52_19
	ldr	r5, [r2]
	cmp	r6, #2
	add.w	r4, r5, #1
	str	r4, [r2]
	bne	.LBB52_18
	adds	r1, #1
	b	.LBB52_19
.LBB52_18:
	ldr	r6, [r2]
	adds	r1, #2
	adds	r4, r6, #1
	str	r4, [r2]
.LBB52_19:
	cmp	r3, #3
	blo	.LBB52_22
	subs	r1, #4
	adds	r3, r2, #4
.LBB52_21:
	ldrb	r6, [r1, #4]!
	strb	r6, [r3, r4]
	ldrb	r5, [r1, #1]
	ldr	r6, [r2]
	adds	r6, #1
	str	r6, [r2]
	strb	r5, [r3, r6]
	ldrb	r5, [r1, #2]
	ldr	r6, [r2]
	adds	r6, #1
	str	r6, [r2]
	strb	r5, [r3, r6]
	ldrb	r5, [r1, #3]
	ldr	r6, [r2]
	adds	r6, #1
	str	r6, [r2]
	strb	r5, [r3, r6]
	adds	r6, r1, #4
	ldr	r5, [r2]
	cmp	r6, r12
	add.w	r4, r5, #1
	str	r4, [r2]
	bne	.LBB52_21
.LBB52_22:
	add	sp, #4
	ldr	r8, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.Lfunc_end52:
	.size	<&mut W as core::fmt::Write>::write_char::h60688cb82a934564, .Lfunc_end52-<&mut W as core::fmt::Write>::write_char::h60688cb82a934564
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17h8e39c0e52d6c41b1E","ax",%progbits
	.p2align	1
	.type	<&mut W as core::fmt::Write>::write_fmt::h8e39c0e52d6c41b1,%function
	.code	16
	.thumb_func
<&mut W as core::fmt::Write>::write_fmt::h8e39c0e52d6c41b1:
.Lfunc_begin53:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r11}
	str	r11, [sp, #-4]!
	.cfi_offset r11, -24
	.pad	#32
	sub	sp, #32
	add	r2, sp, #8
	ldr	r0, [r0]
	str	r0, [sp, #4]
	mov	r0, r2
	ldm.w	r1, {r3, r4, r5, r6, r12, lr}
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.380
	stm.w	r0, {r3, r4, r5, r6, r12, lr}
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.380
	add	r0, sp, #4
	bl	core::fmt::write::h5d3fbef16e428eed
	add	sp, #32
	ldr	r11, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.Lfunc_end53:
	.size	<&mut W as core::fmt::Write>::write_fmt::h8e39c0e52d6c41b1, .Lfunc_end53-<&mut W as core::fmt::Write>::write_fmt::h8e39c0e52d6c41b1
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17hd504f3bfaf618f0eE","ax",%progbits
	.p2align	1
	.type	<&mut W as core::fmt::Write>::write_fmt::hd504f3bfaf618f0e,%function
	.code	16
	.thumb_func
<&mut W as core::fmt::Write>::write_fmt::hd504f3bfaf618f0e:
.Lfunc_begin54:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r11}
	str	r11, [sp, #-4]!
	.cfi_offset r11, -24
	.pad	#32
	sub	sp, #32
	add	r2, sp, #8
	ldr	r0, [r0]
	str	r0, [sp, #4]
	mov	r0, r2
	ldm.w	r1, {r3, r4, r5, r6, r12, lr}
	movw	r1, :lower16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.379
	stm.w	r0, {r3, r4, r5, r6, r12, lr}
	movt	r1, :upper16:.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.379
	add	r0, sp, #4
	bl	core::fmt::write::h5d3fbef16e428eed
	add	sp, #32
	ldr	r11, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.Lfunc_end54:
	.size	<&mut W as core::fmt::Write>::write_fmt::hd504f3bfaf618f0e, .Lfunc_end54-<&mut W as core::fmt::Write>::write_fmt::hd504f3bfaf618f0e
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN41_$LT$bool$u20$as$u20$core..fmt..Debug$GT$3fmt17h892e011bbc64ca02E","ax",%progbits
	.p2align	1
	.type	<bool as core::fmt::Debug>::fmt::h892e011bbc64ca02,%function
	.code	16
	.thumb_func
<bool as core::fmt::Debug>::fmt::h892e011bbc64ca02:
.Lfunc_begin55:
	.fnstart
	.cfi_startproc
	b	<bool as core::fmt::Display>::fmt::hda8ae0c64ceca41d
.Lfunc_end55:
	.size	<bool as core::fmt::Debug>::fmt::h892e011bbc64ca02, .Lfunc_end55-<bool as core::fmt::Debug>::fmt::h892e011bbc64ca02
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN45_$LT$$LP$$RP$$u20$as$u20$core..fmt..Debug$GT$3fmt17h734bc91bafa1a210E","ax",%progbits
	.p2align	1
	.type	<() as core::fmt::Debug>::fmt::h734bc91bafa1a210,%function
	.code	16
	.thumb_func
<() as core::fmt::Debug>::fmt::h734bc91bafa1a210:
.Lfunc_begin56:
	.fnstart
	.cfi_startproc
	movw	r3, :lower16:.Lanon.bf09494b05510f7f30f8c8768d91b265.49
	movs	r2, #2
	movt	r3, :upper16:.Lanon.bf09494b05510f7f30f8c8768d91b265.49
	mov	r0, r1
	mov	r1, r3
	b	core::fmt::Formatter::pad::h936b549e1667e5be
.Lfunc_end56:
	.size	<() as core::fmt::Debug>::fmt::h734bc91bafa1a210, .Lfunc_end56-<() as core::fmt::Debug>::fmt::h734bc91bafa1a210
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h4b1edc1df8703cc0E","ax",%progbits
	.p2align	1
	.type	core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h4b1edc1df8703cc0,%function
	.code	16
	.thumb_func
core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h4b1edc1df8703cc0:
.Lfunc_begin57:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r7, lr}
	push	{r4, r5, r7, lr}
	.cfi_def_cfa_offset 16
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r5, -12
	.cfi_offset r4, -16
	.setfp	r7, sp, #8
	add	r7, sp, #8
	.cfi_def_cfa r7, 8
	mov	r5, r0
	mov	r0, r1
	mov	r4, r1
	bl	core::fmt::Formatter::debug_lower_hex::h3647386a22b50f1b
	cbz	r0, .LBB57_2
	mov	r0, r5
	mov	r1, r4
	pop.w	{r4, r5, r7, lr}
	b	core::fmt::num::<impl core::fmt::LowerHex for i32>::fmt::hac89ce7c82380f7e
.LBB57_2:
	mov	r0, r4
	bl	core::fmt::Formatter::debug_upper_hex::hda639ee7898a7efd
	cbz	r0, .LBB57_4
	mov	r0, r5
	mov	r1, r4
	pop.w	{r4, r5, r7, lr}
	b	core::fmt::num::<impl core::fmt::UpperHex for i32>::fmt::h199b48bc29ed0670
.LBB57_4:
	mov	r0, r5
	mov	r1, r4
	pop.w	{r4, r5, r7, lr}
	b	core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::h9d0ff72e374f98e7
.Lfunc_end57:
	.size	core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h4b1edc1df8703cc0, .Lfunc_end57-core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h4b1edc1df8703cc0
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h5fa9f38792cc9b9aE","ax",%progbits
	.p2align	1
	.type	<&T as core::fmt::Debug>::fmt::h5fa9f38792cc9b9a,%function
	.code	16
	.thumb_func
<&T as core::fmt::Debug>::fmt::h5fa9f38792cc9b9a:
.Lfunc_begin58:
	.fnstart
	.cfi_startproc
	ldr	r0, [r0]
	ldrb	r0, [r0]
	cmp	r0, #0
	mov	r0, r1
	beq	.LBB58_2
	movw	r1, :lower16:.Lanon.12fdbf64440a522ae100401431f72384.23
	movs	r2, #10
	movt	r1, :upper16:.Lanon.12fdbf64440a522ae100401431f72384.23
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB58_2:
	movw	r1, :lower16:.Lanon.12fdbf64440a522ae100401431f72384.24
	movs	r2, #11
	movt	r1, :upper16:.Lanon.12fdbf64440a522ae100401431f72384.24
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.Lfunc_end58:
	.size	<&T as core::fmt::Debug>::fmt::h5fa9f38792cc9b9a, .Lfunc_end58-<&T as core::fmt::Debug>::fmt::h5fa9f38792cc9b9a
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h91a59510d9356673E","ax",%progbits
	.p2align	2
	.type	<&T as core::fmt::Debug>::fmt::h91a59510d9356673,%function
	.code	16
	.thumb_func
<&T as core::fmt::Debug>::fmt::h91a59510d9356673:
.Lfunc_begin59:
	.fnstart
	.cfi_startproc
	ldr	r0, [r0]
	ldrb	r2, [r0]
	mov	r0, r1
.LCPI59_0:
	tbb	[pc, r2]
.LJTI59_0:
	.byte	(.LBB59_2-(.LCPI59_0+4))/2
	.byte	(.LBB59_3-(.LCPI59_0+4))/2
	.byte	(.LBB59_4-(.LCPI59_0+4))/2
	.byte	(.LBB59_5-(.LCPI59_0+4))/2
	.byte	(.LBB59_6-(.LCPI59_0+4))/2
	.byte	(.LBB59_7-(.LCPI59_0+4))/2
	.p2align	1
.LBB59_2:
	movw	r1, :lower16:.Lanon.d60fa0a6be4cd9bff433fd8cd5be529e.5
	movs	r2, #8
	movt	r1, :upper16:.Lanon.d60fa0a6be4cd9bff433fd8cd5be529e.5
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB59_3:
	movw	r1, :lower16:.Lanon.d60fa0a6be4cd9bff433fd8cd5be529e.4
	movs	r2, #17
	movt	r1, :upper16:.Lanon.d60fa0a6be4cd9bff433fd8cd5be529e.4
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB59_4:
	movw	r1, :lower16:.Lanon.d60fa0a6be4cd9bff433fd8cd5be529e.3
	movs	r2, #11
	movt	r1, :upper16:.Lanon.d60fa0a6be4cd9bff433fd8cd5be529e.3
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB59_5:
	movw	r1, :lower16:.Lanon.d60fa0a6be4cd9bff433fd8cd5be529e.2
	movs	r2, #12
	movt	r1, :upper16:.Lanon.d60fa0a6be4cd9bff433fd8cd5be529e.2
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB59_6:
	movw	r1, :lower16:.Lanon.d60fa0a6be4cd9bff433fd8cd5be529e.1
	movs	r2, #11
	movt	r1, :upper16:.Lanon.d60fa0a6be4cd9bff433fd8cd5be529e.1
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB59_7:
	movw	r1, :lower16:.Lanon.d60fa0a6be4cd9bff433fd8cd5be529e.0
	movs	r2, #11
	movt	r1, :upper16:.Lanon.d60fa0a6be4cd9bff433fd8cd5be529e.0
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.Lfunc_end59:
	.size	<&T as core::fmt::Debug>::fmt::h91a59510d9356673, .Lfunc_end59-<&T as core::fmt::Debug>::fmt::h91a59510d9356673
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h9a7024b8faed08c4E","ax",%progbits
	.p2align	1
	.type	<&T as core::fmt::Debug>::fmt::h9a7024b8faed08c4,%function
	.code	16
	.thumb_func
<&T as core::fmt::Debug>::fmt::h9a7024b8faed08c4:
.Lfunc_begin60:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r7, lr}
	push	{r4, r5, r7, lr}
	.cfi_def_cfa_offset 16
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r5, -12
	.cfi_offset r4, -16
	.setfp	r7, sp, #8
	add	r7, sp, #8
	.cfi_def_cfa r7, 8
	ldr	r5, [r0]
	mov	r0, r1
	mov	r4, r1
	bl	core::fmt::Formatter::debug_lower_hex::h3647386a22b50f1b
	cbz	r0, .LBB60_2
	mov	r0, r5
	mov	r1, r4
	pop.w	{r4, r5, r7, lr}
	b	core::fmt::num::<impl core::fmt::LowerHex for i8>::fmt::hd91ed785dea0d6b1
.LBB60_2:
	mov	r0, r4
	bl	core::fmt::Formatter::debug_upper_hex::hda639ee7898a7efd
	cbz	r0, .LBB60_4
	mov	r0, r5
	mov	r1, r4
	pop.w	{r4, r5, r7, lr}
	b	core::fmt::num::<impl core::fmt::UpperHex for i8>::fmt::hc0a456b5846e5633
.LBB60_4:
	mov	r0, r5
	mov	r1, r4
	pop.w	{r4, r5, r7, lr}
	b	core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt::ha0378c4201814c21
.Lfunc_end60:
	.size	<&T as core::fmt::Debug>::fmt::h9a7024b8faed08c4, .Lfunc_end60-<&T as core::fmt::Debug>::fmt::h9a7024b8faed08c4
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha61e53eebf9b52f6E","ax",%progbits
	.p2align	2
	.type	<&T as core::fmt::Debug>::fmt::ha61e53eebf9b52f6,%function
	.code	16
	.thumb_func
<&T as core::fmt::Debug>::fmt::ha61e53eebf9b52f6:
.Lfunc_begin61:
	.fnstart
	.cfi_startproc
	ldr	r0, [r0]
	ldrb	r0, [r0]
.LCPI61_0:
	tbb	[pc, r0]
.LJTI61_0:
	.byte	(.LBB61_2-(.LCPI61_0+4))/2
	.byte	(.LBB61_3-(.LCPI61_0+4))/2
	.byte	(.LBB61_4-(.LCPI61_0+4))/2
	.byte	(.LBB61_5-(.LCPI61_0+4))/2
	.byte	(.LBB61_7-(.LCPI61_0+4))/2
	.byte	(.LBB61_8-(.LCPI61_0+4))/2
	.byte	(.LBB61_9-(.LCPI61_0+4))/2
	.byte	(.LBB61_10-(.LCPI61_0+4))/2
	.byte	(.LBB61_13-(.LCPI61_0+4))/2
	.byte	(.LBB61_11-(.LCPI61_0+4))/2
	.byte	(.LBB61_12-(.LCPI61_0+4))/2
	.p2align	1
.LBB61_2:
	movw	r3, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.94
	movt	r3, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.94
	b	.LBB61_6
.LBB61_3:
	movw	r3, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.93
	movs	r2, #8
	movt	r3, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.93
	mov	r0, r1
	mov	r1, r3
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB61_4:
	movw	r3, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.47
	movs	r2, #7
	movt	r3, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.47
	mov	r0, r1
	mov	r1, r3
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB61_5:
	movw	r3, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.92
	movt	r3, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.92
.LBB61_6:
	movs	r2, #6
	mov	r0, r1
	mov	r1, r3
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB61_7:
	movw	r3, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.91
	movs	r2, #10
	movt	r3, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.91
	mov	r0, r1
	mov	r1, r3
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB61_8:
	movw	r3, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.90
	movs	r2, #15
	movt	r3, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.90
	mov	r0, r1
	mov	r1, r3
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB61_9:
	movw	r3, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.89
	movs	r2, #16
	movt	r3, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.89
	mov	r0, r1
	mov	r1, r3
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB61_10:
	movw	r3, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.88
	movs	r2, #15
	movt	r3, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.88
	mov	r0, r1
	mov	r1, r3
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB61_11:
	movw	r3, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.86
	movs	r2, #10
	movt	r3, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.86
	mov	r0, r1
	mov	r1, r3
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB61_12:
	movw	r3, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.85
	movs	r2, #15
	movt	r3, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.85
	mov	r0, r1
	mov	r1, r3
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB61_13:
	movw	r3, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.87
	movs	r2, #17
	movt	r3, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.87
	mov	r0, r1
	mov	r1, r3
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.Lfunc_end61:
	.size	<&T as core::fmt::Debug>::fmt::ha61e53eebf9b52f6, .Lfunc_end61-<&T as core::fmt::Debug>::fmt::ha61e53eebf9b52f6
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h46598aa20843e58bE","ax",%progbits
	.p2align	1
	.type	<&T as core::fmt::Display>::fmt::h46598aa20843e58b,%function
	.code	16
	.thumb_func
<&T as core::fmt::Display>::fmt::h46598aa20843e58b:
.Lfunc_begin62:
	.fnstart
	.cfi_startproc
	ldrd	r2, r3, [r0]
	mov	r12, r1
	mov	r0, r2
	mov	r1, r3
	mov	r2, r12
	b	<str as core::fmt::Display>::fmt::hc119597c2cd94da3
.Lfunc_end62:
	.size	<&T as core::fmt::Display>::fmt::h46598aa20843e58b, .Lfunc_end62-<&T as core::fmt::Display>::fmt::h46598aa20843e58b
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hcf7955a8f7d2ca59E","ax",%progbits
	.p2align	1
	.type	<&T as core::fmt::Display>::fmt::hcf7955a8f7d2ca59,%function
	.code	16
	.thumb_func
<&T as core::fmt::Display>::fmt::hcf7955a8f7d2ca59:
.Lfunc_begin63:
	.fnstart
	.cfi_startproc
	ldr	r0, [r0]
	mov	r3, r1
	ldr	r2, [r0], #4
	mov	r1, r2
	mov	r2, r3
	b	<str as core::fmt::Display>::fmt::hc119597c2cd94da3
.Lfunc_end63:
	.size	<&T as core::fmt::Display>::fmt::hcf7955a8f7d2ca59, .Lfunc_end63-<&T as core::fmt::Display>::fmt::hcf7955a8f7d2ca59
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN4core3ops8function6FnOnce9call_once17h2f4bf7dde0f7e4e6E,"ax",%progbits
	.p2align	1
	.type	core::ops::function::FnOnce::call_once::h2f4bf7dde0f7e4e6,%function
	.code	16
	.thumb_func
core::ops::function::FnOnce::call_once::h2f4bf7dde0f7e4e6:
.Lfunc_begin64:
	.file	1 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/ops/function.rs"
	.loc	1 227 0
	.fnstart
	.cfi_startproc
	.file	2 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/ptr/mod.rs"
	.loc	2 1056 14 prologue_end
	ldr	r0, [r0]
.Ltmp0:
.LBB64_1:
	.file	3 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/fmt/mod.rs"
	.loc	3 308 5
	b	.LBB64_1
.Ltmp1:
.Lfunc_end64:
	.size	core::ops::function::FnOnce::call_once::h2f4bf7dde0f7e4e6, .Lfunc_end64-core::ops::function::FnOnce::call_once::h2f4bf7dde0f7e4e6
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN4core3num7dec2flt6common8BiasedFp9zero_pow217h579a9fdf4d32f785E,"ax",%progbits
	.p2align	1
	.type	core::num::dec2flt::common::BiasedFp::zero_pow2::h579a9fdf4d32f785,%function
	.code	16
	.thumb_func
core::num::dec2flt::common::BiasedFp::zero_pow2::h579a9fdf4d32f785:
.Lfunc_begin65:
	.file	4 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/num/dec2flt/common.rs"
	.loc	4 195 0
	.fnstart
	.cfi_startproc
	mov	r2, r0
.Ltmp2:
	.loc	4 197 6 prologue_end
	movs	r0, #0
	movs	r1, #0
	bx	lr
.Ltmp3:
.Lfunc_end65:
	.size	core::num::dec2flt::common::BiasedFp::zero_pow2::h579a9fdf4d32f785, .Lfunc_end65-core::num::dec2flt::common::BiasedFp::zero_pow2::h579a9fdf4d32f785
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN4core3num7dec2flt7decimal7Decimal5round17ha3bf16e5d49ff8bfE,"ax",%progbits
	.p2align	1
	.type	core::num::dec2flt::decimal::Decimal::round::ha3bf16e5d49ff8bf,%function
	.code	16
	.thumb_func
core::num::dec2flt::decimal::Decimal::round::ha3bf16e5d49ff8bf:
.Lfunc_begin66:
	.file	5 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/num/dec2flt/decimal.rs"
	.loc	5 86 0
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r11}
	str	r11, [sp, #-4]!
	.cfi_offset r11, -24
.Ltmp4:
	.loc	5 87 12 prologue_end
	ldr	r2, [r0]
	mov	r12, r0
	movs	r0, #0
	cbz	r2, .LBB66_4
	ldr.w	r3, [r12, #4]
	movs	r1, #0
	cmp	r3, #0
	bmi	.LBB66_14
	.loc	5 89 19
	cmp	r3, #18
	bls	.LBB66_5
	.loc	5 0 19 is_stmt 0
	mov.w	r0, #-1
	mov.w	r1, #-1
	.loc	5 111 6 is_stmt 1
	ldr	r11, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.LBB66_4:
	.loc	5 0 6 is_stmt 0
	movs	r1, #0
	.loc	5 111 6
	ldr	r11, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.LBB66_5:
.Ltmp5:
	.file	6 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/iter/range.rs"
	.loc	6 621 12 is_stmt 1
	cbz	r3, .LBB66_11
.Ltmp6:
	.loc	5 96 16
	add.w	lr, r12, #9
	movs	r0, #0
	movs	r4, #10
	movs	r1, #0
	movs	r5, #0
	b	.LBB66_8
.LBB66_7:
.Ltmp7:
	.loc	6 0 0 is_stmt 0
	adds	r5, #1
	.loc	6 621 12 is_stmt 1
	cmp	r3, r5
	beq	.LBB66_10
.Ltmp8:
.LBB66_8:
	.loc	5 95 13
	umull	r0, r6, r0, r4
	add.w	r1, r1, r1, lsl #2
	.loc	5 96 16
	cmp	r5, r2
	.loc	5 95 13
	add.w	r1, r6, r1, lsl #1
	.loc	5 96 16
	bhs	.LBB66_7
	.loc	5 97 22
	ldrb.w	r6, [lr, r5]
	.loc	5 97 17 is_stmt 0
	adds	r0, r0, r6
	adc	r1, r1, #0
	b	.LBB66_7
.LBB66_10:
	.loc	5 101 12 is_stmt 1
	cmp	r3, r2
	blo	.LBB66_12
	b	.LBB66_14
.LBB66_11:
	.loc	5 0 12 is_stmt 0
	movs	r0, #0
	movs	r1, #0
.LBB66_12:
	.loc	5 102 24 is_stmt 1
	add.w	r5, r12, r3
	ldrb	r4, [r5, #9]
	.loc	5 103 16
	cmp	r4, #5
	itt	eq
	addeq	r6, r3, #1
	cmpeq	r6, r2
	beq	.LBB66_15
	.loc	5 107 12
	cmp	r4, #5
	bhs	.LBB66_16
.LBB66_14:
	.loc	5 111 6
	ldr	r11, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.LBB66_15:
	.loc	5 104 28
	ldrb.w	r2, [r12, #8]
	cbz	r2, .LBB66_17
.LBB66_16:
	.loc	5 0 28 is_stmt 0
	adds	r0, #1
	adc	r1, r1, #0
	.loc	5 111 6 is_stmt 1
	ldr	r11, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.LBB66_17:
	.loc	5 104 46
	cmp	r3, #0
	beq	.LBB66_14
	.loc	5 104 65 is_stmt 0
	ldrb	r2, [r5, #8]
	.loc	5 107 12 is_stmt 1
	lsls	r2, r2, #31
	beq	.LBB66_14
	b	.LBB66_16
.Ltmp9:
.Lfunc_end66:
	.size	core::num::dec2flt::decimal::Decimal::round::ha3bf16e5d49ff8bf, .Lfunc_end66-core::num::dec2flt::decimal::Decimal::round::ha3bf16e5d49ff8bf
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text.unlikely._ZN4core9panicking18panic_bounds_check17h693951cbac28abbeE,"ax",%progbits
	.p2align	1
	.type	core::panicking::panic_bounds_check::h693951cbac28abbe,%function
	.code	16
	.thumb_func
core::panicking::panic_bounds_check::h693951cbac28abbe:
.Lfunc_begin67:
	.file	7 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/panicking.rs"
	.loc	7 80 0
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	.pad	#48
	sub	sp, #48
	strd	r0, r1, [sp]
	add	r1, sp, #32
	movs	r0, #2
.Ltmp10:
	.loc	3 387 9 prologue_end
	str	r1, [sp, #24]
	movs	r1, #0
	str	r0, [sp, #28]
	strd	r0, r1, [sp, #12]
	movw	r0, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.177
	movt	r0, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.177
	str	r1, [sp, #20]
	str	r0, [sp, #8]
.Ltmp11:
	.loc	7 85 5
	movw	r0, :lower16:core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::h9d0ff72e374f98e7
	movt	r0, :upper16:core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::h9d0ff72e374f98e7
	mov	r1, sp
	strd	r0, r1, [sp, #36]
	mov	r1, r2
	str	r0, [sp, #44]
	add	r0, sp, #4
	str	r0, [sp, #32]
	add	r0, sp, #8
	bl	core::panicking::panic_fmt::h679f68291595c801
	.inst.n	0xdefe
.Ltmp12:
.Lfunc_end67:
	.size	core::panicking::panic_bounds_check::h693951cbac28abbe, .Lfunc_end67-core::panicking::panic_bounds_check::h693951cbac28abbe
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h9d0ff72e374f98e7E","ax",%progbits
	.p2align	1
	.type	core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::h9d0ff72e374f98e7,%function
	.code	16
	.thumb_func
core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::h9d0ff72e374f98e7:
.Lfunc_begin68:
	.file	8 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/fmt/num.rs"
	.loc	8 279 0
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#52
	sub	sp, #52
.Ltmp13:
	.loc	8 44 37 prologue_end
	ldr	r4, [r0]
	movw	r0, #10000
	mov	r5, r1
	movw	lr, #65436
.Ltmp14:
	.loc	8 230 23
	cmp	r4, r0
	movw	r0, :lower16:ryu::digit_table::DIGIT_TABLE::h67064246f2e4c187
	movt	r0, :upper16:ryu::digit_table::DIGIT_TABLE::h67064246f2e4c187
	blo	.LBB68_6
	.loc	8 0 23 is_stmt 0
	movw	r8, #5977
	movw	r9, #55536
	movw	r1, #57599
	add.w	r11, sp, #12
	movs	r2, #0
	movt	r8, #53687
	movt	r9, #65535
	movw	r10, #5243
	movt	r1, #1525
	str	r5, [sp, #8]
.LBB68_2:
	.loc	8 232 21 is_stmt 1
	umull	r3, r5, r4, r8
.Ltmp15:
	.file	9 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/intrinsics.rs"
	.loc	9 2104 14
	add.w	r12, r11, r2
.Ltmp16:
	.loc	8 230 23
	subs	r2, #4
	cmp	r4, r1
	.loc	8 232 21
	lsr.w	r3, r5, #13
	mla	r5, r3, r9, r4
	mov	r4, r3
	.loc	8 234 30
	uxth	r6, r5
	lsr.w	r6, r6, #2
	mul	r6, r6, r10
	lsr.w	r6, r6, #17
	mla	r5, r6, lr, r5
.Ltmp17:
	.loc	9 2104 14
	ldrh.w	r6, [r0, r6, lsl #1]
	strh.w	r6, [r12, #35]
.Ltmp18:
	.loc	8 235 30
	uxth	r5, r5
.Ltmp19:
	.loc	9 2104 14
	ldrh.w	r5, [r0, r5, lsl #1]
	strh.w	r5, [r12, #37]
.Ltmp20:
	.loc	8 230 23
	bhi	.LBB68_2
	.loc	8 0 23 is_stmt 0
	ldr	r5, [sp, #8]
	.loc	8 249 20 is_stmt 1
	adds	r2, #39
	mov	r4, r3
	cmp	r4, #99
	bhi	.LBB68_7
.LBB68_4:
	.loc	8 0 20 is_stmt 0
	mov	r1, r4
	.loc	8 257 20 is_stmt 1
	cmp	r1, #10
	blo	.LBB68_8
.LBB68_5:
.Ltmp21:
	.loc	9 2104 14
	ldrh.w	r0, [r0, r1, lsl #1]
.Ltmp22:
	.loc	8 262 21
	subs	r2, #2
	add	r1, sp, #12
.Ltmp23:
	.loc	9 2104 14
	strh	r0, [r1, r2]
	b	.LBB68_9
.Ltmp24:
.LBB68_6:
	.loc	9 0 14 is_stmt 0
	movs	r2, #39
	.loc	8 249 20 is_stmt 1
	cmp	r4, #99
	bls	.LBB68_4
.LBB68_7:
	.loc	8 250 30
	uxth	r1, r4
	movw	r3, #5243
	.loc	8 251 21
	lsrs	r1, r1, #2
	.loc	8 252 21
	subs	r2, #2
	.loc	8 251 21
	muls	r1, r3, r1
	add	r6, sp, #12
	lsrs	r1, r1, #17
	mla	r3, r1, lr, r4
	.loc	8 250 30
	uxth	r3, r3
.Ltmp25:
	.loc	9 2104 14
	ldrh.w	r3, [r0, r3, lsl #1]
	strh	r3, [r6, r2]
.Ltmp26:
	.loc	8 257 20
	cmp	r1, #10
	bhs	.LBB68_5
.LBB68_8:
	.loc	8 258 21
	subs	r2, #1
	.loc	8 259 21
	add.w	r0, r1, #48
	add	r1, sp, #12
	strb	r0, [r1, r2]
.LBB68_9:
	.loc	8 271 65
	rsb.w	r0, r2, #39
	.loc	8 273 13
	str	r0, [sp]
	add	r0, sp, #12
	movw	r1, :lower16:CORE_PERIPHERALS
.Ltmp27:
	.file	10 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/ptr/mut_ptr.rs"
	.loc	10 307 18
	adds	r3, r0, r2
.Ltmp28:
	.loc	8 273 13
	movt	r1, :upper16:CORE_PERIPHERALS
	mov	r0, r5
	movs	r2, #0
	bl	core::fmt::Formatter::pad_integral::h9f90d3af72be363b
.Ltmp29:
	.loc	8 288 14
	add	sp, #52
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.Ltmp30:
.Lfunc_end68:
	.size	core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::h9d0ff72e374f98e7, .Lfunc_end68-core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::h9d0ff72e374f98e7
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text.unlikely._ZN4core9panicking9panic_fmt17h679f68291595c801E,"ax",%progbits
	.p2align	1
	.type	core::panicking::panic_fmt::h679f68291595c801,%function
	.code	16
	.thumb_func
core::panicking::panic_fmt::h679f68291595c801:
.Lfunc_begin69:
	.loc	7 128 0
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	.pad	#24
	sub	sp, #24
.Ltmp31:
	.file	11 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/panic/panic_info.rs"
	.loc	11 51 9 prologue_end
	strd	r0, r1, [sp, #12]
	movw	r0, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.169
	movt	r0, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.169
	movs	r2, #1
	str	r0, [sp, #8]
	movw	r0, :lower16:CORE_PERIPHERALS
	movt	r0, :upper16:CORE_PERIPHERALS
	strb.w	r2, [sp, #20]
	str	r0, [sp, #4]
	add	r0, sp, #4
.Ltmp32:
	.loc	7 143 14
	bl	rust_begin_unwind
	.inst.n	0xdefe
.Ltmp33:
.Lfunc_end69:
	.size	core::panicking::panic_fmt::h679f68291595c801, .Lfunc_end69-core::panicking::panic_fmt::h679f68291595c801
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN4core3ptr102drop_in_place$LT$$RF$core..iter..adapters..copied..Copied$LT$core..slice..iter..Iter$LT$u8$GT$$GT$$GT$17hceb1e8191151371bE","ax",%progbits
	.p2align	1
	.type	core::ptr::drop_in_place<&core::iter::adapters::copied::Copied<core::slice::iter::Iter<u8>>>::hceb1e8191151371b,%function
	.code	16
	.thumb_func
core::ptr::drop_in_place<&core::iter::adapters::copied::Copied<core::slice::iter::Iter<u8>>>::hceb1e8191151371b:
.Lfunc_begin70:
	.loc	2 188 0
	.fnstart
	.cfi_startproc
	.loc	2 188 1 prologue_end
	bx	lr
.Ltmp34:
.Lfunc_end70:
	.size	core::ptr::drop_in_place<&core::iter::adapters::copied::Copied<core::slice::iter::Iter<u8>>>::hceb1e8191151371b, .Lfunc_end70-core::ptr::drop_in_place<&core::iter::adapters::copied::Copied<core::slice::iter::Iter<u8>>>::hceb1e8191151371b
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17h161986144a3fe9d9E","ax",%progbits
	.p2align	1
	.type	<T as core::any::Any>::type_id::h161986144a3fe9d9,%function
	.code	16
	.thumb_func
<T as core::any::Any>::type_id::h161986144a3fe9d9:
.Lfunc_begin71:
	.file	12 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/any.rs"
	.loc	12 133 0
	.fnstart
	.cfi_startproc
	movw	r0, #14345
	movw	r1, #35203
	movt	r0, #8278
	movt	r1, #24147
.Ltmp35:
	.loc	12 135 6 prologue_end
	bx	lr
.Ltmp36:
.Lfunc_end71:
	.size	<T as core::any::Any>::type_id::h161986144a3fe9d9, .Lfunc_end71-<T as core::any::Any>::type_id::h161986144a3fe9d9
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN4core3fmt9Formatter12pad_integral17h9f90d3af72be363bE,"ax",%progbits
	.p2align	1
	.type	core::fmt::Formatter::pad_integral::h9f90d3af72be363b,%function
	.code	16
	.thumb_func
core::fmt::Formatter::pad_integral::h9f90d3af72be363b:
.Lfunc_begin72:
	.loc	3 1342 0
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#20
	sub	sp, #20
	mov	r11, r0
.Ltmp37:
	.loc	3 1823 9 prologue_end
	ldr	r0, [r0]
	ldr	r5, [r7, #8]
	mov	r4, r1
	ands	r1, r0, #1
	mov.w	r9, #43
.Ltmp38:
	.loc	3 1349 19
	add.w	r10, r1, r5
	it	eq
	moveq.w	r9, #1114112
	mov	r6, r3
	.loc	3 1354 25
	lsls	r1, r0, #29
	bmi	.LBB72_7
	.loc	3 0 25 is_stmt 0
	movs	r4, #0
	movs	r3, #0
	.loc	3 1371 15 is_stmt 1
	ldr.w	r1, [r11, #8]
	.loc	3 1371 9 is_stmt 0
	cmp	r1, #0
	beq	.LBB72_15
.LBB72_2:
	.loc	3 1380 35 is_stmt 1
	ldr.w	r8, [r11, #12]
	.loc	3 1380 26 is_stmt 0
	cmp	r8, r10
	bls	.LBB72_11
	.loc	3 1386 26 is_stmt 1
	lsls	r0, r0, #28
	bmi	.LBB72_17
.Ltmp39:
	.loc	3 1491 27
	ldrb.w	r1, [r11, #32]
.Ltmp40:
	.loc	3 1399 49
	sub.w	r0, r8, r10
	mov	r10, r4
.Ltmp41:
	.loc	3 1496 35
	cmp	r1, #3
	it	eq
	moveq	r1, #1
	lsls	r2, r1, #30
	str	r5, [sp, #16]
	strd	r6, r3, [sp, #4]
	beq	.LBB72_23
	cmp	r1, #1
	bne	.LBB72_24
.Ltmp42:
	.loc	3 0 35 is_stmt 0
	movs	r1, #0
	str	r1, [sp, #12]
	mov	r1, r0
	b	.LBB72_26
.LBB72_7:
	mov	r3, r2
.Ltmp43:
	.file	13 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/slice/iter/macros.rs"
	.loc	13 146 24 is_stmt 1
	cbz	r2, .LBB72_13
	ands	r2, r3, #3
	beq	.LBB72_19
.Ltmp44:
	.loc	13 0 24 is_stmt 0
	mov	r12, r6
	.file	14 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/iter/traits/iterator.rs"
	.loc	14 2285 21 is_stmt 1
	ldrsb.w	r6, [r4]
	movs	r1, #0
.Ltmp45:
	.file	15 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/str/validations.rs"
	.loc	15 25 5
	cmn.w	r6, #65
	it	gt
	movgt	r1, #1
	mov	r6, r12
.Ltmp46:
	.loc	13 146 24
	cmp	r2, #1
	beq	.LBB72_14
.Ltmp47:
	.loc	14 2285 21
	ldrsb.w	r2, [r4, #1]
.Ltmp48:
	.file	16 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/iter/traits/accum.rs"
	.loc	16 45 28
	cmn.w	r2, #65
	it	gt
	addgt	r1, #1
.Ltmp49:
	.loc	3 1355 13
	add	r10, r1
	.loc	3 1371 15
	ldr.w	r1, [r11, #8]
	.loc	3 1371 9 is_stmt 0
	cmp	r1, #0
	bne	.LBB72_2
	b	.LBB72_15
.LBB72_11:
	.loc	3 1381 17 is_stmt 1
	mov	r0, r11
	mov	r1, r9
	mov	r2, r4
	bl	core::fmt::Formatter::pad_integral::write_prefix::hc1241ff0425e3730
	cbz	r0, .LBB72_16
	.loc	3 0 17 is_stmt 0
	movs	r4, #1
	b	.LBB72_18
.LBB72_13:
	movs	r1, #0
.LBB72_14:
	.loc	3 1355 13 is_stmt 1
	add	r10, r1
	.loc	3 1371 15
	ldr.w	r1, [r11, #8]
	.loc	3 1371 9 is_stmt 0
	cmp	r1, #0
	bne	.LBB72_2
.LBB72_15:
	.loc	3 1375 17 is_stmt 1
	mov	r0, r11
	mov	r1, r9
	mov	r2, r4
	bl	core::fmt::Formatter::pad_integral::write_prefix::hc1241ff0425e3730
	cmp	r0, #0
	bne	.LBB72_37
.LBB72_16:
	.loc	3 0 0 is_stmt 0
	ldr.w	r1, [r11, #28]
	mov	r2, r5
	ldr.w	r0, [r11, #24]
	ldr	r3, [r1, #12]
	mov	r1, r6
	add	sp, #20
	pop.w	{r8, r9, r10, r11}
	pop.w	{r4, r5, r6, r7, lr}
	bx	r3
.LBB72_17:
.Ltmp50:
	.file	17 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/mem/mod.rs"
	.loc	17 839 22 is_stmt 1
	ldr.w	r0, [r11, #4]
	mov	r2, r4
	str	r0, [sp, #12]
	movs	r0, #48
.Ltmp51:
	.loc	17 839 22 is_stmt 0
	ldrb.w	r1, [r11, #32]
	movs	r4, #1
.Ltmp52:
	.loc	2 892 9 is_stmt 1
	str	r1, [sp]
.Ltmp53:
	.loc	3 1389 17
	mov	r1, r9
.Ltmp54:
	.loc	2 892 9
	str.w	r0, [r11, #4]
.Ltmp55:
	.loc	3 1389 17
	mov	r0, r11
.Ltmp56:
	.loc	2 892 9
	strb.w	r4, [r11, #32]
.Ltmp57:
	.loc	3 1389 17
	bl	core::fmt::Formatter::pad_integral::write_prefix::hc1241ff0425e3730
	cbz	r0, .LBB72_20
.LBB72_18:
	.loc	3 1405 6
	mov	r0, r4
	add	sp, #20
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB72_19:
	.loc	3 1355 13
	add	r10, r1
	.loc	3 1371 15
	ldr.w	r1, [r11, #8]
	.loc	3 1371 9 is_stmt 0
	cmp	r1, #0
	bne.w	.LBB72_2
	b	.LBB72_15
.LBB72_20:
	.loc	3 0 9
	str	r5, [sp, #16]
.Ltmp58:
	.loc	3 1502 9 is_stmt 1
	sub.w	r0, r8, r10
	ldrd	r9, r5, [r11, #24]
	adds	r4, r0, #1
.LBB72_21:
.Ltmp59:
	.file	18 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/cmp.rs"
	.loc	18 1400 52
	subs	r4, #1
.Ltmp60:
	.loc	6 621 12
	beq	.LBB72_36
.Ltmp61:
	.loc	3 1503 13
	ldr	r2, [r5, #16]
	mov	r0, r9
	movs	r1, #48
	blx	r2
	cmp	r0, #0
	beq	.LBB72_21
	b	.LBB72_37
.Ltmp62:
.LBB72_23:
	.loc	3 0 13 is_stmt 0
	movs	r1, #0
	b	.LBB72_25
.LBB72_24:
.Ltmp63:
	.loc	3 1499 43 is_stmt 1
	lsrs	r1, r0, #1
	.loc	3 1499 56 is_stmt 0
	adds	r0, #1
	lsrs	r0, r0, #1
.LBB72_25:
	.loc	3 0 56
	str	r0, [sp, #12]
.LBB72_26:
	ldr.w	r4, [r11, #4]
	.loc	3 1502 9 is_stmt 1
	adds	r6, r1, #1
	ldrd	r8, r5, [r11, #24]
.LBB72_27:
.Ltmp64:
	.loc	18 1400 52
	subs	r6, #1
.Ltmp65:
	.loc	6 621 12
	beq	.LBB72_29
.Ltmp66:
	.loc	3 1503 13
	ldr	r2, [r5, #16]
	mov	r0, r8
	mov	r1, r4
	blx	r2
	cmp	r0, #0
	beq	.LBB72_27
	b	.LBB72_37
.Ltmp67:
.LBB72_29:
	.file	19 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/result.rs"
	.loc	19 0 0 is_stmt 0
	subs.w	r0, r4, #1114112
	ldr	r1, [sp, #12]
	it	ne
	movne	r0, r1
.Ltmp68:
	.loc	3 1399 36 is_stmt 1
	cmp.w	r4, #1114112
	str	r0, [sp, #12]
	beq	.LBB72_37
	.loc	3 1400 17
	ldr	r3, [sp, #8]
	mov	r0, r11
	mov	r1, r9
	mov	r2, r10
	bl	core::fmt::Formatter::pad_integral::write_prefix::hc1241ff0425e3730
	cbnz	r0, .LBB72_37
	.loc	3 1401 17
	ldr	r3, [r5, #12]
	mov	r0, r8
	ldr	r1, [sp, #4]
	ldr	r2, [sp, #16]
	blx	r3
	cbnz	r0, .LBB72_37
	.loc	3 0 17 is_stmt 0
	ldr.w	r9, [sp, #12]
	movs	r6, #0
.LBB72_33:
.Ltmp69:
	.loc	6 621 12 is_stmt 1
	cmp	r9, r6
	beq	.LBB72_39
.Ltmp70:
	.loc	3 1269 13
	ldr	r2, [r5, #16]
	mov	r0, r8
	mov	r1, r4
	blx	r2
.Ltmp71:
	.file	20 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/num/uint_macros.rs"
	.loc	20 464 22
	adds	r6, #1
.Ltmp72:
	.loc	3 1269 13
	cmp	r0, #0
	beq	.LBB72_33
	subs	r0, r6, #1
	b	.LBB72_40
.Ltmp73:
.LBB72_36:
	.loc	3 1391 17
	ldr	r3, [r5, #12]
	mov	r0, r9
	ldr	r2, [sp, #16]
	mov	r1, r6
	blx	r3
	cbz	r0, .LBB72_38
.LBB72_37:
	.loc	3 0 17 is_stmt 0
	movs	r4, #1
	.loc	3 1405 6 is_stmt 1
	mov	r0, r4
	add	sp, #20
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB72_38:
	.loc	3 1394 17
	ldr	r0, [sp]
	movs	r4, #0
	strb.w	r0, [r11, #32]
	.loc	3 1393 17
	ldr	r0, [sp, #12]
	str.w	r0, [r11, #4]
	.loc	3 1405 6
	mov	r0, r4
	add	sp, #20
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB72_39:
	.loc	3 0 6 is_stmt 0
	mov	r0, r9
.LBB72_40:
	movs	r4, #0
.Ltmp74:
	.loc	18 1400 52 is_stmt 1
	cmp	r0, r9
	it	lo
	movlo	r4, #1
.Ltmp75:
	.loc	3 1405 6
	mov	r0, r4
	add	sp, #20
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.Ltmp76:
.Lfunc_end72:
	.size	core::fmt::Formatter::pad_integral::h9f90d3af72be363b, .Lfunc_end72-core::fmt::Formatter::pad_integral::h9f90d3af72be363b
	.cfi_endproc
	.file	21 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/iter/adapters/map.rs"
	.file	22 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/iter/adapters/filter.rs"
	.file	23 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/str/count.rs"
	.file	24 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/str/iter.rs"
	.cantunwind
	.fnend

	.section	.text._ZN4core3fmt9Formatter12pad_integral12write_prefix17hc1241ff0425e3730E,"ax",%progbits
	.p2align	1
	.type	core::fmt::Formatter::pad_integral::write_prefix::hc1241ff0425e3730,%function
	.code	16
	.thumb_func
core::fmt::Formatter::pad_integral::write_prefix::hc1241ff0425e3730:
.Lfunc_begin73:
	.loc	3 1363 0
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r11}
	str	r11, [sp, #-4]!
	.cfi_offset r11, -24
	mov	r4, r3
	mov	r5, r2
	mov	r6, r0
.Ltmp77:
	.loc	3 1364 20 prologue_end
	cmp.w	r1, #1114112
	beq	.LBB73_3
	.loc	3 1365 17
	ldrd	r0, r2, [r6, #24]
	ldr	r2, [r2, #16]
	blx	r2
	cbz	r0, .LBB73_3
	.loc	3 0 17 is_stmt 0
	movs	r0, #1
	.loc	3 1368 10 is_stmt 1
	ldr	r11, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.LBB73_3:
	.loc	3 1367 20
	cbz	r5, .LBB73_5
	.loc	3 1367 44 is_stmt 0
	ldrd	r0, r1, [r6, #24]
	mov	r2, r4
	ldr	r3, [r1, #12]
	mov	r1, r5
	ldr	r11, [sp], #4
	pop.w	{r4, r5, r6, r7, lr}
	bx	r3
.LBB73_5:
	.loc	3 0 44
	movs	r0, #0
	.loc	3 1368 10 is_stmt 1
	ldr	r11, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.Ltmp78:
.Lfunc_end73:
	.size	core::fmt::Formatter::pad_integral::write_prefix::hc1241ff0425e3730, .Lfunc_end73-core::fmt::Formatter::pad_integral::write_prefix::hc1241ff0425e3730
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN4core3num7dec2flt7decimal7Decimal10left_shift17ha96395fde205faeaE,"ax",%progbits
	.p2align	1
	.type	core::num::dec2flt::decimal::Decimal::left_shift::ha96395fde205faea,%function
	.code	16
	.thumb_func
core::num::dec2flt::decimal::Decimal::left_shift::ha96395fde205faea:
.Lfunc_begin74:
	.loc	5 114 0
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#20
	sub	sp, #20
.Ltmp79:
	.loc	5 115 12 prologue_end
	ldr.w	r12, [r0]
	cmp.w	r12, #0
	beq.w	.LBB74_25
.Ltmp80:
	.loc	5 332 5
	and	r10, r1, #63
	.loc	5 333 15
	movw	r1, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.9
	movt	r1, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.9
	mov	lr, r0
	ldrh.w	r3, [r1, r10, lsl #1]
	movw	r6, #1309
	.loc	5 336 18
	mov	r0, r3
	bfc	r0, #11, #21
.Ltmp81:
	.file	25 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/slice/index.rs"
	.loc	25 328 12
	cmp	r0, r6
	bhs.w	.LBB74_33
.Ltmp82:
	.loc	5 334 15
	add.w	r1, r1, r10, lsl #1
	.loc	5 0 0 is_stmt 0
	lsr.w	r8, r3, #11
	movw	r3, #1308
	movs	r5, #0
	.loc	5 334 15
	ldrh	r6, [r1, #2]
	.loc	5 339 5 is_stmt 1
	subs	r1, r3, r0
	movw	r3, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.10
	movt	r3, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.10
	.loc	5 337 18
	bfc	r6, #11, #21
	.loc	5 339 5
	add	r3, r0
	.loc	5 339 50 is_stmt 0
	subs	r0, r6, r0
	.loc	5 339 5
	add.w	r6, lr, #9
.LBB74_3:
.Ltmp83:
	.file	26 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/iter/adapters/take.rs"
	.loc	26 35 12 is_stmt 1
	cmp	r0, r5
.Ltmp84:
	.loc	13 146 24
	it	ne
	cmpne	r1, r5
	beq	.LBB74_9
.Ltmp85:
	.loc	5 340 12
	cmp	r12, r5
	beq	.LBB74_8
	.loc	5 342 19
	cmp.w	r5, #768
	beq.w	.LBB74_32
	.loc	5 0 0 is_stmt 0
	ldrb	r4, [r3, r5]
	.loc	5 342 19
	ldrb	r2, [r6, r5]
.Ltmp86:
	.file	27 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/iter/adapters/enumerate.rs"
	.loc	27 48 9 is_stmt 1
	adds	r5, #1
.Ltmp87:
	.loc	5 342 19
	cmp	r2, r4
	beq	.LBB74_3
	.loc	5 344 19
	it	lo
	sublo.w	r8, r8, #1
	b	.LBB74_9
.LBB74_8:
	.loc	5 341 20
	sub.w	r8, r8, #1
.Ltmp88:
.LBB74_9:
	.loc	5 122 15
	add.w	r0, r8, lr
	sub.w	r5, r12, #1
	adds	r0, #8
	movs	r1, #0
	str.w	r8, [sp, #16]
	strd	lr, r0, [sp]
	add.w	r0, lr, #8
	str	r0, [sp, #8]
	movs	r0, #0
	str	r5, [sp, #12]
	b	.LBB74_11
.LBB74_10:
	.loc	5 129 17
	ldr	r3, [sp, #4]
	add	r3, r5
	strb	r2, [r3, #1]
	.loc	5 122 15
	subs	r5, #1
	adds	r2, r5, #1
	beq	.LBB74_14
.LBB74_11:
	.loc	5 125 19
	ldr	r2, [sp, #12]
	lsrs	r2, r2, #8
	cmp	r2, #2
	bhi.w	.LBB74_31
	ldr	r2, [sp, #16]
	.loc	5 125 18 is_stmt 0
	rsb.w	r6, r10, #32
	subs.w	r3, r10, #32
	.loc	5 125 19
	add.w	r8, r2, r5
	ldr	r2, [sp, #8]
	add	r2, r5
	ldrb	r2, [r2, #1]
	.loc	5 125 18
	lsr.w	r4, r2, r6
	it	pl
	lslpl.w	r4, r2, r3
	lsl.w	r2, r2, r10
	it	pl
	movpl	r2, #0
	.loc	5 125 13
	adds.w	r11, r2, r0
	adc.w	r9, r4, r1
	.loc	5 126 28 is_stmt 1
	movs	r2, #10
	mov	r0, r11
	movs	r3, #0
	mov	r1, r9
	bl	__aeabi_uldivmod
	mvn	r6, #9
	.loc	5 127 33
	mov.w	r4, #-1
	umull	r2, r3, r0, r6
	mla	r3, r0, r4, r3
	.loc	5 127 29 is_stmt 0
	adds.w	r2, r2, r11
	.loc	5 127 33
	mla	r3, r1, r6, r3
	.loc	5 127 29
	adc.w	r3, r3, r9
	.loc	5 128 16 is_stmt 1
	cmp.w	r8, #768
	blo	.LBB74_10
	.loc	5 130 23
	orrs	r2, r3
	.loc	5 131 17
	ittt	ne
	ldrne	r2, [sp]
	movne	r3, #1
	strbne	r3, [r2, #8]
	.loc	5 122 15
	subs	r5, #1
	adds	r2, r5, #1
	bne	.LBB74_11
.LBB74_14:
	.loc	5 0 15 is_stmt 0
	ldr.w	r8, [sp]
	.loc	5 135 15 is_stmt 1
	subs.w	r2, r11, #10
	ldr.w	r10, [sp, #16]
	sbcs	r2, r9, #0
	bhs	.LBB74_26
.LBB74_15:
	.loc	5 146 9
	ldrd	r0, r1, [r8]
	.loc	5 150 9
	add	r1, r10
	.loc	5 146 9
	add	r0, r10
	.loc	5 147 12
	cmp.w	r0, #768
	it	hs
	movhs.w	r0, #768
	.loc	5 0 0 is_stmt 0
	strd	r0, r1, [r8]
.Ltmp89:
	.loc	5 81 15 is_stmt 1
	cbz	r0, .LBB74_25
	subs	r0, #4
.LBB74_17:
	.loc	5 81 39 is_stmt 0
	add.w	r1, r8, r0
	ldrb	r2, [r1, #12]
	.loc	5 81 15
	cbnz	r2, .LBB74_25
	.loc	5 0 0
	adds	r2, r0, #3
	.loc	5 82 13 is_stmt 1
	str.w	r2, [r8]
	.loc	5 81 15
	beq	.LBB74_25
	.loc	5 81 39 is_stmt 0
	ldrb	r2, [r1, #11]
	.loc	5 81 15
	cbnz	r2, .LBB74_25
	.loc	5 0 0
	adds	r2, r0, #2
	.loc	5 82 13 is_stmt 1
	str.w	r2, [r8]
	.loc	5 81 15
	beq	.LBB74_25
	.loc	5 81 39 is_stmt 0
	ldrb	r2, [r1, #10]
	.loc	5 81 15
	cbnz	r2, .LBB74_25
	.loc	5 0 0
	adds	r2, r0, #1
	.loc	5 82 13 is_stmt 1
	str.w	r2, [r8]
	.loc	5 81 15
	beq	.LBB74_25
	.loc	5 81 39 is_stmt 0
	ldrb	r1, [r1, #9]
	.loc	5 81 15
	cbnz	r1, .LBB74_25
	.loc	5 82 13 is_stmt 1
	str.w	r0, [r8]
	.loc	5 81 15
	subs	r0, #4
	adds	r1, r0, #4
	bne	.LBB74_17
.Ltmp90:
.LBB74_25:
	.loc	5 152 6
	add	sp, #20
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB74_26:
	.loc	5 139 16
	add.w	r6, r10, #8
	mov.w	r9, #1
	mov.w	r4, #-1
	b	.LBB74_29
.LBB74_27:
	.loc	5 140 17
	strb.w	r2, [r8, r6]
.LBB74_28:
	.loc	5 135 15
	subs.w	r2, r5, #10
	sub.w	r6, r6, #1
	sbcs	r2, r11, #0
	blo	.LBB74_15
.LBB74_29:
	.loc	5 137 28
	movs	r2, #10
	movs	r3, #0
	mov	r11, r1
	mov	r5, r0
	bl	__aeabi_uldivmod
	mvn	r12, #9
	.loc	5 138 33
	umull	r2, r3, r0, r12
	mla	r3, r0, r4, r3
	.loc	5 138 29 is_stmt 0
	adds	r2, r2, r5
	.loc	5 138 33
	mla	r3, r1, r12, r3
	.loc	5 138 29
	adc.w	r12, r3, r11
	.loc	5 137 28 is_stmt 1
	sub.w	r3, r6, #9
	.loc	5 139 16
	cmp.w	r3, #768
	blo	.LBB74_27
	.loc	5 141 23
	orrs.w	r2, r2, r12
	.loc	5 142 17
	it	ne
	strbne.w	r9, [r8, #8]
	b	.LBB74_28
.LBB74_31:
	.loc	5 125 19
	movw	r2, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.4
	mov	r0, r5
	movt	r2, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.4
	.loc	5 0 0 is_stmt 0
	mov.w	r1, #768
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB74_32:
.Ltmp91:
	.loc	5 342 19 is_stmt 1
	movw	r2, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.12
	mov.w	r0, #768
	movt	r2, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.12
.Ltmp92:
	.loc	5 0 0 is_stmt 0
	mov.w	r1, #768
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB74_33:
.Ltmp93:
	.loc	25 329 13 is_stmt 1
	movw	r2, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.11
	movw	r1, #1308
	movt	r2, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.11
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.Ltmp94:
.Lfunc_end74:
	.size	core::num::dec2flt::decimal::Decimal::left_shift::ha96395fde205faea, .Lfunc_end74-core::num::dec2flt::decimal::Decimal::left_shift::ha96395fde205faea
	.cfi_endproc
	.file	28 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/array/mod.rs"
	.cantunwind
	.fnend

	.section	.text.unlikely._ZN4core5slice5index26slice_start_index_len_fail17haaeda2757c9375c3E,"ax",%progbits
	.p2align	1
	.type	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3,%function
	.code	16
	.thumb_func
core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3:
.Lfunc_begin75:
	.loc	25 34 0
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	.pad	#48
	sub	sp, #48
	strd	r0, r1, [sp]
	add	r1, sp, #32
	movs	r0, #2
.Ltmp95:
	.loc	3 387 9 prologue_end
	str	r1, [sp, #24]
	movs	r1, #0
	str	r0, [sp, #28]
	strd	r0, r1, [sp, #12]
	movw	r0, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.258
	movt	r0, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.258
	str	r1, [sp, #20]
	str	r0, [sp, #8]
.Ltmp96:
	.loc	25 35 5
	movw	r0, :lower16:core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::h9d0ff72e374f98e7
	add	r1, sp, #4
	movt	r0, :upper16:core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::h9d0ff72e374f98e7
	str	r0, [sp, #44]
	strd	r0, r1, [sp, #36]
	mov	r0, sp
	str	r0, [sp, #32]
	add	r0, sp, #8
	mov	r1, r2
	bl	core::panicking::panic_fmt::h679f68291595c801
	.inst.n	0xdefe
.Ltmp97:
.Lfunc_end75:
	.size	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3, .Lfunc_end75-core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN4core3num7dec2flt7decimal7Decimal11right_shift17h74dc9d2f7bb2bda8E,"ax",%progbits
	.p2align	1
	.type	core::num::dec2flt::decimal::Decimal::right_shift::h74dc9d2f7bb2bda8,%function
	.code	16
	.thumb_func
core::num::dec2flt::decimal::Decimal::right_shift::h74dc9d2f7bb2bda8:
.Lfunc_begin76:
	.loc	5 155 0
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#20
	sub	sp, #20
	mov	r4, r0
	and	r12, r1, #63
	ldr	lr, [r4], #9
	mov	r11, r0
	movs	r1, #0
	movs	r5, #10
	movs	r0, #0
	mov.w	r10, #0
.LBB76_1:
.Ltmp98:
	.loc	5 160 16 prologue_end
	cmp	lr, r1
	beq	.LBB76_4
	.loc	5 161 32
	cmp.w	r1, #768
	beq.w	.LBB76_44
	.loc	5 161 21 is_stmt 0
	add.w	r2, r10, r10, lsl #2
	.loc	5 161 32
	ldrb	r6, [r4, r1]
	.loc	5 162 17 is_stmt 1
	adds	r1, #1
	.loc	5 161 21
	lsl.w	r10, r2, #1
	.loc	5 161 17 is_stmt 0
	umlal	r6, r10, r0, r5
	.loc	5 159 15 is_stmt 1
	rsb.w	r0, r12, #32
	lsl.w	r0, r10, r0
	lsr.w	r2, r6, r12
	orrs	r0, r2
	subs.w	r2, r12, #32
	it	pl
	lsrpl.w	r0, r10, r2
	lsr.w	r2, r10, r12
	it	pl
	movpl	r2, #0
	orrs	r0, r2
	mov	r0, r6
	beq	.LBB76_1
	b	.LBB76_16
.LBB76_4:
	.loc	5 163 23
	orrs.w	r1, r0, r10
	beq.w	.LBB76_18
	.loc	5 166 23
	rsb.w	r9, r12, #32
	lsr.w	r1, r0, r12
	subs.w	r5, r12, #32
	lsl.w	r2, r10, r9
	orr.w	r1, r1, r2
	it	pl
	lsrpl.w	r1, r10, r5
	lsr.w	r2, r10, r12
	it	pl
	movpl	r2, #0
	orrs	r1, r2
	beq	.LBB76_7
	.loc	5 0 23 is_stmt 0
	mov	r6, r0
	mov	r1, lr
	b	.LBB76_16
.LBB76_7:
	mov	r1, lr
	mov	r6, r0
.LBB76_8:
	.loc	5 167 21 is_stmt 1
	movs	r0, #10
	add.w	r2, r10, r10, lsl #2
	umull	r0, r3, r6, r0
	.loc	5 166 23
	cmp	r5, #0
	.loc	5 167 21
	add.w	r3, r3, r2, lsl #1
	.loc	5 166 23
	lsr.w	r8, r0, r12
	lsl.w	r2, r3, r9
	lsr.w	r4, r3, r12
	orr.w	r2, r2, r8
	it	pl
	lsrpl.w	r2, r3, r5
	it	pl
	movpl	r4, #0
	orrs	r2, r4
	bne	.LBB76_12
	.loc	5 0 23 is_stmt 0
	movs	r3, #100
	.loc	5 166 23
	cmp	r5, #0
	.loc	5 167 21 is_stmt 1
	umull	r0, r2, r6, r3
	mla	r3, r10, r3, r2
	.loc	5 166 23
	lsr.w	r2, r0, r12
	lsl.w	r4, r3, r9
	orr.w	r2, r2, r4
	it	pl
	lsrpl.w	r2, r3, r5
	lsr.w	r4, r3, r12
	it	pl
	movpl	r4, #0
	orrs	r2, r4
	bne	.LBB76_13
	.loc	5 0 23 is_stmt 0
	mov.w	r3, #1000
	.loc	5 166 23
	cmp	r5, #0
	.loc	5 167 21 is_stmt 1
	umull	r0, r2, r6, r3
	mla	r3, r10, r3, r2
	.loc	5 166 23
	lsr.w	r2, r0, r12
	lsl.w	r4, r3, r9
	orr.w	r2, r2, r4
	it	pl
	lsrpl.w	r2, r3, r5
	lsr.w	r4, r3, r12
	it	pl
	movpl	r4, #0
	orrs	r2, r4
	bne	.LBB76_14
	.loc	5 0 23 is_stmt 0
	movw	r2, #10000
	.loc	5 166 23
	cmp	r5, #0
	.loc	5 167 21 is_stmt 1
	umull	r6, r0, r6, r2
	.loc	5 168 21
	add.w	r1, r1, #4
	.loc	5 167 21
	mla	r10, r10, r2, r0
	.loc	5 166 23
	lsr.w	r0, r6, r12
	lsl.w	r2, r10, r9
	orr.w	r0, r0, r2
	it	pl
	lsrpl.w	r0, r10, r5
	lsr.w	r2, r10, r12
	it	pl
	movpl	r2, #0
	orrs	r0, r2
	beq	.LBB76_8
	b	.LBB76_16
.LBB76_12:
	.loc	5 168 21
	adds	r1, #1
	b	.LBB76_15
.LBB76_13:
	adds	r1, #2
	b	.LBB76_15
.LBB76_14:
	adds	r1, #3
.LBB76_15:
	.loc	5 0 21 is_stmt 0
	mov	r6, r0
	mov	r10, r3
.LBB76_16:
	.loc	5 173 9 is_stmt 1
	ldr.w	r0, [r11, #4]
	subs	r0, r0, r1
	adds	r0, #1
	str.w	r0, [r11, #4]
	.loc	5 174 12
	cmn.w	r0, #2048
	bgt	.LBB76_19
	.loc	5 0 12 is_stmt 0
	movs	r0, #0
	.loc	5 178 13 is_stmt 1
	strb.w	r0, [r11, #8]
	.loc	5 176 13
	strd	r0, r0, [r11]
.LBB76_18:
	.loc	5 201 6
	add	sp, #20
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB76_19:
	.loc	5 0 6 is_stmt 0
	mov.w	r0, #-1
	.loc	5 181 20 is_stmt 1
	subs.w	r9, r12, #32
	lsl.w	r2, r0, r12
	it	pl
	movpl	r2, #0
	it	pl
	lslpl.w	r0, r0, r9
	mvns	r4, r2
	mvn.w	r8, r0
	.loc	5 182 15
	cmp	lr, r1
	bls	.LBB76_25
	.loc	5 0 15 is_stmt 0
	mov.w	r0, #768
	.loc	5 184 37 is_stmt 1
	cmp	r0, r1
	.loc	5 182 15
	sub.w	r0, r1, lr
	.loc	5 184 37
	rsb.w	r2, r1, #768
	mov.w	r5, #0
	it	lo
	movlo	r2, r5
	str	r0, [sp, #12]
	add.w	r0, r11, #9
	str	r0, [sp, #8]
	add	r0, r1
	str	r2, [sp, #16]
	sub.w	lr, lr, r1
	str.w	r11, [sp]
	str	r0, [sp, #4]
.LBB76_21:
	ldr	r0, [sp, #16]
	cmp	r0, r5
	beq.w	.LBB76_45
	ldr	r0, [sp, #4]
	mov	r11, r8
	.loc	5 183 29
	rsb.w	r8, r12, #32
	lsr.w	r2, r6, r12
	cmp.w	r9, #0
	.loc	5 184 37
	ldrb	r3, [r0, r5]
	.loc	5 183 29
	lsl.w	r0, r10, r8
	orr.w	r0, r0, r2
	mov	r8, r11
	.loc	5 184 23
	and.w	r2, r10, r8
	and.w	r11, r6, r4
	.loc	5 184 13 is_stmt 0
	mov.w	r6, #10
	.loc	5 184 17
	add.w	r2, r2, r2, lsl #2
	.loc	5 183 29 is_stmt 1
	it	pl
	lsrpl.w	r0, r10, r9
	.loc	5 184 17
	lsls	r2, r2, #1
	.loc	5 184 13 is_stmt 0
	umlal	r3, r2, r11, r6
	.loc	5 186 13 is_stmt 1
	ldr	r6, [sp, #8]
	strb	r0, [r6, r5]
	.loc	5 187 13
	adds	r5, #1
	.loc	5 182 15
	ldr	r0, [sp, #12]
	mov	r6, r3
	mov	r10, r2
	adds	r0, r0, r5
	bne	.LBB76_21
	.loc	5 189 15
	orrs.w	r0, r3, r2
	beq	.LBB76_43
	.loc	5 0 15 is_stmt 0
	ldr.w	r11, [sp]
	mov	r6, r3
	mov	r10, r2
	b	.LBB76_26
.LBB76_25:
	.loc	5 189 15
	orrs.w	r0, r6, r10
	mov.w	lr, #0
	beq	.LBB76_42
.LBB76_26:
	.loc	5 0 15
	movs	r1, #10
	movs	r5, #1
	b	.LBB76_29
.LBB76_27:
	.loc	5 193 17 is_stmt 1
	add.w	r2, r11, lr
	.loc	5 194 17
	add.w	lr, lr, #1
	.loc	5 193 17
	strb	r0, [r2, #9]
.LBB76_28:
	.loc	5 0 0 is_stmt 0
	and.w	r0, r6, r4
	and.w	r2, r10, r8
	umull	r6, r0, r0, r1
	add.w	r2, r2, r2, lsl #2
	add.w	r10, r0, r2, lsl #1
	.loc	5 189 15 is_stmt 1
	orrs.w	r0, r6, r10
	beq	.LBB76_31
.LBB76_29:
	.loc	5 190 29
	rsb.w	r2, r12, #32
	lsr.w	r0, r6, r12
	cmp.w	r9, #0
	lsl.w	r2, r10, r2
	orr.w	r0, r0, r2
	it	pl
	lsrpl.w	r0, r10, r9
	.loc	5 192 16
	cmp.w	lr, #768
	blo	.LBB76_27
	.loc	5 195 23
	lsls	r0, r0, #24
	.loc	5 196 17
	it	ne
	strbne.w	r5, [r11, #8]
	b	.LBB76_28
.LBB76_31:
	.loc	5 199 9
	str.w	lr, [r11]
.LBB76_32:
.Ltmp99:
	.loc	5 81 39
	sub.w	r1, lr, #1
	lsrs	r0, r1, #8
	cmp	r0, #2
	bhi	.LBB76_46
	.loc	5 81 15 is_stmt 0
	sub.w	r1, lr, #4
.LBB76_34:
	.loc	5 81 39
	add.w	r0, r11, r1
	ldrb	r2, [r0, #12]
	.loc	5 81 15
	cmp	r2, #0
	bne.w	.LBB76_18
	.loc	5 0 0
	adds	r2, r1, #3
	.loc	5 82 13 is_stmt 1
	str.w	r2, [r11]
	.loc	5 81 15
	beq.w	.LBB76_18
	.loc	5 81 39 is_stmt 0
	ldrb	r2, [r0, #11]
	.loc	5 81 15
	cmp	r2, #0
	bne.w	.LBB76_18
	.loc	5 0 0
	adds	r2, r1, #2
	.loc	5 82 13 is_stmt 1
	str.w	r2, [r11]
	.loc	5 81 15
	beq.w	.LBB76_18
	.loc	5 81 39 is_stmt 0
	ldrb	r2, [r0, #10]
	.loc	5 81 15
	cmp	r2, #0
	bne.w	.LBB76_18
	.loc	5 0 0
	adds	r2, r1, #1
	.loc	5 82 13 is_stmt 1
	str.w	r2, [r11]
	.loc	5 81 15
	beq.w	.LBB76_18
	.loc	5 81 39 is_stmt 0
	ldrb	r0, [r0, #9]
	.loc	5 81 15
	cmp	r0, #0
	bne.w	.LBB76_18
	.loc	5 82 13 is_stmt 1
	str.w	r1, [r11]
	.loc	5 81 15
	subs	r1, #4
	adds	r0, r1, #4
	bne	.LBB76_34
	b	.LBB76_18
.Ltmp100:
.LBB76_42:
	.loc	5 199 9
	str.w	lr, [r11]
	.loc	5 201 6
	add	sp, #20
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB76_43:
	.loc	5 0 6 is_stmt 0
	ldr.w	r11, [sp]
.Ltmp101:
	.loc	5 81 15 is_stmt 1
	cmp.w	lr, #0
.Ltmp102:
	.loc	5 199 9
	str.w	lr, [r11]
	bne	.LBB76_32
	b	.LBB76_18
.LBB76_44:
	.loc	5 161 32
	movw	r2, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.5
	mov.w	r0, #768
	movt	r2, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.5
	.loc	5 0 0 is_stmt 0
	mov.w	r1, #768
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB76_45:
	.loc	5 184 37 is_stmt 1
	movw	r2, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.6
	adds	r0, r1, r5
	movt	r2, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.6
	.loc	5 0 0 is_stmt 0
	mov.w	r1, #768
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB76_46:
.Ltmp103:
	.loc	5 81 39 is_stmt 1
	movw	r2, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.1
	mov	r0, r1
	movt	r2, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.1
.Ltmp104:
	.loc	5 0 0 is_stmt 0
	mov.w	r1, #768
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.Ltmp105:
.Lfunc_end76:
	.size	core::num::dec2flt::decimal::Decimal::right_shift::h74dc9d2f7bb2bda8, .Lfunc_end76-core::num::dec2flt::decimal::Decimal::right_shift::h74dc9d2f7bb2bda8
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN4core3num7dec2flt7decimal13parse_decimal17h93a23ff188fc0f81E,"ax",%progbits
	.p2align	1
	.type	core::num::dec2flt::decimal::parse_decimal::h93a23ff188fc0f81,%function
	.code	16
	.thumb_func
core::num::dec2flt::decimal::parse_decimal::h93a23ff188fc0f81:
.Lfunc_begin77:
	.loc	5 205 0 is_stmt 1
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#4
	sub	sp, #4
	mov	r6, r1
.Ltmp106:
	.loc	5 28 9 prologue_end
	movw	r1, #777
	mov	r8, r2
	mov	r10, r0
	bl	__aeabi_memclr4
.Ltmp107:
	.loc	4 54 15
	add.w	r12, r6, r8
	sub.w	r3, r8, #1
	sub.w	r4, r8, #2
	sub.w	lr, r8, #3
	movs	r1, #0
	mov	r5, r12
.LBB77_1:
.Ltmp108:
	.file	29 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/option.rs"
	.loc	29 523 56
	ldrb	r0, [r6, r1]
	adds	r2, r6, r1
.Ltmp109:
	.loc	4 54 15
	cmp	r0, #48
	bne	.LBB77_11
.Ltmp110:
	.loc	29 512 16
	cmp	r3, r1
	beq	.LBB77_9
	.loc	29 523 56
	ldrb	r0, [r2, #1]
.Ltmp111:
	.loc	4 54 15
	cmp	r0, #48
	bne	.LBB77_12
.Ltmp112:
	.loc	29 512 16
	cmp	r4, r1
	beq	.LBB77_9
	.loc	29 523 56
	ldrb	r0, [r2, #2]
.Ltmp113:
	.loc	4 54 15
	cmp	r0, #48
	bne	.LBB77_13
.Ltmp114:
	.loc	29 512 16
	cmp	lr, r1
	beq	.LBB77_9
	.loc	29 523 56
	ldrb	r0, [r2, #3]
.Ltmp115:
	.loc	4 54 15
	cmp	r0, #48
	bne	.LBB77_20
.Ltmp116:
	.file	30 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/slice/mod.rs"
	.loc	30 167 16
	adds	r1, #4
.Ltmp117:
	.loc	29 512 16
	cmp	r8, r1
	bne	.LBB77_1
.Ltmp118:
.LBB77_9:
	.loc	29 0 16 is_stmt 0
	movs	r0, #0
.LBB77_10:
	mov.w	r11, #0
	b	.LBB77_55
.LBB77_11:
	.loc	5 209 26 is_stmt 1
	sub.w	r11, r8, r1
.Ltmp119:
	.loc	20 1226 13
	sub.w	r3, r0, #48
	uxtb	r1, r3
.Ltmp120:
	.loc	4 175 12
	cmp	r1, #9
	bls	.LBB77_14
	b	.LBB77_21
.Ltmp121:
.LBB77_12:
	.loc	5 209 26
	mvns	r1, r1
	add.w	r11, r1, r8
	adds	r2, #1
.Ltmp122:
	.loc	20 1226 13
	sub.w	r3, r0, #48
	uxtb	r1, r3
.Ltmp123:
	.loc	4 175 12
	cmp	r1, #9
	bls	.LBB77_14
	b	.LBB77_21
.Ltmp124:
.LBB77_13:
	.loc	5 209 26
	sub.w	r1, r8, r1
	adds	r2, #2
	sub.w	r11, r1, #2
.Ltmp125:
	.loc	20 1226 13
	sub.w	r3, r0, #48
	uxtb	r1, r3
.Ltmp126:
	.loc	4 175 12
	cmp	r1, #9
	bhi	.LBB77_21
.LBB77_14:
.Ltmp127:
	.loc	5 65 12
	sub.w	r1, r11, #1
	adds	r5, r2, #1
	movs	r0, #0
.LBB77_15:
	lsrs	r2, r0, #8
	cmp	r2, #2
	.loc	5 66 13
	ittt	ls
	addls	r0, r10
	strbls	r3, [r0, #9]
	.loc	5 68 9
	ldrls.w	r0, [r10]
.Ltmp128:
	.loc	4 173 15
	cmp	r1, #0
.Ltmp129:
	.loc	5 68 9
	add.w	r0, r0, #1
	str.w	r0, [r10]
.Ltmp130:
	.loc	4 173 15
	beq	.LBB77_10
	.loc	4 173 21 is_stmt 0
	ldrb	r6, [r5], #1
	.loc	4 175 12 is_stmt 1
	subs	r1, #1
.Ltmp131:
	.loc	20 1226 13
	sub.w	r3, r6, #48
	uxtb	r2, r3
.Ltmp132:
	.loc	4 175 12
	cmp	r2, #10
	blo	.LBB77_15
.Ltmp133:
	.loc	5 210 8
	add.w	r11, r1, #1
	subs	r2, r5, #1
	cmp	r6, #46
	bne	.LBB77_34
	.loc	5 214 12
	cbz	r0, .LBB77_35
	.loc	5 0 12 is_stmt 0
	mov	r11, r1
	mov	r6, r5
	b	.LBB77_42
.LBB77_20:
	.loc	5 209 26 is_stmt 1
	sub.w	r1, r8, r1
	adds	r2, #3
	sub.w	r11, r1, #3
.Ltmp134:
	.loc	20 1226 13
	sub.w	r3, r0, #48
	uxtb	r1, r3
.Ltmp135:
	.loc	4 175 12
	cmp	r1, #9
	bls	.LBB77_14
.Ltmp136:
.LBB77_21:
	.loc	5 210 8
	cmp	r0, #46
	bne	.LBB77_33
.Ltmp137:
	.file	31 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/ptr/const_ptr.rs"
	.loc	31 295 18
	adds	r4, r2, #1
.Ltmp138:
	.loc	25 229 76
	sub.w	r1, r11, #1
.Ltmp139:
	.loc	29 512 16
	cbz	r1, .LBB77_36
.Ltmp140:
.LBB77_23:
	.loc	4 54 15
	add.w	r5, r2, r11
	subs	r2, r1, #1
	sub.w	r9, r1, #2
	sub.w	lr, r1, #3
	movs	r0, #0
.LBB77_24:
.Ltmp141:
	.loc	29 523 56
	ldrb	r3, [r4, r0]
	adds	r6, r4, r0
.Ltmp142:
	.loc	4 54 15
	cmp	r3, #48
	bne	.LBB77_37
.Ltmp143:
	.loc	29 512 16
	cmp	r2, r0
	beq	.LBB77_32
	.loc	29 523 56
	ldrb	r3, [r6, #1]
.Ltmp144:
	.loc	4 54 15
	cmp	r3, #48
	bne	.LBB77_38
.Ltmp145:
	.loc	29 512 16
	cmp	r9, r0
	beq	.LBB77_32
	.loc	29 523 56
	ldrb	r3, [r6, #2]
.Ltmp146:
	.loc	4 54 15
	cmp	r3, #48
	bne	.LBB77_39
.Ltmp147:
	.loc	29 512 16
	cmp	lr, r0
	beq	.LBB77_32
	.loc	29 523 56
	ldrb	r3, [r6, #3]
.Ltmp148:
	.loc	4 54 15
	cmp	r3, #48
	bne	.LBB77_40
.Ltmp149:
	.loc	30 167 16
	adds	r0, #4
.Ltmp150:
	.loc	29 512 16
	cmp	r1, r0
	bne	.LBB77_24
.Ltmp151:
.LBB77_32:
	.loc	29 0 16 is_stmt 0
	movs	r0, #0
	b	.LBB77_52
.LBB77_33:
	movs	r1, #0
.Ltmp152:
	.loc	4 30 16 is_stmt 1
	cmp.w	r11, #0
	bne.w	.LBB77_78
	b	.LBB77_90
.Ltmp153:
.LBB77_34:
	.loc	4 0 16 is_stmt 0
	mov	r5, r2
	b	.LBB77_55
.LBB77_35:
	mov	r4, r5
.Ltmp154:
	.loc	29 512 16 is_stmt 1
	cmp	r1, #0
	bne	.LBB77_23
.Ltmp155:
.LBB77_36:
	.loc	29 0 16 is_stmt 0
	movs	r1, #0
	movs	r0, #0
	mov.w	r11, #0
	mov	r5, r4
	b	.LBB77_54
.LBB77_37:
	.loc	5 217 15 is_stmt 1
	sub.w	r11, r1, r0
	b	.LBB77_41
.LBB77_38:
	mvns	r0, r0
	add.w	r11, r0, r1
	adds	r6, #1
	b	.LBB77_41
.LBB77_39:
	subs	r0, r1, r0
	adds	r6, #2
	sub.w	r11, r0, #2
	b	.LBB77_41
.LBB77_40:
	subs	r0, r1, r0
	adds	r6, #3
	sub.w	r11, r0, #3
.LBB77_41:
	.loc	5 0 15 is_stmt 0
	movs	r0, #0
.LBB77_42:
	.loc	5 217 15
	cmp.w	r11, #8
	blo	.LBB77_48
	add.w	r2, r0, #8
	lsrs	r2, r2, #8
	cmp	r2, #2
	bhi	.LBB77_48
.LBB77_44:
.Ltmp156:
	.loc	9 2104 14 is_stmt 1
	ldr	r5, [r6]
	ldr	r4, [r6, #4]
.Ltmp157:
	.loc	20 1226 13
	subs.w	r2, r5, #808464432
	adc	r3, r4, #-808464433
.Ltmp158:
	.loc	20 1184 13
	adds.w	r5, r5, #1179010630
	adc	r4, r4, #1179010630
.Ltmp159:
	.loc	4 168 5
	orrs	r5, r2
	orrs	r4, r3
	orrs	r5, r4
.Ltmp160:
	.loc	5 220 16
	tst.w	r5, #-2139062144
	bne	.LBB77_49
.Ltmp161:
	.loc	25 337 12
	cmp.w	r0, #768
	bhi.w	.LBB77_93
.Ltmp162:
	.loc	10 307 18
	add	r0, r10
.Ltmp163:
	.loc	25 229 76
	sub.w	r11, r11, #8
.Ltmp164:
	.loc	31 295 18
	adds	r6, #8
.Ltmp165:
	.loc	5 217 15
	cmp.w	r11, #8
.Ltmp166:
	.loc	9 2104 14
	str.w	r3, [r0, #13]
	str.w	r2, [r0, #9]
.Ltmp167:
	.loc	5 227 13
	ldr.w	r2, [r10]
	add.w	r0, r2, #8
	str.w	r0, [r10]
	.loc	5 217 15
	blo	.LBB77_48
	adds	r2, #16
	cmp.w	r2, #768
	blo	.LBB77_44
.LBB77_48:
.Ltmp168:
	.loc	4 173 15
	cmp.w	r11, #0
	beq	.LBB77_53
.LBB77_49:
	.loc	4 0 15 is_stmt 0
	mov	r5, r6
.LBB77_50:
	.loc	4 173 21
	ldrb	r2, [r5]
.Ltmp169:
	.loc	20 1226 13 is_stmt 1
	subs	r2, #48
	uxtb	r3, r2
.Ltmp170:
	.loc	4 175 12
	cmp	r3, #9
	bhi	.LBB77_54
.Ltmp171:
	.loc	5 65 12
	lsrs	r3, r0, #8
	cmp	r3, #2
	.loc	5 66 13
	ittt	ls
	addls	r0, r10
	strbls	r2, [r0, #9]
	.loc	5 68 9
	ldrls.w	r0, [r10]
.Ltmp172:
	.loc	31 295 18
	adds	r5, #1
.Ltmp173:
	.loc	5 68 9
	adds	r0, #1
.Ltmp174:
	.loc	25 229 76
	subs.w	r11, r11, #1
.Ltmp175:
	.loc	5 68 9
	str.w	r0, [r10]
.Ltmp176:
	.loc	4 173 15
	bne	.LBB77_50
.Ltmp177:
.LBB77_52:
	.loc	4 0 15 is_stmt 0
	mov.w	r11, #0
	b	.LBB77_54
.LBB77_53:
	mov.w	r11, #0
	mov	r5, r6
.LBB77_54:
	.loc	5 231 9 is_stmt 1
	sub.w	r1, r11, r1
	str.w	r1, [r10, #4]
.LBB77_55:
	.loc	5 233 8
	cmp	r0, #0
	beq	.LBB77_75
	.loc	5 236 27
	subs.w	r1, r8, r11
.Ltmp178:
	.loc	25 244 19
	blo.w	.LBB77_94
.Ltmp179:
	.loc	13 361 24
	cmp	r1, #0
	beq	.LBB77_76
.Ltmp180:
	.loc	13 0 24 is_stmt 0
	mvn	r1, #1
	.loc	5 237 16 is_stmt 1
	sub.w	r9, r1, r11
	mvn	r1, #2
	sub.w	lr, r1, r11
	sub.w	r6, r12, #2
	rsb.w	r2, r8, #0
	rsb.w	r8, r11, #0
	mvn.w	r12, r11
	movs	r1, #0
	b	.LBB77_60
.LBB77_59:
.Ltmp181:
	.loc	13 361 24
	adds	r2, #4
	subs	r6, #4
	cmp	r8, r2
	beq	.LBB77_77
.Ltmp182:
.LBB77_60:
	.loc	5 236 14
	add.w	r3, r6, r8
	ldrb	r4, [r3, #1]
	.loc	5 237 16
	cmp	r4, #46
	beq	.LBB77_63
	cmp	r4, #48
	bne	.LBB77_77
	.loc	5 238 17
	adds	r1, #1
.LBB77_63:
.Ltmp183:
	.loc	13 361 24
	cmp	r12, r2
	beq	.LBB77_77
.Ltmp184:
	.loc	5 236 14
	ldrb.w	r4, [r6, r8]
	.loc	5 237 16
	cmp	r4, #46
	beq	.LBB77_67
	cmp	r4, #48
	bne	.LBB77_77
	.loc	5 238 17
	adds	r1, #1
.LBB77_67:
.Ltmp185:
	.loc	13 361 24
	cmp	r9, r2
	beq	.LBB77_77
.Ltmp186:
	.loc	5 236 14
	ldrb	r4, [r3, #-1]
	.loc	5 237 16
	cmp	r4, #46
	beq	.LBB77_71
	cmp	r4, #48
	bne	.LBB77_77
	.loc	5 238 17
	adds	r1, #1
.LBB77_71:
.Ltmp187:
	.loc	13 361 24
	cmp	lr, r2
	beq	.LBB77_77
.Ltmp188:
	.loc	5 236 14
	ldrb	r3, [r3, #-2]
	.loc	5 237 16
	cmp	r3, #46
	beq	.LBB77_59
	cmp	r3, #48
	bne	.LBB77_77
	.loc	5 238 17
	adds	r1, #1
	b	.LBB77_59
.LBB77_75:
	.loc	5 0 17 is_stmt 0
	movs	r1, #0
	mov	r2, r5
.Ltmp189:
	.loc	4 30 16 is_stmt 1
	cmp.w	r11, #0
	bne	.LBB77_78
	b	.LBB77_90
.Ltmp190:
.LBB77_76:
	.loc	4 0 16 is_stmt 0
	movs	r1, #0
.LBB77_77:
	.loc	5 243 9 is_stmt 1
	ldr.w	r2, [r10, #4]
	.loc	5 244 9
	subs	r1, r0, r1
	.loc	5 246 12
	cmp.w	r1, #768
	.loc	5 245 9
	add	r0, r2
	mov	r2, r5
	.loc	5 244 9
	strd	r1, r0, [r10]
	itttt	hi
	movhi.w	r1, #768
	.loc	5 248 13
	strhi.w	r1, [r10]
	movhi	r0, #1
	.loc	5 247 13
	strbhi.w	r0, [r10, #8]
.Ltmp191:
	.loc	4 30 16
	cmp.w	r11, #0
	beq	.LBB77_90
.LBB77_78:
	.loc	4 30 22 is_stmt 0
	ldrb	r0, [r2]
	.loc	4 30 51
	and	r0, r0, #223
.Ltmp192:
	.loc	5 251 8 is_stmt 1
	cmp	r0, #69
	bne	.LBB77_90
.Ltmp193:
	.loc	25 229 76
	subs.w	r6, r11, #1
.Ltmp194:
	.loc	29 512 16
	beq	.LBB77_86
.Ltmp195:
	.loc	5 0 0 is_stmt 0
	adds	r5, r2, #1
.Ltmp196:
	.loc	29 523 56 is_stmt 1
	ldrb.w	r12, [r5]
.Ltmp197:
	.loc	5 254 12
	cmp.w	r12, #45
	it	ne
	cmpne.w	r12, #43
	bne	.LBB77_83
	.loc	5 0 0 is_stmt 0
	subs.w	r6, r11, #2
.Ltmp198:
	.loc	4 173 15 is_stmt 1
	beq	.LBB77_87
	.loc	4 0 15 is_stmt 0
	adds	r5, r2, #2
.LBB77_83:
	movs	r2, #0
	movs	r3, #0
.LBB77_84:
	.loc	4 173 21
	ldrb	r4, [r5]
.Ltmp199:
	.loc	20 1226 13 is_stmt 1
	subs	r4, #48
	uxtb	r0, r4
.Ltmp200:
	.loc	4 175 12
	cmp	r0, #9
	bhi	.LBB77_88
.Ltmp201:
	.loc	5 262 16
	add.w	r0, r3, r3, lsl #2
	cmp.w	r3, #65536
.Ltmp202:
	.loc	31 295 18
	add.w	r5, r5, #1
.Ltmp203:
	.loc	5 262 16
	lsl.w	r0, r0, #1
	uxtab	r0, r0, r4
	itt	lt
	movlt	r2, r0
	movlt	r3, r0
.Ltmp204:
	.loc	25 229 76
	subs	r6, #1
.Ltmp205:
	.loc	4 173 15
	bne	.LBB77_84
	b	.LBB77_88
.Ltmp206:
.LBB77_86:
	.loc	4 0 15 is_stmt 0
	movs	r2, #0
	b	.LBB77_89
.LBB77_87:
	movs	r2, #0
.LBB77_88:
	.loc	5 266 31 is_stmt 1
	cmp.w	r12, #45
	it	eq
	rsbeq	r2, r2, #0
.LBB77_89:
	.loc	5 266 9 is_stmt 0
	ldr.w	r0, [r10, #4]
	add	r0, r2
	str.w	r0, [r10, #4]
.LBB77_90:
.Ltmp207:
	.loc	6 621 12 is_stmt 1
	cmp	r1, #18
	bhi	.LBB77_92
	add.w	r0, r1, r10
	rsb.w	r1, r1, #19
	adds	r0, #9
.Ltmp208:
	.loc	5 269 9
	bl	__aeabi_memclr
.LBB77_92:
	.loc	5 272 2
	add	sp, #4
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB77_93:
.Ltmp209:
	.loc	25 338 13
	movw	r2, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.7
	mov.w	r1, #768
	movt	r2, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.7
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.Ltmp210:
.LBB77_94:
	.loc	25 245 13
	movw	r2, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.8
	mov	r0, r1
	movt	r2, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.8
	mov	r1, r8
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.Ltmp211:
.Lfunc_end77:
	.size	core::num::dec2flt::decimal::parse_decimal::h93a23ff188fc0f81, .Lfunc_end77-core::num::dec2flt::decimal::parse_decimal::h93a23ff188fc0f81
	.cfi_endproc
	.file	32 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/iter/adapters/rev.rs"
	.cantunwind
	.fnend

	.section	.text.unlikely._ZN4core5slice5index24slice_end_index_len_fail17h5a91c503035fd6a0E,"ax",%progbits
	.p2align	1
	.type	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0,%function
	.code	16
	.thumb_func
core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0:
.Lfunc_begin78:
	.loc	25 42 0
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	.pad	#48
	sub	sp, #48
	strd	r0, r1, [sp]
	add	r1, sp, #32
	movs	r0, #2
.Ltmp212:
	.loc	3 387 9 prologue_end
	str	r1, [sp, #24]
	movs	r1, #0
	str	r0, [sp, #28]
	strd	r0, r1, [sp, #12]
	movw	r0, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.260
	movt	r0, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.260
	str	r1, [sp, #20]
	str	r0, [sp, #8]
.Ltmp213:
	.loc	25 43 5
	movw	r0, :lower16:core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::h9d0ff72e374f98e7
	add	r1, sp, #4
	movt	r0, :upper16:core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::h9d0ff72e374f98e7
	str	r0, [sp, #44]
	strd	r0, r1, [sp, #36]
	mov	r0, sp
	str	r0, [sp, #32]
	add	r0, sp, #8
	mov	r1, r2
	bl	core::panicking::panic_fmt::h679f68291595c801
	.inst.n	0xdefe
.Ltmp214:
.Lfunc_end78:
	.size	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0, .Lfunc_end78-core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN59_$LT$f32$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$8from_u6417h4eddb77395e2e77bE","ax",%progbits
	.p2align	1
	.type	<f32 as core::num::dec2flt::float::RawFloat>::from_u64::h4eddb77395e2e77b,%function
	.code	16
	.thumb_func
<f32 as core::num::dec2flt::float::RawFloat>::from_u64::h4eddb77395e2e77b:
.Lfunc_begin79:
	.file	33 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/num/dec2flt/float.rs"
	.loc	33 121 0
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
.Ltmp215:
	.loc	33 123 9 prologue_end
	bl	__aeabi_ul2f
	vmov	s0, r0
	.loc	33 124 6
	pop	{r7, pc}
.Ltmp216:
.Lfunc_end79:
	.size	<f32 as core::num::dec2flt::float::RawFloat>::from_u64::h4eddb77395e2e77b, .Lfunc_end79-<f32 as core::num::dec2flt::float::RawFloat>::from_u64::h4eddb77395e2e77b
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN59_$LT$f32$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$13from_u64_bits17h7685f84f0a31e923E","ax",%progbits
	.p2align	1
	.type	<f32 as core::num::dec2flt::float::RawFloat>::from_u64_bits::h7685f84f0a31e923,%function
	.code	16
	.thumb_func
<f32 as core::num::dec2flt::float::RawFloat>::from_u64_bits::h7685f84f0a31e923:
.Lfunc_begin80:
	.loc	33 126 0
	.fnstart
	.cfi_startproc
	.file	34 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/num/f32.rs"
	.loc	34 882 18 prologue_end
	vmov	s0, r0
.Ltmp217:
	.loc	33 128 6
	bx	lr
.Ltmp218:
.Lfunc_end80:
	.size	<f32 as core::num::dec2flt::float::RawFloat>::from_u64_bits::h7685f84f0a31e923, .Lfunc_end80-<f32 as core::num::dec2flt::float::RawFloat>::from_u64_bits::h7685f84f0a31e923
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN59_$LT$f32$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$15pow10_fast_path17h2e6c360518413f56E","ax",%progbits
	.p2align	1
	.type	<f32 as core::num::dec2flt::float::RawFloat>::pow10_fast_path::h2e6c360518413f56,%function
	.code	16
	.thumb_func
<f32 as core::num::dec2flt::float::RawFloat>::pow10_fast_path::h2e6c360518413f56:
.Lfunc_begin81:
	.loc	33 130 0
	.fnstart
	.cfi_startproc
	.loc	33 134 15 prologue_end
	and	r0, r0, #15
	.loc	33 134 9 is_stmt 0
	movw	r1, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.13
	movt	r1, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.13
	add.w	r0, r1, r0, lsl #2
	vldr	s0, [r0]
	.loc	33 135 6 is_stmt 1
	bx	lr
.Ltmp219:
.Lfunc_end81:
	.size	<f32 as core::num::dec2flt::float::RawFloat>::pow10_fast_path::h2e6c360518413f56, .Lfunc_end81-<f32 as core::num::dec2flt::float::RawFloat>::pow10_fast_path::h2e6c360518413f56
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN4core3num7dec2flt6lemire5power17h40f4ef2b860ed5dfE,"ax",%progbits
	.p2align	1
	.type	core::num::dec2flt::lemire::power::h40f4ef2b860ed5df,%function
	.code	16
	.thumb_func
core::num::dec2flt::lemire::power::h40f4ef2b860ed5df:
.Lfunc_begin82:
	.file	35 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/num/dec2flt/lemire.rs"
	.loc	35 121 0
	.fnstart
	.cfi_startproc
	movw	r1, #21098
	movt	r1, #3
.Ltmp220:
	.file	36 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/num/int_macros.rs"
	.loc	36 1203 13 prologue_end
	muls	r0, r1, r0
	movs	r1, #63
.Ltmp221:
	.loc	35 122 5
	add.w	r0, r1, r0, asr #16
	.loc	35 123 2
	bx	lr
.Ltmp222:
.Lfunc_end82:
	.size	core::num::dec2flt::lemire::power::h40f4ef2b860ed5df, .Lfunc_end82-core::num::dec2flt::lemire::power::h40f4ef2b860ed5df
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN4core3num7dec2flt6lemire22compute_product_approx17h25610b609a3e8ae8E,"ax",%progbits
	.p2align	1
	.type	core::num::dec2flt::lemire::compute_product_approx::h25610b609a3e8ae8,%function
	.code	16
	.thumb_func
core::num::dec2flt::lemire::compute_product_approx::h25610b609a3e8ae8:
.Lfunc_begin83:
	.loc	35 133 0
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10}
	push.w	{r8, r9, r10}
	.cfi_offset r10, -24
	.cfi_offset r9, -28
	.cfi_offset r8, -32
.Ltmp223:
	.loc	35 147 17 prologue_end
	add.w	r0, r0, #342
	mov	lr, r2
	.loc	35 148 10
	movw	r2, :lower16:core::num::dec2flt::table::POWER_OF_FIVE_128::h0a265520c0249b55
	mov	r12, r3
	movt	r2, :upper16:core::num::dec2flt::table::POWER_OF_FIVE_128::h0a265520c0249b55
	lsls	r1, r0, #4
	ldr	r1, [r2, r1]
	add.w	r5, r2, r0, lsl #4
.Ltmp224:
	.loc	35 126 13
	movs	r3, #0
.Ltmp225:
	.loc	35 148 10
	ldr	r6, [r5, #4]
	mov.w	r8, #0
.Ltmp226:
	.loc	35 126 13
	umull	r0, r2, r1, lr
	umlal	r2, r3, r6, lr
	umull	r1, r4, r1, r12
	adds	r1, r1, r2
	adcs.w	r2, r3, r4
	mov.w	r4, #63
	adc	r3, r8, #0
	umlal	r2, r3, r6, r12
.Ltmp227:
	.loc	35 154 8
	bics	r4, r3
	orn	r4, r4, r2
	cbnz	r4, .LBB83_2
	.loc	35 148 15
	ldrd	r4, r9, [r5, #8]
.Ltmp228:
	.loc	35 126 13
	umull	r6, r5, r4, lr
	movs	r6, #0
	umull	r4, r10, r4, r12
	umlal	r5, r6, r9, lr
	adds	r5, r5, r4
	adcs.w	r6, r6, r10
	adc	r5, r8, #0
	umlal	r6, r5, r9, r12
.Ltmp229:
	.loc	20 1184 13
	adds	r0, r0, r6
	adcs	r1, r5
.Ltmp230:
	.loc	35 161 12
	adcs	r2, r2, #0
	adc	r3, r3, #0
.LBB83_2:
	.loc	35 166 2
	pop.w	{r8, r9, r10}
	pop	{r4, r5, r6, r7, pc}
.Ltmp231:
.Lfunc_end83:
	.size	core::num::dec2flt::lemire::compute_product_approx::h25610b609a3e8ae8, .Lfunc_end83-core::num::dec2flt::lemire::compute_product_approx::h25610b609a3e8ae8
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN4core3num7dec2flt5parse12parse_number17h53c7787c169de877E,"ax",%progbits
	.p2align	1
	.type	core::num::dec2flt::parse::parse_number::h53c7787c169de877,%function
	.code	16
	.thumb_func
core::num::dec2flt::parse::parse_number::h53c7787c169de877:
.Lfunc_begin84:
	.file	37 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/num/dec2flt/parse.rs"
	.loc	37 198 0
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#36
	sub	sp, #36
.Ltmp232:
	.loc	4 139 25 prologue_end
	ldrb	r6, [r1]
	mov	r11, r0
	.loc	4 141 16
	str	r3, [sp, #24]
.Ltmp233:
	.loc	20 1226 13
	sub.w	r5, r6, #48
.Ltmp234:
	.loc	4 141 16
	str	r6, [sp, #32]
.Ltmp235:
	.loc	20 1226 13
	uxtb	r0, r5
.Ltmp236:
	.loc	4 141 16
	cmp	r0, #9
	bhi	.LBB84_6
	.loc	4 0 16 is_stmt 0
	mov	r9, r2
	.loc	4 139 19 is_stmt 1
	subs	r2, #1
	movs	r0, #0
	mov.w	lr, #10
	movs	r4, #0
	mov.w	r12, #0
.LBB84_2:
.Ltmp237:
	.loc	20 1249 13
	add.w	r6, r12, r12, lsl #2
.Ltmp238:
	.loc	37 32 46
	uxtb.w	r8, r5
.Ltmp239:
	.loc	4 139 19
	cmp	r2, r0
.Ltmp240:
	.loc	20 1249 13
	lsl.w	r12, r6, #1
.Ltmp241:
	.loc	20 1184 13
	umlal	r8, r12, r4, lr
.Ltmp242:
	.loc	4 139 19
	beq	.LBB84_10
	.loc	4 0 0 is_stmt 0
	adds	r6, r1, r0
	.loc	4 141 16 is_stmt 1
	adds	r0, #1
	.loc	4 139 25
	ldrb	r6, [r6, #1]
.Ltmp243:
	.loc	20 1226 13
	sub.w	r5, r6, #48
	uxtb	r4, r5
.Ltmp244:
	.loc	4 141 16
	cmp	r4, #9
	mov	r4, r8
	bls	.LBB84_2
.Ltmp245:
	.loc	4 0 16 is_stmt 0
	mov	r2, r9
.Ltmp246:
	.loc	18 1316 52 is_stmt 1
	sub.w	r4, r9, r0
	add.w	r9, r1, r0
.Ltmp247:
	.loc	37 124 8
	cmp	r6, #46
	beq	.LBB84_7
.LBB84_5:
	.loc	37 0 8 is_stmt 0
	movs	r0, #0
	movs	r6, #0
	str	r0, [sp, #28]
	mov	r5, r4
	movs	r0, #0
.Ltmp248:
	.loc	4 89 9 is_stmt 1
	subs	r3, r2, r4
.Ltmp249:
	.loc	37 134 5
	adds	r3, r3, r0
	.loc	37 135 8
	bne.w	.LBB84_50
	b	.LBB84_64
.LBB84_6:
	.loc	37 0 8 is_stmt 0
	mov.w	r8, #0
	mov.w	r12, #0
	mov	r4, r2
	mov	r9, r1
	.loc	37 124 8 is_stmt 1
	cmp	r6, #46
	bne	.LBB84_5
.LBB84_7:
.Ltmp250:
	.loc	25 229 76
	sub.w	r10, r4, #1
.Ltmp251:
	.loc	37 0 0 is_stmt 0
	add.w	r3, r9, #1
.Ltmp252:
	.loc	4 79 12 is_stmt 1
	cmp.w	r10, #8
	blo.w	.LBB84_28
.Ltmp253:
	.loc	9 2104 14
	ldr	r6, [r3]
	mov	lr, r2
	ldr	r5, [r3, #4]
.Ltmp254:
	.loc	20 1226 13
	subs.w	r2, r6, #808464432
	str	r4, [sp, #20]
	adc	r0, r5, #-808464433
.Ltmp255:
	.loc	20 1184 13
	adds.w	r6, r6, #1179010630
	adc	r5, r5, #1179010630
.Ltmp256:
	.loc	4 168 5
	orrs	r6, r2
	orrs	r5, r0
	orrs	r6, r5
.Ltmp257:
	.loc	37 60 12
	tst.w	r6, #-2139062144
	beq.w	.LBB84_37
.Ltmp258:
	.loc	37 0 12 is_stmt 0
	mov	r5, r10
	b	.LBB84_30
.LBB84_10:
	.loc	37 135 8 is_stmt 1
	cmp.w	r9, #0
	beq.w	.LBB84_64
	.loc	37 0 8 is_stmt 0
	movs	r0, #0
	mov	r2, r9
	movs	r4, #0
	mov	r3, r9
	mov.w	r10, #0
	mov.w	lr, #0
	movs	r5, #0
	movs	r6, #0
	str	r0, [sp, #28]
	.loc	37 154 8 is_stmt 1
	cmp	r3, #20
	blt.w	.LBB84_57
.LBB84_12:
	.loc	37 0 8 is_stmt 0
	mov	r0, r3
	strd	r10, r6, [sp, #12]
	.loc	37 158 5 is_stmt 1
	sub.w	r10, r0, #19
	ldr	r0, [sp, #32]
	strd	r5, lr, [sp]
	.loc	37 161 11
	subs	r5, r2, #1
	sub.w	r9, r2, #2
	subs	r3, r2, #3
	str	r2, [sp, #8]
	subs	r2, #4
	mov	r6, r11
	mov.w	r11, #0
	mov.w	lr, #47
	str	r4, [sp, #20]
.LBB84_13:
	uxtb	r4, r0
	cmp	r4, #46
	it	ne
	cmpne	r4, #48
	bne	.LBB84_22
.Ltmp259:
	.loc	20 1092 13
	uqsub8	r0, r0, lr
.Ltmp260:
	.loc	4 30 16
	cmp	r5, r11
.Ltmp261:
	.loc	37 165 25
	uxtb	r0, r0
	.loc	37 165 13 is_stmt 0
	sub.w	r10, r10, r0
.Ltmp262:
	.loc	4 30 16 is_stmt 1
	beq	.LBB84_22
	.loc	4 30 22 is_stmt 0
	add.w	r0, r1, r11
	ldrb	r4, [r0, #1]
.Ltmp263:
	.loc	37 161 11 is_stmt 1
	cmp	r4, #48
	it	ne
	cmpne	r4, #46
	bne	.LBB84_22
.Ltmp264:
	.loc	20 1092 13
	uqsub8	r4, r4, lr
.Ltmp265:
	.loc	4 30 16
	cmp	r9, r11
.Ltmp266:
	.loc	37 165 25
	uxtb	r4, r4
	.loc	37 165 13 is_stmt 0
	sub.w	r10, r10, r4
.Ltmp267:
	.loc	4 30 16 is_stmt 1
	beq	.LBB84_22
	.loc	4 30 22 is_stmt 0
	ldrb	r4, [r0, #2]
.Ltmp268:
	.loc	37 161 11 is_stmt 1
	cmp	r4, #48
	it	ne
	cmpne	r4, #46
	bne	.LBB84_22
.Ltmp269:
	.loc	20 1092 13
	uqsub8	r4, r4, lr
.Ltmp270:
	.loc	4 30 16
	cmp	r3, r11
.Ltmp271:
	.loc	37 165 25
	uxtb	r4, r4
	.loc	37 165 13 is_stmt 0
	sub.w	r10, r10, r4
.Ltmp272:
	.loc	4 30 16 is_stmt 1
	beq	.LBB84_22
	.loc	4 30 22 is_stmt 0
	ldrb	r4, [r0, #3]
.Ltmp273:
	.loc	37 161 11 is_stmt 1
	cmp	r4, #48
	it	ne
	cmpne	r4, #46
	bne	.LBB84_22
.Ltmp274:
	.loc	20 1092 13
	uqsub8	r4, r4, lr
.Ltmp275:
	.loc	4 30 16
	cmp	r2, r11
.Ltmp276:
	.loc	37 165 25
	uxtb	r4, r4
	.loc	37 165 13 is_stmt 0
	sub.w	r10, r10, r4
.Ltmp277:
	.loc	4 30 16 is_stmt 1
	beq	.LBB84_22
	.loc	4 30 22 is_stmt 0
	ldrb	r0, [r0, #4]
	.loc	4 30 16
	add.w	r11, r11, #4
	b	.LBB84_13
.Ltmp278:
.LBB84_22:
	.loc	4 0 16
	mov	r11, r6
	ldr	r6, [sp, #16]
	.loc	37 169 8 is_stmt 1
	cmp.w	r10, #1
	blt.w	.LBB84_63
	.loc	37 0 8 is_stmt 0
	ldr	r0, [sp, #8]
	movw	r9, #46771
	movs	r3, #0
	movs	r6, #0
.Ltmp279:
	.loc	37 41 16 is_stmt 1
	add.w	lr, r1, r0
	rsbs	r4, r0, #0
	movt	r9, #3552
	movt	r3, #42852
	movs	r2, #10
	mov.w	r12, #0
	ldr	r0, [sp, #32]
.Ltmp280:
	.loc	20 1226 13
	sub.w	r5, r0, #48
	uxtb	r5, r5
.Ltmp281:
	.loc	37 41 16
	cmp	r5, #9
	bhi	.LBB84_27
.LBB84_24:
	.loc	37 42 22
	add.w	r0, r12, r12, lsl #2
	lsl.w	r12, r0, #1
	.loc	37 42 17 is_stmt 0
	umlal	r5, r12, r6, r2
	.loc	37 38 11 is_stmt 1
	subs	r0, r5, r3
	sbcs.w	r0, r12, r9
	bhs.w	.LBB84_40
.Ltmp282:
	.loc	30 167 16
	adds	r4, #1
.Ltmp283:
	.loc	37 39 16
	bhs.w	.LBB84_41
	.loc	37 0 0 is_stmt 0
	adds	r6, r1, #1
	.loc	37 39 22
	ldrb	r0, [r1, #1]
	mov	r1, r6
	mov	r6, r5
.Ltmp284:
	.loc	20 1226 13 is_stmt 1
	sub.w	r5, r0, #48
	uxtb	r5, r5
.Ltmp285:
	.loc	37 41 16
	cmp	r5, #9
	bls	.LBB84_24
.Ltmp286:
.LBB84_27:
	.loc	25 229 76
	rsbs	r4, r4, #0
	mov	r5, r6
	mov	lr, r1
	b	.LBB84_42
.Ltmp287:
.LBB84_28:
	.loc	25 0 76 is_stmt 0
	mov	r5, r10
	mov	r9, r3
.Ltmp288:
	.loc	4 139 19 is_stmt 1
	cmp	r5, #0
	beq.w	.LBB84_48
.LBB84_29:
	.loc	4 0 19 is_stmt 0
	mov	lr, r2
	mov	r3, r9
	str	r4, [sp, #20]
.LBB84_30:
	mov	r6, r8
.LBB84_31:
	.loc	4 139 19
	add.w	r9, r3, r5
	movs	r0, #10
	mov	r2, lr
.LBB84_32:
	.loc	4 139 25
	ldrb	r4, [r3]
.Ltmp289:
	.loc	20 1226 13 is_stmt 1
	subs	r4, #48
	uxtb.w	r8, r4
.Ltmp290:
	.loc	4 141 16
	cmp.w	r8, #9
	bhi	.LBB84_35
.Ltmp291:
	.loc	20 1249 13
	add.w	r4, r12, r12, lsl #2
.Ltmp292:
	.loc	25 229 76
	subs	r5, #1
.Ltmp293:
	.loc	31 295 18
	add.w	r3, r3, #1
.Ltmp294:
	.loc	20 1249 13
	lsl.w	r12, r4, #1
.Ltmp295:
	.loc	20 1184 13
	umlal	r8, r12, r6, r0
	mov	r6, r8
.Ltmp296:
	.loc	4 139 19
	bne	.LBB84_32
.Ltmp297:
	.loc	4 0 19 is_stmt 0
	movs	r5, #0
	b	.LBB84_36
.LBB84_35:
	mov	r8, r6
	mov	r9, r3
.LBB84_36:
	ldr	r4, [sp, #20]
	b	.LBB84_49
.LBB84_37:
	movs	r6, #10
.Ltmp298:
	.loc	37 22 9 is_stmt 1
	add.w	r4, r0, r0, lsl #2
	umull	r6, r5, r2, r6
	.loc	37 22 20 is_stmt 0
	lsrs	r2, r2, #8
	orr.w	r2, r2, r0, lsl #24
.Ltmp299:
	.loc	31 295 18 is_stmt 1
	adds	r3, #8
.Ltmp300:
	.loc	37 22 5
	adds	r2, r2, r6
	.loc	37 22 9 is_stmt 0
	add.w	r5, r5, r4, lsl #1
	.loc	37 22 5
	adc.w	r5, r5, r0, lsr #8
	movw	r4, #15625
	.loc	37 23 14 is_stmt 1
	uxtb	r6, r2
.Ltmp301:
	.loc	20 1249 13
	muls	r6, r4, r6
.Ltmp302:
	.loc	37 23 14
	uxtb	r0, r5
	movs	r4, #100
.Ltmp303:
	.loc	20 1249 13
	muls	r4, r0, r4
.Ltmp304:
	.loc	37 24 14
	ubfx	r0, r2, #16, #8
	movw	r2, #10000
.Ltmp305:
	.loc	20 1249 13
	muls	r2, r0, r2
	movw	r0, #57600
	movt	r0, #1525
.Ltmp306:
	.loc	20 1249 13 is_stmt 0
	mul	r12, r12, r0
.Ltmp307:
	.loc	20 1249 13
	add.w	r6, r4, r6, lsl #6
	ldr	r4, [sp, #20]
.Ltmp308:
	.loc	20 1249 13
	uxtab	r2, r2, r5, ror #16
.Ltmp309:
	.loc	20 1184 13 is_stmt 1
	add	r6, r2
.Ltmp310:
	.loc	25 229 76
	sub.w	r5, r4, #9
.Ltmp311:
	.loc	20 1184 13
	umlal	r6, r12, r8, r0
.Ltmp312:
	.loc	4 79 12
	cmp	r5, #8
	blo	.LBB84_46
.Ltmp313:
	.loc	9 2104 14
	ldr	r0, [r3]
	ldr	r2, [r3, #4]
.Ltmp314:
	.loc	20 1226 13
	subs.w	r4, r0, #808464432
	adc	r8, r2, #-808464433
.Ltmp315:
	.loc	20 1184 13
	adds.w	r0, r0, #1179010630
	adc	r2, r2, #1179010630
.Ltmp316:
	.loc	4 168 5
	orrs	r0, r4
	orr.w	r2, r2, r8
	orrs	r0, r2
.Ltmp317:
	.loc	37 67 20
	tst.w	r0, #-2139062144
	bne	.LBB84_31
	.loc	37 0 20 is_stmt 0
	movs	r0, #10
.Ltmp318:
	.loc	37 22 20 is_stmt 1
	lsrs	r3, r4, #8
	.loc	37 22 9 is_stmt 0
	umull	r0, r2, r4, r0
	add.w	r4, r8, r8, lsl #2
	.loc	37 22 20
	orr.w	r3, r3, r8, lsl #24
	movs	r5, #100
.Ltmp319:
	.loc	31 295 18 is_stmt 1
	add.w	r9, r9, #17
.Ltmp320:
	.loc	37 22 5
	adds	r0, r0, r3
	.loc	37 22 9 is_stmt 0
	add.w	r2, r2, r4, lsl #1
	.loc	37 22 5
	adc.w	r2, r2, r8, lsr #8
	movw	r4, #15625
	.loc	37 23 14 is_stmt 1
	uxtb	r3, r0
	.loc	37 24 14
	ubfx	r0, r0, #16, #8
.Ltmp321:
	.loc	20 1249 13
	muls	r3, r4, r3
.Ltmp322:
	.loc	37 23 14
	uxtb	r4, r2
.Ltmp323:
	.loc	20 1249 13
	muls	r4, r5, r4
	movw	r5, #10000
.Ltmp324:
	.loc	20 1249 13 is_stmt 0
	muls	r0, r5, r0
	movw	r5, #57600
	movt	r5, #1525
.Ltmp325:
	.loc	20 1249 13
	mul	r12, r12, r5
.Ltmp326:
	.loc	20 1249 13
	add.w	r3, r4, r3, lsl #6
	ldr	r4, [sp, #20]
.Ltmp327:
	.loc	20 1249 13
	uxtab	r0, r0, r2, ror #16
.Ltmp328:
	.loc	20 1184 13 is_stmt 1
	add.w	r8, r0, r3
.Ltmp329:
	.loc	20 1184 13 is_stmt 0
	umlal	r8, r12, r6, r5
.Ltmp330:
	.loc	25 229 76 is_stmt 1
	sub.w	r5, r4, #17
	b	.LBB84_47
.Ltmp331:
.LBB84_40:
	.loc	37 175 20
	ldr	r0, [sp, #20]
	mov	r8, r5
	add	r0, r4
	mvns	r0, r0
	b	.LBB84_62
.LBB84_41:
	.loc	37 0 20 is_stmt 0
	movs	r4, #0
.LBB84_42:
.Ltmp332:
	.loc	37 38 11 is_stmt 1
	add.w	r2, lr, #1
.Ltmp333:
	.loc	25 229 76
	sub.w	lr, r4, #1
	movs	r6, #10
	mov	r1, lr
.Ltmp334:
.LBB84_43:
	.loc	37 39 16
	cmp	r1, #0
	beq	.LBB84_59
	.loc	37 39 22 is_stmt 0
	ldrb	r0, [r2]
.Ltmp335:
	.loc	20 1226 13 is_stmt 1
	subs	r0, #48
	uxtb.w	r8, r0
.Ltmp336:
	.loc	37 41 16
	cmp.w	r8, #9
	bhi	.LBB84_60
	.loc	37 42 22
	add.w	r0, r12, r12, lsl #2
	.loc	37 38 11
	adds	r2, #1
.Ltmp337:
	.loc	25 229 76
	subs	r1, #1
.Ltmp338:
	.loc	37 42 22
	lsl.w	r12, r0, #1
	.loc	37 42 17 is_stmt 0
	umlal	r8, r12, r5, r6
	.loc	37 38 11 is_stmt 1
	subs.w	r0, r8, r3
	sbcs.w	r0, r12, r9
	mov	r5, r8
	blo	.LBB84_43
	b	.LBB84_61
.Ltmp339:
.LBB84_46:
	.loc	37 0 11 is_stmt 0
	mov	r8, r6
	mov	r9, r3
.LBB84_47:
	mov	r2, lr
.Ltmp340:
	.loc	4 139 19 is_stmt 1
	cmp	r5, #0
	bne.w	.LBB84_29
.Ltmp341:
.LBB84_48:
	.loc	4 0 19 is_stmt 0
	movs	r5, #0
.LBB84_49:
.Ltmp342:
	.loc	4 89 9 is_stmt 1
	sub.w	r0, r10, r5
.Ltmp343:
	.loc	37 131 20
	rsbs	r6, r0, #0
	.loc	37 131 9 is_stmt 0
	asrs	r3, r6, #31
	.loc	37 124 5 is_stmt 1
	str	r3, [sp, #28]
.Ltmp344:
	.loc	4 89 9
	subs	r3, r2, r4
.Ltmp345:
	.loc	37 134 5
	adds	r3, r3, r0
	.loc	37 135 8
	beq	.LBB84_64
.LBB84_50:
	.loc	37 0 8 is_stmt 0
	cbz	r5, .LBB84_56
.Ltmp346:
	.loc	4 30 22 is_stmt 1
	ldrb.w	r0, [r9]
.Ltmp347:
	.loc	37 141 8
	orr	r0, r0, #32
	cmp	r0, #101
	bne	.LBB84_58
.Ltmp348:
	.loc	25 229 76
	subs.w	r10, r5, #1
.Ltmp349:
	.loc	37 83 12
	beq	.LBB84_64
.Ltmp350:
	.loc	37 0 0 is_stmt 0
	add.w	lr, r9, #1
.Ltmp351:
	.loc	37 83 18
	ldrb.w	r0, [lr]
	.loc	37 85 12 is_stmt 1
	str	r0, [sp, #12]
	cmp	r0, #45
	it	ne
	cmpne	r0, #43
	bne	.LBB84_66
.Ltmp352:
	.loc	25 229 76
	subs.w	r10, r5, #2
.Ltmp353:
	.loc	4 35 16
	beq	.LBB84_64
.Ltmp354:
	.loc	37 0 0 is_stmt 0
	add.w	r0, r9, #2
	mov	r5, r3
.Ltmp355:
	.loc	4 35 22
	ldrb	r3, [r0]
	mov	r9, r0
.Ltmp356:
	.file	38 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/num/mod.rs"
	.loc	38 587 25 is_stmt 1
	sub.w	lr, r3, #48
	uxtb.w	r3, lr
.Ltmp357:
	.loc	37 92 8
	cmp	r3, #9
	bls	.LBB84_67
	b	.LBB84_64
.Ltmp358:
.LBB84_56:
	.loc	37 0 8 is_stmt 0
	mov.w	r10, #0
	mov.w	lr, #0
	movs	r5, #0
	.loc	37 154 8 is_stmt 1
	cmp	r3, #20
	bge.w	.LBB84_12
.Ltmp359:
.LBB84_57:
	.loc	37 0 8 is_stmt 0
	movs	r0, #0
	.loc	37 200 12 is_stmt 1
	cmp.w	r10, #0
	bne	.LBB84_64
	b	.LBB84_65
.LBB84_58:
	.loc	37 0 12 is_stmt 0
	mov.w	lr, #0
	mov.w	r10, #1
	movs	r5, #0
.Ltmp360:
	.loc	37 154 8 is_stmt 1
	cmp	r3, #20
	bge.w	.LBB84_12
	b	.LBB84_57
.LBB84_59:
	.loc	37 0 8 is_stmt 0
	movs	r1, #0
.LBB84_60:
	mov	r8, r5
.LBB84_61:
.Ltmp361:
	.loc	4 89 9 is_stmt 1
	sub.w	r0, r1, lr
.Ltmp362:
.LBB84_62:
	.loc	37 191 9
	ldr	r1, [sp, #4]
	adds	r6, r1, r0
	ldr	r1, [sp]
	adc.w	r0, r1, r0, asr #31
	.loc	37 169 5
	str	r0, [sp, #28]
.LBB84_63:
	.loc	37 0 5 is_stmt 0
	movs	r0, #0
	.loc	37 169 8
	cmp.w	r10, #0
	it	gt
	movgt	r0, #1
	ldr.w	r10, [sp, #12]
.Ltmp363:
	.loc	37 200 12 is_stmt 1
	cmp.w	r10, #0
	beq	.LBB84_65
.LBB84_64:
	.loc	37 0 12 is_stmt 0
	movs	r0, #0
	.loc	37 204 5 is_stmt 1
	strd	r0, r0, [r11]
	strd	r0, r0, [r11, #8]
	strd	r0, r0, [r11, #16]
	movs	r0, #2
	strb.w	r0, [r11, #16]
	.loc	37 205 2
	add	sp, #36
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB84_65:
	.loc	37 201 20
	strb.w	r0, [r11, #17]
	add.w	r1, r11, #4
	ldr	r0, [sp, #24]
	strb.w	r0, [r11, #16]
	ldr	r0, [sp, #28]
	str.w	r6, [r11]
	stm.w	r1, {r0, r8, r12}
	.loc	37 205 2
	add	sp, #36
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB84_66:
	.loc	37 0 2 is_stmt 0
	mov	r5, r3
	mov	r9, lr
	mov	r3, r0
.Ltmp364:
	.loc	38 587 25 is_stmt 1
	sub.w	lr, r3, #48
	uxtb.w	r3, lr
.Ltmp365:
	.loc	37 92 8
	cmp	r3, #9
	bhi	.LBB84_64
.LBB84_67:
	.loc	37 0 8 is_stmt 0
	strd	r5, r11, [sp]
.Ltmp366:
	.loc	37 95 16 is_stmt 1
	add.w	r5, r9, #1
	strd	r6, r4, [sp, #16]
	movw	r4, #65535
	movs	r6, #0
	movs	r3, #0
	mov.w	r11, #0
	str	r2, [sp, #8]
.LBB84_68:
	subs	r0, r4, r6
	mov.w	r0, #0
	sbcs	r0, r3
	blt	.LBB84_70
	.loc	37 96 28
	add.w	r0, r3, r3, lsl #2
	.loc	37 96 44 is_stmt 0
	uxtb.w	r11, lr
	.loc	37 96 28
	lsls	r3, r0, #1
	.loc	37 96 17
	movs	r0, #10
	umlal	r11, r3, r6, r0
	mov	r6, r11
.Ltmp367:
.LBB84_70:
	.loc	25 229 76 is_stmt 1
	subs.w	r10, r10, #1
	mov.w	r0, #0
.Ltmp368:
	.loc	4 139 19
	beq	.LBB84_72
	.loc	4 139 25 is_stmt 0
	ldrb	r2, [r5], #1
.Ltmp369:
	.loc	20 1226 13 is_stmt 1
	sub.w	lr, r2, #48
	uxtb.w	r9, lr
.Ltmp370:
	.loc	4 141 16
	cmp.w	r9, #10
	blo	.LBB84_68
	b	.LBB84_73
.Ltmp371:
.LBB84_72:
	.loc	4 0 16 is_stmt 0
	mov.w	r10, #0
.LBB84_73:
	rsbs.w	lr, r11, #0
	sbc.w	r5, r0, r3
	.loc	37 99 12 is_stmt 1
	ldr	r0, [sp, #12]
	cmp	r0, #45
	itt	ne
	movne	r5, r3
	movne	lr, r11
	ldr	r6, [sp, #16]
.Ltmp372:
	.loc	37 148 9
	ldr	r0, [sp, #28]
	adds.w	r6, r6, lr
	ldr	r2, [sp, #8]
	adcs	r0, r5
	str	r0, [sp, #28]
	ldr	r4, [sp, #20]
	ldrd	r3, r11, [sp]
	.loc	37 154 8
	cmp	r3, #20
	blt.w	.LBB84_57
	b	.LBB84_12
.Ltmp373:
.Lfunc_end84:
	.size	core::num::dec2flt::parse::parse_number::h53c7787c169de877, .Lfunc_end84-core::num::dec2flt::parse::parse_number::h53c7787c169de877
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN4core3num7dec2flt5parse21parse_partial_inf_nan14parse_inf_rest17h8f4a02175d0c9550E,"ax",%progbits
	.p2align	1
	.type	core::num::dec2flt::parse::parse_partial_inf_nan::parse_inf_rest::h8f4a02175d0c9550,%function
	.code	16
	.thumb_func
core::num::dec2flt::parse::parse_partial_inf_nan::parse_inf_rest::h8f4a02175d0c9550:
.Lfunc_begin85:
	.loc	37 209 0
	.fnstart
	.cfi_startproc
	mov	r2, r0
	movs	r0, #3
.Ltmp374:
	.loc	37 210 12 prologue_end
	cmp	r1, #8
	.loc	37 211 6
	it	lo
	bxlo	lr
.LBB85_1:
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
.Ltmp375:
	.loc	14 2285 21
	ldrb	r1, [r2, #3]
	ldrb	r3, [r2, #4]
	ldrb.w	r12, [r2, #5]
.Ltmp376:
	.loc	4 42 48
	eor	r1, r1, #73
.Ltmp377:
	.loc	14 2285 21
	ldrb.w	lr, [r2, #6]
.Ltmp378:
	.loc	4 42 48
	eor	r3, r3, #78
.Ltmp379:
	.loc	14 2285 21
	ldrb	r2, [r2, #7]
.Ltmp380:
	.loc	4 42 44
	orrs	r1, r3
	.loc	4 42 48 is_stmt 0
	eor	r3, r12, #73
	.loc	4 42 44
	orrs	r1, r3
	.loc	4 42 48
	eor	r3, lr, #84
	.loc	4 42 44
	orrs	r1, r3
	.loc	4 42 48
	eor	r2, r2, #89
	.loc	4 42 44
	orrs	r1, r2
.Ltmp381:
	.loc	37 210 9 is_stmt 1
	tst.w	r1, #223
	it	eq
	moveq	r0, #8
	pop.w	{r7, lr}
	.loc	37 211 6
	bx	lr
.Ltmp382:
.Lfunc_end85:
	.size	core::num::dec2flt::parse::parse_partial_inf_nan::parse_inf_rest::h8f4a02175d0c9550, .Lfunc_end85-core::num::dec2flt::parse::parse_partial_inf_nan::parse_inf_rest::h8f4a02175d0c9550
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN4core3fmt9Formatter3pad17h936b549e1667e5beE,"ax",%progbits
	.p2align	1
	.type	core::fmt::Formatter::pad::h936b549e1667e5be,%function
	.code	16
	.thumb_func
core::fmt::Formatter::pad::h936b549e1667e5be:
.Lfunc_begin86:
	.loc	3 1436 0
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#36
	sub	sp, #36
.Ltmp383:
	.loc	3 1438 12 prologue_end
	ldr.w	r12, [r0, #8]
	mov	r11, r1
	ldr	r3, [r0, #16]
	mov	r10, r0
	cmp.w	r12, #1
	it	ne
	cmpne	r3, #1
	bne	.LBB86_10
	.loc	3 1443 24
	cmp	r3, #1
	bne	.LBB86_24
	.loc	3 1443 29 is_stmt 0
	ldr.w	r6, [r10, #20]
.Ltmp384:
	.loc	31 295 18 is_stmt 1
	add.w	r3, r11, r2
	mov.w	r9, #0
	mov	r4, r11
	cbnz	r6, .LBB86_13
.Ltmp385:
.LBB86_3:
	.loc	13 146 24
	cmp	r4, r3
	beq	.LBB86_24
.Ltmp386:
	.loc	15 38 13
	ldrsb.w	r1, [r4]
	.loc	15 39 8
	cmp.w	r1, #-1
	bgt	.LBB86_6
	.loc	15 0 0 is_stmt 0
	uxtb	r3, r1
	.loc	15 51 8 is_stmt 1
	cmp	r3, #224
	.loc	15 59 12
	it	hs
	cmphs	r3, #240
	bhs	.LBB86_23
.Ltmp387:
.LBB86_6:
	.file	39 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/str/mod.rs"
	.loc	39 198 12
	cmp.w	r9, #0
	beq	.LBB86_21
	.loc	39 202 9
	cmp	r9, r2
	bhs	.LBB86_20
	.loc	39 214 19
	ldrsb.w	r1, [r11, r9]
.Ltmp388:
	.file	40 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/str/traits.rs"
	.loc	40 254 12
	cmn.w	r1, #64
	bge	.LBB86_21
.Ltmp389:
.LBB86_9:
	.loc	40 0 12 is_stmt 0
	movs	r3, #0
	mov.w	r9, #0
	b	.LBB86_22
.LBB86_10:
	.loc	3 1439 20 is_stmt 1
	ldrd	r1, r0, [r10, #24]
	b.w	.LBB86_117
.LBB86_11:
	.loc	3 0 20 is_stmt 0
	adds	r4, r5, #2
.LBB86_12:
.Ltmp390:
	.loc	24 145 38 is_stmt 1
	sub.w	r1, r9, r5
.Ltmp391:
	.loc	18 1400 52
	subs	r6, #1
.Ltmp392:
	.loc	24 145 17
	add.w	r9, r1, r4
.Ltmp393:
	.loc	6 621 12
	beq	.LBB86_3
.Ltmp394:
.LBB86_13:
	.loc	13 146 24
	cmp	r4, r3
	beq	.LBB86_24
.Ltmp395:
	.loc	13 0 24 is_stmt 0
	mov	r5, r4
	.loc	15 38 13 is_stmt 1
	ldrsb	r1, [r4], #1
	.loc	15 39 8
	cmp.w	r1, #-1
	bgt	.LBB86_12
	.loc	15 0 0 is_stmt 0
	uxtb	r4, r1
	.loc	15 51 8 is_stmt 1
	cmp	r4, #224
	blo	.LBB86_11
	.loc	15 59 12
	cmp	r4, #240
	blo	.LBB86_19
	.loc	15 0 0 is_stmt 0
	ldrb	r1, [r5, #1]
	mov	r0, r9
	.loc	15 56 26 is_stmt 1
	ldrb.w	lr, [r5, #2]
	.loc	15 65 18
	and	r4, r4, #7
.Ltmp396:
	.loc	15 18 17
	and	r9, r1, #63
.Ltmp397:
	.loc	15 64 30
	ldrb.w	r8, [r5, #3]
.Ltmp398:
	.loc	15 18 17
	and	r1, lr, #63
.Ltmp399:
	.loc	15 18 5 is_stmt 0
	lsls	r1, r1, #6
	orr.w	lr, r1, r9, lsl #12
	.loc	15 18 17
	and	r1, r8, #63
	.loc	15 18 5
	add	r1, lr
.Ltmp400:
	.loc	15 65 13 is_stmt 1
	orr.w	r1, r1, r4, lsl #18
.Ltmp401:
	.loc	24 140 9
	cmp.w	r1, #1114112
	beq	.LBB86_24
.Ltmp402:
	.loc	24 0 9 is_stmt 0
	adds	r4, r5, #4
	mov	r9, r0
	b	.LBB86_12
.LBB86_19:
	adds	r4, r5, #3
	b	.LBB86_12
.LBB86_20:
.Ltmp403:
	.loc	40 254 12 is_stmt 1
	cmp	r9, r2
	bne	.LBB86_9
.Ltmp404:
.LBB86_21:
	.loc	40 0 12 is_stmt 0
	mov	r3, r11
.LBB86_22:
.Ltmp405:
	.loc	29 777 9 is_stmt 1
	cmp	r3, #0
	ite	eq
	moveq	r9, r2
	movne	r11, r3
.Ltmp406:
	.loc	3 1460 9
	cmp.w	r12, #0
	bne	.LBB86_25
	b.w	.LBB86_116
.LBB86_23:
.Ltmp407:
	.loc	15 56 26
	ldrb	r6, [r4, #2]
	.loc	15 65 18
	and	r3, r3, #7
	.loc	15 0 0 is_stmt 0
	ldrb	r1, [r4, #1]
.Ltmp408:
	.loc	15 18 17 is_stmt 1
	and	r6, r6, #63
.Ltmp409:
	.loc	15 64 30
	ldrb	r5, [r4, #3]
.Ltmp410:
	.loc	15 18 17
	and	r1, r1, #63
.Ltmp411:
	.loc	15 18 5 is_stmt 0
	lsls	r6, r6, #6
	orr.w	r1, r6, r1, lsl #12
	.loc	15 18 17
	and	r6, r5, #63
	.loc	15 18 5
	add	r1, r6
.Ltmp412:
	.loc	15 65 13 is_stmt 1
	orr.w	r1, r1, r3, lsl #18
.Ltmp413:
	.loc	24 140 9
	cmp.w	r1, #1114112
	bne	.LBB86_6
.Ltmp414:
.LBB86_24:
	.loc	24 0 9 is_stmt 0
	mov	r9, r2
	.loc	3 1460 9 is_stmt 1
	cmp.w	r12, #0
	beq.w	.LBB86_116
.LBB86_25:
	.loc	3 1464 18
	ldr.w	r4, [r10, #12]
.Ltmp415:
	.loc	23 27 8
	cmp.w	r9, #16
	bhs	.LBB86_29
.Ltmp416:
	.loc	13 146 24
	cmp.w	r9, #0
	beq.w	.LBB86_40
	sub.w	r0, r9, #1
	and	r1, r9, #3
	cmp	r0, #3
	bhs.w	.LBB86_41
.Ltmp417:
	.loc	13 0 24 is_stmt 0
	mov.w	r12, #0
	mov	r3, r11
	b	.LBB86_60
.LBB86_29:
.Ltmp418:
	.loc	2 1215 13 is_stmt 1
	add.w	r1, r11, #3
	movw	r3, #65532
	bic	r2, r1, #3
	movt	r3, #32767
	.loc	2 1214 16
	sub.w	r1, r2, r11
	str	r4, [sp, #24]
.Ltmp419:
	.loc	30 3393 12
	cmp	r9, r1
	str.w	r10, [sp, #20]
	blo	.LBB86_35
.Ltmp420:
	.loc	23 67 17
	cmp	r1, #4
	bhi	.LBB86_35
	.loc	23 0 0 is_stmt 0
	sub.w	r6, r9, r1
	.loc	23 67 17
	cmp	r6, #4
	blo	.LBB86_35
	.loc	23 0 17
	add.w	r8, r11, r1
	and	r0, r6, #3
.Ltmp421:
	.loc	13 146 24 is_stmt 1
	cmp	r1, #0
	str.w	r9, [sp, #12]
	beq.w	.LBB86_56
	mvn.w	r5, r11
	add	r2, r5
	and	lr, r1, #3
	cmp	r2, #3
	bhs.w	.LBB86_57
.Ltmp422:
	.loc	13 0 24 is_stmt 0
	movs	r2, #0
	mov	r4, r11
	b	.LBB86_73
.LBB86_35:
.Ltmp423:
	.loc	13 146 24
	sub.w	r1, r9, #4
	movs	r2, #1
	mov	r0, r9
	mov.w	r12, #0
	add.w	r2, r2, r1, lsr #2
	and.w	r5, r2, r3
	and	lr, r2, #3
	bic	r2, r1, #3
	mov	r3, r11
.Ltmp424:
.LBB86_36:
	.loc	14 2285 21 is_stmt 1
	ldrsb.w	r4, [r3, #12]
	ldrsb.w	r9, [r3, #13]
	ldrsb.w	r8, [r3, #14]
	ldrsb.w	r10, [r3, #15]
	ldrsb	r1, [r3], #16
	ldrsb	r6, [r3, #-15]
.Ltmp425:
	.loc	16 45 28
	cmn.w	r1, #65
	it	gt
	addgt.w	r12, r12, #1
.Ltmp426:
	.loc	14 2285 21
	ldrsb	r1, [r3, #-14]
.Ltmp427:
	.loc	16 45 28
	cmn.w	r6, #65
	it	gt
	addgt.w	r12, r12, #1
.Ltmp428:
	.loc	14 2285 21
	ldrsb	r6, [r3, #-13]
.Ltmp429:
	.loc	16 45 28
	cmn.w	r1, #65
	it	gt
	addgt.w	r12, r12, #1
.Ltmp430:
	.loc	14 2285 21
	ldrsb	r1, [r3, #-12]
.Ltmp431:
	.loc	16 45 28
	cmn.w	r6, #65
	it	gt
	addgt.w	r12, r12, #1
.Ltmp432:
	.loc	14 2285 21
	ldrsb	r6, [r3, #-11]
.Ltmp433:
	.loc	16 45 28
	cmn.w	r1, #65
	it	gt
	addgt.w	r12, r12, #1
.Ltmp434:
	.loc	14 2285 21
	ldrsb	r1, [r3, #-10]
.Ltmp435:
	.loc	16 45 28
	cmn.w	r6, #65
	it	gt
	addgt.w	r12, r12, #1
.Ltmp436:
	.loc	14 2285 21
	ldrsb	r6, [r3, #-9]
.Ltmp437:
	.loc	16 45 28
	cmn.w	r1, #65
	it	gt
	addgt.w	r12, r12, #1
.Ltmp438:
	.loc	14 2285 21
	ldrsb	r1, [r3, #-8]
.Ltmp439:
	.loc	16 45 28
	cmn.w	r6, #65
	it	gt
	addgt.w	r12, r12, #1
.Ltmp440:
	.loc	14 2285 21
	ldrsb	r6, [r3, #-7]
.Ltmp441:
	.loc	16 45 28
	cmn.w	r1, #65
	it	gt
	addgt.w	r12, r12, #1
.Ltmp442:
	.loc	14 2285 21
	ldrsb	r1, [r3, #-6]
.Ltmp443:
	.loc	16 45 28
	cmn.w	r6, #65
	it	gt
	addgt.w	r12, r12, #1
.Ltmp444:
	.loc	14 2285 21
	ldrsb	r6, [r3, #-5]
.Ltmp445:
	.loc	16 45 28
	cmn.w	r1, #65
	it	gt
	addgt.w	r12, r12, #1
	cmn.w	r6, #65
	it	gt
	addgt.w	r12, r12, #1
	cmn.w	r4, #65
	it	gt
	addgt.w	r12, r12, #1
	cmn.w	r9, #65
	it	gt
	addgt.w	r12, r12, #1
	cmn.w	r8, #65
	it	gt
	addgt.w	r12, r12, #1
	cmn.w	r10, #65
	it	gt
	addgt.w	r12, r12, #1
.Ltmp446:
	.loc	13 146 24
	subs	r5, #4
	bne	.LBB86_36
	cmp.w	lr, #0
	beq	.LBB86_44
.Ltmp447:
	.loc	14 2285 21
	ldrsb.w	r5, [r3]
	mov	r9, r0
	ldrsb.w	r6, [r3, #1]
	ldrsb.w	r1, [r3, #2]
.Ltmp448:
	.loc	16 45 28
	cmn.w	r5, #65
.Ltmp449:
	.loc	14 2285 21
	ldrsb.w	r4, [r3, #3]
.Ltmp450:
	.loc	16 45 28
	it	gt
	addgt.w	r12, r12, #1
	cmn.w	r6, #65
	it	gt
	addgt.w	r12, r12, #1
	cmn.w	r1, #65
	it	gt
	addgt.w	r12, r12, #1
	cmn.w	r4, #65
	it	gt
	addgt.w	r12, r12, #1
	ldr	r4, [sp, #24]
.Ltmp451:
	.loc	13 146 24
	cmp.w	lr, #1
	bne	.LBB86_45
.Ltmp452:
	.loc	13 0 24 is_stmt 0
	adds	r3, #4
	b	.LBB86_49
.LBB86_40:
	mov.w	r12, #0
	b.w	.LBB86_112
.LBB86_41:
.Ltmp453:
	.loc	13 146 24
	sub.w	r0, r9, #4
	movs	r2, #1
	add.w	r0, r2, r0, lsr #2
	ands	r3, r0, #3
	beq	.LBB86_47
.Ltmp454:
	.loc	14 2285 21 is_stmt 1
	ldrsb.w	r2, [r11, #1]
	mov.w	r12, #0
	ldrsb.w	r5, [r11]
	ldrsb.w	r6, [r11, #2]
.Ltmp455:
	.loc	15 25 5
	cmn.w	r2, #65
.Ltmp456:
	.loc	14 2285 21
	ldrsb.w	r0, [r11, #3]
.Ltmp457:
	.loc	15 25 5
	it	gt
	movgt.w	r12, #1
.Ltmp458:
	.loc	16 45 28
	cmn.w	r5, #65
	it	gt
	addgt.w	r12, r12, #1
	cmn.w	r6, #65
	it	gt
	addgt.w	r12, r12, #1
	cmn.w	r0, #65
	it	gt
	addgt.w	r12, r12, #1
.Ltmp459:
	.loc	13 146 24
	cmp	r3, #1
	bne	.LBB86_54
.Ltmp460:
	.loc	13 0 24 is_stmt 0
	add.w	r3, r11, #4
	b	.LBB86_60
.LBB86_44:
	ldr.w	r10, [sp, #20]
	mov	r9, r0
	ldr	r4, [sp, #24]
	b	.LBB86_50
.LBB86_45:
.Ltmp461:
	.loc	14 2285 21 is_stmt 1
	ldrsb.w	r5, [r3, #4]
	ldrsb.w	r6, [r3, #5]
	ldrsb.w	r1, [r3, #6]
.Ltmp462:
	.loc	16 45 28
	cmn.w	r5, #65
.Ltmp463:
	.loc	14 2285 21
	ldrsb.w	r0, [r3, #7]
.Ltmp464:
	.loc	16 45 28
	it	gt
	addgt.w	r12, r12, #1
	cmn.w	r6, #65
	it	gt
	addgt.w	r12, r12, #1
	cmn.w	r1, #65
	it	gt
	addgt.w	r12, r12, #1
	cmn.w	r0, #65
	it	gt
	addgt.w	r12, r12, #1
.Ltmp465:
	.loc	13 146 24
	cmp.w	lr, #2
	bne	.LBB86_48
.Ltmp466:
	.loc	13 0 24 is_stmt 0
	adds	r3, #8
	b	.LBB86_49
.LBB86_47:
	b	.LBB86_60
.LBB86_48:
	.loc	14 2285 21 is_stmt 1
	ldrsb.w	r5, [r3, #8]
	ldrsb.w	r0, [r3, #9]
	ldrsb.w	r1, [r3, #10]
.Ltmp467:
	.loc	16 45 28
	cmn.w	r5, #65
.Ltmp468:
	.loc	14 2285 21
	ldrsb.w	r6, [r3, #11]
.Ltmp469:
	.loc	16 45 28
	it	gt
	addgt.w	r12, r12, #1
	cmn.w	r0, #65
	it	gt
	addgt.w	r12, r12, #1
.Ltmp470:
	.loc	10 307 18
	adds	r3, #12
.Ltmp471:
	.loc	16 45 28
	cmn.w	r1, #65
	it	gt
	addgt.w	r12, r12, #1
	cmn.w	r6, #65
	it	gt
	addgt.w	r12, r12, #1
.Ltmp472:
.LBB86_49:
	.loc	16 0 28 is_stmt 0
	ldr.w	r10, [sp, #20]
.LBB86_50:
.Ltmp473:
	.loc	13 146 24 is_stmt 1
	ands	r1, r9, #3
	beq.w	.LBB86_112
.Ltmp474:
	.loc	14 2285 21
	ldrsb.w	r3, [r3]
.Ltmp475:
	.loc	16 45 28
	cmn.w	r3, #65
	it	gt
	addgt.w	r12, r12, #1
.Ltmp476:
	.loc	13 146 24
	cmp	r1, #1
	beq.w	.LBB86_112
.Ltmp477:
	.loc	14 0 0 is_stmt 0
	add.w	r3, r11, r2
	.loc	14 2285 21 is_stmt 1
	ldrsb.w	r6, [r3, #5]
.Ltmp478:
	.loc	16 45 28
	cmn.w	r6, #65
	it	gt
	addgt.w	r12, r12, #1
.Ltmp479:
	.loc	13 146 24
	cmp	r1, #2
	beq.w	.LBB86_112
.Ltmp480:
	.loc	14 2285 21
	ldrsb.w	r1, [r3, #6]
.Ltmp481:
	.loc	16 45 28
	cmn.w	r1, #65
	it	gt
	addgt.w	r12, r12, #1
	b.w	.LBB86_112
.Ltmp482:
.LBB86_54:
	.loc	14 2285 21
	ldrsb.w	r6, [r11, #4]
	ldrsb.w	r5, [r11, #5]
	ldrsb.w	r0, [r11, #6]
.Ltmp483:
	.loc	16 45 28
	cmn.w	r6, #65
.Ltmp484:
	.loc	14 2285 21
	ldrsb.w	r2, [r11, #7]
.Ltmp485:
	.loc	16 45 28
	it	gt
	addgt.w	r12, r12, #1
	cmn.w	r5, #65
	it	gt
	addgt.w	r12, r12, #1
	cmn.w	r0, #65
	it	gt
	addgt.w	r12, r12, #1
	cmn.w	r2, #65
	it	gt
	addgt.w	r12, r12, #1
.Ltmp486:
	.loc	13 146 24
	cmp	r3, #2
	bne	.LBB86_59
.Ltmp487:
	.loc	13 0 24 is_stmt 0
	add.w	r3, r11, #8
	b	.LBB86_60
.LBB86_56:
	movs	r2, #0
	b	.LBB86_77
.LBB86_57:
.Ltmp488:
	.loc	13 146 24
	subs	r2, r1, #4
	movs	r1, #1
	cmp	r2, #12
	add.w	r1, r1, r2, lsr #2
	and	r5, r1, #3
	str	r5, [sp, #32]
	bhs	.LBB86_64
.Ltmp489:
	.loc	13 0 24
	movs	r2, #0
	mov	r4, r11
	b	.LBB86_67
.LBB86_59:
.Ltmp490:
	.loc	14 2285 21 is_stmt 1
	ldrsb.w	r3, [r11, #8]
	ldrsb.w	r6, [r11, #9]
.Ltmp491:
	.loc	16 45 28
	cmn.w	r3, #65
.Ltmp492:
	.loc	14 2285 21
	ldrsb.w	r0, [r11, #10]
	ldrsb.w	r2, [r11, #11]
.Ltmp493:
	.loc	16 45 28
	it	gt
	addgt.w	r12, r12, #1
	cmn.w	r6, #65
	it	gt
	addgt.w	r12, r12, #1
.Ltmp494:
	.loc	10 307 18
	add.w	r3, r11, #12
.Ltmp495:
	.loc	16 45 28
	cmn.w	r0, #65
	it	gt
	addgt.w	r12, r12, #1
	cmn.w	r2, #65
	it	gt
	addgt.w	r12, r12, #1
.Ltmp496:
.LBB86_60:
	.loc	13 146 24
	cmp	r1, #0
	beq.w	.LBB86_112
.Ltmp497:
	.loc	14 2285 21
	ldrsb.w	r0, [r3]
.Ltmp498:
	.loc	16 45 28
	cmn.w	r0, #65
	it	gt
	addgt.w	r12, r12, #1
.Ltmp499:
	.loc	13 146 24
	cmp	r1, #1
	beq.w	.LBB86_112
.Ltmp500:
	.loc	14 2285 21
	ldrsb.w	r0, [r3, #1]
.Ltmp501:
	.loc	16 45 28
	cmn.w	r0, #65
	it	gt
	addgt.w	r12, r12, #1
.Ltmp502:
	.loc	13 146 24
	cmp	r1, #2
	beq.w	.LBB86_112
.Ltmp503:
	.loc	14 2285 21
	ldrsb.w	r0, [r3, #2]
.Ltmp504:
	.loc	16 45 28
	cmn.w	r0, #65
	it	gt
	addgt.w	r12, r12, #1
	b	.LBB86_112
.Ltmp505:
.LBB86_64:
	.loc	13 146 24
	and.w	r5, r1, r3
	movs	r2, #0
	mov	r4, r11
	strd	lr, r6, [sp, #4]
	str	r0, [sp, #28]
.Ltmp506:
.LBB86_65:
	.loc	14 2285 21
	ldrsb.w	r12, [r4, #12]
	ldrsb.w	lr, [r4, #13]
	ldrsb.w	r10, [r4, #14]
	ldrsb.w	r1, [r4, #15]
	ldrsb	r6, [r4], #16
	ldrsb	r9, [r4, #-15]
.Ltmp507:
	.loc	16 45 28
	cmn.w	r6, #65
	it	gt
	addgt	r2, #1
.Ltmp508:
	.loc	14 2285 21
	ldrsb	r6, [r4, #-14]
.Ltmp509:
	.loc	16 45 28
	cmn.w	r9, #65
	it	gt
	addgt	r2, #1
.Ltmp510:
	.loc	14 2285 21
	ldrsb	r3, [r4, #-13]
.Ltmp511:
	.loc	16 45 28
	cmn.w	r6, #65
	it	gt
	addgt	r2, #1
.Ltmp512:
	.loc	14 2285 21
	ldrsb	r6, [r4, #-12]
.Ltmp513:
	.loc	16 45 28
	cmn.w	r3, #65
	it	gt
	addgt	r2, #1
.Ltmp514:
	.loc	14 2285 21
	ldrsb	r3, [r4, #-11]
.Ltmp515:
	.loc	16 45 28
	cmn.w	r6, #65
	it	gt
	addgt	r2, #1
.Ltmp516:
	.loc	14 2285 21
	ldrsb	r6, [r4, #-10]
.Ltmp517:
	.loc	16 45 28
	cmn.w	r3, #65
	it	gt
	addgt	r2, #1
.Ltmp518:
	.loc	14 2285 21
	ldrsb	r3, [r4, #-9]
.Ltmp519:
	.loc	16 45 28
	cmn.w	r6, #65
	it	gt
	addgt	r2, #1
.Ltmp520:
	.loc	14 2285 21
	ldrsb	r6, [r4, #-8]
.Ltmp521:
	.loc	16 45 28
	cmn.w	r3, #65
	it	gt
	addgt	r2, #1
.Ltmp522:
	.loc	14 2285 21
	ldrsb	r3, [r4, #-7]
.Ltmp523:
	.loc	16 45 28
	cmn.w	r6, #65
	it	gt
	addgt	r2, #1
.Ltmp524:
	.loc	14 2285 21
	ldrsb	r6, [r4, #-6]
.Ltmp525:
	.loc	16 45 28
	cmn.w	r3, #65
	it	gt
	addgt	r2, #1
.Ltmp526:
	.loc	14 2285 21
	ldrsb	r3, [r4, #-5]
.Ltmp527:
	.loc	16 45 28
	cmn.w	r6, #65
	it	gt
	addgt	r2, #1
	cmn.w	r3, #65
	it	gt
	addgt	r2, #1
	cmn.w	r12, #65
	it	gt
	addgt	r2, #1
	cmn.w	lr, #65
	it	gt
	addgt	r2, #1
	cmn.w	r10, #65
	it	gt
	addgt	r2, #1
	cmn.w	r1, #65
	it	gt
	addgt	r2, #1
.Ltmp528:
	.loc	13 146 24
	subs	r5, #4
	bne	.LBB86_65
	.loc	13 0 24 is_stmt 0
	ldr	r0, [sp, #28]
	ldrd	lr, r6, [sp, #4]
.LBB86_67:
	ldr	r1, [sp, #32]
	.loc	13 146 24
	cmp	r1, #0
	beq	.LBB86_73
.Ltmp529:
	.loc	14 2285 21 is_stmt 1
	ldrsb.w	r3, [r4]
	ldrsb.w	r5, [r4, #1]
	ldrsb.w	r9, [r4, #2]
.Ltmp530:
	.loc	16 45 28
	cmn.w	r3, #65
.Ltmp531:
	.loc	14 2285 21
	ldrsb.w	r12, [r4, #3]
.Ltmp532:
	.loc	16 45 28
	it	gt
	addgt	r2, #1
	cmn.w	r5, #65
	it	gt
	addgt	r2, #1
	cmn.w	r9, #65
	it	gt
	addgt	r2, #1
	cmn.w	r12, #65
	it	gt
	addgt	r2, #1
.Ltmp533:
	.loc	13 146 24
	cmp	r1, #1
	bne	.LBB86_70
.Ltmp534:
	.loc	13 0 24 is_stmt 0
	adds	r4, #4
	b	.LBB86_73
.LBB86_70:
	.loc	14 2285 21 is_stmt 1
	ldrsb.w	r3, [r4, #4]
	ldrsb.w	r5, [r4, #5]
	ldrsb.w	r9, [r4, #6]
.Ltmp535:
	.loc	16 45 28
	cmn.w	r3, #65
.Ltmp536:
	.loc	14 2285 21
	ldrsb.w	r12, [r4, #7]
.Ltmp537:
	.loc	16 45 28
	it	gt
	addgt	r2, #1
	cmn.w	r5, #65
	it	gt
	addgt	r2, #1
	cmn.w	r9, #65
	it	gt
	addgt	r2, #1
	cmn.w	r12, #65
	it	gt
	addgt	r2, #1
.Ltmp538:
	.loc	13 146 24
	cmp	r1, #2
	bne	.LBB86_72
.Ltmp539:
	.loc	13 0 24 is_stmt 0
	adds	r4, #8
	b	.LBB86_73
.LBB86_72:
	.loc	14 2285 21 is_stmt 1
	ldrsb.w	r3, [r4, #8]
	ldrsb.w	r5, [r4, #9]
	ldrsb.w	r1, [r4, #10]
.Ltmp540:
	.loc	16 45 28
	cmn.w	r3, #65
.Ltmp541:
	.loc	14 2285 21
	ldrsb.w	r12, [r4, #11]
.Ltmp542:
	.loc	16 45 28
	it	gt
	addgt	r2, #1
	cmn.w	r5, #65
	it	gt
	addgt	r2, #1
.Ltmp543:
	.loc	10 307 18
	adds	r4, #12
.Ltmp544:
	.loc	16 45 28
	cmn.w	r1, #65
	it	gt
	addgt	r2, #1
	cmn.w	r12, #65
	it	gt
	addgt	r2, #1
.Ltmp545:
.LBB86_73:
	.loc	13 146 24
	cmp.w	lr, #0
	beq	.LBB86_77
.Ltmp546:
	.loc	14 2285 21
	ldrsb.w	r1, [r4]
.Ltmp547:
	.loc	16 45 28
	cmn.w	r1, #65
	it	gt
	addgt	r2, #1
.Ltmp548:
	.loc	13 146 24
	cmp.w	lr, #1
	beq	.LBB86_77
.Ltmp549:
	.loc	14 2285 21
	ldrsb.w	r1, [r4, #1]
.Ltmp550:
	.loc	16 45 28
	cmn.w	r1, #65
	it	gt
	addgt	r2, #1
.Ltmp551:
	.loc	13 146 24
	cmp.w	lr, #2
	beq	.LBB86_77
.Ltmp552:
	.loc	14 2285 21
	ldrsb.w	r1, [r4, #2]
.Ltmp553:
	.loc	16 45 28
	cmn.w	r1, #65
	it	gt
	addgt	r2, #1
.Ltmp554:
.LBB86_77:
	.loc	16 0 28 is_stmt 0
	lsr.w	r9, r6, #2
	movs	r1, #0
.Ltmp555:
	.loc	13 146 24 is_stmt 1
	cbz	r0, .LBB86_81
.Ltmp556:
	.loc	13 0 24 is_stmt 0
	bic	r3, r6, #3
	add.w	r6, r8, r3
	.loc	14 2285 21 is_stmt 1
	ldrsb.w	r3, [r6]
.Ltmp557:
	.loc	15 25 5
	cmn.w	r3, #65
	it	gt
	movgt	r1, #1
.Ltmp558:
	.loc	13 146 24
	cmp	r0, #1
	beq	.LBB86_81
.Ltmp559:
	.loc	14 2285 21
	ldrsb.w	r3, [r6, #1]
.Ltmp560:
	.loc	16 45 28
	cmn.w	r3, #65
	it	gt
	addgt	r1, #1
.Ltmp561:
	.loc	13 146 24
	cmp	r0, #2
	beq	.LBB86_81
.Ltmp562:
	.loc	14 2285 21
	ldrsb.w	r3, [r6, #2]
.Ltmp563:
	.loc	16 45 28
	cmn.w	r3, #65
	it	gt
	addgt	r1, #1
.Ltmp564:
.LBB86_81:
	.loc	23 71 21
	add.w	r12, r1, r2
	.loc	23 74 5
	str.w	r11, [sp, #16]
	b	.LBB86_83
.LBB86_82:
.Ltmp565:
	.loc	23 126 27
	uxtb16	r0, lr
	.loc	23 126 51 is_stmt 0
	uxtb16	r1, lr, ror #8
	.loc	23 126 27
	add	r0, r1
	mov	r2, r8
.Ltmp566:
	.loc	23 0 0
	sub.w	r9, r9, r10
	add.w	r8, r8, r10, lsl #2
.Ltmp567:
	.loc	20 1249 13 is_stmt 1
	add.w	r0, r0, r0, lsl #16
.Ltmp568:
	.loc	23 0 0 is_stmt 0
	ands	r5, r10, #3
	.loc	23 90 9 is_stmt 1
	add.w	r12, r12, r0, lsr #16
	.loc	23 96 12
	bne.w	.LBB86_94
.LBB86_83:
.Ltmp569:
	.file	41 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/slice/iter.rs"
	.loc	41 1399 12
	cmp.w	r9, #0
	beq.w	.LBB86_93
.Ltmp570:
	.loc	18 0 0 is_stmt 0
	mov	r10, r9
	cmp.w	r9, #192
	it	hs
	movhs.w	r10, #192
.Ltmp571:
	.loc	30 944 22 is_stmt 1
	lsr.w	r3, r10, #2
	mov.w	lr, #0
.Ltmp572:
	.loc	13 146 24
	cmp.w	lr, r3, lsl #4
	beq	.LBB86_82
	subs	r3, #1
	bic	r3, r3, #-268435456
	adds	r1, r3, #1
	cmp	r3, #3
	bhs	.LBB86_87
	.loc	13 0 24 is_stmt 0
	mov.w	lr, #0
	mov	r3, r8
	.loc	13 146 24
	ands	r5, r1, #3
	bne.w	.LBB86_90
	b	.LBB86_82
.LBB86_87:
	movw	r0, #65532
	mov.w	lr, #0
	movt	r0, #32767
	add.w	r3, r0, #-1610612736
	and.w	r11, r1, r3
	mov	r3, r8
	str	r1, [sp, #28]
	str.w	r8, [sp, #32]
.Ltmp573:
.LBB86_88:
	.loc	23 81 18 is_stmt 1
	ldm.w	r3, {r1, r4, r8}
.Ltmp574:
	.loc	13 146 24
	subs.w	r11, r11, #4
.Ltmp575:
	.loc	23 81 18
	ldr	r0, [r3, #12]
.Ltmp576:
	.loc	23 116 7
	mvn.w	r6, r1
.Ltmp577:
	.loc	23 81 18
	ldr	r5, [r3, #16]
.Ltmp578:
	.loc	23 116 6
	lsr.w	r6, r6, #7
	.loc	23 116 5 is_stmt 0
	orr.w	r1, r6, r1, lsr #6
	.loc	23 116 7
	mvn.w	r6, r4
	.loc	23 116 5
	bic	r1, r1, #-16843010
	.loc	23 116 6
	lsr.w	r6, r6, #7
.Ltmp579:
	.loc	23 84 17 is_stmt 1
	add	r1, lr
.Ltmp580:
	.loc	23 116 5
	orr.w	r6, r6, r4, lsr #6
.Ltmp581:
	.loc	23 81 18
	ldr	r2, [r3, #20]
.Ltmp582:
	.loc	23 116 5
	bic	r4, r6, #-16843010
.Ltmp583:
	.loc	23 81 18
	ldr.w	lr, [r3, #56]
	.loc	23 84 17
	add	r1, r4
.Ltmp584:
	.loc	23 116 7
	mvn.w	r4, r8
	.loc	23 116 6 is_stmt 0
	lsr.w	r4, r4, #7
.Ltmp585:
	.loc	23 81 18 is_stmt 1
	ldr	r6, [r3, #60]
.Ltmp586:
	.loc	23 116 5
	orr.w	r4, r4, r8, lsr #6
	bic	r4, r4, #-16843010
.Ltmp587:
	.loc	23 84 17
	add	r1, r4
.Ltmp588:
	.loc	23 116 7
	mvn.w	r4, r0
	.loc	23 116 6 is_stmt 0
	lsr.w	r4, r4, #7
	.loc	23 116 5
	orr.w	r0, r4, r0, lsr #6
	bic	r0, r0, #-16843010
.Ltmp589:
	.loc	23 81 18 is_stmt 1
	ldr	r4, [r3, #24]
	.loc	23 84 17
	add	r0, r1
.Ltmp590:
	.loc	23 116 7
	mvn.w	r1, r5
	.loc	23 116 6 is_stmt 0
	lsr.w	r1, r1, #7
	.loc	23 116 5
	orr.w	r1, r1, r5, lsr #6
.Ltmp591:
	.loc	23 81 18 is_stmt 1
	ldr	r5, [r3, #28]
.Ltmp592:
	.loc	23 116 5
	bic	r1, r1, #-16843010
.Ltmp593:
	.loc	23 84 17
	add	r0, r1
.Ltmp594:
	.loc	23 116 7
	mvn.w	r1, r2
	.loc	23 116 6 is_stmt 0
	lsr.w	r1, r1, #7
	.loc	23 116 5
	orr.w	r1, r1, r2, lsr #6
.Ltmp595:
	.loc	23 81 18 is_stmt 1
	ldr	r2, [r3, #32]
.Ltmp596:
	.loc	23 116 5
	bic	r1, r1, #-16843010
.Ltmp597:
	.loc	23 84 17
	add	r0, r1
.Ltmp598:
	.loc	23 116 7
	mvn.w	r1, r4
	.loc	23 116 6 is_stmt 0
	lsr.w	r1, r1, #7
	.loc	23 116 5
	orr.w	r1, r1, r4, lsr #6
.Ltmp599:
	.loc	23 81 18 is_stmt 1
	ldr	r4, [r3, #36]
.Ltmp600:
	.loc	23 116 5
	bic	r1, r1, #-16843010
.Ltmp601:
	.loc	23 84 17
	add	r0, r1
.Ltmp602:
	.loc	23 116 7
	mvn.w	r1, r5
	.loc	23 116 6 is_stmt 0
	lsr.w	r1, r1, #7
	.loc	23 116 5
	orr.w	r1, r1, r5, lsr #6
.Ltmp603:
	.loc	23 81 18 is_stmt 1
	ldr	r5, [r3, #40]
.Ltmp604:
	.loc	23 116 5
	bic	r1, r1, #-16843010
.Ltmp605:
	.loc	23 84 17
	add	r0, r1
.Ltmp606:
	.loc	23 116 7
	mvn.w	r1, r2
	.loc	23 116 6 is_stmt 0
	lsr.w	r1, r1, #7
	.loc	23 116 5
	orr.w	r1, r1, r2, lsr #6
.Ltmp607:
	.loc	23 81 18 is_stmt 1
	ldr	r2, [r3, #44]
.Ltmp608:
	.loc	23 116 5
	bic	r1, r1, #-16843010
.Ltmp609:
	.loc	23 84 17
	add	r0, r1
.Ltmp610:
	.loc	23 116 7
	mvn.w	r1, r4
	.loc	23 116 6 is_stmt 0
	lsr.w	r1, r1, #7
	.loc	23 116 5
	orr.w	r1, r1, r4, lsr #6
.Ltmp611:
	.loc	23 81 18 is_stmt 1
	ldr	r4, [r3, #48]
.Ltmp612:
	.loc	23 116 5
	bic	r1, r1, #-16843010
.Ltmp613:
	.loc	23 84 17
	add	r0, r1
.Ltmp614:
	.loc	23 116 7
	mvn.w	r1, r5
	.loc	23 116 6 is_stmt 0
	lsr.w	r1, r1, #7
	.loc	23 116 5
	orr.w	r1, r1, r5, lsr #6
.Ltmp615:
	.loc	23 81 18 is_stmt 1
	ldr	r5, [r3, #52]
.Ltmp616:
	.loc	23 116 5
	bic	r1, r1, #-16843010
.Ltmp617:
	.file	42 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/ptr/non_null.rs"
	.loc	42 196 18
	add.w	r3, r3, #64
.Ltmp618:
	.loc	23 84 17
	add	r0, r1
.Ltmp619:
	.loc	23 116 7
	mvn.w	r1, r2
	.loc	23 116 6 is_stmt 0
	lsr.w	r1, r1, #7
	.loc	23 116 5
	orr.w	r1, r1, r2, lsr #6
	bic	r1, r1, #-16843010
.Ltmp620:
	.loc	23 84 17 is_stmt 1
	add	r0, r1
.Ltmp621:
	.loc	23 116 7
	mvn.w	r1, r4
	.loc	23 116 6 is_stmt 0
	lsr.w	r1, r1, #7
	.loc	23 116 5
	orr.w	r1, r1, r4, lsr #6
	bic	r1, r1, #-16843010
.Ltmp622:
	.loc	23 84 17 is_stmt 1
	add	r0, r1
.Ltmp623:
	.loc	23 116 7
	mvn.w	r1, r5
	.loc	23 116 6 is_stmt 0
	lsr.w	r1, r1, #7
	.loc	23 116 5
	orr.w	r1, r1, r5, lsr #6
	bic	r1, r1, #-16843010
.Ltmp624:
	.loc	23 84 17 is_stmt 1
	add	r0, r1
.Ltmp625:
	.loc	23 116 7
	mvn.w	r1, lr
	.loc	23 116 6 is_stmt 0
	lsr.w	r1, r1, #7
	.loc	23 116 5
	orr.w	r1, r1, lr, lsr #6
	bic	r1, r1, #-16843010
.Ltmp626:
	.loc	23 84 17 is_stmt 1
	add	r0, r1
.Ltmp627:
	.loc	23 116 7
	mvn.w	r1, r6
	.loc	23 116 6 is_stmt 0
	lsr.w	r1, r1, #7
	.loc	23 116 5
	orr.w	r1, r1, r6, lsr #6
	bic	r1, r1, #-16843010
.Ltmp628:
	.loc	23 84 17 is_stmt 1
	add.w	lr, r1, r0
.Ltmp629:
	.loc	13 146 24
	bne.w	.LBB86_88
	.loc	13 0 24 is_stmt 0
	ldr.w	r11, [sp, #16]
	ldrd	r1, r8, [sp, #28]
	.loc	13 146 24
	ands	r5, r1, #3
	beq.w	.LBB86_82
.Ltmp630:
.LBB86_90:
	.loc	23 81 18 is_stmt 1
	ldm.w	r3, {r0, r1, r2, r4}
.Ltmp631:
	.loc	13 146 24
	cmp	r5, #1
.Ltmp632:
	.loc	23 116 7
	mvn.w	r6, r0
	.loc	23 116 6 is_stmt 0
	lsr.w	r6, r6, #7
	.loc	23 116 5
	orr.w	r0, r6, r0, lsr #6
	.loc	23 116 7
	mvn.w	r6, r1
	.loc	23 116 5
	bic	r0, r0, #-16843010
	.loc	23 116 6
	lsr.w	r6, r6, #7
	.loc	23 116 5
	orr.w	r1, r6, r1, lsr #6
.Ltmp633:
	.loc	23 84 17 is_stmt 1
	add	r0, lr
.Ltmp634:
	.loc	23 116 5
	bic	r1, r1, #-16843010
.Ltmp635:
	.loc	23 84 17
	add	r0, r1
.Ltmp636:
	.loc	23 116 7
	mvn.w	r1, r2
	.loc	23 116 6 is_stmt 0
	lsr.w	r1, r1, #7
	.loc	23 116 5
	orr.w	r1, r1, r2, lsr #6
	bic	r1, r1, #-16843010
.Ltmp637:
	.loc	23 84 17 is_stmt 1
	add	r0, r1
.Ltmp638:
	.loc	23 116 7
	mvn.w	r1, r4
	.loc	23 116 6 is_stmt 0
	lsr.w	r1, r1, #7
	.loc	23 116 5
	orr.w	r1, r1, r4, lsr #6
	bic	r1, r1, #-16843010
.Ltmp639:
	.loc	23 84 17 is_stmt 1
	add.w	lr, r1, r0
.Ltmp640:
	.loc	13 146 24
	beq.w	.LBB86_82
.Ltmp641:
	.loc	23 81 18
	add.w	r4, r3, #16
.Ltmp642:
	.loc	13 146 24
	cmp	r5, #2
.Ltmp643:
	.loc	23 81 18
	ldm	r4, {r0, r1, r2, r4}
.Ltmp644:
	.loc	23 116 7
	mvn.w	r6, r0
	.loc	23 116 6 is_stmt 0
	lsr.w	r6, r6, #7
	.loc	23 116 5
	orr.w	r0, r6, r0, lsr #6
	.loc	23 116 7
	mvn.w	r6, r1
	.loc	23 116 5
	bic	r0, r0, #-16843010
	.loc	23 116 6
	lsr.w	r6, r6, #7
	.loc	23 116 5
	orr.w	r1, r6, r1, lsr #6
.Ltmp645:
	.loc	23 84 17 is_stmt 1
	add	r0, lr
.Ltmp646:
	.loc	23 116 5
	bic	r1, r1, #-16843010
.Ltmp647:
	.loc	23 84 17
	add	r0, r1
.Ltmp648:
	.loc	23 116 7
	mvn.w	r1, r2
	.loc	23 116 6 is_stmt 0
	lsr.w	r1, r1, #7
	.loc	23 116 5
	orr.w	r1, r1, r2, lsr #6
	bic	r1, r1, #-16843010
.Ltmp649:
	.loc	23 84 17 is_stmt 1
	add	r0, r1
.Ltmp650:
	.loc	23 116 7
	mvn.w	r1, r4
	.loc	23 116 6 is_stmt 0
	lsr.w	r1, r1, #7
	.loc	23 116 5
	orr.w	r1, r1, r4, lsr #6
	bic	r1, r1, #-16843010
.Ltmp651:
	.loc	23 84 17 is_stmt 1
	add.w	lr, r1, r0
.Ltmp652:
	.loc	13 146 24
	beq.w	.LBB86_82
.Ltmp653:
	.loc	23 81 18
	adds	r3, #32
	ldm	r3, {r0, r1, r2, r3}
.Ltmp654:
	.loc	23 116 7
	mvns	r6, r1
	.loc	23 116 6 is_stmt 0
	lsrs	r6, r6, #7
	.loc	23 116 5
	orr.w	r1, r6, r1, lsr #6
	.loc	23 116 7
	mvns	r4, r0
	.loc	23 116 5
	bic	r1, r1, #-16843010
	.loc	23 116 6
	lsrs	r4, r4, #7
	.loc	23 116 5
	orr.w	r0, r4, r0, lsr #6
	bic	r0, r0, #-16843010
.Ltmp655:
	.loc	23 84 17 is_stmt 1
	add	r0, lr
	add	r0, r1
.Ltmp656:
	.loc	23 116 7
	mvns	r1, r2
	.loc	23 116 6 is_stmt 0
	lsrs	r1, r1, #7
	.loc	23 116 5
	orr.w	r1, r1, r2, lsr #6
	bic	r1, r1, #-16843010
.Ltmp657:
	.loc	23 84 17 is_stmt 1
	add	r0, r1
.Ltmp658:
	.loc	23 116 7
	mvns	r1, r3
	.loc	23 116 6 is_stmt 0
	lsrs	r1, r1, #7
	.loc	23 116 5
	orr.w	r1, r1, r3, lsr #6
	bic	r1, r1, #-16843010
.Ltmp659:
	.loc	23 84 17 is_stmt 1
	add.w	lr, r1, r0
	b	.LBB86_82
.LBB86_93:
	.loc	23 0 17 is_stmt 0
	ldr.w	r10, [sp, #20]
	b	.LBB86_111
.LBB86_94:
.Ltmp660:
	.loc	30 973 56 is_stmt 1
	and	r0, r10, #252
.Ltmp661:
	.loc	31 295 18
	add.w	r6, r2, r0, lsl #2
.Ltmp662:
	.loc	13 146 24
	subs	r0, r5, #1
	bic	r0, r0, #-1073741824
	adds	r1, r0, #1
	cmp	r0, #3
	and	r8, r1, #3
	bhs	.LBB86_96
	.loc	13 0 24 is_stmt 0
	mov.w	r9, #0
	ldr.w	r10, [sp, #20]
	b	.LBB86_106
.LBB86_96:
	movw	r3, #65532
	movt	r3, #32767
	.loc	13 146 24
	and.w	r0, r1, r3
	subs	r2, r0, #4
	movs	r0, #1
	cmp	r2, #12
	add.w	r1, r0, r2, lsr #2
	and	lr, r1, #3
	bhs	.LBB86_98
	.loc	13 0 24
	mov.w	r9, #0
	b	.LBB86_100
.LBB86_98:
	.loc	13 146 24
	and.w	r5, r1, r3
	mov.w	r9, #0
.Ltmp663:
.LBB86_99:
	.loc	23 99 18 is_stmt 1
	ldm.w	r6, {r0, r1, r2, r4}
.Ltmp664:
	.loc	13 146 24
	subs	r5, #4
.Ltmp665:
	.loc	23 99 18
	ldr.w	r10, [r6, #56]
.Ltmp666:
	.loc	23 116 7
	mvn.w	r3, r0
	.loc	23 116 6 is_stmt 0
	lsr.w	r3, r3, #7
	.loc	23 116 5
	orr.w	r0, r3, r0, lsr #6
	.loc	23 116 7
	mvn.w	r3, r1
	.loc	23 116 5
	bic	r0, r0, #-16843010
	.loc	23 116 6
	lsr.w	r3, r3, #7
	.loc	23 116 5
	orr.w	r1, r3, r1, lsr #6
.Ltmp667:
	.loc	23 100 17 is_stmt 1
	add	r0, r9
.Ltmp668:
	.loc	23 116 5
	bic	r1, r1, #-16843010
.Ltmp669:
	.loc	23 100 17
	add	r0, r1
.Ltmp670:
	.loc	23 116 7
	mvn.w	r1, r2
	.loc	23 116 6 is_stmt 0
	lsr.w	r3, r1, #7
	.loc	23 116 5
	orr.w	r2, r3, r2, lsr #6
	bic	r2, r2, #-16843010
.Ltmp671:
	.loc	23 99 18 is_stmt 1
	ldr	r3, [r6, #16]
	.loc	23 100 17
	add	r0, r2
.Ltmp672:
	.loc	23 116 7
	mvn.w	r2, r4
	.loc	23 116 6 is_stmt 0
	lsr.w	r2, r2, #7
.Ltmp673:
	.loc	23 99 18 is_stmt 1
	ldr	r1, [r6, #20]
.Ltmp674:
	.loc	23 116 5
	orr.w	r2, r2, r4, lsr #6
.Ltmp675:
	.loc	23 99 18
	ldr	r4, [r6, #24]
.Ltmp676:
	.loc	23 116 5
	bic	r2, r2, #-16843010
.Ltmp677:
	.loc	23 99 18
	ldr.w	r9, [r6, #60]
	.loc	23 100 17
	add	r0, r2
.Ltmp678:
	.loc	23 116 7
	mvn.w	r2, r3
	.loc	23 116 6 is_stmt 0
	lsr.w	r2, r2, #7
	.loc	23 116 5
	orr.w	r2, r2, r3, lsr #6
.Ltmp679:
	.loc	23 99 18 is_stmt 1
	ldr	r3, [r6, #28]
.Ltmp680:
	.loc	23 116 5
	bic	r2, r2, #-16843010
.Ltmp681:
	.loc	23 100 17
	add	r0, r2
.Ltmp682:
	.loc	23 116 7
	mvn.w	r2, r1
	.loc	23 116 6 is_stmt 0
	lsr.w	r2, r2, #7
	.loc	23 116 5
	orr.w	r1, r2, r1, lsr #6
	bic	r1, r1, #-16843010
.Ltmp683:
	.loc	23 99 18 is_stmt 1
	ldr	r2, [r6, #32]
	.loc	23 100 17
	add	r0, r1
.Ltmp684:
	.loc	23 116 7
	mvn.w	r1, r4
	.loc	23 116 6 is_stmt 0
	lsr.w	r1, r1, #7
	.loc	23 116 5
	orr.w	r1, r1, r4, lsr #6
.Ltmp685:
	.loc	23 99 18 is_stmt 1
	ldr	r4, [r6, #36]
.Ltmp686:
	.loc	23 116 5
	bic	r1, r1, #-16843010
.Ltmp687:
	.loc	23 100 17
	add	r0, r1
.Ltmp688:
	.loc	23 116 7
	mvn.w	r1, r3
	.loc	23 116 6 is_stmt 0
	lsr.w	r1, r1, #7
	.loc	23 116 5
	orr.w	r1, r1, r3, lsr #6
.Ltmp689:
	.loc	23 99 18 is_stmt 1
	ldr	r3, [r6, #40]
.Ltmp690:
	.loc	23 116 5
	bic	r1, r1, #-16843010
.Ltmp691:
	.loc	23 100 17
	add	r0, r1
.Ltmp692:
	.loc	23 116 7
	mvn.w	r1, r2
	.loc	23 116 6 is_stmt 0
	lsr.w	r1, r1, #7
	.loc	23 116 5
	orr.w	r1, r1, r2, lsr #6
.Ltmp693:
	.loc	23 99 18 is_stmt 1
	ldr	r2, [r6, #44]
.Ltmp694:
	.loc	23 116 5
	bic	r1, r1, #-16843010
.Ltmp695:
	.loc	23 100 17
	add	r0, r1
.Ltmp696:
	.loc	23 116 7
	mvn.w	r1, r4
	.loc	23 116 6 is_stmt 0
	lsr.w	r1, r1, #7
	.loc	23 116 5
	orr.w	r1, r1, r4, lsr #6
.Ltmp697:
	.loc	23 99 18 is_stmt 1
	ldr	r4, [r6, #48]
.Ltmp698:
	.loc	23 116 5
	bic	r1, r1, #-16843010
.Ltmp699:
	.loc	23 100 17
	add	r0, r1
.Ltmp700:
	.loc	23 116 7
	mvn.w	r1, r3
	.loc	23 116 6 is_stmt 0
	lsr.w	r1, r1, #7
	.loc	23 116 5
	orr.w	r1, r1, r3, lsr #6
.Ltmp701:
	.loc	23 99 18 is_stmt 1
	ldr	r3, [r6, #52]
.Ltmp702:
	.loc	23 116 5
	bic	r1, r1, #-16843010
.Ltmp703:
	.loc	10 307 18
	add.w	r6, r6, #64
.Ltmp704:
	.loc	23 100 17
	add	r0, r1
.Ltmp705:
	.loc	23 116 7
	mvn.w	r1, r2
	.loc	23 116 6 is_stmt 0
	lsr.w	r1, r1, #7
	.loc	23 116 5
	orr.w	r1, r1, r2, lsr #6
	bic	r1, r1, #-16843010
.Ltmp706:
	.loc	23 100 17 is_stmt 1
	add	r0, r1
.Ltmp707:
	.loc	23 116 7
	mvn.w	r1, r4
	.loc	23 116 6 is_stmt 0
	lsr.w	r1, r1, #7
	.loc	23 116 5
	orr.w	r1, r1, r4, lsr #6
	bic	r1, r1, #-16843010
.Ltmp708:
	.loc	23 100 17 is_stmt 1
	add	r0, r1
.Ltmp709:
	.loc	23 116 7
	mvn.w	r1, r3
	.loc	23 116 6 is_stmt 0
	lsr.w	r1, r1, #7
	.loc	23 116 5
	orr.w	r1, r1, r3, lsr #6
	bic	r1, r1, #-16843010
.Ltmp710:
	.loc	23 100 17 is_stmt 1
	add	r0, r1
.Ltmp711:
	.loc	23 116 7
	mvn.w	r1, r10
	.loc	23 116 6 is_stmt 0
	lsr.w	r1, r1, #7
	.loc	23 116 5
	orr.w	r1, r1, r10, lsr #6
	bic	r1, r1, #-16843010
.Ltmp712:
	.loc	23 100 17 is_stmt 1
	add	r0, r1
.Ltmp713:
	.loc	23 116 7
	mvn.w	r1, r9
	.loc	23 116 6 is_stmt 0
	lsr.w	r1, r1, #7
	.loc	23 116 5
	orr.w	r1, r1, r9, lsr #6
	bic	r1, r1, #-16843010
.Ltmp714:
	.loc	23 100 17 is_stmt 1
	add.w	r9, r1, r0
.Ltmp715:
	.loc	13 146 24
	bne.w	.LBB86_99
.LBB86_100:
	.loc	13 0 24 is_stmt 0
	ldr.w	r10, [sp, #20]
	.loc	13 146 24
	cmp.w	lr, #0
	beq	.LBB86_106
.Ltmp716:
	.loc	23 99 18 is_stmt 1
	ldm.w	r6, {r1, r2, r5}
.Ltmp717:
	.loc	23 116 7
	mvns	r3, r2
	.loc	23 116 6 is_stmt 0
	lsrs	r3, r3, #7
	.loc	23 116 5
	orr.w	r2, r3, r2, lsr #6
.Ltmp718:
	.loc	23 99 18 is_stmt 1
	ldr	r0, [r6, #12]
.Ltmp719:
	.loc	23 116 7
	mvns	r4, r1
	.loc	23 116 5 is_stmt 0
	bic	r2, r2, #-16843010
	.loc	23 116 6
	lsrs	r4, r4, #7
	.loc	23 116 5
	orr.w	r1, r4, r1, lsr #6
	bic	r1, r1, #-16843010
.Ltmp720:
	.loc	13 146 24 is_stmt 1
	cmp.w	lr, #1
.Ltmp721:
	.loc	23 100 17
	add	r1, r9
	add	r1, r2
.Ltmp722:
	.loc	23 116 7
	mvn.w	r2, r5
	.loc	23 116 6 is_stmt 0
	lsr.w	r2, r2, #7
	.loc	23 116 5
	orr.w	r2, r2, r5, lsr #6
	bic	r2, r2, #-16843010
.Ltmp723:
	.loc	23 100 17 is_stmt 1
	add	r1, r2
.Ltmp724:
	.loc	23 116 7
	mvn.w	r2, r0
	.loc	23 116 6 is_stmt 0
	lsr.w	r2, r2, #7
	.loc	23 116 5
	orr.w	r0, r2, r0, lsr #6
	bic	r0, r0, #-16843010
.Ltmp725:
	.loc	23 100 17 is_stmt 1
	add.w	r9, r0, r1
.Ltmp726:
	.loc	13 146 24
	bne	.LBB86_103
.Ltmp727:
	.loc	13 0 24 is_stmt 0
	adds	r6, #16
	b	.LBB86_106
.LBB86_103:
	.loc	23 99 18 is_stmt 1
	add.w	r4, r6, #16
.Ltmp728:
	.loc	13 146 24
	cmp.w	lr, #2
.Ltmp729:
	.loc	23 99 18
	ldm	r4, {r0, r1, r2, r4}
.Ltmp730:
	.loc	23 116 7
	mvn.w	r3, r1
	.loc	23 116 6 is_stmt 0
	lsr.w	r3, r3, #7
	.loc	23 116 5
	orr.w	r1, r3, r1, lsr #6
	.loc	23 116 7
	mvn.w	r5, r0
	.loc	23 116 5
	bic	r1, r1, #-16843010
	.loc	23 116 6
	lsr.w	r5, r5, #7
	.loc	23 116 5
	orr.w	r0, r5, r0, lsr #6
	bic	r0, r0, #-16843010
.Ltmp731:
	.loc	23 100 17 is_stmt 1
	add	r0, r9
	add	r0, r1
.Ltmp732:
	.loc	23 116 7
	mvn.w	r1, r2
	.loc	23 116 6 is_stmt 0
	lsr.w	r1, r1, #7
	.loc	23 116 5
	orr.w	r1, r1, r2, lsr #6
	bic	r1, r1, #-16843010
.Ltmp733:
	.loc	23 100 17 is_stmt 1
	add	r0, r1
.Ltmp734:
	.loc	23 116 7
	mvn.w	r1, r4
	.loc	23 116 6 is_stmt 0
	lsr.w	r1, r1, #7
	.loc	23 116 5
	orr.w	r1, r1, r4, lsr #6
	bic	r1, r1, #-16843010
.Ltmp735:
	.loc	23 100 17 is_stmt 1
	add.w	r9, r1, r0
.Ltmp736:
	.loc	13 146 24
	bne	.LBB86_105
.Ltmp737:
	.loc	13 0 24 is_stmt 0
	adds	r6, #32
	b	.LBB86_106
.LBB86_105:
	.loc	23 99 18 is_stmt 1
	add.w	r5, r6, #32
.Ltmp738:
	.loc	10 307 18
	adds	r6, #48
.Ltmp739:
	.loc	23 99 18
	ldm	r5, {r0, r1, r2, r5}
.Ltmp740:
	.loc	23 116 7
	mvns	r3, r1
	.loc	23 116 6 is_stmt 0
	lsrs	r3, r3, #7
	.loc	23 116 5
	orr.w	r1, r3, r1, lsr #6
	.loc	23 116 7
	mvns	r4, r0
	.loc	23 116 5
	bic	r1, r1, #-16843010
	.loc	23 116 6
	lsrs	r4, r4, #7
	.loc	23 116 5
	orr.w	r0, r4, r0, lsr #6
	bic	r0, r0, #-16843010
.Ltmp741:
	.loc	23 100 17 is_stmt 1
	add	r0, r9
	add	r0, r1
.Ltmp742:
	.loc	23 116 7
	mvns	r1, r2
	.loc	23 116 6 is_stmt 0
	lsrs	r1, r1, #7
	.loc	23 116 5
	orr.w	r1, r1, r2, lsr #6
	bic	r1, r1, #-16843010
.Ltmp743:
	.loc	23 100 17 is_stmt 1
	add	r0, r1
.Ltmp744:
	.loc	23 116 7
	mvns	r1, r5
	.loc	23 116 6 is_stmt 0
	lsrs	r1, r1, #7
	.loc	23 116 5
	orr.w	r1, r1, r5, lsr #6
	bic	r1, r1, #-16843010
.Ltmp745:
	.loc	23 100 17 is_stmt 1
	add.w	r9, r1, r0
.LBB86_106:
.Ltmp746:
	.loc	13 146 24
	cmp.w	r8, #0
	beq	.LBB86_110
.Ltmp747:
	.loc	23 99 18
	ldr	r0, [r6]
.Ltmp748:
	.loc	13 146 24
	cmp.w	r8, #1
.Ltmp749:
	.loc	23 116 7
	mvn.w	r1, r0
	.loc	23 116 6 is_stmt 0
	lsr.w	r1, r1, #7
	.loc	23 116 5
	orr.w	r0, r1, r0, lsr #6
	bic	r0, r0, #-16843010
.Ltmp750:
	.loc	23 100 17 is_stmt 1
	add	r9, r0
.Ltmp751:
	.loc	13 146 24
	beq	.LBB86_110
.Ltmp752:
	.loc	23 99 18
	ldr	r0, [r6, #4]
.Ltmp753:
	.loc	13 146 24
	cmp.w	r8, #2
.Ltmp754:
	.loc	23 116 7
	mvn.w	r1, r0
	.loc	23 116 6 is_stmt 0
	lsr.w	r1, r1, #7
	.loc	23 116 5
	orr.w	r0, r1, r0, lsr #6
	bic	r0, r0, #-16843010
.Ltmp755:
	.loc	23 100 17 is_stmt 1
	add	r9, r0
.Ltmp756:
	.loc	13 146 24
	beq	.LBB86_110
.Ltmp757:
	.loc	23 99 18
	ldr	r0, [r6, #8]
.Ltmp758:
	.loc	23 116 7
	mvns	r1, r0
	.loc	23 116 6 is_stmt 0
	lsrs	r1, r1, #7
	.loc	23 116 5
	orr.w	r0, r1, r0, lsr #6
	bic	r0, r0, #-16843010
.Ltmp759:
	.loc	23 100 17 is_stmt 1
	add	r9, r0
.LBB86_110:
.Ltmp760:
	.loc	23 126 27
	uxtb16	r0, r9
	.loc	23 126 51 is_stmt 0
	uxtb16	r1, r9, ror #8
	.loc	23 126 27
	add	r0, r1
.Ltmp761:
	.loc	20 1249 13 is_stmt 1
	add.w	r0, r0, r0, lsl #16
.Ltmp762:
	.loc	23 102 13
	add.w	r12, r12, r0, lsr #16
.Ltmp763:
.LBB86_111:
	.loc	23 0 13 is_stmt 0
	ldr.w	r9, [sp, #12]
	ldr	r4, [sp, #24]
.LBB86_112:
	.loc	3 1468 20 is_stmt 1
	cmp	r4, r12
	bls	.LBB86_116
.Ltmp764:
	.loc	3 1491 27
	ldrb.w	r0, [r10, #32]
.Ltmp765:
	.loc	3 1475 53
	sub.w	r2, r4, r12
	mov	r3, r10
.Ltmp766:
	.loc	3 1496 35
	subs	r1, r0, #3
	it	ne
	movne	r1, r0
	lsls	r0, r1, #30
	beq	.LBB86_118
	cmp	r1, #1
	bne	.LBB86_119
.Ltmp767:
	.loc	3 0 35 is_stmt 0
	mov.w	r10, #0
	mov	r1, r2
	b	.LBB86_120
.LBB86_116:
	ldr.w	r0, [r10, #28]
	mov	r2, r9
	ldr.w	r1, [r10, #24]
.LBB86_117:
	ldr	r3, [r0, #12]
	mov	r0, r1
	mov	r1, r11
	add	sp, #36
	pop.w	{r8, r9, r10, r11}
	pop.w	{r4, r5, r6, r7, lr}
	bx	r3
.LBB86_118:
	movs	r1, #0
	mov	r10, r2
	b	.LBB86_120
.LBB86_119:
.Ltmp768:
	.loc	3 1499 56 is_stmt 1
	adds	r0, r2, #1
	.loc	3 1499 43 is_stmt 0
	lsrs	r1, r2, #1
	.loc	3 1499 56
	lsr.w	r10, r0, #1
.LBB86_120:
	.loc	3 0 56
	ldr	r6, [r3, #4]
	.loc	3 1502 9 is_stmt 1
	adds	r4, r1, #1
	ldrd	r8, r5, [r3, #24]
.LBB86_121:
.Ltmp769:
	.loc	18 1400 52
	subs	r4, #1
.Ltmp770:
	.loc	6 621 12
	beq	.LBB86_123
.Ltmp771:
	.loc	3 1503 13
	ldr	r2, [r5, #16]
	mov	r0, r8
	mov	r1, r6
	blx	r2
	cmp	r0, #0
	beq	.LBB86_121
	b	.LBB86_125
.Ltmp772:
.LBB86_123:
	.loc	3 0 13 is_stmt 0
	mov	r2, r9
.Ltmp773:
	subs.w	r9, r6, #1114112
	it	ne
	movne	r9, r10
.Ltmp774:
	.loc	3 1475 40 is_stmt 1
	cmp.w	r6, #1114112
	beq	.LBB86_125
	.loc	3 1476 21
	ldr	r3, [r5, #12]
	mov	r0, r8
	mov	r1, r11
	blx	r3
	cbz	r0, .LBB86_126
.LBB86_125:
	.loc	3 0 21 is_stmt 0
	movs	r0, #1
	.loc	3 1481 6 is_stmt 1
	add	sp, #36
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB86_126:
	.loc	3 0 6 is_stmt 0
	movs	r4, #0
.LBB86_127:
.Ltmp775:
	.loc	6 621 12 is_stmt 1
	cmp	r9, r4
	beq	.LBB86_130
.Ltmp776:
	.loc	3 1269 13
	ldr	r2, [r5, #16]
	mov	r0, r8
	mov	r1, r6
	blx	r2
.Ltmp777:
	.loc	20 464 22
	adds	r4, #1
.Ltmp778:
	.loc	3 1269 13
	cmp	r0, #0
	beq	.LBB86_127
	subs	r1, r4, #1
	b	.LBB86_131
.LBB86_130:
	.loc	3 0 13 is_stmt 0
	mov	r1, r9
.LBB86_131:
	movs	r0, #0
.Ltmp779:
	.loc	18 1400 52 is_stmt 1
	cmp	r1, r9
	it	lo
	movlo	r0, #1
.Ltmp780:
	.loc	3 1481 6
	add	sp, #36
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.Ltmp781:
.Lfunc_end86:
	.size	core::fmt::Formatter::pad::h936b549e1667e5be, .Lfunc_end86-core::fmt::Formatter::pad::h936b549e1667e5be
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text.unlikely._ZN4core9panicking5panic17ha0d68f1d939a874bE,"ax",%progbits
	.p2align	1
	.type	core::panicking::panic::ha0d68f1d939a874b,%function
	.code	16
	.thumb_func
core::panicking::panic::ha0d68f1d939a874b:
.Lfunc_begin87:
	.loc	7 41 0
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	.pad	#32
	sub	sp, #32
	mov	r12, r2
.Ltmp782:
	.loc	3 387 9 prologue_end
	movw	r2, :lower16:CORE_PERIPHERALS
	movt	r2, :upper16:CORE_PERIPHERALS
	movs	r3, #0
.Ltmp783:
	.loc	7 48 39
	strd	r0, r1, [sp, #24]
	mov	r0, sp
.Ltmp784:
	.loc	3 387 9
	str	r2, [sp, #16]
	movs	r2, #1
.Ltmp785:
	.loc	7 48 5
	mov	r1, r12
.Ltmp786:
	.loc	3 387 9
	str	r2, [sp, #4]
	add	r2, sp, #24
	str	r3, [sp, #20]
	strd	r3, r3, [sp, #8]
	str	r2, [sp]
.Ltmp787:
	.loc	7 48 5
	bl	core::panicking::panic_fmt::h679f68291595c801
	.inst.n	0xdefe
.Ltmp788:
.Lfunc_end87:
	.size	core::panicking::panic::ha0d68f1d939a874b, .Lfunc_end87-core::panicking::panic::ha0d68f1d939a874b
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN4core9panicking19assert_failed_inner17h492fc9c36dcbce8bE,"ax",%progbits
	.p2align	1
	.type	core::panicking::assert_failed_inner::h492fc9c36dcbce8b,%function
	.code	16
	.thumb_func
core::panicking::assert_failed_inner::h492fc9c36dcbce8b:
.Lfunc_begin88:
	.loc	7 206 0
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	.pad	#104
	sub	sp, #104
	mov	r12, r1
	ldrd	lr, r1, [r7, #8]
	strd	r0, r12, [sp]
	movs	r0, #2
.Ltmp789:
	.loc	7 0 0 is_stmt 0
	str	r0, [sp, #20]
	.loc	7 218 11 prologue_end is_stmt 1
	ldr.w	r0, [lr]
	strd	r2, r3, [sp, #8]
	.loc	7 213 27
	movw	r2, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.186
	movt	r2, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.186
	str	r2, [sp, #16]
	.loc	7 218 5
	cbnz	r0, .LBB88_2
	.loc	7 0 5 is_stmt 0
	movs	r0, #3
.Ltmp790:
	.loc	3 387 9 is_stmt 1
	str	r0, [sp, #100]
	add	r0, sp, #48
	str	r0, [sp, #96]
	movs	r0, #0
	strd	r0, r0, [sp, #88]
	movs	r0, #4
	str	r0, [sp, #84]
	movw	r0, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.193
	movt	r0, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.193
	str	r0, [sp, #80]
	b	.LBB88_3
.Ltmp791:
.LBB88_2:
	.loc	3 0 9 is_stmt 0
	add.w	r12, sp, #24
	.loc	7 219 14 is_stmt 1
	ldm.w	lr, {r0, r3, r4, r5, r6, r8}
	mov	r2, r12
	stm.w	r2, {r0, r3, r4, r5, r6, r8}
	add	r2, sp, #48
	movs	r0, #4
.Ltmp792:
	.loc	3 387 9
	str	r2, [sp, #96]
	movs	r2, #0
	str	r0, [sp, #100]
	strd	r0, r2, [sp, #84]
	movw	r0, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.191
	movt	r0, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.191
	str	r2, [sp, #92]
	str	r0, [sp, #80]
.Ltmp793:
	.loc	7 219 23
	movw	r0, :lower16:<core::fmt::Arguments as core::fmt::Display>::fmt::h1e33fd5ba5bed534
	movt	r0, :upper16:<core::fmt::Arguments as core::fmt::Display>::fmt::h1e33fd5ba5bed534
	strd	r12, r0, [sp, #72]
.LBB88_3:
	.loc	7 0 0 is_stmt 0
	movw	r0, :lower16:<&T as core::fmt::Debug>::fmt::hefd9236e08ca60f0
	add	r2, sp, #8
	movt	r0, :upper16:<&T as core::fmt::Debug>::fmt::hefd9236e08ca60f0
	str	r2, [sp, #64]
	str	r0, [sp, #68]
	str	r0, [sp, #60]
	mov	r0, sp
	str	r0, [sp, #56]
	movw	r0, :lower16:<&T as core::fmt::Display>::fmt::h316400868ab25d65
	movt	r0, :upper16:<&T as core::fmt::Display>::fmt::h316400868ab25d65
	str	r0, [sp, #52]
	add	r0, sp, #16
	str	r0, [sp, #48]
	add	r0, sp, #80
	bl	core::panicking::panic_fmt::h679f68291595c801
	.inst.n	0xdefe
.Ltmp794:
.Lfunc_end88:
	.size	core::panicking::assert_failed_inner::h492fc9c36dcbce8b, .Lfunc_end88-core::panicking::assert_failed_inner::h492fc9c36dcbce8b
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h316400868ab25d65E","ax",%progbits
	.p2align	1
	.type	<&T as core::fmt::Display>::fmt::h316400868ab25d65,%function
	.code	16
	.thumb_func
<&T as core::fmt::Display>::fmt::h316400868ab25d65:
.Lfunc_begin89:
	.loc	3 2128 0 is_stmt 1
	.fnstart
	.cfi_startproc
	mov	r3, r1
.Ltmp795:
	.loc	3 2128 71 prologue_end
	ldrd	r1, r2, [r0]
.Ltmp796:
	.loc	3 2197 9
	mov	r0, r3
	b	core::fmt::Formatter::pad::h936b549e1667e5be
.Ltmp797:
.Lfunc_end89:
	.size	<&T as core::fmt::Display>::fmt::h316400868ab25d65, .Lfunc_end89-<&T as core::fmt::Display>::fmt::h316400868ab25d65
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hefd9236e08ca60f0E","ax",%progbits
	.p2align	1
	.type	<&T as core::fmt::Debug>::fmt::hefd9236e08ca60f0,%function
	.code	16
	.thumb_func
<&T as core::fmt::Debug>::fmt::hefd9236e08ca60f0:
.Lfunc_begin90:
	.loc	3 2128 0
	.fnstart
	.cfi_startproc
	.loc	3 2128 71 prologue_end
	ldrd	r2, r0, [r0]
	.loc	3 2128 62 is_stmt 0
	ldr	r3, [r0, #12]
	mov	r0, r2
	bx	r3
.Ltmp798:
.Lfunc_end90:
	.size	<&T as core::fmt::Debug>::fmt::hefd9236e08ca60f0, .Lfunc_end90-<&T as core::fmt::Debug>::fmt::hefd9236e08ca60f0
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN59_$LT$core..fmt..Arguments$u20$as$u20$core..fmt..Display$GT$3fmt17h1e33fd5ba5bed534E","ax",%progbits
	.p2align	1
	.type	<core::fmt::Arguments as core::fmt::Display>::fmt::h1e33fd5ba5bed534,%function
	.code	16
	.thumb_func
<core::fmt::Arguments as core::fmt::Display>::fmt::h1e33fd5ba5bed534:
.Lfunc_begin91:
	.loc	3 522 0 is_stmt 1
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r11}
	push.w	{r8, r9, r11}
	.cfi_offset r11, -24
	.cfi_offset r9, -28
	.cfi_offset r8, -32
	.pad	#24
	sub	sp, #24
.Ltmp799:
	.loc	3 523 15 prologue_end
	ldrd	r12, r1, [r1, #24]
	mov	r2, sp
	.loc	3 523 24 is_stmt 0
	ldm.w	r0, {r4, r5, r6, r8, r9, lr}
	mov	r3, r2
	.loc	3 523 9
	mov	r0, r12
	.loc	3 523 24
	stm.w	r3, {r4, r5, r6, r8, r9, lr}
	.loc	3 523 9
	bl	core::fmt::write::h5d3fbef16e428eed
	.loc	3 524 6 is_stmt 1
	add	sp, #24
	pop.w	{r8, r9, r11}
	pop	{r4, r5, r6, r7, pc}
.Ltmp800:
.Lfunc_end91:
	.size	<core::fmt::Arguments as core::fmt::Display>::fmt::h1e33fd5ba5bed534, .Lfunc_end91-<core::fmt::Arguments as core::fmt::Display>::fmt::h1e33fd5ba5bed534
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN4core3fmt5write17h5d3fbef16e428eedE,"ax",%progbits
	.p2align	1
	.type	core::fmt::write::h5d3fbef16e428eed,%function
	.code	16
	.thumb_func
core::fmt::write::h5d3fbef16e428eed:
.Lfunc_begin92:
	.loc	3 1176 0
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#44
	sub	sp, #44
	mov	r11, r2
	movs	r2, #3
.Ltmp801:
	.loc	3 1180 11 prologue_end
	ldr.w	r10, [r11, #8]
.Ltmp802:
	.loc	3 237 9
	strb.w	r2, [sp, #40]
	movs	r2, #32
	str	r2, [sp, #12]
	movs	r2, #0
.Ltmp803:
	.loc	3 1180 5
	cmp.w	r10, #0
.Ltmp804:
	.loc	3 237 9
	str	r2, [sp, #8]
	str	r1, [sp, #36]
	str	r0, [sp, #32]
	str	r2, [sp, #24]
	str	r2, [sp, #16]
.Ltmp805:
	.loc	3 1180 5
	beq	.LBB92_20
	.loc	3 1194 14
	ldr.w	r0, [r11, #12]
.Ltmp806:
	.loc	13 146 24
	cmp	r0, #0
	beq.w	.LBB92_26
	.loc	13 0 24 is_stmt 0
	ldr.w	r9, [r11]
	.loc	13 146 24
	lsls	r1, r0, #5
	subs	r0, #1
	movs	r4, #0
	bic	r0, r0, #-134217728
	mov.w	r8, #0
	adds	r0, #1
	str	r1, [sp, #4]
	str	r0, [sp]
.Ltmp807:
.LBB92_3:
	.loc	3 1201 21 is_stmt 1
	add.w	r0, r9, r8
	ldr	r2, [r0, #4]
	.loc	3 1201 20 is_stmt 0
	cbz	r2, .LBB92_5
	.loc	3 1202 21 is_stmt 1
	ldrd	r0, r3, [sp, #32]
	.loc	3 1202 45 is_stmt 0
	ldr.w	r1, [r9, r8]
	.loc	3 1202 21
	ldr	r3, [r3, #12]
	blx	r3
	cmp	r0, #0
	bne.w	.LBB92_29
.LBB92_5:
.Ltmp808:
	.loc	3 1221 16 is_stmt 1
	add.w	r0, r10, r8, lsl #2
.Ltmp809:
	.loc	3 1206 51
	ldr.w	r1, [r11, #16]
.Ltmp810:
	.loc	3 1221 16
	ldrd	r5, r6, [r0, #4]
	.loc	3 1227 21
	ldrd	r3, r2, [r0, #20]
	.loc	3 1223 5
	strd	r6, r5, [sp, #8]
	.loc	3 1222 17
	ldrb	r6, [r0, #28]
	.loc	3 1222 5 is_stmt 0
	strb.w	r6, [sp, #40]
.Ltmp811:
	.loc	3 1242 5 is_stmt 1
	cbz	r3, .LBB92_10
	cmp	r3, #1
	bne	.LBB92_8
.Ltmp812:
	.loc	3 355 12
	add.w	r3, r1, r2, lsl #3
	movw	r6, :lower16:core::ops::function::FnOnce::call_once::h2f4bf7dde0f7e4e6
	movt	r6, :upper16:core::ops::function::FnOnce::call_once::h2f4bf7dde0f7e4e6
	ldr	r3, [r3, #4]
	cmp	r3, r6
	beq	.LBB92_9
.LBB92_8:
	.loc	3 0 12 is_stmt 0
	movs	r3, #0
	b	.LBB92_11
.LBB92_9:
	.loc	3 358 29 is_stmt 1
	ldr.w	r2, [r1, r2, lsl #3]
	.loc	3 358 27 is_stmt 0
	ldr	r2, [r2]
.Ltmp813:
.LBB92_10:
	.loc	3 0 27
	movs	r3, #1
.LBB92_11:
	.loc	3 1227 9 is_stmt 1
	strd	r3, r2, [sp, #16]
	.loc	3 1228 25
	add.w	r3, r10, r4
	ldr	r2, [r0, #12]
	ldr	r0, [r3, #16]
.Ltmp814:
	.loc	3 1242 5
	cbz	r2, .LBB92_16
	cmp	r2, #1
	bne	.LBB92_14
.Ltmp815:
	.loc	3 355 12
	add.w	r2, r1, r0, lsl #3
	movw	r3, :lower16:core::ops::function::FnOnce::call_once::h2f4bf7dde0f7e4e6
	movt	r3, :upper16:core::ops::function::FnOnce::call_once::h2f4bf7dde0f7e4e6
	ldr	r2, [r2, #4]
	cmp	r2, r3
	beq	.LBB92_15
.LBB92_14:
	.loc	3 0 12 is_stmt 0
	movs	r2, #0
	b	.LBB92_17
.LBB92_15:
	.loc	3 358 29 is_stmt 1
	ldr.w	r0, [r1, r0, lsl #3]
	.loc	3 358 27 is_stmt 0
	ldr	r0, [r0]
.Ltmp816:
.LBB92_16:
	.loc	3 0 27
	movs	r2, #1
.LBB92_17:
	.loc	3 1235 45 is_stmt 1
	ldr.w	r3, [r10, r4]
	.loc	3 1228 9
	str	r0, [sp, #28]
	.loc	3 1238 23
	ldr.w	r0, [r1, r3, lsl #3]
.Ltmp817:
	.loc	31 295 18
	add.w	r1, r1, r3, lsl #3
.Ltmp818:
	.loc	3 1238 5
	ldr	r3, [r1, #4]
	add	r1, sp, #8
	.loc	3 1228 9
	str	r2, [sp, #24]
	.loc	3 1238 5
	blx	r3
.Ltmp819:
	.loc	3 1206 17
	cbnz	r0, .LBB92_29
.Ltmp820:
	.loc	13 146 24
	ldr	r0, [sp, #4]
	adds	r4, #32
	add.w	r8, r8, #8
	cmp	r0, r4
	bne	.LBB92_3
.Ltmp821:
	.loc	13 0 24 is_stmt 0
	ldr.w	r9, [sp]
	b	.LBB92_27
.LBB92_20:
	.loc	3 1183 29 is_stmt 1
	ldr.w	r0, [r11, #20]
.Ltmp822:
	.loc	13 146 24
	cbz	r0, .LBB92_26
	subs	r0, #1
	ldr.w	r1, [r11]
.Ltmp823:
	.loc	3 1183 29
	ldr.w	r2, [r11, #16]
.Ltmp824:
	.loc	13 146 24
	bic	r0, r0, #-536870912
	adds	r5, r0, #1
	adds	r6, r1, #4
	adds	r4, r2, #4
	add.w	r8, sp, #8
	mov	r9, r5
.Ltmp825:
.LBB92_22:
	.loc	3 1187 21
	ldr	r2, [r6]
	.loc	3 1187 20 is_stmt 0
	cbz	r2, .LBB92_24
	.loc	3 1188 21 is_stmt 1
	ldrd	r0, r3, [sp, #32]
	.loc	3 1188 45 is_stmt 0
	ldr	r1, [r6, #-4]
	.loc	3 1188 21
	ldr	r3, [r3, #12]
	blx	r3
	cbnz	r0, .LBB92_29
.LBB92_24:
	.loc	3 1190 33 is_stmt 1
	ldr	r0, [r4, #-4]
	.loc	3 1190 17 is_stmt 0
	mov	r1, r8
	ldr	r2, [r4]
	blx	r2
	cbnz	r0, .LBB92_29
.Ltmp826:
	.loc	13 146 24 is_stmt 1
	adds	r4, #8
	adds	r6, #8
	subs	r5, #1
	bne	.LBB92_22
	b	.LBB92_27
.Ltmp827:
.LBB92_26:
	.loc	13 0 24 is_stmt 0
	mov.w	r9, #0
.LBB92_27:
	.loc	3 1213 26 is_stmt 1
	ldrd	r0, r1, [r11]
	movs	r2, #0
.Ltmp828:
	.loc	25 162 12
	cmp	r9, r1
	it	lo
	addlo.w	r2, r0, r9, lsl #3
.Ltmp829:
	.loc	3 1213 12
	bhs	.LBB92_30
	.loc	3 1214 9
	ldrd	r0, r3, [sp, #32]
	.loc	3 1214 33 is_stmt 0
	ldrd	r1, r2, [r2]
	.loc	3 1214 9
	ldr	r3, [r3, #12]
	blx	r3
	cbz	r0, .LBB92_30
.LBB92_29:
	.loc	3 0 9
	movs	r0, #1
	.loc	3 1218 2 is_stmt 1
	add	sp, #44
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB92_30:
	.loc	3 0 2 is_stmt 0
	movs	r0, #0
	.loc	3 1218 2
	add	sp, #44
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.Ltmp830:
.Lfunc_end92:
	.size	core::fmt::write::h5d3fbef16e428eed, .Lfunc_end92-core::fmt::write::h5d3fbef16e428eed
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text.unlikely._ZN4core5slice5index22slice_index_order_fail17h8a53f055fb6ee074E,"ax",%progbits
	.p2align	1
	.type	core::slice::index::slice_index_order_fail::h8a53f055fb6ee074,%function
	.code	16
	.thumb_func
core::slice::index::slice_index_order_fail::h8a53f055fb6ee074:
.Lfunc_begin93:
	.loc	25 50 0 is_stmt 1
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	.pad	#48
	sub	sp, #48
	strd	r0, r1, [sp]
	add	r1, sp, #32
	movs	r0, #2
.Ltmp831:
	.loc	3 387 9 prologue_end
	str	r1, [sp, #24]
	movs	r1, #0
	str	r0, [sp, #28]
	strd	r0, r1, [sp, #12]
	movw	r0, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.263
	movt	r0, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.263
	str	r1, [sp, #20]
	str	r0, [sp, #8]
.Ltmp832:
	.loc	25 51 5
	movw	r0, :lower16:core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::h9d0ff72e374f98e7
	add	r1, sp, #4
	movt	r0, :upper16:core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::h9d0ff72e374f98e7
	str	r0, [sp, #44]
	strd	r0, r1, [sp, #36]
	mov	r0, sp
	str	r0, [sp, #32]
	add	r0, sp, #8
	mov	r1, r2
	bl	core::panicking::panic_fmt::h679f68291595c801
	.inst.n	0xdefe
.Ltmp833:
.Lfunc_end93:
	.size	core::slice::index::slice_index_order_fail::h8a53f055fb6ee074, .Lfunc_end93-core::slice::index::slice_index_order_fail::h8a53f055fb6ee074
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN4core3num20_$LT$impl$u20$u8$GT$21is_utf8_char_boundary17hce24739f4da7d511E","ax",%progbits
	.p2align	1
	.type	core::num::<impl u8>::is_utf8_char_boundary::hce24739f4da7d511,%function
	.code	16
	.thumb_func
core::num::<impl u8>::is_utf8_char_boundary::hce24739f4da7d511:
.Lfunc_begin94:
	.loc	38 812 0
	.fnstart
	.cfi_startproc
	sxtb	r1, r0
	movs	r0, #0
.Ltmp834:
	.loc	38 814 9 prologue_end
	cmn.w	r1, #65
	it	gt
	movgt	r0, #1
	.loc	38 815 6
	bx	lr
.Ltmp835:
.Lfunc_end94:
	.size	core::num::<impl u8>::is_utf8_char_boundary::hce24739f4da7d511, .Lfunc_end94-core::num::<impl u8>::is_utf8_char_boundary::hce24739f4da7d511
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN60_$LT$core..cell..BorrowError$u20$as$u20$core..fmt..Debug$GT$3fmt17he01a02bd97eeb704E","ax",%progbits
	.p2align	1
	.type	<core::cell::BorrowError as core::fmt::Debug>::fmt::he01a02bd97eeb704,%function
	.code	16
	.thumb_func
<core::cell::BorrowError as core::fmt::Debug>::fmt::he01a02bd97eeb704:
.Lfunc_begin95:
	.file	43 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/cell.rs"
	.loc	43 631 0
	.fnstart
	.cfi_startproc
	.loc	3 1621 9 prologue_end
	ldrd	r0, r2, [r1, #24]
	movw	r1, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.138
	ldr	r3, [r2, #12]
	movt	r1, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.138
	movs	r2, #11
	bx	r3
.Ltmp836:
.Lfunc_end95:
	.size	<core::cell::BorrowError as core::fmt::Debug>::fmt::he01a02bd97eeb704, .Lfunc_end95-<core::cell::BorrowError as core::fmt::Debug>::fmt::he01a02bd97eeb704
	.cfi_endproc
	.file	44 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/fmt/builders.rs"
	.cantunwind
	.fnend

	.section	".text._ZN63_$LT$core..cell..BorrowMutError$u20$as$u20$core..fmt..Debug$GT$3fmt17hbedb9b53a3463d04E","ax",%progbits
	.p2align	1
	.type	<core::cell::BorrowMutError as core::fmt::Debug>::fmt::hbedb9b53a3463d04,%function
	.code	16
	.thumb_func
<core::cell::BorrowMutError as core::fmt::Debug>::fmt::hbedb9b53a3463d04:
.Lfunc_begin96:
	.loc	43 658 0
	.fnstart
	.cfi_startproc
	.loc	3 1621 9 prologue_end
	ldrd	r0, r2, [r1, #24]
	movw	r1, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.140
	ldr	r3, [r2, #12]
	movt	r1, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.140
	movs	r2, #14
	bx	r3
.Ltmp837:
.Lfunc_end96:
	.size	<core::cell::BorrowMutError as core::fmt::Debug>::fmt::hbedb9b53a3463d04, .Lfunc_end96-<core::cell::BorrowMutError as core::fmt::Debug>::fmt::hbedb9b53a3463d04
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i16$GT$3fmt17hdad8d5f225e025a6E","ax",%progbits
	.p2align	1
	.type	core::fmt::num::<impl core::fmt::LowerHex for i16>::fmt::hdad8d5f225e025a6,%function
	.code	16
	.thumb_func
core::fmt::num::<impl core::fmt::LowerHex for i16>::fmt::hdad8d5f225e025a6:
.Lfunc_begin97:
	.loc	8 154 0
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8}
	str	r8, [sp, #-4]!
	.cfi_offset r8, -24
	.pad	#136
	sub	sp, #136
.Ltmp838:
	.loc	8 155 32 prologue_end
	ldrh	r6, [r0]
	mov	r4, r1
.Ltmp839:
	.loc	8 147 35
	movs	r1, #87
	add.w	r8, sp, #8
.Ltmp840:
	.loc	8 42 35
	and	r0, r6, #15
	movs	r5, #87
.Ltmp841:
	.loc	8 147 35
	cmp	r0, #10
	it	lo
	movlo	r1, #48
	.loc	8 0 0 is_stmt 0
	adds	r2, r1, r0
.Ltmp842:
	.file	45 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/mem/maybe_uninit.rs"
	.loc	45 496 9 is_stmt 1
	mov	r0, r8
	movs	r1, #128
	bl	__aeabi_memset4
.Ltmp843:
	.loc	8 83 20
	cmp	r6, #16
	bhs	.LBB97_2
	.loc	8 0 20 is_stmt 0
	movs	r0, #127
	movs	r1, #1
	b	.LBB97_7
.LBB97_2:
.Ltmp844:
	.loc	8 42 35 is_stmt 1
	uxtb	r0, r6
.Ltmp845:
	.loc	8 147 35
	cmp	r0, #160
	it	lo
	movlo	r5, #48
	.loc	8 0 0 is_stmt 0
	add.w	r0, r5, r0, lsr #4
.Ltmp846:
	.loc	45 496 9 is_stmt 1
	strb.w	r0, [sp, #134]
.Ltmp847:
	.file	46 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/ops/arith.rs"
	.loc	46 500 45
	lsrs	r0, r6, #8
.Ltmp848:
	.loc	8 83 20
	beq	.LBB97_5
.Ltmp849:
	.loc	8 42 35
	and	r1, r0, #15
.Ltmp850:
	.loc	8 147 35
	movs	r2, #87
	cmp	r1, #10
	it	lo
	movlo	r2, #48
	.loc	8 0 0 is_stmt 0
	add	r1, r2
.Ltmp851:
	.loc	45 496 9 is_stmt 1
	strb.w	r1, [sp, #133]
	movs	r0, #87
.Ltmp852:
	.loc	46 500 45
	lsrs	r1, r6, #12
.Ltmp853:
	.loc	8 83 20
	beq	.LBB97_6
.Ltmp854:
	.loc	8 147 35
	cmp	r1, #10
	it	lo
	movlo	r0, #48
	.loc	8 0 0 is_stmt 0
	add	r0, r1
.Ltmp855:
	.loc	45 496 9 is_stmt 1
	strb.w	r0, [sp, #132]
	movs	r0, #124
	movs	r1, #4
	b	.LBB97_7
.Ltmp856:
.LBB97_5:
	.loc	45 0 9 is_stmt 0
	movs	r0, #126
	movs	r1, #2
	b	.LBB97_7
.LBB97_6:
	movs	r0, #125
	movs	r1, #3
.LBB97_7:
	.loc	8 110 9 is_stmt 1
	str	r1, [sp]
	movw	r1, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.232
.Ltmp857:
	.loc	31 295 18
	add.w	r3, r8, r0
.Ltmp858:
	.loc	8 110 9
	movt	r1, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.232
	mov	r0, r4
	movs	r2, #2
	bl	core::fmt::Formatter::pad_integral::h9f90d3af72be363b
.Ltmp859:
	.loc	8 156 14
	add	sp, #136
	ldr	r8, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.Ltmp860:
.Lfunc_end97:
	.size	core::fmt::num::<impl core::fmt::LowerHex for i16>::fmt::hdad8d5f225e025a6, .Lfunc_end97-core::fmt::num::<impl core::fmt::LowerHex for i16>::fmt::hdad8d5f225e025a6
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text.unlikely._ZN4core6option13expect_failed17h22026eb39ea9589cE,"ax",%progbits
	.p2align	1
	.type	core::option::expect_failed::h22026eb39ea9589c,%function
	.code	16
	.thumb_func
core::option::expect_failed::h22026eb39ea9589c:
.Lfunc_begin98:
	.loc	29 1851 0
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
.Ltmp861:
	.loc	29 1852 5 prologue_end
	bl	core::panicking::panic_str::h745842c312fc9ac7
	.inst.n	0xdefe
.Ltmp862:
.Lfunc_end98:
	.size	core::option::expect_failed::h22026eb39ea9589c, .Lfunc_end98-core::option::expect_failed::h22026eb39ea9589c
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN4core9panicking9panic_str17h745842c312fc9ac7E,"ax",%progbits
	.p2align	1
	.type	core::panicking::panic_str::h745842c312fc9ac7,%function
	.code	16
	.thumb_func
core::panicking::panic_str::h745842c312fc9ac7:
.Lfunc_begin99:
	.loc	7 55 0
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	strd	r0, r1, [sp, #-8]!
	mov	r0, sp
.Ltmp863:
	.loc	7 56 5 prologue_end
	mov	r1, r2
	bl	core::panicking::panic_display::h4bd204fe64080bf8
	.inst.n	0xdefe
.Ltmp864:
.Lfunc_end99:
	.size	core::panicking::panic_str::h745842c312fc9ac7, .Lfunc_end99-core::panicking::panic_str::h745842c312fc9ac7
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN4core9panicking13panic_display17h4bd204fe64080bf8E,"ax",%progbits
	.p2align	1
	.type	core::panicking::panic_display::h4bd204fe64080bf8,%function
	.code	16
	.thumb_func
core::panicking::panic_display::h4bd204fe64080bf8:
.Lfunc_begin100:
	.loc	7 72 0
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	.pad	#32
	sub	sp, #32
	add	r3, sp, #24
	movs	r2, #1
.Ltmp865:
	.loc	3 387 9 prologue_end
	str	r3, [sp, #16]
	movs	r3, #0
	str	r2, [sp, #20]
	strd	r2, r3, [sp, #4]
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.114
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.114
	str	r3, [sp, #12]
	str	r2, [sp]
.Ltmp866:
	.loc	7 73 15
	movw	r2, :lower16:<&T as core::fmt::Display>::fmt::h316400868ab25d65
	movt	r2, :upper16:<&T as core::fmt::Display>::fmt::h316400868ab25d65
	strd	r0, r2, [sp, #24]
	mov	r0, sp
	.loc	7 73 5 is_stmt 0
	bl	core::panicking::panic_fmt::h679f68291595c801
	.inst.n	0xdefe
.Ltmp867:
.Lfunc_end100:
	.size	core::panicking::panic_display::h4bd204fe64080bf8, .Lfunc_end100-core::panicking::panic_display::h4bd204fe64080bf8
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN73_$LT$core..panic..panic_info..PanicInfo$u20$as$u20$core..fmt..Display$GT$3fmt17h4ec511762c61d457E","ax",%progbits
	.p2align	1
	.type	<core::panic::panic_info::PanicInfo as core::fmt::Display>::fmt::h4ec511762c61d457,%function
	.code	16
	.thumb_func
<core::panic::panic_info::PanicInfo as core::fmt::Display>::fmt::h4ec511762c61d457:
.Lfunc_begin101:
	.loc	11 152 0 is_stmt 1
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8}
	str	r8, [sp, #-4]!
	.cfi_offset r8, -24
	.pad	#56
	sub	sp, #56
.Ltmp868:
	.loc	3 1621 9 prologue_end
	ldrd	r4, r5, [r1, #24]
	movw	r1, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.170
	ldr	r3, [r5, #12]
	mov	r8, r0
	movt	r1, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.170
	movs	r2, #12
	mov	r0, r4
	blx	r3
.Ltmp869:
	.loc	11 153 9
	cbz	r0, .LBB101_3
	.loc	11 0 9 is_stmt 0
	movs	r6, #1
.LBB101_2:
	.loc	11 165 6 is_stmt 1
	mov	r0, r6
	add	sp, #56
	ldr	r8, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.LBB101_3:
	.loc	11 154 16
	ldr.w	r0, [r8, #8]
	cbz	r0, .LBB101_5
	.loc	11 154 21 is_stmt 0
	str	r0, [sp, #4]
	.loc	11 155 13 is_stmt 1
	movw	r0, :lower16:<&T as core::fmt::Display>::fmt::he55616ac5c69a229
	movt	r0, :upper16:<&T as core::fmt::Display>::fmt::he55616ac5c69a229
	b	.LBB101_7
.LBB101_5:
	.loc	11 156 39
	ldrd	r6, r0, [r8]
.Ltmp870:
	.loc	12 192 24
	ldr	r1, [r0, #12]
	mov	r0, r6
	blx	r1
	movw	r2, #51225
	movt	r2, #34030
.Ltmp871:
	.loc	12 600 5
	eors	r1, r2
	movw	r2, #5969
	movt	r2, #39046
	eors	r0, r2
	orrs	r0, r1
.Ltmp872:
	.loc	11 156 23
	bne	.LBB101_8
	.loc	11 157 13
	movw	r0, :lower16:<&T as core::fmt::Display>::fmt::h7e376a968b0efe1d
	.loc	11 156 28
	str	r6, [sp, #4]
	.loc	11 157 13
	movt	r0, :upper16:<&T as core::fmt::Display>::fmt::h7e376a968b0efe1d
.LBB101_7:
	.loc	11 0 0 is_stmt 0
	str	r0, [sp, #12]
	add	r0, sp, #4
	str	r0, [sp, #8]
	add	r0, sp, #8
	str	r0, [sp, #48]
	movs	r0, #0
	str	r0, [sp, #44]
	add	r2, sp, #32
	str	r0, [sp, #40]
	movs	r0, #2
	str	r0, [sp, #36]
	movw	r0, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.173
	movt	r0, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.173
	movs	r6, #1
	str	r0, [sp, #32]
	mov	r0, r4
	mov	r1, r5
	str	r6, [sp, #52]
	bl	core::fmt::write::h5d3fbef16e428eed
	cmp	r0, #0
	bne	.LBB101_2
.LBB101_8:
	.loc	11 164 9 is_stmt 1
	ldr.w	r0, [r8, #12]
.Ltmp873:
	.file	47 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/panic/location.rs"
	.loc	47 191 9
	movw	r1, :lower16:core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::h9d0ff72e374f98e7
	movt	r1, :upper16:core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::h9d0ff72e374f98e7
	add.w	r2, r0, #12
	str	r1, [sp, #28]
	strd	r1, r2, [sp, #20]
	add.w	r1, r0, #8
	str	r1, [sp, #16]
	movw	r1, :lower16:<&T as core::fmt::Display>::fmt::h316400868ab25d65
	movt	r1, :upper16:<&T as core::fmt::Display>::fmt::h316400868ab25d65
	add	r2, sp, #32
	strd	r0, r1, [sp, #8]
	add	r1, sp, #8
	movs	r0, #3
.Ltmp874:
	.loc	3 1644 25
	str	r1, [sp, #48]
	movs	r1, #0
	str	r0, [sp, #52]
	strd	r0, r1, [sp, #36]
	movw	r0, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.168
	movt	r0, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.168
	str	r1, [sp, #44]
	str	r0, [sp, #32]
	.loc	3 1644 9 is_stmt 0
	mov	r0, r4
	mov	r1, r5
	bl	core::fmt::write::h5d3fbef16e428eed
	mov	r6, r0
.Ltmp875:
	.loc	11 165 6 is_stmt 1
	mov	r0, r6
	add	sp, #56
	ldr	r8, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.Ltmp876:
.Lfunc_end101:
	.size	<core::panic::panic_info::PanicInfo as core::fmt::Display>::fmt::h4ec511762c61d457, .Lfunc_end101-<core::panic::panic_info::PanicInfo as core::fmt::Display>::fmt::h4ec511762c61d457
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17he55616ac5c69a229E","ax",%progbits
	.p2align	1
	.type	<&T as core::fmt::Display>::fmt::he55616ac5c69a229,%function
	.code	16
	.thumb_func
<&T as core::fmt::Display>::fmt::he55616ac5c69a229:
.Lfunc_begin102:
	.loc	3 2128 0
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r11}
	push.w	{r8, r9, r11}
	.cfi_offset r11, -24
	.cfi_offset r9, -28
	.cfi_offset r8, -32
	.pad	#24
	sub	sp, #24
.Ltmp877:
	.loc	3 2128 71 prologue_end
	ldr.w	lr, [r0]
	mov	r2, sp
.Ltmp878:
	.loc	3 523 15
	ldrd	r12, r1, [r1, #24]
	.loc	3 523 24 is_stmt 0
	mov	r3, r2
	ldm.w	lr, {r0, r4, r5, r6, r8, r9}
	stm.w	r3, {r0, r4, r5, r6, r8, r9}
	.loc	3 523 9
	mov	r0, r12
	bl	core::fmt::write::h5d3fbef16e428eed
.Ltmp879:
	.loc	3 2128 84 is_stmt 1
	add	sp, #24
	pop.w	{r8, r9, r11}
	pop	{r4, r5, r6, r7, pc}
.Ltmp880:
.Lfunc_end102:
	.size	<&T as core::fmt::Display>::fmt::he55616ac5c69a229, .Lfunc_end102-<&T as core::fmt::Display>::fmt::he55616ac5c69a229
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h7e376a968b0efe1dE","ax",%progbits
	.p2align	1
	.type	<&T as core::fmt::Display>::fmt::h7e376a968b0efe1d,%function
	.code	16
	.thumb_func
<&T as core::fmt::Display>::fmt::h7e376a968b0efe1d:
.Lfunc_begin103:
	.loc	3 2128 0
	.fnstart
	.cfi_startproc
	.loc	3 2128 71 prologue_end
	ldr	r0, [r0]
	mov	r3, r1
.Ltmp881:
	.loc	3 2128 71 is_stmt 0
	ldrd	r1, r2, [r0]
.Ltmp882:
	.loc	3 2197 9 is_stmt 1
	mov	r0, r3
	b	core::fmt::Formatter::pad::h936b549e1667e5be
.Ltmp883:
.Lfunc_end103:
	.size	<&T as core::fmt::Display>::fmt::h7e376a968b0efe1d, .Lfunc_end103-<&T as core::fmt::Display>::fmt::h7e376a968b0efe1d
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text.unlikely._ZN4core6result13unwrap_failed17he67be68ddf63c991E,"ax",%progbits
	.p2align	1
	.type	core::result::unwrap_failed::he67be68ddf63c991,%function
	.code	16
	.thumb_func
core::result::unwrap_failed::he67be68ddf63c991:
.Lfunc_begin104:
	.loc	19 1748 0
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	.pad	#56
	sub	sp, #56
	stm.w	sp, {r0, r1, r2, r3}
	add	r1, sp, #40
	movs	r0, #2
.Ltmp884:
	.loc	3 387 9 prologue_end
	str	r1, [sp, #32]
	movs	r1, #0
	str	r0, [sp, #36]
	strd	r0, r1, [sp, #20]
	movw	r0, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.195
	movt	r0, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.195
	ldr.w	r12, [r7, #8]
	str	r0, [sp, #16]
.Ltmp885:
	.loc	19 1749 5
	movw	r0, :lower16:<&T as core::fmt::Debug>::fmt::hefd9236e08ca60f0
	movt	r0, :upper16:<&T as core::fmt::Debug>::fmt::hefd9236e08ca60f0
.Ltmp886:
	.loc	3 387 9
	str	r1, [sp, #28]
.Ltmp887:
	.loc	19 1749 5
	str	r0, [sp, #52]
	add	r0, sp, #8
	str	r0, [sp, #48]
	movw	r0, :lower16:<&T as core::fmt::Display>::fmt::h316400868ab25d65
	movt	r0, :upper16:<&T as core::fmt::Display>::fmt::h316400868ab25d65
	mov	r1, r12
	str	r0, [sp, #44]
	mov	r0, sp
	str	r0, [sp, #40]
	add	r0, sp, #16
	bl	core::panicking::panic_fmt::h679f68291595c801
	.inst.n	0xdefe
.Ltmp888:
.Lfunc_end104:
	.size	core::result::unwrap_failed::he67be68ddf63c991, .Lfunc_end104-core::result::unwrap_failed::he67be68ddf63c991
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h55ae475bea881fc0E","ax",%progbits
	.p2align	1
	.type	<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h55ae475bea881fc0,%function
	.code	16
	.thumb_func
<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h55ae475bea881fc0:
.Lfunc_begin105:
	.loc	44 31 0
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#12
	sub	sp, #12
	mov.w	r10, #0
.Ltmp889:
	.loc	44 32 15 prologue_end
	cmp	r2, #0
	beq.w	.LBB105_74
	.loc	44 0 15 is_stmt 0
	ldr.w	r9, [r0, #8]
	mov	r11, r1
	ldr	r1, [r0]
	mov	r8, r2
	str	r1, [sp, #8]
	ldr	r1, [r0, #4]
	str	r1, [sp, #4]
	b	.LBB105_4
.LBB105_2:
.Ltmp890:
	.loc	39 214 19 is_stmt 1
	ldrsb.w	r0, [r11, r4]
.Ltmp891:
	.loc	40 324 12
	cmn.w	r0, #65
	ble.w	.LBB105_78
.LBB105_3:
.Ltmp892:
	.loc	31 295 18
	add	r11, r4
.Ltmp893:
	.loc	40 348 19
	subs.w	r8, r8, r4
.Ltmp894:
	.loc	44 32 15
	beq.w	.LBB105_75
.LBB105_4:
	.loc	44 33 16
	ldrb.w	r0, [r9]
	cbz	r0, .LBB105_6
	.loc	44 34 17
	ldr	r0, [sp, #4]
	movw	r1, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.197
	movt	r1, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.197
	movs	r2, #4
	ldr	r3, [r0, #12]
	ldr	r0, [sp, #8]
	blx	r3
	cmp	r0, #0
	bne.w	.LBB105_76
.LBB105_6:
	.loc	44 0 17 is_stmt 0
	movs	r3, #0
	mov	r1, r8
	b	.LBB105_8
.LBB105_7:
.Ltmp895:
	subs.w	r1, r8, r3
	it	lo
	movlo	r1, r10
.Ltmp896:
	.file	48 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/str/pattern.rs"
	.loc	48 413 25 is_stmt 1
	cmp	r3, r8
	bhi.w	.LBB105_65
.LBB105_8:
.Ltmp897:
	.loc	25 205 12
	add.w	r2, r11, r3
.Ltmp898:
	.file	49 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/slice/memchr.rs"
	.loc	49 44 8
	cmp	r1, #8
	bhs	.LBB105_12
.Ltmp899:
	.loc	13 146 24
	cmp	r1, #0
	beq.w	.LBB105_65
.Ltmp900:
	.loc	13 295 24
	ldrb	r0, [r2]
	cmp	r0, #10
	bne	.LBB105_23
.Ltmp901:
	.loc	13 0 24 is_stmt 0
	movs	r4, #0
	.loc	48 435 32 is_stmt 1
	adds	r0, r4, r3
	.loc	48 435 17 is_stmt 0
	adds	r3, r0, #1
	blo.w	.LBB105_60
	b	.LBB105_7
.LBB105_12:
.Ltmp902:
	.loc	2 1215 13 is_stmt 1
	adds	r0, r2, #3
	bic	r0, r0, #3
	.loc	2 1214 16
	subs	r0, r0, r2
.Ltmp903:
	.loc	49 64 8
	beq	.LBB105_26
.Ltmp904:
	.loc	18 0 0 is_stmt 0
	cmp	r0, r1
	it	hi
	movhi	r0, r1
.Ltmp905:
	.loc	31 295 18 is_stmt 1
	add.w	r12, r2, r0
	movs	r4, #0
.Ltmp906:
.LBB105_14:
	.loc	13 295 24 is_stmt 0
	ldrb	r5, [r2, r4]
	cmp	r5, #10
	beq.w	.LBB105_59
.Ltmp907:
	.loc	13 0 0
	adds	r5, r2, r4
	.loc	13 146 24 is_stmt 1
	adds	r5, #1
	cmp	r5, r12
	beq	.LBB105_22
.Ltmp908:
	.loc	13 295 24
	ldrb	r6, [r5]
	cmp	r6, #10
	beq	.LBB105_48
.Ltmp909:
	.loc	13 146 24
	adds	r5, #1
	cmp	r5, r12
	beq	.LBB105_22
.Ltmp910:
	.loc	13 295 24
	ldrb	r6, [r5]
	cmp	r6, #10
	beq	.LBB105_50
.Ltmp911:
	.loc	13 146 24
	adds	r5, #1
	cmp	r5, r12
	beq	.LBB105_22
.Ltmp912:
	.loc	13 295 24
	ldrb	r6, [r5]
	cmp	r6, #10
	beq.w	.LBB105_52
.Ltmp913:
	.loc	13 146 24
	adds	r6, r5, #1
.Ltmp914:
	.loc	13 301 21
	adds	r4, #4
.Ltmp915:
	.loc	13 146 24
	cmp	r6, r12
	bne	.LBB105_14
.Ltmp916:
.LBB105_22:
	.loc	13 0 24 is_stmt 0
	sub.w	r12, r1, #8
	.loc	49 73 11 is_stmt 1
	cmp	r0, r12
	bls	.LBB105_27
	b	.LBB105_30
.Ltmp917:
.LBB105_23:
	.loc	13 146 24
	cmp	r1, #1
	beq.w	.LBB105_65
.Ltmp918:
	.loc	13 295 24
	ldrb	r0, [r2, #1]
	cmp	r0, #10
	bne	.LBB105_40
.Ltmp919:
	.loc	13 0 24 is_stmt 0
	movs	r4, #1
	.loc	48 435 32 is_stmt 1
	adds	r0, r4, r3
	.loc	48 435 17 is_stmt 0
	adds	r3, r0, #1
	blo.w	.LBB105_60
	b	.LBB105_7
.LBB105_26:
	.loc	48 0 17
	sub.w	r12, r1, #8
	movs	r0, #0
.LBB105_27:
.Ltmp920:
	.loc	49 77 21 is_stmt 1
	ldr	r5, [r2, r0]
	adds	r4, r2, r0
	.loc	49 78 21
	ldr	r4, [r4, #4]
	.loc	49 81 41
	eor	r6, r5, #168430090
.Ltmp921:
	.loc	20 1226 13
	sub.w	r6, r6, #16843009
.Ltmp922:
	.loc	49 24 5
	bics	r6, r5
.Ltmp923:
	.loc	49 82 41
	eor	r5, r4, #168430090
.Ltmp924:
	.loc	20 1226 13
	sub.w	r5, r5, #16843009
.Ltmp925:
	.loc	49 24 5
	bics	r5, r4
.Ltmp926:
	.loc	49 24 5 is_stmt 0
	orrs	r6, r5
.Ltmp927:
	.loc	49 83 16 is_stmt 1
	tst.w	r6, #-2139062144
	bne	.LBB105_29
	.loc	49 87 9
	adds	r0, #8
	.loc	49 73 11
	cmp	r0, r12
	bls	.LBB105_27
.LBB105_29:
.Ltmp928:
	.loc	25 328 12
	cmp	r0, r1
	bhi.w	.LBB105_77
.Ltmp929:
.LBB105_30:
	.loc	13 146 24
	cmp	r0, r1
	beq	.LBB105_65
.Ltmp930:
	.loc	49 0 0 is_stmt 0
	add	r2, r1
.Ltmp931:
	.loc	13 295 24 is_stmt 1
	adds	r1, r0, r3
	add.w	r6, r11, r1
	movs	r1, #0
.LBB105_32:
	ldrb	r5, [r6, r1]
	cmp	r5, #10
	beq	.LBB105_47
.Ltmp932:
	.loc	13 0 0 is_stmt 0
	adds	r5, r6, r1
	.loc	13 146 24 is_stmt 1
	adds	r5, #1
	cmp	r5, r2
	beq	.LBB105_65
.Ltmp933:
	.loc	13 295 24
	ldrb	r4, [r5]
	cmp	r4, #10
	beq	.LBB105_46
.Ltmp934:
	.loc	13 146 24
	adds	r5, #1
	cmp	r5, r2
	beq	.LBB105_65
.Ltmp935:
	.loc	13 295 24
	ldrb	r4, [r5]
	cmp	r4, #10
	beq	.LBB105_49
.Ltmp936:
	.loc	13 146 24
	adds	r5, #1
	cmp	r5, r2
	beq	.LBB105_65
.Ltmp937:
	.loc	13 295 24
	ldrb	r4, [r5]
	cmp	r4, #10
	beq	.LBB105_51
.Ltmp938:
	.loc	13 146 24
	adds	r5, #1
.Ltmp939:
	.loc	13 301 21
	adds	r1, #4
.Ltmp940:
	.loc	13 146 24
	cmp	r5, r2
	bne	.LBB105_32
	b	.LBB105_65
.Ltmp941:
.LBB105_40:
	.loc	13 146 24 is_stmt 0
	cmp	r1, #2
	beq	.LBB105_65
.Ltmp942:
	.loc	13 295 24 is_stmt 1
	ldrb	r0, [r2, #2]
	cmp	r0, #10
	bne	.LBB105_43
.Ltmp943:
	.loc	13 0 24 is_stmt 0
	movs	r4, #2
	.loc	48 435 32 is_stmt 1
	adds	r0, r4, r3
	.loc	48 435 17 is_stmt 0
	adds	r3, r0, #1
	blo	.LBB105_60
	b	.LBB105_7
.LBB105_43:
.Ltmp944:
	.loc	13 146 24 is_stmt 1
	cmp	r1, #3
	beq	.LBB105_65
.Ltmp945:
	.loc	13 295 24
	ldrb	r0, [r2, #3]
	cmp	r0, #10
	bne	.LBB105_53
.Ltmp946:
	.loc	13 0 24 is_stmt 0
	movs	r4, #3
	.loc	48 435 32 is_stmt 1
	adds	r0, r4, r3
	.loc	48 435 17 is_stmt 0
	adds	r3, r0, #1
	blo	.LBB105_60
	b	.LBB105_7
.LBB105_46:
.Ltmp947:
	.loc	13 298 41 is_stmt 1
	adds	r1, #1
.Ltmp948:
.LBB105_47:
	.loc	13 0 41 is_stmt 0
	adds	r4, r1, r0
	.loc	48 435 32 is_stmt 1
	adds	r0, r4, r3
	.loc	48 435 17 is_stmt 0
	adds	r3, r0, #1
	blo	.LBB105_60
	b	.LBB105_7
.LBB105_48:
.Ltmp949:
	.loc	13 298 41 is_stmt 1
	adds	r4, #1
.Ltmp950:
	.loc	48 435 32
	adds	r0, r4, r3
	.loc	48 435 17 is_stmt 0
	adds	r3, r0, #1
	blo	.LBB105_60
	b	.LBB105_7
.LBB105_49:
.Ltmp951:
	.loc	13 298 41 is_stmt 1
	adds	r1, #2
	adds	r4, r1, r0
.Ltmp952:
	.loc	48 435 32
	adds	r0, r4, r3
	.loc	48 435 17 is_stmt 0
	adds	r3, r0, #1
	blo	.LBB105_60
	b	.LBB105_7
.LBB105_50:
.Ltmp953:
	.loc	13 298 41 is_stmt 1
	adds	r4, #2
.Ltmp954:
	.loc	48 435 32
	adds	r0, r4, r3
	.loc	48 435 17 is_stmt 0
	adds	r3, r0, #1
	blo	.LBB105_60
	b	.LBB105_7
.LBB105_51:
.Ltmp955:
	.loc	13 298 41 is_stmt 1
	adds	r1, #3
	adds	r4, r1, r0
.Ltmp956:
	.loc	48 435 32
	adds	r0, r4, r3
	.loc	48 435 17 is_stmt 0
	adds	r3, r0, #1
	blo	.LBB105_60
	b	.LBB105_7
.LBB105_52:
.Ltmp957:
	.loc	13 298 41 is_stmt 1
	adds	r4, #3
.Ltmp958:
	.loc	48 435 32
	adds	r0, r4, r3
	.loc	48 435 17 is_stmt 0
	adds	r3, r0, #1
	blo	.LBB105_60
	b	.LBB105_7
.LBB105_53:
.Ltmp959:
	.loc	13 146 24 is_stmt 1
	cmp	r1, #4
	beq	.LBB105_65
.Ltmp960:
	.loc	13 295 24
	ldrb	r0, [r2, #4]
	cmp	r0, #10
	bne	.LBB105_56
.Ltmp961:
	.loc	13 0 24 is_stmt 0
	movs	r4, #4
	.loc	48 435 32 is_stmt 1
	adds	r0, r4, r3
	.loc	48 435 17 is_stmt 0
	adds	r3, r0, #1
	blo	.LBB105_60
	b	.LBB105_7
.LBB105_56:
.Ltmp962:
	.loc	13 146 24 is_stmt 1
	cmp	r1, #5
	beq	.LBB105_65
.Ltmp963:
	.loc	13 295 24
	ldrb	r0, [r2, #5]
	cmp	r0, #10
	bne	.LBB105_62
.Ltmp964:
	.loc	13 0 24 is_stmt 0
	movs	r4, #5
.LBB105_59:
	.loc	48 435 32 is_stmt 1
	adds	r0, r4, r3
	.loc	48 435 17 is_stmt 0
	adds	r3, r0, #1
	.loc	48 436 20 is_stmt 1
	bhs.w	.LBB105_7
.LBB105_60:
	cmp	r3, r8
	bhi.w	.LBB105_7
.Ltmp965:
	.file	50 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/slice/cmp.rs"
	.loc	50 91 13
	ldrb.w	r0, [r11, r0]
.Ltmp966:
	.loc	48 439 28
	cmp	r0, #10
	bne.w	.LBB105_7
	b	.LBB105_70
.LBB105_62:
.Ltmp967:
	.loc	13 146 24
	cmp	r1, #6
	beq	.LBB105_65
.Ltmp968:
	.loc	13 295 24
	ldrb	r0, [r2, #6]
	cmp	r0, #10
	bne	.LBB105_65
.Ltmp969:
	.loc	13 0 24 is_stmt 0
	movs	r4, #6
	.loc	48 435 32 is_stmt 1
	adds	r0, r4, r3
	.loc	48 435 17 is_stmt 0
	adds	r3, r0, #1
	blo	.LBB105_60
	b	.LBB105_7
.Ltmp970:
.LBB105_65:
	.loc	44 43 21 is_stmt 1
	strb.w	r10, [r9]
	mov	r3, r8
.LBB105_66:
.Ltmp971:
	.loc	40 254 12
	cmp	r8, r3
	mov	r4, r8
	bne	.LBB105_72
.Ltmp972:
.LBB105_67:
	.loc	44 47 13
	ldr	r0, [sp, #4]
	mov	r1, r11
	mov	r2, r4
	ldr	r3, [r0, #12]
	ldr	r0, [sp, #8]
	blx	r3
	cbnz	r0, .LBB105_73
.Ltmp973:
	.loc	39 202 9
	cmp	r8, r4
	bhi.w	.LBB105_2
.Ltmp974:
	.loc	39 0 9 is_stmt 0
	beq.w	.LBB105_3
	b	.LBB105_78
.LBB105_70:
	.loc	44 39 21 is_stmt 1
	movs	r0, #1
.Ltmp975:
	.loc	39 202 9
	cmp	r3, r8
.Ltmp976:
	.loc	44 39 21
	strb.w	r0, [r9]
.Ltmp977:
	.loc	39 202 9
	bhs	.LBB105_66
	.loc	39 214 19
	ldrsb.w	r0, [r11, r3]
	mov	r4, r3
.Ltmp978:
	.loc	40 254 12
	cmn.w	r0, #65
	bgt	.LBB105_67
.Ltmp979:
.LBB105_72:
	.loc	40 289 21
	movw	r0, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.199
	mov	r1, r8
	movt	r0, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.199
	movs	r2, #0
	str	r0, [sp]
	mov	r0, r11
	bl	core::str::slice_error_fail::h9b5dc962ae2d13f9
	.inst.n	0xdefe
.Ltmp980:
.LBB105_73:
	.loc	40 0 21 is_stmt 0
	mov.w	r10, #1
.LBB105_74:
	.loc	44 52 6 is_stmt 1
	mov	r0, r10
	add	sp, #12
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB105_75:
	.loc	44 0 6 is_stmt 0
	mov.w	r10, #0
	.loc	44 52 6
	mov	r0, r10
	add	sp, #12
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB105_76:
	.loc	44 0 6
	mov.w	r10, #1
	.loc	44 52 6
	mov	r0, r10
	add	sp, #12
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB105_77:
.Ltmp981:
	.loc	25 329 13 is_stmt 1
	movw	r2, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.252
	movt	r2, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.252
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.Ltmp982:
.LBB105_78:
	.loc	40 364 21
	movw	r0, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.200
	mov	r1, r8
	movt	r0, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.200
	mov	r2, r4
	str	r0, [sp]
	mov	r0, r11
	mov	r3, r8
	bl	core::str::slice_error_fail::h9b5dc962ae2d13f9
	.inst.n	0xdefe
.Ltmp983:
.Lfunc_end105:
	.size	<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h55ae475bea881fc0, .Lfunc_end105-<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h55ae475bea881fc0
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text.unlikely._ZN4core3str16slice_error_fail17h9b5dc962ae2d13f9E,"ax",%progbits
	.p2align	1
	.type	core::str::slice_error_fail::h9b5dc962ae2d13f9,%function
	.code	16
	.thumb_func
core::str::slice_error_fail::h9b5dc962ae2d13f9:
.Lfunc_begin106:
	.loc	39 82 0
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	.pad	#112
	sub	sp, #112
.Ltmp984:
	.loc	39 241 12 prologue_end
	cmp.w	r1, #256
	strd	r2, r3, [sp, #8]
	bls	.LBB106_3
.Ltmp985:
	.loc	13 318 24
	ldrsb.w	r5, [r0, #256]
	cmn.w	r5, #65
	ble	.LBB106_4
.Ltmp986:
	.loc	13 0 24 is_stmt 0
	mov.w	r5, #256
	b	.LBB106_7
.LBB106_3:
	movw	r4, :lower16:CORE_PERIPHERALS
	.loc	39 85 19 is_stmt 1
	strd	r0, r1, [sp, #16]
	movs	r5, #0
	movt	r4, :upper16:CORE_PERIPHERALS
	b	.LBB106_8
.LBB106_4:
.Ltmp987:
	.loc	13 318 24
	ldrsb.w	r5, [r0, #255]
	cmn.w	r5, #65
	ble	.LBB106_6
	.loc	13 0 24 is_stmt 0
	movs	r5, #255
	b	.LBB106_7
.LBB106_6:
	.loc	13 318 24
	ldrsb.w	r5, [r0, #254]
	cmn.w	r5, #65
	ite	le
	movle	r5, #253
	movgt	r5, #254
.Ltmp988:
.LBB106_7:
	.loc	13 0 24
	movw	r4, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.321
	.loc	39 85 19 is_stmt 1
	strd	r0, r5, [sp, #16]
	movs	r5, #5
	movt	r4, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.321
.LBB106_8:
	.loc	39 0 19 is_stmt 0
	ldr.w	r12, [r7, #8]
	.loc	39 89 8 is_stmt 1
	cmp	r2, r1
	.loc	39 86 45
	strd	r4, r5, [sp, #24]
	.loc	39 89 8
	it	ls
	cmpls	r3, r1
	bls	.LBB106_10
	.loc	39 0 0 is_stmt 0
	cmp	r2, r1
	add	r1, sp, #72
	it	hi
	movhi	r3, r2
	movs	r0, #3
.Ltmp989:
	.loc	3 387 9 is_stmt 1
	str	r1, [sp, #64]
	movs	r1, #0
	str	r0, [sp, #68]
	strd	r0, r1, [sp, #52]
	movw	r0, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.324
	movt	r0, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.324
	str	r1, [sp, #60]
	str	r0, [sp, #48]
.Ltmp990:
	.loc	39 91 9
	movw	r0, :lower16:<&T as core::fmt::Display>::fmt::h316400868ab25d65
	add	r1, sp, #24
	movt	r0, :upper16:<&T as core::fmt::Display>::fmt::h316400868ab25d65
	str	r0, [sp, #92]
	strd	r0, r1, [sp, #84]
	add	r0, sp, #16
	str	r0, [sp, #80]
	movw	r0, :lower16:core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::h9d0ff72e374f98e7
	movt	r0, :upper16:core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::h9d0ff72e374f98e7
	.loc	39 0 0 is_stmt 0
	str	r3, [sp, #40]
	.loc	39 91 9
	str	r0, [sp, #76]
	add	r0, sp, #40
	b	.LBB106_54
.LBB106_10:
	.loc	39 95 5 is_stmt 1
	cmp	r2, r3
	bls	.LBB106_12
	.loc	39 0 5 is_stmt 0
	add	r1, sp, #72
	movs	r0, #4
.Ltmp991:
	.loc	3 387 9 is_stmt 1
	str	r1, [sp, #64]
	movs	r1, #0
	str	r0, [sp, #68]
	strd	r0, r1, [sp, #52]
	movw	r0, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.328
	movt	r0, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.328
	str	r1, [sp, #60]
	str	r0, [sp, #48]
.Ltmp992:
	.loc	39 95 5
	movw	r0, :lower16:<&T as core::fmt::Display>::fmt::h316400868ab25d65
	add	r1, sp, #24
	movt	r0, :upper16:<&T as core::fmt::Display>::fmt::h316400868ab25d65
	str	r0, [sp, #100]
	strd	r0, r1, [sp, #92]
	add	r0, sp, #16
	str	r0, [sp, #88]
	movw	r0, :lower16:core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::h9d0ff72e374f98e7
	add	r1, sp, #12
	movt	r0, :upper16:core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::h9d0ff72e374f98e7
	str	r0, [sp, #84]
	strd	r0, r1, [sp, #76]
	add	r0, sp, #8
	b	.LBB106_54
.LBB106_12:
	.loc	39 0 5 is_stmt 0
	cbz	r2, .LBB106_15
.Ltmp993:
	.loc	39 202 9 is_stmt 1
	cmp	r2, r1
	bhs	.LBB106_18
	.loc	39 214 19
	ldrsb	r5, [r0, r2]
.Ltmp994:
	.loc	39 105 17
	cmn.w	r5, #64
	blt	.LBB106_16
.LBB106_15:
	.loc	39 0 17 is_stmt 0
	mov	r2, r3
.LBB106_16:
.Ltmp995:
	.loc	39 241 12 is_stmt 1
	cmp	r2, r1
	mov	r3, r1
.Ltmp996:
	.loc	39 0 0 is_stmt 0
	str	r2, [sp, #32]
.Ltmp997:
	.loc	39 241 12
	blo	.LBB106_19
.Ltmp998:
.LBB106_17:
	.loc	39 198 12 is_stmt 1
	cmp	r3, #0
	bne	.LBB106_35
	b	.LBB106_39
.Ltmp999:
.LBB106_18:
	.loc	39 105 17
	cmp	r1, r2
	it	eq
	moveq	r2, r3
.Ltmp1000:
	.loc	39 241 12
	cmp	r2, r1
	mov	r3, r1
.Ltmp1001:
	.loc	39 0 0 is_stmt 0
	str	r2, [sp, #32]
.Ltmp1002:
	.loc	39 241 12
	bhs	.LBB106_17
.LBB106_19:
.Ltmp1003:
	.loc	20 1092 13 is_stmt 1
	subs.w	lr, r2, #3
.Ltmp1004:
	.file	51 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/ops/range.rs"
	.loc	51 453 29
	add.w	r3, r2, #1
.Ltmp1005:
	.loc	20 1092 13
	it	lo
	movlo.w	lr, #0
.Ltmp1006:
	.loc	25 242 12
	cmp	r3, lr
	bhs	.LBB106_21
	.loc	25 243 13
	movw	r2, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.334
	mov	r0, lr
	movt	r2, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.334
	mov	r1, r3
	bl	core::slice::index::slice_index_order_fail::h8a53f055fb6ee074
	.inst.n	0xdefe
.Ltmp1007:
.LBB106_21:
	.loc	13 361 24
	cmp	lr, r3
	beq	.LBB106_34
.Ltmp1008:
	.loc	13 318 24
	ldrsb	r5, [r0, r2]
.Ltmp1009:
	.loc	39 0 0 is_stmt 0
	add.w	r4, r0, lr
	add	r3, r0
.Ltmp1010:
	subs	r3, r3, r4
	.loc	13 318 24
	cmn.w	r5, #65
	ble	.LBB106_24
	.loc	13 0 24
	subs	r5, r3, #1
	b	.LBB106_34
.LBB106_24:
.Ltmp1011:
	.loc	13 361 24 is_stmt 1
	cmp	lr, r2
	beq	.LBB106_34
.Ltmp1012:
	.loc	13 0 24 is_stmt 0
	add	r2, r0
	.loc	13 318 24 is_stmt 1
	mov	r5, r2
	ldrsb	r6, [r5, #-1]!
	cmn.w	r6, #65
	ble	.LBB106_27
	.loc	13 0 24 is_stmt 0
	subs	r5, r3, #2
	b	.LBB106_34
.LBB106_27:
.Ltmp1013:
	.loc	13 361 24 is_stmt 1
	cmp	r4, r5
	beq	.LBB106_34
.Ltmp1014:
	.loc	13 318 24
	mov	r5, r2
	ldrsb	r6, [r5, #-2]!
	cmn.w	r6, #65
	ble	.LBB106_30
	.loc	13 0 24 is_stmt 0
	subs	r5, r3, #3
	b	.LBB106_34
.LBB106_30:
.Ltmp1015:
	.loc	13 361 24 is_stmt 1
	cmp	r4, r5
	beq	.LBB106_34
.Ltmp1016:
	.loc	13 318 24
	ldrsb	r5, [r2, #-3]!
	cmn.w	r5, #65
	ble	.LBB106_33
	.loc	13 0 24 is_stmt 0
	subs	r5, r3, #4
	b	.LBB106_34
.LBB106_33:
.Ltmp1017:
	.loc	13 361 24 is_stmt 1
	cmp	r4, r2
.Ltmp1018:
	.loc	13 317 21
	it	ne
	subne	r5, r3, #5
.Ltmp1019:
.LBB106_34:
	.loc	39 250 22
	add.w	r3, r5, lr
.Ltmp1020:
	.loc	39 198 12
	cbz	r3, .LBB106_39
.LBB106_35:
	.loc	39 202 9
	cmp	r3, r1
	bhs	.LBB106_38
	.loc	39 214 19
	ldrsb	r2, [r0, r3]
.Ltmp1021:
	.loc	40 324 12
	cmn.w	r2, #65
	bgt	.LBB106_39
.Ltmp1022:
.LBB106_37:
	.loc	40 364 21
	mov	r2, r3
	mov	r3, r1
	str.w	r12, [sp]
	bl	core::str::slice_error_fail::h9b5dc962ae2d13f9
	.inst.n	0xdefe
.Ltmp1023:
.LBB106_38:
	.loc	40 0 21 is_stmt 0
	bne	.LBB106_37
.LBB106_39:
.Ltmp1024:
	.loc	13 146 24 is_stmt 1
	cmp	r3, r1
	bne	.LBB106_41
.Ltmp1025:
.LBB106_40:
	.loc	29 752 21
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movs	r1, #43
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	mov	r2, r12
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.Ltmp1026:
.LBB106_41:
	.loc	39 0 0 is_stmt 0
	add	r0, r3
.Ltmp1027:
	.loc	15 38 13 is_stmt 1
	ldrsb.w	r1, [r0]
	.loc	15 39 8
	cmp.w	r1, #-1
	.loc	15 40 21
	uxtb	r2, r1
	.loc	15 39 8
	ble	.LBB106_43
.Ltmp1028:
	.loc	39 109 14
	str	r2, [sp, #36]
	movs	r1, #1
	b	.LBB106_53
.LBB106_43:
.Ltmp1029:
	.loc	15 49 22
	ldrb	r6, [r0, #1]
.Ltmp1030:
	.loc	15 12 5
	and	r1, r2, #31
.Ltmp1031:
	.loc	15 51 8
	cmp	r2, #223
.Ltmp1032:
	.loc	15 18 17
	and	r5, r6, #63
.Ltmp1033:
	.loc	15 51 8
	bls	.LBB106_46
	.loc	15 56 26
	ldrb	r6, [r0, #2]
	.loc	15 59 12
	cmp	r2, #240
.Ltmp1034:
	.loc	15 18 17
	and	r6, r6, #63
	.loc	15 18 5 is_stmt 0
	orr.w	r5, r6, r5, lsl #6
.Ltmp1035:
	.loc	15 59 12 is_stmt 1
	blo	.LBB106_47
	.loc	15 64 30
	ldrb	r0, [r0, #3]
	.loc	15 65 18
	and	r1, r1, #7
.Ltmp1036:
	.loc	15 18 17
	and	r0, r0, #63
	.loc	15 18 5 is_stmt 0
	orr.w	r0, r0, r5, lsl #6
.Ltmp1037:
	.loc	15 65 13 is_stmt 1
	orr.w	r0, r0, r1, lsl #18
.Ltmp1038:
	.loc	29 750 9
	cmp.w	r0, #1114112
	beq	.LBB106_40
	b	.LBB106_48
.Ltmp1039:
.LBB106_46:
	.loc	29 0 9 is_stmt 0
	orr.w	r0, r5, r1, lsl #6
	b	.LBB106_48
.LBB106_47:
	orr.w	r0, r5, r1, lsl #12
.LBB106_48:
.Ltmp1040:
	.file	52 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/char/methods.rs"
	.loc	52 1635 8 is_stmt 1
	cmp	r0, #128
.Ltmp1041:
	.loc	39 109 14
	str	r0, [sp, #36]
.Ltmp1042:
	.loc	52 1635 8
	bhs	.LBB106_50
	.loc	52 0 8 is_stmt 0
	movs	r1, #1
	b	.LBB106_53
.LBB106_50:
	.loc	52 1637 15 is_stmt 1
	cmp.w	r0, #2048
	bhs	.LBB106_52
	.loc	52 0 15 is_stmt 0
	movs	r1, #2
	b	.LBB106_53
.LBB106_52:
	movs	r1, #4
	.loc	52 1639 12 is_stmt 1
	cmp.w	r0, #65536
	it	lo
	movlo	r1, #3
.Ltmp1043:
.LBB106_53:
	.loc	39 110 34
	adds	r0, r1, r3
	add	r1, sp, #72
.Ltmp1044:
	.loc	3 387 9
	str	r1, [sp, #64]
	movs	r1, #0
.Ltmp1045:
	.loc	39 110 22
	strd	r3, r0, [sp, #40]
	movs	r0, #5
.Ltmp1046:
	.loc	3 387 9
	str	r0, [sp, #68]
	strd	r0, r1, [sp, #52]
	movw	r0, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.332
	movt	r0, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.332
	str	r1, [sp, #60]
	str	r0, [sp, #48]
.Ltmp1047:
	.loc	39 111 5
	movw	r0, :lower16:<&T as core::fmt::Display>::fmt::h316400868ab25d65
	add	r1, sp, #24
	movt	r0, :upper16:<&T as core::fmt::Display>::fmt::h316400868ab25d65
	str	r0, [sp, #108]
	strd	r0, r1, [sp, #100]
	add	r0, sp, #16
	str	r0, [sp, #96]
	movw	r0, :lower16:<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::hee2a92be01ffaad6
	movt	r0, :upper16:<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::hee2a92be01ffaad6
	str	r0, [sp, #92]
	add	r0, sp, #40
	str	r0, [sp, #88]
	movw	r0, :lower16:<char as core::fmt::Debug>::fmt::h7ee1b5f70dc379a2
	movt	r0, :upper16:<char as core::fmt::Debug>::fmt::h7ee1b5f70dc379a2
	str	r0, [sp, #84]
	add	r0, sp, #36
	str	r0, [sp, #80]
	movw	r0, :lower16:core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::h9d0ff72e374f98e7
	movt	r0, :upper16:core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::h9d0ff72e374f98e7
	str	r0, [sp, #76]
	add	r0, sp, #32
.LBB106_54:
	.loc	39 0 0 is_stmt 0
	str	r0, [sp, #72]
	add	r0, sp, #48
	mov	r1, r12
	bl	core::panicking::panic_fmt::h679f68291595c801
	.inst.n	0xdefe
.Ltmp1048:
.Lfunc_end106:
	.size	core::str::slice_error_fail::h9b5dc962ae2d13f9, .Lfunc_end106-core::str::slice_error_fail::h9b5dc962ae2d13f9
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17h7ee1b5f70dc379a2E","ax",%progbits
	.p2align	2
	.type	<char as core::fmt::Debug>::fmt::h7ee1b5f70dc379a2,%function
	.code	16
	.thumb_func
<char as core::fmt::Debug>::fmt::h7ee1b5f70dc379a2:
.Lfunc_begin107:
	.loc	3 2203 0 is_stmt 1
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#12
	sub	sp, #12
	mov	r5, r0
.Ltmp1049:
	.loc	3 2106 9 prologue_end
	ldrd	r10, r0, [r1, #24]
	ldr	r2, [r0, #16]
	movs	r1, #39
	mov	r0, r10
	mov	r11, r2
	blx	r2
.Ltmp1050:
	.loc	3 2204 9
	cbz	r0, .LBB107_2
.LBB107_1:
	.loc	3 2213 6
	movs	r0, #1
	add	sp, #12
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB107_2:
	.loc	3 2205 18
	ldr.w	r8, [r5]
.Ltmp1051:
	.loc	52 423 26
	sub.w	r0, r8, #9
	cmp	r0, #30
	bhi	.LBB107_6
	.loc	52 0 26 is_stmt 0
	movs	r4, #116
	movs	r6, #2
	movs	r5, #0
.LCPI107_0:
	tbh	[pc, r0, lsl #1]
.LJTI107_0:
	.short	(.LBB107_42-(.LCPI107_0+4))/2
	.short	(.LBB107_5-(.LCPI107_0+4))/2
	.short	(.LBB107_9-(.LCPI107_0+4))/2
	.short	(.LBB107_9-(.LCPI107_0+4))/2
	.short	(.LBB107_20-(.LCPI107_0+4))/2
	.short	(.LBB107_9-(.LCPI107_0+4))/2
	.short	(.LBB107_9-(.LCPI107_0+4))/2
	.short	(.LBB107_9-(.LCPI107_0+4))/2
	.short	(.LBB107_9-(.LCPI107_0+4))/2
	.short	(.LBB107_9-(.LCPI107_0+4))/2
	.short	(.LBB107_9-(.LCPI107_0+4))/2
	.short	(.LBB107_9-(.LCPI107_0+4))/2
	.short	(.LBB107_9-(.LCPI107_0+4))/2
	.short	(.LBB107_9-(.LCPI107_0+4))/2
	.short	(.LBB107_9-(.LCPI107_0+4))/2
	.short	(.LBB107_9-(.LCPI107_0+4))/2
	.short	(.LBB107_9-(.LCPI107_0+4))/2
	.short	(.LBB107_9-(.LCPI107_0+4))/2
	.short	(.LBB107_9-(.LCPI107_0+4))/2
	.short	(.LBB107_9-(.LCPI107_0+4))/2
	.short	(.LBB107_9-(.LCPI107_0+4))/2
	.short	(.LBB107_9-(.LCPI107_0+4))/2
	.short	(.LBB107_9-(.LCPI107_0+4))/2
	.short	(.LBB107_9-(.LCPI107_0+4))/2
	.short	(.LBB107_9-(.LCPI107_0+4))/2
	.short	(.LBB107_9-(.LCPI107_0+4))/2
	.short	(.LBB107_9-(.LCPI107_0+4))/2
	.short	(.LBB107_9-(.LCPI107_0+4))/2
	.short	(.LBB107_9-(.LCPI107_0+4))/2
	.short	(.LBB107_9-(.LCPI107_0+4))/2
	.short	(.LBB107_7-(.LCPI107_0+4))/2
	.p2align	1
.LBB107_5:
	movs	r4, #110
	b	.LBB107_21
.LBB107_6:
	.loc	52 423 26
	cmp.w	r8, #92
	bne	.LBB107_9
.LBB107_7:
	.loc	52 0 26
	movs	r6, #2
.LBB107_8:
	movs	r5, #0
	b	.LBB107_41
.LBB107_9:
	movw	r2, :lower16:core::unicode::unicode_data::grapheme_extend::SHORT_OFFSET_RUNS::hd7959838885c27b1
.Ltmp1052:
	.file	53 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/unicode/unicode_data.rs"
	.loc	53 70 55 is_stmt 1
	lsl.w	r1, r8, #11
	movs	r0, #0
	movs	r6, #32
	movt	r2, :upper16:core::unicode::unicode_data::grapheme_extend::SHORT_OFFSET_RUNS::hd7959838885c27b1
	movs	r5, #32
	b	.LBB107_12
.LBB107_10:
.Ltmp1053:
	.loc	30 2365 17
	adds	r0, r3, #1
.LBB107_11:
	.loc	30 2374 13
	subs	r6, r5, r0
	.loc	30 2353 15
	bls	.LBB107_15
.LBB107_12:
	.loc	30 2354 23
	add.w	r3, r0, r6, lsr #1
	.loc	30 2359 23
	ldr.w	r6, [r2, r3, lsl #2]
	.loc	30 2364 16
	cmp.w	r1, r6, lsl #11
	bhi	.LBB107_10
	.loc	30 0 0 is_stmt 0
	lsls	r6, r6, #11
	.loc	30 2366 23 is_stmt 1
	cmp	r6, r1
	mov	r5, r3
	bne	.LBB107_11
.Ltmp1054:
	.loc	53 70 9
	adds	r0, r3, #1
.LBB107_15:
	.loc	53 75 40
	cmp	r0, #31
	bhi.w	.LBB107_59
	.loc	53 76 25
	cmp	r0, #31
	bne	.LBB107_22
	.loc	53 0 25 is_stmt 0
	movw	r3, #707
.Ltmp1055:
	.loc	20 1597 26 is_stmt 1
	cmp	r0, #1
.Ltmp1056:
	.loc	29 905 9
	blo	.LBB107_23
.Ltmp1057:
.LBB107_18:
	.loc	53 0 0 is_stmt 0
	subs	r1, r0, #1
.Ltmp1058:
	.loc	53 82 62 is_stmt 1
	cmp	r1, #32
	bhs.w	.LBB107_60
	.loc	53 0 62 is_stmt 0
	movw	r6, #65504
	.loc	53 82 62
	ldr.w	r1, [r2, r1, lsl #2]
	movt	r6, #31
.Ltmp1059:
	.loc	53 49 5 is_stmt 1
	adds	r6, #31
	ands	r6, r1
	b	.LBB107_24
.Ltmp1060:
.LBB107_20:
	.loc	53 0 5 is_stmt 0
	movs	r4, #114
.LBB107_21:
	movs	r6, #2
	movs	r5, #0
	b	.LBB107_42
.LBB107_22:
	add.w	r1, r2, r0, lsl #2
	.loc	53 77 23 is_stmt 1
	ldr	r1, [r1, #4]
.Ltmp1061:
	.loc	53 53 5
	lsrs	r3, r1, #21
.Ltmp1062:
	.loc	20 1597 26
	cmp	r0, #1
.Ltmp1063:
	.loc	29 905 9
	bhs	.LBB107_18
.Ltmp1064:
.LBB107_23:
	.loc	29 0 9 is_stmt 0
	movs	r6, #0
.LBB107_24:
	ldr.w	r0, [r2, r0, lsl #2]
	lsrs	r1, r0, #21
	.loc	53 86 17 is_stmt 1
	mvns	r0, r1
	adds	r0, r0, r3
.Ltmp1065:
	.loc	6 621 12
	beq	.LBB107_30
.Ltmp1066:
	.loc	6 0 12 is_stmt 0
	movw	r5, :lower16:core::unicode::unicode_data::grapheme_extend::OFFSETS::h1f88919e0ca598ac
	sub.w	r2, r8, r6
	.loc	53 87 22 is_stmt 1
	subs	r3, #1
	mov	r0, r1
	movs	r6, #0
	movt	r5, :upper16:core::unicode::unicode_data::grapheme_extend::OFFSETS::h1f88919e0ca598ac
	cmp.w	r1, #708
	it	lo
	movwlo	r0, #707
.LBB107_26:
	cmp	r0, r1
	beq.w	.LBB107_58
	ldrb	r4, [r5, r1]
	.loc	53 88 9
	add	r6, r4
	.loc	53 89 12
	cmp	r6, r2
	bhi	.LBB107_30
	.loc	53 92 9
	adds	r1, #1
.Ltmp1067:
	.loc	6 621 12
	cmp	r3, r1
	bne	.LBB107_26
.Ltmp1068:
	.loc	6 0 12 is_stmt 0
	mov	r1, r3
.LBB107_30:
	.loc	52 430 51 is_stmt 1
	lsls	r0, r1, #31
	bne	.LBB107_40
.Ltmp1069:
	.file	54 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/unicode/printable.rs"
	.loc	54 42 8
	cmp.w	r8, #65536
	bhs	.LBB107_33
	.loc	54 43 9
	movw	r1, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.361
	mov.w	r2, #288
	movt	r1, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.361
	movw	r3, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.360
	strd	r2, r1, [sp]
	movw	r1, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.359
	movw	r0, #303
	movt	r1, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.359
	str	r0, [sp, #8]
	movt	r3, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.360
	mov	r0, r8
	movs	r2, #40
	.loc	54 0 0 is_stmt 0
	bl	core::unicode::printable::check::hb18736e70daa0641
.Ltmp1070:
	.loc	52 433 18 is_stmt 1
	cmp	r0, #0
	beq	.LBB107_40
	b	.LBB107_57
.LBB107_33:
.Ltmp1071:
	.loc	54 44 15
	cmp.w	r8, #131072
	bhs	.LBB107_35
	.loc	54 45 9
	movw	r1, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.364
	movs	r2, #192
	movt	r1, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.364
	movw	r3, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.363
	strd	r2, r1, [sp]
	movw	r1, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.362
	mov.w	r0, #438
	movt	r1, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.362
	str	r0, [sp, #8]
	movt	r3, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.363
	mov	r0, r8
	movs	r2, #42
	.loc	54 0 0 is_stmt 0
	bl	core::unicode::printable::check::hb18736e70daa0641
	cbz	r0, .LBB107_40
	b	.LBB107_57
.LBB107_35:
	movw	r1, #42720
	.loc	54 47 12 is_stmt 1
	bic	r0, r8, #31
	movt	r1, #2
.Ltmp1072:
	.loc	52 433 18
	cmp	r0, r1
	beq	.LBB107_40
	.loc	52 0 18 is_stmt 0
	sub.w	r0, r8, #163840
	sub.w	r0, r0, #14144
	.loc	52 433 18
	cmn.w	r0, #8
	bhi	.LBB107_40
	.loc	52 0 18
	movw	r0, #65504
	movw	r1, #47134
	movt	r0, #31
	movt	r1, #2
	adds	r0, #30
	and.w	r0, r0, r8
	.loc	52 433 18
	cmp	r0, r1
	beq	.LBB107_40
	.loc	52 0 18
	sub.w	r0, r8, #180224
	sub.w	r0, r0, #3760
	.loc	52 433 18
	cmn.w	r0, #15
	itt	ls
	subls.w	r0, r8, #194560
	cmnls.w	r0, #3104
	bhi	.LBB107_40
	.loc	52 0 18
	movw	r1, #64029
	sub.w	r0, r8, #196608
	movt	r1, #65535
	.loc	52 433 18
	cmp	r0, r1
	itttt	ls
	addls.w	r0, r8, #4278255360
	addls.w	r0, r0, #15794176
	movwls	r1, #4682
	movtls	r1, #65525
	it	ls
	cmpls	r0, r1
	bls	.LBB107_56
.LBB107_40:
	.loc	52 0 0
	orr	r0, r8, #1
	movs	r1, #7
	clz	r0, r0
	movs	r6, #3
	movs	r5, #5
	eor.w	r9, r1, r0, lsr #2
.Ltmp1073:
.LBB107_41:
	mov	r4, r8
.LBB107_42:
	mov.w	r8, #28
	b	.LBB107_44
.LBB107_43:
.Ltmp1074:
	.loc	3 2106 9 is_stmt 1
	mov	r0, r10
	blx	r11
.Ltmp1075:
	.loc	3 2210 13
	cmp	r0, #0
	bne.w	.LBB107_1
.LBB107_44:
	.loc	3 2205 18
	mov	r0, r6
	movs	r6, #1
	movs	r1, #92
.LCPI107_1:
	tbb	[pc, r0]
	.loc	3 0 18 is_stmt 0
.LJTI107_1:
	.byte	(.LBB107_55-(.LCPI107_1+4))/2
	.byte	(.LBB107_47-(.LCPI107_1+4))/2
	.byte	(.LBB107_46-(.LCPI107_1+4))/2
	.byte	(.LBB107_48-(.LCPI107_1+4))/2
	.p2align	1
.LBB107_46:
	b	.LBB107_43
.LBB107_47:
	movs	r6, #0
	mov	r1, r4
	b	.LBB107_43
.LBB107_48:
.Ltmp1076:
	.file	55 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/char/mod.rs"
	.loc	55 153 9 is_stmt 1
	uxtb	r0, r5
	movs	r5, #0
	movs	r6, #3
	movs	r1, #125
.LCPI107_2:
	tbb	[pc, r0]
	.loc	55 0 9 is_stmt 0
.LJTI107_2:
	.byte	(.LBB107_55-(.LCPI107_2+4))/2
	.byte	(.LBB107_50-(.LCPI107_2+4))/2
	.byte	(.LBB107_51-(.LCPI107_2+4))/2
	.byte	(.LBB107_52-(.LCPI107_2+4))/2
	.byte	(.LBB107_53-(.LCPI107_2+4))/2
	.byte	(.LBB107_54-(.LCPI107_2+4))/2
	.p2align	1
.LBB107_50:
	b	.LBB107_43
.LBB107_51:
	.loc	55 167 33 is_stmt 1
	and.w	r0, r8, r9, lsl #2
.Ltmp1077:
	.file	56 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/char/convert.rs"
	.loc	56 363 12
	movs	r1, #87
.Ltmp1078:
	.loc	55 169 20
	movs	r5, #2
	movs	r6, #3
	.loc	55 167 33
	lsr.w	r0, r4, r0
	and	r0, r0, #15
.Ltmp1079:
	.loc	56 363 12
	cmp	r0, #10
	it	lo
	movlo	r1, #48
	add	r1, r0
.Ltmp1080:
	.loc	55 169 20
	cmp.w	r9, #0
	ite	eq
	moveq	r5, #1
	subne.w	r9, r9, #1
	b	.LBB107_43
.Ltmp1081:
.LBB107_52:
	.loc	55 0 20 is_stmt 0
	movs	r5, #2
	movs	r6, #3
	movs	r1, #123
	b	.LBB107_43
.LBB107_53:
	movs	r6, #3
	movs	r1, #117
	movs	r5, #3
	b	.LBB107_43
.LBB107_54:
	movs	r5, #4
	movs	r6, #3
	movs	r1, #92
	b	.LBB107_43
.LBB107_55:
.Ltmp1082:
	.loc	3 2106 9 is_stmt 1
	mov	r0, r10
	movs	r1, #39
	mov	r2, r11
	add	sp, #12
	pop.w	{r8, r9, r10, r11}
	pop.w	{r4, r5, r6, r7, lr}
	bx	r2
.Ltmp1083:
.LBB107_56:
	.loc	3 0 9 is_stmt 0
	movw	r0, #496
	movt	r0, #14
.Ltmp1084:
	.loc	52 433 18 is_stmt 1
	cmp	r8, r0
	bhs	.LBB107_40
.LBB107_57:
	.loc	52 0 18 is_stmt 0
	movs	r6, #1
	b	.LBB107_8
.LBB107_58:
.Ltmp1085:
	.loc	53 87 22 is_stmt 1
	movw	r2, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.370
	movw	r1, #707
	movt	r2, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.370
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB107_59:
	.loc	53 75 40
	movw	r2, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.369
	movt	r2, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.369
	b	.LBB107_61
.LBB107_60:
.Ltmp1086:
	.loc	53 82 62
	movw	r2, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.371
	mov	r0, r1
	movt	r2, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.371
.Ltmp1087:
.LBB107_61:
	.loc	53 0 0 is_stmt 0
	movs	r1, #32
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.Ltmp1088:
.Lfunc_end107:
	.size	<char as core::fmt::Debug>::fmt::h7ee1b5f70dc379a2, .Lfunc_end107-<char as core::fmt::Debug>::fmt::h7ee1b5f70dc379a2
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN71_$LT$core..ops..range..Range$LT$Idx$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hee2a92be01ffaad6E","ax",%progbits
	.p2align	1
	.type	<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::hee2a92be01ffaad6,%function
	.code	16
	.thumb_func
<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::hee2a92be01ffaad6:
.Lfunc_begin108:
	.loc	51 91 0 is_stmt 1
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r7, lr}
	push	{r4, r5, r7, lr}
	.cfi_def_cfa_offset 16
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r5, -12
	.cfi_offset r4, -16
	.setfp	r7, sp, #8
	add	r7, sp, #8
	.cfi_def_cfa r7, 8
	.pad	#24
	sub	sp, #24
	mov	r5, r0
.Ltmp1089:
	.loc	51 92 9 prologue_end
	ldr	r0, [r0]
	mov	r4, r1
	bl	_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h4b1edc1df8703cc0E.767
	cbnz	r0, .LBB108_2
	.loc	51 0 9 is_stmt 0
	movs	r2, #0
.Ltmp1090:
	.loc	3 1644 15 is_stmt 1
	ldrd	r0, r1, [r4, #24]
	.loc	3 1644 25 is_stmt 0
	str	r2, [sp, #20]
	movw	r3, :lower16:CORE_PERIPHERALS
	strd	r2, r2, [sp, #8]
	movs	r2, #1
	str	r2, [sp, #4]
	movw	r2, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.131
	movt	r2, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.131
	movt	r3, :upper16:CORE_PERIPHERALS
	str	r2, [sp]
	mov	r2, sp
	str	r3, [sp, #16]
	.loc	3 1644 9
	bl	core::fmt::write::h5d3fbef16e428eed
.Ltmp1091:
	.loc	51 93 9 is_stmt 1
	cbz	r0, .LBB108_3
.LBB108_2:
	.loc	51 96 6
	movs	r0, #1
	add	sp, #24
	pop	{r4, r5, r7, pc}
.LBB108_3:
	.loc	51 94 9
	ldr	r0, [r5, #4]
	mov	r1, r4
	add	sp, #24
	pop.w	{r4, r5, r7, lr}
	b	_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h4b1edc1df8703cc0E.767
.Ltmp1092:
.Lfunc_end108:
	.size	<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::hee2a92be01ffaad6, .Lfunc_end108-<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::hee2a92be01ffaad6
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h4b1edc1df8703cc0E.767","ax",%progbits
	.p2align	1
	.type	_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h4b1edc1df8703cc0E.767,%function
	.code	16
	.thumb_func
_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h4b1edc1df8703cc0E.767:
.Lfunc_begin109:
	.loc	8 185 0
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#140
	sub	sp, #140
.Ltmp1093:
	.loc	3 1912 9 prologue_end
	ldr	r2, [r1]
	mov	r4, r1
.Ltmp1094:
	.loc	8 186 20
	lsls	r3, r2, #27
	bmi	.LBB109_8
	.loc	8 188 27
	lsls	r2, r2, #26
	bmi.w	.LBB109_14
	.loc	8 0 27 is_stmt 0
	movw	r2, #10000
.Ltmp1095:
	.loc	8 230 23 is_stmt 1
	cmp	r0, r2
	blo.w	.LBB109_22
	.loc	8 0 23 is_stmt 0
	movw	lr, #5977
	movw	r8, #55536
	movw	r5, :lower16:ryu::digit_table::DIGIT_TABLE::h67064246f2e4c187
	movw	r11, #57599
	add.w	r10, sp, #12
	movs	r2, #0
	movw	r1, #65436
	movt	lr, #53687
	movt	r8, #65535
	movw	r9, #5243
	movt	r5, :upper16:ryu::digit_table::DIGIT_TABLE::h67064246f2e4c187
	movt	r11, #1525
	str	r4, [sp, #8]
.LBB109_4:
	.loc	8 232 21 is_stmt 1
	umull	r4, r6, r0, lr
.Ltmp1096:
	.loc	9 2104 14
	add.w	r12, r10, r2
.Ltmp1097:
	.loc	8 230 23
	subs	r2, #4
	cmp	r0, r11
	.loc	8 232 21
	lsr.w	r4, r6, #13
	mla	r6, r4, r8, r0
	mov	r0, r4
	.loc	8 234 30
	uxth	r3, r6
	lsr.w	r3, r3, #2
	mul	r3, r3, r9
	lsr.w	r3, r3, #17
	mla	r6, r3, r1, r6
.Ltmp1098:
	.loc	9 2104 14
	ldrh.w	r3, [r5, r3, lsl #1]
	strh.w	r3, [r12, #35]
.Ltmp1099:
	.loc	8 235 30
	uxth	r6, r6
.Ltmp1100:
	.loc	9 2104 14
	ldrh.w	r6, [r5, r6, lsl #1]
	strh.w	r6, [r12, #37]
.Ltmp1101:
	.loc	8 230 23
	bhi	.LBB109_4
	.loc	8 0 23 is_stmt 0
	mov	r0, r4
	ldr	r4, [sp, #8]
	.loc	8 249 20 is_stmt 1
	adds	r2, #39
	cmp	r0, #99
	bhi.w	.LBB109_23
.LBB109_6:
	.loc	8 0 20 is_stmt 0
	mov	r3, r0
	.loc	8 257 20 is_stmt 1
	cmp	r3, #10
	blo.w	.LBB109_24
.LBB109_7:
.Ltmp1102:
	.loc	31 295 18
	movw	r1, :lower16:ryu::digit_table::DIGIT_TABLE::h67064246f2e4c187
.Ltmp1103:
	.loc	8 262 21
	subs	r0, r2, #2
.Ltmp1104:
	.loc	31 295 18
	movt	r1, :upper16:ryu::digit_table::DIGIT_TABLE::h67064246f2e4c187
	add	r2, sp, #12
.Ltmp1105:
	.loc	9 2104 14
	ldrh.w	r1, [r1, r3, lsl #1]
	strh	r1, [r2, r0]
	b	.LBB109_25
.Ltmp1106:
.LBB109_8:
	.loc	9 0 14 is_stmt 0
	add.w	r12, sp, #12
	movs	r3, #129
.LBB109_9:
.Ltmp1107:
	.loc	8 42 35 is_stmt 1
	and	r6, r0, #15
	add.w	r2, r12, r3
.Ltmp1108:
	.loc	8 147 35
	cmp	r6, #10
	mov.w	r5, #87
	it	lo
	movlo	r5, #48
.Ltmp1109:
	.loc	8 83 20
	cmp	r0, #16
.Ltmp1110:
	.loc	8 0 0 is_stmt 0
	add	r6, r5
.Ltmp1111:
	.loc	45 496 9 is_stmt 1
	strb	r6, [r2, #-2]
.Ltmp1112:
	.loc	8 83 20
	blo	.LBB109_20
	.loc	8 0 0 is_stmt 0
	uxtb	r6, r0
.Ltmp1113:
	.loc	8 147 35 is_stmt 1
	movs	r5, #87
	cmp	r6, #160
	it	lo
	movlo	r5, #48
	.loc	8 0 0 is_stmt 0
	add.w	r6, r5, r6, lsr #4
.Ltmp1114:
	.loc	45 496 9 is_stmt 1
	strb	r6, [r2, #-3]
.Ltmp1115:
	.loc	46 500 45
	lsrs	r6, r0, #8
.Ltmp1116:
	.loc	8 83 20
	beq	.LBB109_21
.Ltmp1117:
	.loc	8 42 35
	and	r6, r6, #15
.Ltmp1118:
	.loc	8 147 35
	movs	r5, #87
	cmp	r6, #10
	it	lo
	movlo	r5, #48
	.loc	8 0 0 is_stmt 0
	add	r6, r5
.Ltmp1119:
	.loc	45 496 9 is_stmt 1
	strb	r6, [r2, #-4]
.Ltmp1120:
	.loc	46 500 45
	lsrs	r6, r0, #12
.Ltmp1121:
	.loc	8 83 20
	beq	.LBB109_26
.Ltmp1122:
	.loc	8 42 35
	and	r6, r6, #15
.Ltmp1123:
	.loc	8 147 35
	movs	r5, #87
	cmp	r6, #10
.Ltmp1124:
	.loc	8 83 20
	sub.w	r3, r3, #4
.Ltmp1125:
	.loc	8 147 35
	it	lo
	movlo	r5, #48
.Ltmp1126:
	.loc	46 500 45
	lsrs	r0, r0, #16
.Ltmp1127:
	.loc	8 0 0 is_stmt 0
	add	r6, r5
.Ltmp1128:
	.loc	45 496 9 is_stmt 1
	strb	r6, [r2, #-5]
.Ltmp1129:
	.loc	8 83 20
	bne	.LBB109_9
.Ltmp1130:
	.loc	25 328 12
	subs	r0, r3, #1
	b	.LBB109_27
.Ltmp1131:
.LBB109_14:
	.loc	25 0 12 is_stmt 0
	add.w	r12, sp, #12
	movs	r3, #129
.LBB109_15:
.Ltmp1132:
	.loc	8 42 35 is_stmt 1
	and	r1, r0, #15
	add.w	r2, r12, r3
.Ltmp1133:
	.loc	8 148 35
	cmp	r1, #10
	mov.w	r6, #55
	it	lo
	movlo	r6, #48
.Ltmp1134:
	.loc	8 83 20
	cmp	r0, #16
.Ltmp1135:
	.loc	8 0 0 is_stmt 0
	add	r1, r6
.Ltmp1136:
	.loc	45 496 9 is_stmt 1
	strb	r1, [r2, #-2]
.Ltmp1137:
	.loc	8 83 20
	blo	.LBB109_29
.Ltmp1138:
	.loc	8 148 35
	movs	r6, #55
.Ltmp1139:
	.loc	8 0 0 is_stmt 0
	uxtb	r1, r0
.Ltmp1140:
	.loc	8 148 35
	cmp	r1, #160
	it	lo
	movlo	r6, #48
	.loc	8 0 0
	add.w	r1, r6, r1, lsr #4
.Ltmp1141:
	.loc	46 500 45 is_stmt 1
	lsrs	r6, r0, #8
.Ltmp1142:
	.loc	45 496 9
	strb	r1, [r2, #-3]
.Ltmp1143:
	.loc	8 83 20
	beq	.LBB109_30
.Ltmp1144:
	.loc	8 42 35
	and	r1, r6, #15
.Ltmp1145:
	.loc	8 148 35
	movs	r6, #55
	cmp	r1, #10
	it	lo
	movlo	r6, #48
	.loc	8 0 0 is_stmt 0
	add	r1, r6
.Ltmp1146:
	.loc	46 500 45 is_stmt 1
	lsrs	r6, r0, #12
.Ltmp1147:
	.loc	45 496 9
	strb	r1, [r2, #-4]
.Ltmp1148:
	.loc	8 83 20
	beq	.LBB109_31
.Ltmp1149:
	.loc	8 42 35
	and	r1, r6, #15
.Ltmp1150:
	.loc	8 148 35
	movs	r6, #55
	cmp	r1, #10
.Ltmp1151:
	.loc	8 83 20
	sub.w	r3, r3, #4
.Ltmp1152:
	.loc	8 148 35
	it	lo
	movlo	r6, #48
.Ltmp1153:
	.loc	46 500 45
	lsrs	r0, r0, #16
.Ltmp1154:
	.loc	8 0 0 is_stmt 0
	add	r1, r6
.Ltmp1155:
	.loc	45 496 9 is_stmt 1
	strb	r1, [r2, #-5]
.Ltmp1156:
	.loc	8 83 20
	bne	.LBB109_15
.Ltmp1157:
	.loc	25 328 12
	subs	r0, r3, #1
	b	.LBB109_32
.Ltmp1158:
.LBB109_20:
	.loc	25 328 12 is_stmt 0
	subs	r0, r3, #2
	subs	r3, #1
	b	.LBB109_27
.LBB109_21:
	subs	r0, r3, #3
.Ltmp1159:
	.loc	8 82 17 is_stmt 1
	subs	r3, #2
	b	.LBB109_27
.Ltmp1160:
.LBB109_22:
	.loc	8 0 17 is_stmt 0
	movs	r2, #39
.Ltmp1161:
	.loc	8 249 20 is_stmt 1
	cmp	r0, #99
	bls.w	.LBB109_6
.LBB109_23:
	.loc	8 250 30
	uxth	r1, r0
	movw	r3, #5243
	.loc	8 251 21
	lsrs	r1, r1, #2
	.loc	8 252 21
	subs	r2, #2
	.loc	8 251 21
	muls	r1, r3, r1
	lsrs	r3, r1, #17
	mvn	r1, #99
	smlabb	r0, r3, r1, r0
.Ltmp1162:
	.loc	31 295 18
	movw	r1, :lower16:ryu::digit_table::DIGIT_TABLE::h67064246f2e4c187
	movt	r1, :upper16:ryu::digit_table::DIGIT_TABLE::h67064246f2e4c187
.Ltmp1163:
	.loc	8 250 30
	uxth	r0, r0
.Ltmp1164:
	.loc	9 2104 14
	ldrh.w	r0, [r1, r0, lsl #1]
	add	r1, sp, #12
	strh	r0, [r1, r2]
.Ltmp1165:
	.loc	8 257 20
	cmp	r3, #10
	bhs.w	.LBB109_7
.LBB109_24:
	.loc	8 258 21
	subs	r0, r2, #1
	add	r2, sp, #12
	.loc	8 259 21
	add.w	r1, r3, #48
	strb	r1, [r2, r0]
.LBB109_25:
	.loc	8 271 65
	rsb.w	r1, r0, #39
	.loc	8 273 13
	str	r1, [sp]
	add	r1, sp, #12
	movs	r2, #0
.Ltmp1166:
	.loc	10 307 18
	adds	r3, r1, r0
.Ltmp1167:
	.loc	8 273 13
	movw	r1, :lower16:CORE_PERIPHERALS
	movt	r1, :upper16:CORE_PERIPHERALS
	mov	r0, r4
.Ltmp1168:
	.loc	8 0 0 is_stmt 0
	bl	core::fmt::Formatter::pad_integral::h9f90d3af72be363b
	.loc	8 193 14 is_stmt 1
	add	sp, #140
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB109_26:
.Ltmp1169:
	.loc	25 328 12
	subs	r0, r3, #4
.Ltmp1170:
	.loc	8 82 17
	subs	r3, #3
.LBB109_27:
.Ltmp1171:
	.loc	25 328 12
	cmp	r0, #129
	bhs	.LBB109_35
.Ltmp1172:
	.loc	25 229 76
	rsb.w	r2, r3, #129
.Ltmp1173:
	.loc	8 110 9
	str	r2, [sp]
	b	.LBB109_34
.Ltmp1174:
.LBB109_29:
	.loc	25 328 12
	subs	r0, r3, #2
	subs	r3, #1
	b	.LBB109_32
.LBB109_30:
	subs	r0, r3, #3
.Ltmp1175:
	.loc	8 82 17
	subs	r3, #2
	b	.LBB109_32
.LBB109_31:
.Ltmp1176:
	.loc	25 328 12
	subs	r0, r3, #4
.Ltmp1177:
	.loc	8 82 17
	subs	r3, #3
.LBB109_32:
.Ltmp1178:
	.loc	25 328 12
	cmp	r0, #129
	bhs	.LBB109_35
.Ltmp1179:
	.loc	25 229 76
	rsb.w	r1, r3, #129
.Ltmp1180:
	.loc	8 110 9
	str	r1, [sp]
.Ltmp1181:
.LBB109_34:
	.loc	8 0 0 is_stmt 0
	movw	r1, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.232
	add.w	r3, r12, r0
	movt	r1, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.232
	mov	r0, r4
	movs	r2, #2
	bl	core::fmt::Formatter::pad_integral::h9f90d3af72be363b
	.loc	8 193 14 is_stmt 1
	add	sp, #140
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB109_35:
	.loc	8 0 0 is_stmt 0
	movw	r2, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.231
	movs	r1, #128
	movt	r2, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.231
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.Ltmp1182:
.Lfunc_end109:
	.size	_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h4b1edc1df8703cc0E.767, .Lfunc_end109-_ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h4b1edc1df8703cc0E.767
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN4core7unicode9printable5check17hb18736e70daa0641E,"ax",%progbits
	.p2align	1
	.type	core::unicode::printable::check::hb18736e70daa0641,%function
	.code	16
	.thumb_func
core::unicode::printable::check::hb18736e70daa0641:
.Lfunc_begin110:
	.loc	54 4 0 is_stmt 1
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#12
	sub	sp, #12
.Ltmp1183:
	.loc	41 99 13 prologue_end
	add.w	r10, r1, r2, lsl #1
	uxth	r2, r0
	str	r2, [sp, #4]
.Ltmp1184:
	.loc	54 5 18
	lsr.w	r9, r2, #8
	ldr	r2, [r7, #8]
	mov.w	lr, #0
	uxtb	r6, r0
	str	r3, [sp, #8]
.LBB110_1:
	.loc	54 7 11
	ldrb	r5, [r1], #2
	mov	r0, lr
	.loc	54 7 18 is_stmt 0
	ldrb	r4, [r1, #-1]
	.loc	54 9 12 is_stmt 1
	cmp	r5, r9
	.loc	54 8 24
	add	lr, r4
	.loc	54 9 12
	bne	.LBB110_13
.Ltmp1185:
	.loc	25 242 12
	cmp	lr, r0
	blo	.LBB110_24
	.loc	25 0 12 is_stmt 0
	mov	r11, r2
	.loc	25 244 19 is_stmt 1
	cmp	lr, r2
	bhi	.LBB110_25
.Ltmp1186:
	.loc	31 295 18
	add.w	r8, r3, r0
.Ltmp1187:
	.loc	31 295 18 is_stmt 0
	add.w	r0, r8, r4
.Ltmp1188:
.LBB110_5:
	.loc	13 146 24 is_stmt 1
	cbz	r4, .LBB110_15
.Ltmp1189:
	.loc	54 10 18
	mov	r5, r8
	ldrb	r12, [r5], #1
	.loc	54 11 20
	cmp	r12, r6
	beq	.LBB110_23
.Ltmp1190:
	.loc	13 146 24
	cmp	r5, r0
	beq	.LBB110_15
.Ltmp1191:
	.loc	54 10 18
	ldrb.w	r5, [r8, #1]
	.loc	54 11 20
	cmp	r5, r6
	beq	.LBB110_23
.Ltmp1192:
	.loc	13 0 0 is_stmt 0
	add.w	r5, r8, #2
	.loc	13 146 24 is_stmt 1
	cmp	r5, r0
	beq	.LBB110_15
.Ltmp1193:
	.loc	54 10 18
	ldrb.w	r5, [r8, #2]
	.loc	54 11 20
	cmp	r5, r6
	beq	.LBB110_23
.Ltmp1194:
	.loc	13 0 0 is_stmt 0
	add.w	r5, r8, #3
	.loc	13 146 24 is_stmt 1
	cmp	r5, r0
	beq	.LBB110_15
.Ltmp1195:
	.loc	54 10 18
	ldrb.w	r2, [r8, #3]
.Ltmp1196:
	.loc	10 307 18
	add.w	r5, r8, #4
.Ltmp1197:
	.loc	54 11 20
	subs	r4, #4
	cmp	r2, r6
	mov	r8, r5
	bne	.LBB110_5
	b	.LBB110_23
.LBB110_13:
	.loc	54 15 19
	bhi	.LBB110_16
	cmp	r1, r10
	bne	.LBB110_1
	b	.LBB110_16
.LBB110_15:
	.loc	54 0 19 is_stmt 0
	ldr	r3, [sp, #8]
.Ltmp1198:
	.loc	13 146 24 is_stmt 1
	cmp	r1, r10
	mov	r2, r11
	bne	.LBB110_1
.Ltmp1199:
.LBB110_16:
	.loc	13 0 24 is_stmt 0
	ldrd	r4, r0, [r7, #12]
	ldr	r1, [sp, #4]
.Ltmp1200:
	.loc	31 295 18 is_stmt 1
	add.w	r12, r4, r0
	movs	r0, #1
.Ltmp1201:
.LBB110_17:
	.loc	29 1758 29
	mov	r5, r4
	ldrb	r3, [r5], #1
	sxtb	r6, r3
.Ltmp1202:
	.loc	54 25 22
	cmp	r6, #0
	bmi	.LBB110_19
	.loc	54 0 22 is_stmt 0
	mov	r4, r5
	.loc	54 30 9 is_stmt 1
	subs	r1, r1, r3
	bpl	.LBB110_21
	b	.LBB110_22
.LBB110_19:
.Ltmp1203:
	.loc	13 146 24
	cmp	r5, r12
	beq	.LBB110_26
.Ltmp1204:
	.loc	29 1758 29
	ldrb	r2, [r4, #1]
.Ltmp1205:
	.loc	54 26 13
	and	r3, r6, #127
.Ltmp1206:
	.loc	10 307 18
	adds	r4, #2
.Ltmp1207:
	.loc	54 26 13
	orr.w	r3, r2, r3, lsl #8
	.loc	54 30 9
	subs	r1, r1, r3
	.loc	54 31 12
	bmi	.LBB110_22
.LBB110_21:
	.loc	54 34 9
	eor	r0, r0, #1
.Ltmp1208:
	.loc	13 146 24
	cmp	r4, r12
	bne	.LBB110_17
.Ltmp1209:
.LBB110_22:
	.loc	54 37 2
	and	r0, r0, #1
	add	sp, #12
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB110_23:
	.loc	54 0 2 is_stmt 0
	movs	r0, #0
	.loc	54 37 2
	and	r0, r0, #1
	add	sp, #12
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB110_24:
.Ltmp1210:
	.loc	25 243 13 is_stmt 1
	movw	r2, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.357
	mov	r1, lr
	movt	r2, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.357
	bl	core::slice::index::slice_index_order_fail::h8a53f055fb6ee074
	.inst.n	0xdefe
.LBB110_25:
	.loc	25 245 13
	movw	r2, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.357
	mov	r0, lr
	movt	r2, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.357
	mov	r1, r11
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.Ltmp1211:
.LBB110_26:
	.loc	29 752 21
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movw	r2, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.358
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movt	r2, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.358
	movs	r1, #43
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.Ltmp1212:
.Lfunc_end110:
	.size	core::unicode::printable::check::hb18736e70daa0641, .Lfunc_end110-core::unicode::printable::check::hb18736e70daa0641
	.cfi_endproc
	.file	57 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/iter/adapters/cloned.rs"
	.cantunwind
	.fnend

	.section	.text._ZN4core3fmt8builders11DebugStruct5field17hf57541a1df3c3ba1E,"ax",%progbits
	.p2align	1
	.type	core::fmt::builders::DebugStruct::field::hf57541a1df3c3ba1,%function
	.code	16
	.thumb_func
core::fmt::builders::DebugStruct::field::hf57541a1df3c3ba1:
.Lfunc_begin111:
	.loc	44 133 0
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#52
	sub	sp, #52
	mov	r4, r0
.Ltmp1213:
	.loc	44 134 23 prologue_end
	ldrb	r0, [r0, #4]
	movs	r6, #1
.Ltmp1214:
	.loc	19 1310 9
	cmp	r0, #0
	mov.w	r0, #1
	bne	.LBB111_15
.Ltmp1215:
	.loc	44 135 16
	ldr	r5, [r4]
	mov	r9, r2
	ldr.w	r11, [r7, #8]
	mov	r10, r3
	.loc	44 0 0 is_stmt 0
	ldrb	r2, [r4, #5]
	mov	r8, r1
	.loc	44 135 16
	ldr	r0, [r5]
	lsls	r1, r0, #29
	bmi	.LBB111_6
	.loc	44 147 30 is_stmt 1
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.404
	movw	r12, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.204
.Ltmp1216:
	.loc	3 1621 9
	ldrd	r0, r3, [r5, #24]
.Ltmp1217:
	.loc	44 147 30
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.404
	cmp	r2, #0
	movt	r12, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.204
	it	eq
	moveq	r1, r12
.Ltmp1218:
	.loc	3 1621 9
	ldr	r3, [r3, #12]
	mov.w	r2, #2
.Ltmp1219:
	.loc	44 147 30
	it	eq
	moveq	r2, #3
.Ltmp1220:
	.loc	3 1621 9
	blx	r3
.Ltmp1221:
	.loc	44 148 17
	cbnz	r0, .LBB111_8
.Ltmp1222:
	.loc	3 1621 9
	ldrd	r0, r1, [r5, #24]
	mov	r2, r9
	ldr	r3, [r1, #12]
	mov	r1, r8
	blx	r3
.Ltmp1223:
	.loc	44 149 17
	cbnz	r0, .LBB111_8
.Ltmp1224:
	.loc	3 1621 9
	ldrd	r0, r1, [r5, #24]
	movs	r2, #2
	ldr	r3, [r1, #12]
	movw	r1, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.194
	movt	r1, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.194
	blx	r3
.Ltmp1225:
	.loc	44 150 17
	cbnz	r0, .LBB111_8
	.loc	44 151 17
	ldr.w	r2, [r11, #12]
	mov	r0, r10
	mov	r1, r5
	blx	r2
	b	.LBB111_15
.LBB111_6:
	.loc	44 136 20
	cbnz	r2, .LBB111_10
.Ltmp1226:
	.loc	3 1621 9
	ldrd	r0, r1, [r5, #24]
	movs	r2, #3
	ldr	r3, [r1, #12]
	movw	r1, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.201
	movt	r1, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.201
	blx	r3
.Ltmp1227:
	.loc	44 137 21
	cbz	r0, .LBB111_9
.LBB111_8:
	.loc	44 0 21 is_stmt 0
	movs	r0, #1
	b	.LBB111_15
.LBB111_9:
.Ltmp1228:
	.loc	3 1286 20 is_stmt 1
	ldr	r0, [r5]
.LBB111_10:
	.loc	3 1281 9
	str	r0, [sp, #16]
	movw	r0, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.196
	.loc	3 1287 19
	add.w	lr, r5, #4
	movs	r1, #1
	.loc	3 1281 9
	movt	r0, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.196
.Ltmp1229:
	.loc	44 140 33
	strb	r1, [r7, #-65]
.Ltmp1230:
	.loc	3 1283 23
	ldr.w	r11, [r5, #24]
	mov	r6, r10
	.loc	3 1287 19
	ldm.w	lr, {r1, r12, lr}
	sub.w	r3, r7, #65
	.loc	3 1290 24
	ldr	r2, [r5, #16]
	.loc	3 1281 9
	str	r0, [sp, #44]
	.loc	3 1290 24
	ldr.w	r10, [r5, #20]
	.loc	3 1283 23
	ldr	r0, [r5, #28]
.Ltmp1231:
	.loc	29 1418 22
	str	r3, [sp, #8]
.Ltmp1232:
	.loc	3 1281 9
	strd	r2, r10, [sp, #32]
	add	r2, sp, #20
	.loc	3 1288 20
	ldrb.w	r3, [r5, #32]
	.loc	3 1281 9
	stm.w	r2, {r1, r12, lr}
.Ltmp1233:
	.loc	3 1621 9
	mov	r1, r8
	mov	r2, r9
.Ltmp1234:
	.loc	29 1418 22
	str	r0, [sp, #4]
	mov	r0, sp
.Ltmp1235:
	.loc	3 1281 9
	str	r0, [sp, #40]
.Ltmp1236:
	.loc	29 1418 22
	str.w	r11, [sp]
.Ltmp1237:
	.loc	3 1281 9
	strb.w	r3, [sp, #48]
.Ltmp1238:
	.loc	3 1621 9
	bl	<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h55ae475bea881fc0
	cbnz	r0, .LBB111_13
.Ltmp1239:
	.loc	3 1621 9 is_stmt 0
	movw	r1, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.194
	mov	r0, sp
	movt	r1, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.194
	movs	r2, #2
	bl	<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h55ae475bea881fc0
	cbnz	r0, .LBB111_13
.Ltmp1240:
	.loc	44 144 17 is_stmt 1
	ldr	r0, [r7, #8]
	add	r1, sp, #16
	ldr	r2, [r0, #12]
	mov	r0, r6
	blx	r2
	cbz	r0, .LBB111_16
.Ltmp1241:
.LBB111_13:
	.loc	44 0 17 is_stmt 0
	movs	r0, #1
.LBB111_14:
	movs	r6, #1
.LBB111_15:
	.loc	44 134 9 is_stmt 1
	strb	r0, [r4, #4]
	.loc	44 157 6
	mov	r0, r4
	.loc	44 155 9
	strb	r6, [r4, #5]
	.loc	44 157 6
	add	sp, #52
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB111_16:
.Ltmp1242:
	.loc	3 1621 9
	ldrd	r0, r1, [sp, #40]
	movs	r2, #2
	ldr	r3, [r1, #12]
	movw	r1, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.202
	movt	r1, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.202
	blx	r3
	b	.LBB111_14
.Ltmp1243:
.Lfunc_end111:
	.size	core::fmt::builders::DebugStruct::field::hf57541a1df3c3ba1, .Lfunc_end111-core::fmt::builders::DebugStruct::field::hf57541a1df3c3ba1
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN4core3fmt5Write10write_char17hf323ece2521daa94E,"ax",%progbits
	.p2align	1
	.type	core::fmt::Write::write_char::hf323ece2521daa94,%function
	.code	16
	.thumb_func
core::fmt::Write::write_char::hf323ece2521daa94:
.Lfunc_begin112:
	.loc	3 162 0
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	.pad	#8
	sub	sp, #8
	movs	r2, #0
.Ltmp1244:
	.loc	52 1635 8 prologue_end
	cmp	r1, #128
.Ltmp1245:
	.loc	3 163 43
	str	r2, [sp, #4]
.Ltmp1246:
	.loc	52 1635 8
	bhs	.LBB112_2
.Ltmp1247:
	.loc	52 1666 13
	strb.w	r1, [sp, #4]
	movs	r2, #1
	add	r1, sp, #4
.Ltmp1248:
	.loc	3 163 9
	bl	<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h55ae475bea881fc0
	.loc	3 164 6
	add	sp, #8
	pop	{r7, pc}
.LBB112_2:
	.loc	3 0 6 is_stmt 0
	movs	r2, #2
.Ltmp1249:
	.loc	52 1670 13 is_stmt 1
	mov	r3, r1
	bfi	r3, r2, #6, #26
.Ltmp1250:
	.loc	52 1637 15
	cmp.w	r1, #2048
	bhs	.LBB112_4
.Ltmp1251:
	.loc	52 1670 13
	strb.w	r3, [sp, #5]
	movs	r3, #192
	.loc	52 1669 13
	orr.w	r1, r3, r1, lsr #6
	b	.LBB112_7
.LBB112_4:
.Ltmp1252:
	.loc	52 1639 12
	cmp.w	r1, #65536
	bhs	.LBB112_6
.Ltmp1253:
	.loc	52 1675 13
	strb.w	r3, [sp, #6]
	.loc	52 1674 19
	lsrs	r3, r1, #6
	.loc	52 1674 13 is_stmt 0
	bfi	r3, r2, #6, #26
	movs	r2, #224
	.loc	52 1673 13 is_stmt 1
	orr.w	r1, r2, r1, lsr #12
	.loc	52 1674 13
	strb.w	r3, [sp, #5]
	.loc	52 1673 13
	strb.w	r1, [sp, #4]
	movs	r2, #3
	add	r1, sp, #4
.Ltmp1254:
	.loc	3 163 9
	bl	<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h55ae475bea881fc0
	.loc	3 164 6
	add	sp, #8
	pop	{r7, pc}
.LBB112_6:
.Ltmp1255:
	.loc	52 1681 13
	strb.w	r3, [sp, #7]
	.loc	52 1680 19
	lsrs	r3, r1, #6
	.loc	52 1680 13 is_stmt 0
	bfi	r3, r2, #6, #26
	strb.w	r3, [sp, #6]
	.loc	52 1679 19 is_stmt 1
	lsrs	r3, r1, #12
	.loc	52 1679 13 is_stmt 0
	bfi	r3, r2, #6, #26
	movs	r2, #240
	.loc	52 1678 13 is_stmt 1
	orr.w	r1, r2, r1, lsr #18
	movs	r2, #4
	.loc	52 1679 13
	strb.w	r3, [sp, #5]
.LBB112_7:
	.loc	52 0 0 is_stmt 0
	strb.w	r1, [sp, #4]
	add	r1, sp, #4
.Ltmp1256:
	.loc	3 163 9 is_stmt 1
	bl	<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h55ae475bea881fc0
	.loc	3 164 6
	add	sp, #8
	pop	{r7, pc}
.Ltmp1257:
.Lfunc_end112:
	.size	core::fmt::Write::write_char::hf323ece2521daa94, .Lfunc_end112-core::fmt::Write::write_char::hf323ece2521daa94
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN4core3fmt5Write9write_fmt17hbf916f5b23354be0E,"ax",%progbits
	.p2align	1
	.type	core::fmt::Write::write_fmt::hbf916f5b23354be0,%function
	.code	16
	.thumb_func
core::fmt::Write::write_fmt::hbf916f5b23354be0:
.Lfunc_begin113:
	.loc	3 185 0
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r11}
	str	r11, [sp, #-4]!
	.cfi_offset r11, -24
	.pad	#32
	sub	sp, #32
	str	r0, [sp, #4]
	add	r2, sp, #8
.Ltmp1258:
	.loc	3 186 26 prologue_end
	ldm.w	r1, {r3, r4, r5, r6, r12, lr}
	.loc	3 186 9 is_stmt 0
	movw	r1, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.238
	.loc	3 186 26
	mov	r0, r2
	.loc	3 186 9
	movt	r1, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.238
	.loc	3 186 26
	stm.w	r0, {r3, r4, r5, r6, r12, lr}
	add	r0, sp, #4
	.loc	3 186 9
	bl	core::fmt::write::h5d3fbef16e428eed
	.loc	3 187 6 is_stmt 1
	add	sp, #32
	ldr	r11, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.Ltmp1259:
.Lfunc_end113:
	.size	core::fmt::Write::write_fmt::hbf916f5b23354be0, .Lfunc_end113-core::fmt::Write::write_fmt::hbf916f5b23354be0
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h06c25b6d30c4740cE","ax",%progbits
	.p2align	1
	.type	<&mut W as core::fmt::Write>::write_str::h06c25b6d30c4740c,%function
	.code	16
	.thumb_func
<&mut W as core::fmt::Write>::write_str::h06c25b6d30c4740c:
.Lfunc_begin114:
	.loc	3 192 0
	.fnstart
	.cfi_startproc
	.loc	3 193 9 prologue_end
	ldr	r0, [r0]
	b	<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h55ae475bea881fc0
.Ltmp1260:
.Lfunc_end114:
	.size	<&mut W as core::fmt::Write>::write_str::h06c25b6d30c4740c, .Lfunc_end114-<&mut W as core::fmt::Write>::write_str::h06c25b6d30c4740c
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h6ab6417501edfdb3E","ax",%progbits
	.p2align	1
	.type	<&mut W as core::fmt::Write>::write_char::h6ab6417501edfdb3,%function
	.code	16
	.thumb_func
<&mut W as core::fmt::Write>::write_char::h6ab6417501edfdb3:
.Lfunc_begin115:
	.loc	3 196 0
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	.pad	#8
	sub	sp, #8
.Ltmp1261:
	.loc	3 197 9 prologue_end
	ldr	r0, [r0]
	movs	r2, #0
.Ltmp1262:
	.loc	52 1635 8
	cmp	r1, #128
.Ltmp1263:
	.loc	3 163 43
	str	r2, [sp, #4]
.Ltmp1264:
	.loc	52 1635 8
	bhs	.LBB115_2
.Ltmp1265:
	.loc	52 1666 13
	strb.w	r1, [sp, #4]
	movs	r2, #1
	add	r1, sp, #4
.Ltmp1266:
	.loc	3 163 9
	bl	<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h55ae475bea881fc0
.Ltmp1267:
	.loc	3 198 6
	add	sp, #8
	pop	{r7, pc}
.LBB115_2:
	.loc	3 0 6 is_stmt 0
	movs	r2, #2
.Ltmp1268:
	.loc	52 1670 13 is_stmt 1
	mov	r3, r1
	bfi	r3, r2, #6, #26
.Ltmp1269:
	.loc	52 1637 15
	cmp.w	r1, #2048
	bhs	.LBB115_4
.Ltmp1270:
	.loc	52 1670 13
	strb.w	r3, [sp, #5]
	movs	r3, #192
	.loc	52 1669 13
	orr.w	r1, r3, r1, lsr #6
	b	.LBB115_7
.LBB115_4:
.Ltmp1271:
	.loc	52 1639 12
	cmp.w	r1, #65536
	bhs	.LBB115_6
.Ltmp1272:
	.loc	52 1675 13
	strb.w	r3, [sp, #6]
	.loc	52 1674 19
	lsrs	r3, r1, #6
	.loc	52 1674 13 is_stmt 0
	bfi	r3, r2, #6, #26
	movs	r2, #224
	.loc	52 1673 13 is_stmt 1
	orr.w	r1, r2, r1, lsr #12
	.loc	52 1674 13
	strb.w	r3, [sp, #5]
	.loc	52 1673 13
	strb.w	r1, [sp, #4]
	movs	r2, #3
	add	r1, sp, #4
.Ltmp1273:
	.loc	3 163 9
	bl	<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h55ae475bea881fc0
.Ltmp1274:
	.loc	3 198 6
	add	sp, #8
	pop	{r7, pc}
.LBB115_6:
.Ltmp1275:
	.loc	52 1681 13
	strb.w	r3, [sp, #7]
	.loc	52 1680 19
	lsrs	r3, r1, #6
	.loc	52 1680 13 is_stmt 0
	bfi	r3, r2, #6, #26
	strb.w	r3, [sp, #6]
	.loc	52 1679 19 is_stmt 1
	lsrs	r3, r1, #12
	.loc	52 1679 13 is_stmt 0
	bfi	r3, r2, #6, #26
	movs	r2, #240
	.loc	52 1678 13 is_stmt 1
	orr.w	r1, r2, r1, lsr #18
	movs	r2, #4
	.loc	52 1679 13
	strb.w	r3, [sp, #5]
.LBB115_7:
	.loc	52 0 0 is_stmt 0
	strb.w	r1, [sp, #4]
	add	r1, sp, #4
.Ltmp1276:
	.loc	3 163 9 is_stmt 1
	bl	<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h55ae475bea881fc0
.Ltmp1277:
	.loc	3 198 6
	add	sp, #8
	pop	{r7, pc}
.Ltmp1278:
.Lfunc_end115:
	.size	<&mut W as core::fmt::Write>::write_char::h6ab6417501edfdb3, .Lfunc_end115-<&mut W as core::fmt::Write>::write_char::h6ab6417501edfdb3
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17ha0996c23c8ea924fE","ax",%progbits
	.p2align	1
	.type	<&mut W as core::fmt::Write>::write_fmt::ha0996c23c8ea924f,%function
	.code	16
	.thumb_func
<&mut W as core::fmt::Write>::write_fmt::ha0996c23c8ea924f:
.Lfunc_begin116:
	.loc	3 200 0
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r11}
	str	r11, [sp, #-4]!
	.cfi_offset r11, -24
	.pad	#32
	sub	sp, #32
.Ltmp1279:
	.loc	3 201 9 prologue_end
	ldr	r0, [r0]
	add	r2, sp, #8
	str	r0, [sp, #4]
.Ltmp1280:
	.loc	3 186 26
	ldm.w	r1, {r3, r4, r5, r6, r12, lr}
	mov	r0, r2
	.loc	3 186 9 is_stmt 0
	movw	r1, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.238
	movt	r1, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.238
	.loc	3 186 26
	stm.w	r0, {r3, r4, r5, r6, r12, lr}
	add	r0, sp, #4
	.loc	3 186 9
	bl	core::fmt::write::h5d3fbef16e428eed
.Ltmp1281:
	.loc	3 202 6 is_stmt 1
	add	sp, #32
	ldr	r11, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.Ltmp1282:
.Lfunc_end116:
	.size	<&mut W as core::fmt::Write>::write_fmt::ha0996c23c8ea924f, .Lfunc_end116-<&mut W as core::fmt::Write>::write_fmt::ha0996c23c8ea924f
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN4core3fmt8builders11DebugStruct6finish17h13801c6cd64a79cdE,"ax",%progbits
	.p2align	1
	.type	core::fmt::builders::DebugStruct::finish::h13801c6cd64a79cd,%function
	.code	16
	.thumb_func
core::fmt::builders::DebugStruct::finish::h13801c6cd64a79cd:
.Lfunc_begin117:
	.loc	44 233 0
	.fnstart
	.cfi_startproc
	.save	{r4, r6, r7, lr}
	push	{r4, r6, r7, lr}
	.cfi_def_cfa_offset 16
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r4, -16
	.setfp	r7, sp, #8
	add	r7, sp, #8
	.cfi_def_cfa r7, 8
	mov	r4, r0
.Ltmp1283:
	.loc	44 0 0 is_stmt 0
	ldrb	r0, [r0, #4]
	.loc	44 234 12 prologue_end is_stmt 1
	ldrb	r1, [r4, #5]
	cbz	r1, .LBB117_8
.Ltmp1284:
	.loc	19 1310 9
	cbz	r0, .LBB117_3
	.loc	19 0 9 is_stmt 0
	movs	r0, #1
	b	.LBB117_7
.LBB117_3:
.Ltmp1285:
	.loc	44 236 20 is_stmt 1
	ldr	r1, [r4]
	ldrb	r0, [r1]
	lsls	r0, r0, #29
	bmi	.LBB117_5
.Ltmp1286:
	.loc	3 1621 9
	ldrd	r0, r1, [r1, #24]
	movs	r2, #2
	ldr	r3, [r1, #12]
	movw	r1, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.209
	movt	r1, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.209
	b	.LBB117_6
.Ltmp1287:
.LBB117_5:
	.loc	3 1621 9 is_stmt 0
	ldrd	r0, r1, [r1, #24]
	movs	r2, #1
	ldr	r3, [r1, #12]
	movw	r1, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.206
	movt	r1, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.206
.Ltmp1288:
.LBB117_6:
	.loc	44 0 0
	blx	r3
.Ltmp1289:
.LBB117_7:
	.loc	44 235 13 is_stmt 1
	strb	r0, [r4, #4]
.LBB117_8:
	.loc	44 239 9
	cmp	r0, #0
	it	ne
	movne	r0, #1
	.loc	44 240 6
	pop	{r4, r6, r7, pc}
.Ltmp1290:
.Lfunc_end117:
	.size	core::fmt::builders::DebugStruct::finish::h13801c6cd64a79cd, .Lfunc_end117-core::fmt::builders::DebugStruct::finish::h13801c6cd64a79cd
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN4core3fmt8builders10DebugTuple5field17h344a2bce7ddce2f6E,"ax",%progbits
	.p2align	1
	.type	core::fmt::builders::DebugTuple::field::h344a2bce7ddce2f6,%function
	.code	16
	.thumb_func
core::fmt::builders::DebugTuple::field::h344a2bce7ddce2f6:
.Lfunc_begin118:
	.loc	44 318 0
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10}
	push.w	{r8, r9, r10}
	.cfi_offset r10, -24
	.cfi_offset r9, -28
	.cfi_offset r8, -32
	.pad	#56
	sub	sp, #56
	mov	r4, r0
.Ltmp1291:
	.loc	44 319 23 prologue_end
	ldrb	r0, [r0, #8]
.Ltmp1292:
	.loc	19 1310 9
	cbz	r0, .LBB118_4
.Ltmp1293:
	.loc	44 336 9
	ldr	r6, [r4, #4]
.LBB118_2:
	.loc	44 0 9 is_stmt 0
	movs	r0, #1
.LBB118_3:
	.loc	44 336 9
	adds	r1, r6, #1
	.loc	44 319 9 is_stmt 1
	strb	r0, [r4, #8]
	.loc	44 336 9
	str	r1, [r4, #4]
	.loc	44 338 6
	mov	r0, r4
	add	sp, #56
	pop.w	{r8, r9, r10}
	pop	{r4, r5, r6, r7, pc}
.LBB118_4:
.Ltmp1294:
	.loc	44 320 16
	ldrd	r5, r6, [r4]
	mov	r9, r2
	mov	r8, r1
	ldr	r0, [r5]
	lsls	r1, r0, #29
	bmi	.LBB118_7
	.loc	44 330 30
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.404
	movw	r2, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.211
.Ltmp1295:
	.loc	3 1621 9
	ldrd	r0, r3, [r5, #24]
.Ltmp1296:
	.loc	44 330 30
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.404
	movt	r2, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.211
	cmp	r6, #0
	it	eq
	moveq	r1, r2
.Ltmp1297:
	.loc	3 1621 9
	ldr	r3, [r3, #12]
	mov.w	r2, #2
.Ltmp1298:
	.loc	44 330 30
	it	eq
	moveq	r2, #1
.Ltmp1299:
	.loc	3 1621 9
	blx	r3
.Ltmp1300:
	.loc	44 331 17
	cmp	r0, #0
	bne	.LBB118_2
	.loc	44 332 17
	ldr.w	r2, [r9, #12]
	mov	r0, r8
	mov	r1, r5
	blx	r2
	b	.LBB118_3
.LBB118_7:
	.loc	44 321 20
	cbnz	r6, .LBB118_11
.Ltmp1301:
	.loc	3 1621 9
	ldrd	r0, r1, [r5, #24]
	movs	r2, #2
	ldr	r3, [r1, #12]
	movw	r1, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.210
	movt	r1, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.210
	blx	r3
.Ltmp1302:
	.loc	44 322 21
	cbz	r0, .LBB118_10
	.loc	44 0 21 is_stmt 0
	movs	r0, #1
	movs	r6, #0
	b	.LBB118_3
.LBB118_10:
.Ltmp1303:
	.loc	3 1286 20 is_stmt 1
	ldr	r0, [r5]
.LBB118_11:
	.loc	3 1281 9
	movw	r3, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.196
	movs	r1, #1
	.loc	3 1287 19
	add.w	lr, r5, #4
.Ltmp1304:
	.loc	44 325 33
	strb	r1, [r7, #-61]
	sub.w	r1, r7, #61
.Ltmp1305:
	.loc	29 1418 22
	str	r1, [sp, #12]
.Ltmp1306:
	.loc	3 1281 9
	movt	r3, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.196
	.loc	3 1287 19
	ldm.w	lr, {r10, r12, lr}
	add	r1, sp, #4
	.loc	3 1290 24
	ldr	r2, [r5, #16]
	.loc	3 1281 9
	str	r3, [sp, #48]
	.loc	3 1283 23
	ldr	r3, [r5, #24]
	.loc	3 1281 9
	str	r1, [sp, #44]
	.loc	3 1290 24
	ldr	r1, [r5, #20]
	.loc	3 1281 9
	str	r0, [sp, #20]
	.loc	3 1288 20
	ldrb.w	r0, [r5, #32]
	.loc	3 1283 23
	ldr	r5, [r5, #28]
	.loc	3 1281 9
	strd	r2, r1, [sp, #36]
	add	r1, sp, #20
.Ltmp1307:
	.loc	44 327 17
	ldr.w	r2, [r9, #12]
.Ltmp1308:
	.loc	3 1281 9
	strb.w	r0, [sp, #52]
	add	r0, sp, #24
	stm.w	r0, {r10, r12, lr}
.Ltmp1309:
	.loc	44 327 17
	mov	r0, r8
.Ltmp1310:
	.loc	29 1418 22
	strd	r3, r5, [sp, #4]
.Ltmp1311:
	.loc	44 327 17
	blx	r2
	cmp	r0, #0
	bne	.LBB118_2
.Ltmp1312:
	.loc	3 1621 9
	ldrd	r0, r1, [sp, #44]
	movs	r2, #2
	ldr	r3, [r1, #12]
	movw	r1, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.202
	movt	r1, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.202
	blx	r3
	b	.LBB118_3
.Ltmp1313:
.Lfunc_end118:
	.size	core::fmt::builders::DebugTuple::field::h344a2bce7ddce2f6, .Lfunc_end118-core::fmt::builders::DebugTuple::field::h344a2bce7ddce2f6
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN4core3fmt8builders10DebugTuple6finish17hfca393014b7f9d44E,"ax",%progbits
	.p2align	1
	.type	core::fmt::builders::DebugTuple::finish::hfca393014b7f9d44,%function
	.code	16
	.thumb_func
core::fmt::builders::DebugTuple::finish::hfca393014b7f9d44:
.Lfunc_begin119:
	.loc	44 365 0
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r11}
	str	r11, [sp, #-4]!
	.cfi_offset r11, -24
	mov	r4, r0
.Ltmp1314:
	.loc	44 0 0 is_stmt 0
	ldrb	r5, [r0, #8]
	.loc	44 366 12 prologue_end is_stmt 1
	ldr	r0, [r0, #4]
	cbz	r0, .LBB119_9
.Ltmp1315:
	.loc	19 1310 9
	cbz	r5, .LBB119_3
	.loc	19 0 9 is_stmt 0
	movs	r5, #1
	b	.LBB119_8
.LBB119_3:
.Ltmp1316:
	ldr	r6, [r4]
	.loc	44 368 20 is_stmt 1
	cmp	r0, #1
	bne	.LBB119_7
	ldrb	r0, [r4, #9]
	cbz	r0, .LBB119_7
	ldrb	r0, [r6]
	lsls	r0, r0, #29
	bmi	.LBB119_7
.Ltmp1317:
	.loc	3 1621 9
	ldrd	r0, r1, [r6, #24]
	movs	r2, #1
	ldr	r3, [r1, #12]
	movw	r1, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.212
	movt	r1, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.212
	movs	r5, #1
	blx	r3
.Ltmp1318:
	.loc	44 369 21
	cbnz	r0, .LBB119_8
.LBB119_7:
.Ltmp1319:
	.loc	3 1621 9
	ldrd	r0, r1, [r6, #24]
	movs	r2, #1
	ldr	r3, [r1, #12]
	movw	r1, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.213
	movt	r1, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.213
	blx	r3
	mov	r5, r0
.Ltmp1320:
.LBB119_8:
	.loc	44 367 13
	strb	r5, [r4, #8]
.LBB119_9:
	.loc	44 374 9
	cmp	r5, #0
	it	ne
	movne	r5, #1
	.loc	44 375 6
	mov	r0, r5
	ldr	r11, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.Ltmp1321:
.Lfunc_end119:
	.size	core::fmt::builders::DebugTuple::finish::hfca393014b7f9d44, .Lfunc_end119-core::fmt::builders::DebugTuple::finish::hfca393014b7f9d44
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN4core3fmt9Formatter9write_str17he05d53f0ac3a4f9eE,"ax",%progbits
	.p2align	1
	.type	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e,%function
	.code	16
	.thumb_func
core::fmt::Formatter::write_str::he05d53f0ac3a4f9e:
.Lfunc_begin120:
	.loc	3 1620 0
	.fnstart
	.cfi_startproc
	.loc	3 1621 9 prologue_end
	ldrd	r3, r0, [r0, #24]
	ldr.w	r12, [r0, #12]
	mov	r0, r3
	bx	r12
.Ltmp1322:
.Lfunc_end120:
	.size	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e, .Lfunc_end120-core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN4core3fmt9Formatter9write_fmt17hd37bb40752075c70E,"ax",%progbits
	.p2align	1
	.type	core::fmt::Formatter::write_fmt::hd37bb40752075c70,%function
	.code	16
	.thumb_func
core::fmt::Formatter::write_fmt::hd37bb40752075c70:
.Lfunc_begin121:
	.loc	3 1643 0
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r11}
	push.w	{r8, r9, r11}
	.cfi_offset r11, -24
	.cfi_offset r9, -28
	.cfi_offset r8, -32
	.pad	#24
	sub	sp, #24
.Ltmp1323:
	.loc	3 1644 15 prologue_end
	ldrd	r12, lr, [r0, #24]
	mov	r2, sp
	.loc	3 1644 25 is_stmt 0
	ldm.w	r1, {r3, r4, r5, r6, r8, r9}
	mov	r0, r2
	.loc	3 1644 9
	mov	r1, lr
	.loc	3 1644 25
	stm.w	r0, {r3, r4, r5, r6, r8, r9}
	.loc	3 1644 9
	mov	r0, r12
	bl	core::fmt::write::h5d3fbef16e428eed
	.loc	3 1645 6 is_stmt 1
	add	sp, #24
	pop.w	{r8, r9, r11}
	pop	{r4, r5, r6, r7, pc}
.Ltmp1324:
.Lfunc_end121:
	.size	core::fmt::Formatter::write_fmt::hd37bb40752075c70, .Lfunc_end121-core::fmt::Formatter::write_fmt::hd37bb40752075c70
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN4core3fmt9Formatter15debug_lower_hex17h3647386a22b50f1bE,"ax",%progbits
	.p2align	1
	.type	core::fmt::Formatter::debug_lower_hex::h3647386a22b50f1b,%function
	.code	16
	.thumb_func
core::fmt::Formatter::debug_lower_hex::h3647386a22b50f1b:
.Lfunc_begin122:
	.loc	3 1911 0
	.fnstart
	.cfi_startproc
	.loc	3 1912 9 prologue_end
	ldrb	r0, [r0]
	ubfx	r0, r0, #4, #1
	.loc	3 1913 6
	bx	lr
.Ltmp1325:
.Lfunc_end122:
	.size	core::fmt::Formatter::debug_lower_hex::h3647386a22b50f1b, .Lfunc_end122-core::fmt::Formatter::debug_lower_hex::h3647386a22b50f1b
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN4core3fmt9Formatter15debug_upper_hex17hda639ee7898a7efdE,"ax",%progbits
	.p2align	1
	.type	core::fmt::Formatter::debug_upper_hex::hda639ee7898a7efd,%function
	.code	16
	.thumb_func
core::fmt::Formatter::debug_upper_hex::hda639ee7898a7efd:
.Lfunc_begin123:
	.loc	3 1915 0
	.fnstart
	.cfi_startproc
	.loc	3 1916 9 prologue_end
	ldrb	r0, [r0]
	ubfx	r0, r0, #5, #1
	.loc	3 1917 6
	bx	lr
.Ltmp1326:
.Lfunc_end123:
	.size	core::fmt::Formatter::debug_upper_hex::hda639ee7898a7efd, .Lfunc_end123-core::fmt::Formatter::debug_upper_hex::hda639ee7898a7efd
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN4core3fmt9Formatter12debug_struct17h410abba8da9e6590E,"ax",%progbits
	.p2align	1
	.type	core::fmt::Formatter::debug_struct::h410abba8da9e6590,%function
	.code	16
	.thumb_func
core::fmt::Formatter::debug_struct::h410abba8da9e6590:
.Lfunc_begin124:
	.loc	3 1956 0
	.fnstart
	.cfi_startproc
	.save	{r4, r6, r7, lr}
	push	{r4, r6, r7, lr}
	.cfi_def_cfa_offset 16
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r4, -16
	.setfp	r7, sp, #8
	add	r7, sp, #8
	.cfi_def_cfa r7, 8
	mov	r4, r0
.Ltmp1327:
	.loc	3 1621 9 prologue_end
	ldr	r0, [r0, #24]
	ldr	r3, [r4, #28]
	ldr	r3, [r3, #12]
	blx	r3
	mov	r1, r0
.Ltmp1328:
	.loc	44 101 2
	cmp	r0, #0
.Ltmp1329:
	.loc	3 1958 6
	mov	r0, r4
.Ltmp1330:
	.loc	44 101 2
	it	ne
	movne	r1, #1
.Ltmp1331:
	.loc	3 1958 6
	pop	{r4, r6, r7, pc}
.Ltmp1332:
.Lfunc_end124:
	.size	core::fmt::Formatter::debug_struct::h410abba8da9e6590, .Lfunc_end124-core::fmt::Formatter::debug_struct::h410abba8da9e6590
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN4core3fmt9Formatter11debug_tuple17h9a9c92e1e856202eE,"ax",%progbits
	.p2align	1
	.type	core::fmt::Formatter::debug_tuple::h9a9c92e1e856202e,%function
	.code	16
	.thumb_func
core::fmt::Formatter::debug_tuple::h9a9c92e1e856202e:
.Lfunc_begin125:
	.loc	3 1987 0
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r7, lr}
	push	{r4, r5, r7, lr}
	.cfi_def_cfa_offset 16
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r5, -12
	.cfi_offset r4, -16
	.setfp	r7, sp, #8
	add	r7, sp, #8
	.cfi_def_cfa r7, 8
	mov	r4, r1
	mov	r5, r0
.Ltmp1333:
	.loc	3 1621 9 prologue_end
	ldrd	r0, r1, [r1, #24]
	mov	r12, r3
	ldr	r3, [r1, #12]
	mov	r1, r2
	mov	r2, r12
	blx	r3
.Ltmp1334:
	.loc	44 290 5
	strb	r0, [r5, #8]
	movs	r0, #0
	strb	r0, [r5, #9]
	strd	r4, r0, [r5]
.Ltmp1335:
	.loc	3 1989 6
	pop	{r4, r5, r7, pc}
.Ltmp1336:
.Lfunc_end125:
	.size	core::fmt::Formatter::debug_tuple::h9a9c92e1e856202e, .Lfunc_end125-core::fmt::Formatter::debug_tuple::h9a9c92e1e856202e
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN43_$LT$bool$u20$as$u20$core..fmt..Display$GT$3fmt17hda8ae0c64ceca41dE","ax",%progbits
	.p2align	1
	.type	<bool as core::fmt::Display>::fmt::hda8ae0c64ceca41d,%function
	.code	16
	.thumb_func
<bool as core::fmt::Display>::fmt::hda8ae0c64ceca41d:
.Lfunc_begin126:
	.loc	3 2164 0
	.fnstart
	.cfi_startproc
	.loc	3 2165 25 prologue_end
	ldrb	r0, [r0]
	mov	r2, r1
	cbz	r0, .LBB126_2
.Ltmp1337:
	.loc	3 2197 9
	movw	r1, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.244
	mov	r0, r2
	movt	r1, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.244
	movs	r2, #4
	b	core::fmt::Formatter::pad::h936b549e1667e5be
.Ltmp1338:
.LBB126_2:
	.loc	3 2197 9 is_stmt 0
	movw	r1, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.245
	mov	r0, r2
	movt	r1, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.245
	movs	r2, #5
	b	core::fmt::Formatter::pad::h936b549e1667e5be
.Ltmp1339:
.Lfunc_end126:
	.size	<bool as core::fmt::Display>::fmt::hda8ae0c64ceca41d, .Lfunc_end126-<bool as core::fmt::Display>::fmt::hda8ae0c64ceca41d
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17hc119597c2cd94da3E","ax",%progbits
	.p2align	1
	.type	<str as core::fmt::Display>::fmt::hc119597c2cd94da3,%function
	.code	16
	.thumb_func
<str as core::fmt::Display>::fmt::hc119597c2cd94da3:
.Lfunc_begin127:
	.loc	3 2196 0 is_stmt 1
	.fnstart
	.cfi_startproc
	mov	r3, r1
	mov	r1, r0
.Ltmp1340:
	.loc	3 2197 9 prologue_end
	mov	r0, r2
	mov	r2, r3
	b	core::fmt::Formatter::pad::h936b549e1667e5be
.Ltmp1341:
.Lfunc_end127:
	.size	<str as core::fmt::Display>::fmt::hc119597c2cd94da3, .Lfunc_end127-<str as core::fmt::Display>::fmt::hc119597c2cd94da3
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN4core5slice6memchr19memchr_general_case17h79cbfa5db1e3b72bE,"ax",%progbits
	.p2align	1
	.type	core::slice::memchr::memchr_general_case::h79cbfa5db1e3b72b,%function
	.code	16
	.thumb_func
core::slice::memchr::memchr_general_case::h79cbfa5db1e3b72b:
.Lfunc_begin128:
	.loc	49 51 0
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r11}
	str	r11, [sp, #-4]!
	.cfi_offset r11, -24
	mov	r3, r0
.Ltmp1342:
	.loc	2 1215 13 prologue_end
	adds	r0, r1, #3
	bic	r0, r0, #3
	.loc	2 1215 26 is_stmt 0
	uxtb.w	r12, r3
	.loc	2 1214 16 is_stmt 1
	subs	r0, r0, r1
.Ltmp1343:
	.loc	49 64 8
	beq	.LBB128_11
.Ltmp1344:
	.loc	18 0 0 is_stmt 0
	cmp	r0, r2
	it	hi
	movhi	r0, r2
.Ltmp1345:
	.loc	31 295 18 is_stmt 1
	add.w	lr, r1, r0
	movs	r3, #0
.Ltmp1346:
.LBB128_2:
	.loc	13 295 24 is_stmt 0
	ldrb	r4, [r1, r3]
	cmp	r4, r12
	beq	.LBB128_28
.Ltmp1347:
	.loc	13 0 0
	adds	r4, r1, r3
	.loc	13 146 24 is_stmt 1
	adds	r4, #1
	cmp	r4, lr
	beq	.LBB128_10
.Ltmp1348:
	.loc	13 295 24
	ldrb	r5, [r4]
	cmp	r5, r12
	beq	.LBB128_27
.Ltmp1349:
	.loc	13 146 24
	adds	r4, #1
	cmp	r4, lr
	beq	.LBB128_10
.Ltmp1350:
	.loc	13 295 24
	ldrb	r5, [r4]
	cmp	r5, r12
	beq	.LBB128_29
.Ltmp1351:
	.loc	13 146 24
	adds	r4, #1
	cmp	r4, lr
	beq	.LBB128_10
.Ltmp1352:
	.loc	13 295 24
	ldrb	r5, [r4]
	cmp	r5, r12
	beq	.LBB128_30
.Ltmp1353:
	.loc	13 146 24
	adds	r4, #1
.Ltmp1354:
	.loc	13 301 21
	adds	r3, #4
.Ltmp1355:
	.loc	13 146 24
	cmp	r4, lr
	bne	.LBB128_2
.Ltmp1356:
.LBB128_10:
	.loc	13 0 24 is_stmt 0
	sub.w	lr, r2, #8
	.loc	49 73 11 is_stmt 1
	cmp	r0, lr
	bls	.LBB128_12
	b	.LBB128_16
.LBB128_11:
	.loc	49 0 11 is_stmt 0
	sub.w	lr, r2, #8
	movs	r0, #0
.LBB128_12:
	mov.w	r3, #16843009
.Ltmp1357:
	.loc	49 36 5 is_stmt 1
	mul	r3, r12, r3
.Ltmp1358:
.LBB128_13:
	.loc	49 77 21
	ldr	r4, [r1, r0]
	adds	r5, r1, r0
	.loc	49 78 21
	ldr	r5, [r5, #4]
	.loc	49 81 41
	eors	r4, r3
.Ltmp1359:
	.loc	20 1226 13
	sub.w	r6, r4, #16843009
.Ltmp1360:
	.loc	49 82 41
	eors	r5, r3
.Ltmp1361:
	.loc	49 24 5
	bic.w	r4, r6, r4
.Ltmp1362:
	.loc	20 1226 13
	sub.w	r6, r5, #16843009
.Ltmp1363:
	.loc	49 24 5
	bic.w	r5, r6, r5
.Ltmp1364:
	.loc	49 24 5 is_stmt 0
	orrs	r4, r5
.Ltmp1365:
	.loc	49 83 16 is_stmt 1
	tst.w	r4, #-2139062144
	bne	.LBB128_15
	.loc	49 87 9
	adds	r0, #8
	.loc	49 73 11
	cmp	r0, lr
	bls	.LBB128_13
.LBB128_15:
.Ltmp1366:
	.loc	25 328 12
	cmp	r0, r2
	bhi	.LBB128_35
.Ltmp1367:
.LBB128_16:
	.loc	13 146 24
	cmp	r0, r2
	bne	.LBB128_18
.Ltmp1368:
.LBB128_17:
	.loc	13 0 24 is_stmt 0
	movs	r0, #0
	.loc	49 92 2 is_stmt 1
	mov	r1, r3
	ldr	r11, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.LBB128_18:
	.loc	49 0 0 is_stmt 0
	add	r2, r1
.Ltmp1369:
	.loc	13 295 24 is_stmt 1
	adds	r3, r1, r0
	movs	r1, #0
.LBB128_19:
	ldrb	r6, [r3, r1]
	cmp	r6, r12
	beq	.LBB128_34
.Ltmp1370:
	.loc	13 0 0 is_stmt 0
	adds	r6, r3, r1
	.loc	13 146 24 is_stmt 1
	adds	r4, r6, #1
	cmp	r4, r2
	beq	.LBB128_17
.Ltmp1371:
	.loc	13 295 24
	ldrb	r6, [r4]
	cmp	r6, r12
	beq	.LBB128_31
.Ltmp1372:
	.loc	13 146 24
	adds	r4, #1
	cmp	r4, r2
	beq	.LBB128_17
.Ltmp1373:
	.loc	13 295 24
	ldrb	r6, [r4]
	cmp	r6, r12
	beq	.LBB128_32
.Ltmp1374:
	.loc	13 146 24
	adds	r4, #1
	cmp	r4, r2
	beq	.LBB128_17
.Ltmp1375:
	.loc	13 295 24
	ldrb	r6, [r4]
	cmp	r6, r12
	beq	.LBB128_33
.Ltmp1376:
	.loc	13 146 24
	adds	r6, r4, #1
.Ltmp1377:
	.loc	13 301 21
	adds	r1, #4
.Ltmp1378:
	.loc	13 146 24
	cmp	r6, r2
	bne	.LBB128_19
	b	.LBB128_17
.Ltmp1379:
.LBB128_27:
	.loc	13 298 41
	adds	r3, #1
.Ltmp1380:
.LBB128_28:
	.loc	13 0 41 is_stmt 0
	movs	r0, #1
	.loc	49 92 2 is_stmt 1
	mov	r1, r3
	ldr	r11, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.LBB128_29:
.Ltmp1381:
	.loc	13 298 41
	adds	r3, #2
	movs	r0, #1
.Ltmp1382:
	.loc	49 92 2
	mov	r1, r3
	ldr	r11, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.LBB128_30:
.Ltmp1383:
	.loc	13 298 41
	adds	r3, #3
	movs	r0, #1
.Ltmp1384:
	.loc	49 92 2
	mov	r1, r3
	ldr	r11, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.LBB128_31:
.Ltmp1385:
	.loc	13 298 41
	adds	r1, #1
	b	.LBB128_34
.LBB128_32:
	adds	r1, #2
	b	.LBB128_34
.LBB128_33:
	adds	r1, #3
.Ltmp1386:
.LBB128_34:
	.loc	13 0 41 is_stmt 0
	adds	r3, r1, r0
	movs	r0, #1
	.loc	49 92 2 is_stmt 1
	mov	r1, r3
	ldr	r11, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.LBB128_35:
.Ltmp1387:
	.loc	25 329 13
	movw	r3, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.252
	mov	r1, r2
	movt	r3, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.252
	mov	r2, r3
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.Ltmp1388:
.Lfunc_end128:
	.size	core::slice::memchr::memchr_general_case::h79cbfa5db1e3b72b, .Lfunc_end128-core::slice::memchr::memchr_general_case::h79cbfa5db1e3b72b
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text.unlikely._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17len_mismatch_fail17h7bf74017f2463c91E","ax",%progbits
	.p2align	1
	.type	core::slice::<impl [T]>::copy_from_slice::len_mismatch_fail::h7bf74017f2463c91,%function
	.code	16
	.thumb_func
core::slice::<impl [T]>::copy_from_slice::len_mismatch_fail::h7bf74017f2463c91:
.Lfunc_begin129:
	.loc	30 3160 0
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	.pad	#48
	sub	sp, #48
	strd	r0, r1, [sp]
	movs	r0, #2
.Ltmp1389:
	.loc	3 387 9 prologue_end
	str	r0, [sp, #28]
	add	r0, sp, #32
	str	r0, [sp, #24]
	movs	r0, #0
	strd	r0, r0, [sp, #16]
	movs	r0, #3
	str	r0, [sp, #12]
	movw	r0, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.279
	movt	r0, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.279
	mov	r1, sp
	str	r0, [sp, #8]
.Ltmp1390:
	.loc	30 3161 13
	movw	r0, :lower16:core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::h9d0ff72e374f98e7
	movt	r0, :upper16:core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::h9d0ff72e374f98e7
	strd	r0, r1, [sp, #36]
	mov	r1, r2
	str	r0, [sp, #44]
	add	r0, sp, #4
	str	r0, [sp, #32]
	add	r0, sp, #8
	bl	core::panicking::panic_fmt::h679f68291595c801
	.inst.n	0xdefe
.Ltmp1391:
.Lfunc_end129:
	.size	core::slice::<impl [T]>::copy_from_slice::len_mismatch_fail::h7bf74017f2463c91, .Lfunc_end129-core::slice::<impl [T]>::copy_from_slice::len_mismatch_fail::h7bf74017f2463c91
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN4core3str8converts9from_utf817h12390dae7acf1b60E,"ax",%progbits
	.p2align	1
	.type	core::str::converts::from_utf8::h12390dae7acf1b60,%function
	.code	16
	.thumb_func
core::str::converts::from_utf8::h12390dae7acf1b60:
.Lfunc_begin130:
	.file	58 "/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/str/converts.rs"
	.loc	58 86 0
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10}
	push.w	{r8, r9, r10}
	.cfi_offset r10, -24
	.cfi_offset r9, -28
	.cfi_offset r8, -32
.Ltmp1392:
	.loc	15 134 25 prologue_end
	subs.w	r12, r2, #7
	it	lo
	movlo.w	r12, #0
	.loc	15 137 11
	cmp	r2, #0
	beq.w	.LBB130_58
	.loc	15 0 0 is_stmt 0
	adds	r3, r1, #3
	movw	r8, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.300
	bic	r3, r3, #3
	.loc	15 137 11
	rsb.w	r9, r2, #0
	.loc	15 0 0
	sub.w	lr, r3, r1
	movs	r3, #0
	movt	r8, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.300
	b	.LBB130_4
.LBB130_2:
	adds	r3, #1
.LBB130_3:
	.loc	15 137 11
	cmp	r3, r2
	bhs.w	.LBB130_58
.LBB130_4:
	.loc	15 156 21 is_stmt 1
	ldrb	r6, [r1, r3]
	sxtb	r5, r6
	.loc	15 157 12
	cmp	r5, #0
	bmi	.LBB130_7
	.loc	15 214 16
	adds.w	r4, lr, #1
	beq	.LBB130_2
.Ltmp1393:
	.loc	20 1226 13
	sub.w	r4, lr, r3
.Ltmp1394:
	.loc	15 214 16
	lsls	r4, r4, #30
	bne	.LBB130_2
	b	.LBB130_13
.LBB130_7:
.Ltmp1395:
	.loc	15 271 5
	ldrb.w	r4, [r8, r6]
.Ltmp1396:
	.loc	15 177 13
	cmp	r4, #4
	beq	.LBB130_31
	cmp	r4, #3
	beq	.LBB130_35
	cmp	r4, #2
	bne.w	.LBB130_60
	.loc	15 179 24
	adds	r5, r3, #1
	cmp	r5, r2
	bhs.w	.LBB130_59
	ldrsb	r4, [r1, r5]
	cmn.w	r4, #65
	ble.w	.LBB130_55
	b	.LBB130_60
.LBB130_12:
	.loc	15 230 21
	adds	r3, #32
.LBB130_13:
	.loc	15 216 23
	cmp	r3, r12
	bhs	.LBB130_22
	.loc	15 224 52
	adds	r5, r1, r3
	ldr	r4, [r1, r3]
	.loc	15 225 52
	ldr	r6, [r5, #4]
.Ltmp1397:
	.loc	15 121 5
	orrs	r4, r6
.Ltmp1398:
	.loc	15 226 28
	tst.w	r4, #-2139062144
	bne	.LBB130_22
	.loc	15 230 21
	add.w	r4, r3, #8
	.loc	15 216 23
	cmp	r4, r12
	bhs	.LBB130_21
	.loc	15 224 52
	ldrd	r10, r6, [r5, #8]
.Ltmp1399:
	.loc	15 121 5
	orr.w	r6, r6, r10
.Ltmp1400:
	.loc	15 226 28
	tst.w	r6, #-2139062144
	bne	.LBB130_21
	.loc	15 230 21
	add.w	r4, r3, #16
	.loc	15 216 23
	cmp	r4, r12
	bhs	.LBB130_21
	.loc	15 224 52
	ldrd	r10, r6, [r5, #16]
.Ltmp1401:
	.loc	15 121 5
	orr.w	r6, r6, r10
.Ltmp1402:
	.loc	15 226 28
	tst.w	r6, #-2139062144
	bne	.LBB130_21
	.loc	15 230 21
	add.w	r4, r3, #24
	.loc	15 216 23
	cmp	r4, r12
	bhs	.LBB130_21
	.loc	15 224 52
	ldrd	r6, r5, [r5, #24]
.Ltmp1403:
	.loc	15 121 5
	orrs	r5, r6
.Ltmp1404:
	.loc	15 226 28
	tst.w	r5, #-2139062144
	beq	.LBB130_12
.LBB130_21:
	.loc	15 0 28 is_stmt 0
	mov	r3, r4
.LBB130_22:
	.loc	15 233 23 is_stmt 1
	cmp	r3, r2
	bhs	.LBB130_3
.LBB130_23:
	.loc	15 233 38 is_stmt 0
	ldrsb	r4, [r1, r3]
	.loc	15 233 23
	cmp	r4, #0
	bmi	.LBB130_3
	add.w	r4, r9, r3
	adds	r5, r4, #1
	beq	.LBB130_58
	.loc	15 233 38
	adds	r5, r1, r3
	ldrsb.w	r6, [r5, #1]
	.loc	15 233 23
	cmp	r6, #0
	bmi	.LBB130_2
	adds	r6, r4, #2
	beq	.LBB130_58
	.loc	15 233 38
	ldrsb.w	r6, [r5, #2]
	.loc	15 233 23
	cmp	r6, #0
	bmi	.LBB130_56
	adds	r4, #3
	beq	.LBB130_58
	.loc	15 233 38
	ldrsb.w	r4, [r5, #3]
	.loc	15 233 23
	cmp	r4, #0
	bmi	.LBB130_57
	.loc	15 234 21 is_stmt 1
	adds	r3, #4
	.loc	15 233 23
	adds.w	r4, r9, r3
	bne	.LBB130_23
	b	.LBB130_58
.LBB130_31:
	.loc	15 196 35
	adds	r4, r3, #1
	cmp	r4, r2
	bhs	.LBB130_59
	ldrsb	r4, [r1, r4]
	.loc	15 196 21 is_stmt 0
	cmp	r6, #240
	beq	.LBB130_39
	cmp	r6, #244
	bne	.LBB130_40
	.loc	15 197 83 is_stmt 1
	cmn.w	r4, #113
	ble	.LBB130_43
	b	.LBB130_60
.LBB130_35:
	.loc	15 184 35
	adds	r4, r3, #1
	cmp	r4, r2
	bhs	.LBB130_59
	ldrb	r4, [r1, r4]
	.loc	15 184 21 is_stmt 0
	cmp	r6, #224
	beq	.LBB130_47
	cmp	r6, #237
	bne	.LBB130_48
	.loc	15 184 35
	sxtb	r4, r4
	.loc	15 187 34 is_stmt 1
	cmn.w	r4, #96
	blt	.LBB130_53
	b	.LBB130_60
.LBB130_39:
	.loc	15 197 32
	adds	r4, #112
	uxtb	r4, r4
	cmp	r4, #48
	blo	.LBB130_43
	b	.LBB130_60
.LBB130_40:
	.loc	15 197 48 is_stmt 0
	adds	r5, #15
	movs	r6, #1
	uxtb	r5, r5
	cmp	r5, #2
	bhi	.LBB130_65
	cmp.w	r4, #-1
	bgt	.LBB130_65
	cmn.w	r4, #64
	mov.w	r5, #1
	bhs	.LBB130_64
.LBB130_43:
	.loc	15 200 24 is_stmt 1
	adds	r4, r3, #2
	cmp	r4, r2
	bhs	.LBB130_59
	ldrsb	r4, [r1, r4]
	cmn.w	r4, #65
	bgt	.LBB130_61
	.loc	15 203 24
	adds	r5, r3, #3
	cmp	r5, r2
	bhs	.LBB130_59
	ldrsb	r4, [r1, r5]
	cmn.w	r4, #65
	ble	.LBB130_55
	b	.LBB130_62
.LBB130_47:
	.loc	15 185 32
	and	r4, r4, #224
	cmp	r4, #160
	beq	.LBB130_53
	b	.LBB130_60
.LBB130_48:
	.loc	15 186 28
	add.w	r6, r5, #31
	uxtb	r6, r6
	cmp	r6, #12
	bhs	.LBB130_50
	.loc	15 184 35
	sxtb	r4, r4
	.loc	15 186 41
	cmn.w	r4, #65
	ble	.LBB130_53
	b	.LBB130_60
.LBB130_50:
	.loc	15 188 28
	bic	r5, r5, #1
	movs	r6, #1
	adds	r5, #18
	bne	.LBB130_65
	sxtb	r5, r4
	cmp.w	r5, #-1
	bgt	.LBB130_65
	cmp	r4, #192
	mov.w	r5, #1
	bhs	.LBB130_64
.LBB130_53:
	.loc	15 191 24
	adds	r5, r3, #2
	cmp	r5, r2
	bhs	.LBB130_59
	ldrsb	r4, [r1, r5]
	cmn.w	r4, #65
	bgt	.LBB130_61
.LBB130_55:
	.loc	15 209 13
	adds	r3, r5, #1
	b	.LBB130_3
.LBB130_56:
	.loc	15 233 23
	adds	r3, #2
	b	.LBB130_3
.LBB130_57:
	adds	r3, #3
	b	.LBB130_3
.Ltmp1405:
.LBB130_58:
	.loc	58 91 13
	strd	r1, r2, [r0, #4]
	movs	r1, #0
	str	r1, [r0]
	.loc	58 95 2
	pop.w	{r8, r9, r10}
	pop	{r4, r5, r6, r7, pc}
.LBB130_59:
	.loc	58 0 2 is_stmt 0
	movs	r6, #0
	movs	r5, #0
	b	.LBB130_64
.LBB130_60:
	movs	r6, #1
	movs	r5, #1
	b	.LBB130_64
.LBB130_61:
	movs	r5, #2
	b	.LBB130_63
.LBB130_62:
	movs	r5, #3
.LBB130_63:
	movs	r6, #1
.LBB130_64:
	movs	r1, #0
	.loc	58 93 21 is_stmt 1
	strh.w	r5, [r0, #9]
	strb	r1, [r0, #11]
	movs	r1, #1
	strb	r6, [r0, #8]
	str	r3, [r0, #4]
	.loc	58 91 13
	str	r1, [r0]
	.loc	58 95 2
	pop.w	{r8, r9, r10}
	pop	{r4, r5, r6, r7, pc}
.Ltmp1406:
.LBB130_65:
	.loc	58 0 2 is_stmt 0
	movs	r5, #1
	b	.LBB130_64
.Lfunc_end130:
	.size	core::str::converts::from_utf8::h12390dae7acf1b60, .Lfunc_end130-core::str::converts::from_utf8::h12390dae7acf1b60
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN4core3fmt3num3imp51_$LT$impl$u20$core..fmt..Display$u20$for$u20$u8$GT$3fmt17ha0378c4201814c21E","ax",%progbits
	.p2align	1
	.type	core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt::ha0378c4201814c21,%function
	.code	16
	.thumb_func
core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt::ha0378c4201814c21:
.Lfunc_begin131:
	.loc	8 279 0 is_stmt 1
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	.pad	#48
	sub	sp, #48
	mov	r2, r1
.Ltmp1407:
	.loc	8 44 37 prologue_end
	ldrb	r1, [r0]
.Ltmp1408:
	.loc	8 249 20
	cmp	r1, #99
	bls	.LBB131_2
	.loc	8 251 21
	uxtb	r0, r1
	movs	r3, #41
	muls	r0, r3, r0
	lsrs	r3, r0, #12
	mvn	r0, #99
	smlabb	r0, r3, r0, r1
.Ltmp1409:
	.loc	31 295 18
	movw	r1, :lower16:ryu::digit_table::DIGIT_TABLE::h67064246f2e4c187
	movt	r1, :upper16:ryu::digit_table::DIGIT_TABLE::h67064246f2e4c187
.Ltmp1410:
	.loc	8 250 30
	uxtb	r0, r0
.Ltmp1411:
	.loc	9 2104 14
	ldrh.w	r0, [r1, r0, lsl #1]
	mov	r1, r3
	strh.w	r0, [sp, #45]
	movs	r0, #36
	b	.LBB131_4
.Ltmp1412:
.LBB131_2:
	.loc	8 257 20
	cmp	r1, #10
	bhs	.LBB131_5
	.loc	8 0 20 is_stmt 0
	movs	r0, #38
.LBB131_4:
	add	r3, sp, #8
	.loc	8 259 21 is_stmt 1
	adds	r1, #48
	strb	r1, [r3, r0]
	b	.LBB131_6
.LBB131_5:
.Ltmp1413:
	.loc	31 295 18
	movw	r0, :lower16:ryu::digit_table::DIGIT_TABLE::h67064246f2e4c187
	movt	r0, :upper16:ryu::digit_table::DIGIT_TABLE::h67064246f2e4c187
.Ltmp1414:
	.loc	9 2104 14
	ldrh.w	r0, [r0, r1, lsl #1]
	strh.w	r0, [sp, #45]
	movs	r0, #37
.Ltmp1415:
.LBB131_6:
	.loc	8 271 65
	rsb.w	r1, r0, #39
	.loc	8 273 13
	str	r1, [sp]
	add	r1, sp, #8
.Ltmp1416:
	.loc	10 307 18
	adds	r3, r1, r0
.Ltmp1417:
	.loc	8 273 13
	movw	r1, :lower16:CORE_PERIPHERALS
	mov	r0, r2
	movt	r1, :upper16:CORE_PERIPHERALS
	movs	r2, #0
	bl	core::fmt::Formatter::pad_integral::h9f90d3af72be363b
.Ltmp1418:
	.loc	8 288 14
	add	sp, #48
	pop	{r7, pc}
.Ltmp1419:
.Lfunc_end131:
	.size	core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt::ha0378c4201814c21, .Lfunc_end131-core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt::ha0378c4201814c21
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN4core3fmt3num52_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i8$GT$3fmt17hd91ed785dea0d6b1E","ax",%progbits
	.p2align	1
	.type	core::fmt::num::<impl core::fmt::LowerHex for i8>::fmt::hd91ed785dea0d6b1,%function
	.code	16
	.thumb_func
core::fmt::num::<impl core::fmt::LowerHex for i8>::fmt::hd91ed785dea0d6b1:
.Lfunc_begin132:
	.loc	8 154 0
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8}
	str	r8, [sp, #-4]!
	.cfi_offset r8, -24
	.pad	#136
	sub	sp, #136
.Ltmp1420:
	.loc	8 155 32 prologue_end
	ldrb	r6, [r0]
	mov	r4, r1
	movs	r1, #87
	add.w	r8, sp, #8
	and	r0, r6, #15
	movs	r5, #87
	cmp	r0, #10
	it	lo
	movlo	r1, #48
	adds	r2, r1, r0
	mov	r0, r8
	movs	r1, #128
	bl	__aeabi_memset4
	cmp	r6, #160
	it	lo
	movlo	r5, #48
	add.w	r0, r5, r6, lsr #4
.Ltmp1421:
	.loc	45 496 9
	strb.w	r0, [sp, #134]
.Ltmp1422:
	.loc	8 83 20
	movs	r0, #2
	cmp	r6, #16
	it	lo
	movlo	r0, #1
	.loc	8 110 9
	str	r0, [sp]
	movs	r0, #126
	movw	r1, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.232
	.loc	8 83 20
	cmp	r6, #16
	it	lo
	movlo	r0, #127
.Ltmp1423:
	.loc	31 295 18
	add.w	r3, r8, r0
.Ltmp1424:
	.loc	8 110 9
	movt	r1, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.232
	mov	r0, r4
	movs	r2, #2
	bl	core::fmt::Formatter::pad_integral::h9f90d3af72be363b
.Ltmp1425:
	.loc	8 156 14
	add	sp, #136
	ldr	r8, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.Ltmp1426:
.Lfunc_end132:
	.size	core::fmt::num::<impl core::fmt::LowerHex for i8>::fmt::hd91ed785dea0d6b1, .Lfunc_end132-core::fmt::num::<impl core::fmt::LowerHex for i8>::fmt::hd91ed785dea0d6b1
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i32$GT$3fmt17hac89ce7c82380f7eE","ax",%progbits
	.p2align	1
	.type	core::fmt::num::<impl core::fmt::LowerHex for i32>::fmt::hac89ce7c82380f7e,%function
	.code	16
	.thumb_func
core::fmt::num::<impl core::fmt::LowerHex for i32>::fmt::hac89ce7c82380f7e:
.Lfunc_begin133:
	.loc	8 154 0
	.fnstart
	.cfi_startproc
	.save	{r4, r6, r7, lr}
	push	{r4, r6, r7, lr}
	.cfi_def_cfa_offset 16
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r4, -16
	.setfp	r7, sp, #8
	add	r7, sp, #8
	.cfi_def_cfa r7, 8
	.pad	#136
	sub	sp, #136
.Ltmp1427:
	.loc	8 155 32 prologue_end
	ldr	r0, [r0]
	add.w	r12, sp, #8
	mov.w	lr, #129
.LBB133_1:
.Ltmp1428:
	.loc	8 42 35
	and	r3, r0, #15
	add.w	r2, r12, lr
.Ltmp1429:
	.loc	8 147 35
	cmp	r3, #10
	mov.w	r4, #87
	it	lo
	movlo	r4, #48
.Ltmp1430:
	.loc	8 83 20
	cmp	r0, #16
.Ltmp1431:
	.loc	8 0 0 is_stmt 0
	add	r3, r4
.Ltmp1432:
	.loc	45 496 9 is_stmt 1
	strb	r3, [r2, #-2]
.Ltmp1433:
	.loc	8 83 20
	blo	.LBB133_6
	.loc	8 0 0 is_stmt 0
	uxtb	r3, r0
.Ltmp1434:
	.loc	8 147 35 is_stmt 1
	movs	r4, #87
	cmp	r3, #160
	it	lo
	movlo	r4, #48
	.loc	8 0 0 is_stmt 0
	add.w	r3, r4, r3, lsr #4
.Ltmp1435:
	.loc	45 496 9 is_stmt 1
	strb	r3, [r2, #-3]
.Ltmp1436:
	.loc	46 500 45
	lsrs	r3, r0, #8
.Ltmp1437:
	.loc	8 83 20
	beq	.LBB133_7
.Ltmp1438:
	.loc	8 42 35
	and	r3, r3, #15
.Ltmp1439:
	.loc	8 147 35
	movs	r4, #87
	cmp	r3, #10
	it	lo
	movlo	r4, #48
	.loc	8 0 0 is_stmt 0
	add	r3, r4
.Ltmp1440:
	.loc	45 496 9 is_stmt 1
	strb	r3, [r2, #-4]
.Ltmp1441:
	.loc	46 500 45
	lsrs	r3, r0, #12
.Ltmp1442:
	.loc	8 83 20
	beq	.LBB133_8
.Ltmp1443:
	.loc	8 42 35
	and	r3, r3, #15
.Ltmp1444:
	.loc	8 147 35
	movs	r4, #87
	cmp	r3, #10
.Ltmp1445:
	.loc	8 83 20
	sub.w	lr, lr, #4
.Ltmp1446:
	.loc	8 147 35
	it	lo
	movlo	r4, #48
.Ltmp1447:
	.loc	46 500 45
	lsrs	r0, r0, #16
.Ltmp1448:
	.loc	8 0 0 is_stmt 0
	add	r3, r4
.Ltmp1449:
	.loc	45 496 9 is_stmt 1
	strb	r3, [r2, #-5]
.Ltmp1450:
	.loc	8 83 20
	bne	.LBB133_1
.Ltmp1451:
	.loc	25 328 12
	sub.w	r0, lr, #1
	b	.LBB133_9
.LBB133_6:
	sub.w	r0, lr, #2
	sub.w	lr, lr, #1
	b	.LBB133_9
.LBB133_7:
	sub.w	r0, lr, #3
.Ltmp1452:
	.loc	8 82 17
	sub.w	lr, lr, #2
	b	.LBB133_9
.LBB133_8:
.Ltmp1453:
	.loc	25 328 12
	sub.w	r0, lr, #4
.Ltmp1454:
	.loc	8 82 17
	sub.w	lr, lr, #3
.LBB133_9:
.Ltmp1455:
	.loc	25 328 12
	cmp	r0, #129
	bhs	.LBB133_11
.Ltmp1456:
	.loc	25 229 76
	rsb.w	r2, lr, #129
.Ltmp1457:
	.loc	8 110 9
	str	r2, [sp]
	movw	r2, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.232
.Ltmp1458:
	.loc	31 295 18
	add.w	r3, r12, r0
.Ltmp1459:
	.loc	8 110 9
	movt	r2, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.232
	mov	r0, r1
	mov	r1, r2
	movs	r2, #2
	bl	core::fmt::Formatter::pad_integral::h9f90d3af72be363b
.Ltmp1460:
	.loc	8 156 14
	add	sp, #136
	pop	{r4, r6, r7, pc}
.LBB133_11:
.Ltmp1461:
	.loc	25 329 13
	movw	r2, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.231
	movs	r1, #128
	movt	r2, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.231
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.Ltmp1462:
.Lfunc_end133:
	.size	core::fmt::num::<impl core::fmt::LowerHex for i32>::fmt::hac89ce7c82380f7e, .Lfunc_end133-core::fmt::num::<impl core::fmt::LowerHex for i32>::fmt::hac89ce7c82380f7e
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN4core3fmt3num52_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i8$GT$3fmt17hc0a456b5846e5633E","ax",%progbits
	.p2align	1
	.type	core::fmt::num::<impl core::fmt::UpperHex for i8>::fmt::hc0a456b5846e5633,%function
	.code	16
	.thumb_func
core::fmt::num::<impl core::fmt::UpperHex for i8>::fmt::hc0a456b5846e5633:
.Lfunc_begin134:
	.loc	8 154 0
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8}
	str	r8, [sp, #-4]!
	.cfi_offset r8, -24
	.pad	#136
	sub	sp, #136
.Ltmp1463:
	.loc	8 155 32 prologue_end
	ldrb	r6, [r0]
	mov	r4, r1
	movs	r1, #55
	add.w	r8, sp, #8
	and	r0, r6, #15
	movs	r5, #55
	cmp	r0, #10
	it	lo
	movlo	r1, #48
	adds	r2, r1, r0
	mov	r0, r8
	movs	r1, #128
	bl	__aeabi_memset4
	cmp	r6, #160
	it	lo
	movlo	r5, #48
	add.w	r0, r5, r6, lsr #4
.Ltmp1464:
	.loc	45 496 9
	strb.w	r0, [sp, #134]
.Ltmp1465:
	.loc	8 83 20
	movs	r0, #2
	cmp	r6, #16
	it	lo
	movlo	r0, #1
	.loc	8 110 9
	str	r0, [sp]
	movs	r0, #126
	movw	r1, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.232
	.loc	8 83 20
	cmp	r6, #16
	it	lo
	movlo	r0, #127
.Ltmp1466:
	.loc	31 295 18
	add.w	r3, r8, r0
.Ltmp1467:
	.loc	8 110 9
	movt	r1, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.232
	mov	r0, r4
	movs	r2, #2
	bl	core::fmt::Formatter::pad_integral::h9f90d3af72be363b
.Ltmp1468:
	.loc	8 156 14
	add	sp, #136
	ldr	r8, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.Ltmp1469:
.Lfunc_end134:
	.size	core::fmt::num::<impl core::fmt::UpperHex for i8>::fmt::hc0a456b5846e5633, .Lfunc_end134-core::fmt::num::<impl core::fmt::UpperHex for i8>::fmt::hc0a456b5846e5633
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17h199b48bc29ed0670E","ax",%progbits
	.p2align	1
	.type	core::fmt::num::<impl core::fmt::UpperHex for i32>::fmt::h199b48bc29ed0670,%function
	.code	16
	.thumb_func
core::fmt::num::<impl core::fmt::UpperHex for i32>::fmt::h199b48bc29ed0670:
.Lfunc_begin135:
	.loc	8 154 0
	.fnstart
	.cfi_startproc
	.save	{r4, r6, r7, lr}
	push	{r4, r6, r7, lr}
	.cfi_def_cfa_offset 16
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r4, -16
	.setfp	r7, sp, #8
	add	r7, sp, #8
	.cfi_def_cfa r7, 8
	.pad	#136
	sub	sp, #136
.Ltmp1470:
	.loc	8 155 32 prologue_end
	ldr	r0, [r0]
	add.w	r12, sp, #8
	mov.w	lr, #129
.LBB135_1:
.Ltmp1471:
	.loc	8 42 35
	and	r3, r0, #15
	add.w	r2, r12, lr
.Ltmp1472:
	.loc	8 148 35
	cmp	r3, #10
	mov.w	r4, #55
	it	lo
	movlo	r4, #48
.Ltmp1473:
	.loc	8 83 20
	cmp	r0, #16
.Ltmp1474:
	.loc	8 0 0 is_stmt 0
	add	r3, r4
.Ltmp1475:
	.loc	45 496 9 is_stmt 1
	strb	r3, [r2, #-2]
.Ltmp1476:
	.loc	8 83 20
	blo	.LBB135_6
	.loc	8 0 0 is_stmt 0
	uxtb	r3, r0
.Ltmp1477:
	.loc	8 148 35 is_stmt 1
	movs	r4, #55
	cmp	r3, #160
	it	lo
	movlo	r4, #48
	.loc	8 0 0 is_stmt 0
	add.w	r3, r4, r3, lsr #4
.Ltmp1478:
	.loc	45 496 9 is_stmt 1
	strb	r3, [r2, #-3]
.Ltmp1479:
	.loc	46 500 45
	lsrs	r3, r0, #8
.Ltmp1480:
	.loc	8 83 20
	beq	.LBB135_7
.Ltmp1481:
	.loc	8 42 35
	and	r3, r3, #15
.Ltmp1482:
	.loc	8 148 35
	movs	r4, #55
	cmp	r3, #10
	it	lo
	movlo	r4, #48
	.loc	8 0 0 is_stmt 0
	add	r3, r4
.Ltmp1483:
	.loc	45 496 9 is_stmt 1
	strb	r3, [r2, #-4]
.Ltmp1484:
	.loc	46 500 45
	lsrs	r3, r0, #12
.Ltmp1485:
	.loc	8 83 20
	beq	.LBB135_8
.Ltmp1486:
	.loc	8 42 35
	and	r3, r3, #15
.Ltmp1487:
	.loc	8 148 35
	movs	r4, #55
	cmp	r3, #10
.Ltmp1488:
	.loc	8 83 20
	sub.w	lr, lr, #4
.Ltmp1489:
	.loc	8 148 35
	it	lo
	movlo	r4, #48
.Ltmp1490:
	.loc	46 500 45
	lsrs	r0, r0, #16
.Ltmp1491:
	.loc	8 0 0 is_stmt 0
	add	r3, r4
.Ltmp1492:
	.loc	45 496 9 is_stmt 1
	strb	r3, [r2, #-5]
.Ltmp1493:
	.loc	8 83 20
	bne	.LBB135_1
.Ltmp1494:
	.loc	25 328 12
	sub.w	r0, lr, #1
	b	.LBB135_9
.LBB135_6:
	sub.w	r0, lr, #2
	sub.w	lr, lr, #1
	b	.LBB135_9
.LBB135_7:
	sub.w	r0, lr, #3
.Ltmp1495:
	.loc	8 82 17
	sub.w	lr, lr, #2
	b	.LBB135_9
.LBB135_8:
.Ltmp1496:
	.loc	25 328 12
	sub.w	r0, lr, #4
.Ltmp1497:
	.loc	8 82 17
	sub.w	lr, lr, #3
.LBB135_9:
.Ltmp1498:
	.loc	25 328 12
	cmp	r0, #129
	bhs	.LBB135_11
.Ltmp1499:
	.loc	25 229 76
	rsb.w	r2, lr, #129
.Ltmp1500:
	.loc	8 110 9
	str	r2, [sp]
	movw	r2, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.232
.Ltmp1501:
	.loc	31 295 18
	add.w	r3, r12, r0
.Ltmp1502:
	.loc	8 110 9
	movt	r2, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.232
	mov	r0, r1
	mov	r1, r2
	movs	r2, #2
	bl	core::fmt::Formatter::pad_integral::h9f90d3af72be363b
.Ltmp1503:
	.loc	8 156 14
	add	sp, #136
	pop	{r4, r6, r7, pc}
.LBB135_11:
.Ltmp1504:
	.loc	25 329 13
	movw	r2, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.231
	movs	r1, #128
	movt	r2, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.231
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.Ltmp1505:
.Lfunc_end135:
	.size	core::fmt::num::<impl core::fmt::UpperHex for i32>::fmt::h199b48bc29ed0670, .Lfunc_end135-core::fmt::num::<impl core::fmt::UpperHex for i32>::fmt::h199b48bc29ed0670
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN53_$LT$core..fmt..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17hfa2a9d808c106497E","ax",%progbits
	.p2align	1
	.type	<core::fmt::Error as core::fmt::Debug>::fmt::hfa2a9d808c106497,%function
	.code	16
	.thumb_func
<core::fmt::Error as core::fmt::Debug>::fmt::hfa2a9d808c106497:
.Lfunc_begin136:
	.loc	3 96 0
	.fnstart
	.cfi_startproc
	.loc	3 1621 9 prologue_end
	ldrd	r0, r2, [r1, #24]
	movw	r1, :lower16:.Lanon.5beea011998fea4e4b11a776df4066f0.549
	ldr	r3, [r2, #12]
	movt	r1, :upper16:.Lanon.5beea011998fea4e4b11a776df4066f0.549
	movs	r2, #5
	bx	r3
.Ltmp1506:
.Lfunc_end136:
	.size	<core::fmt::Error as core::fmt::Debug>::fmt::hfa2a9d808c106497, .Lfunc_end136-<core::fmt::Error as core::fmt::Debug>::fmt::hfa2a9d808c106497
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.HardFault.default,"ax",%progbits
	.globl	HardFault_
	.p2align	1
	.type	HardFault_,%function
	.code	16
	.thumb_func
HardFault_:
.Lfunc_begin137:
	.fnstart
	.cfi_startproc
	@ COMPILER BARRIER
.LBB137_1:
	b	.LBB137_1
.Lfunc_end137:
	.size	HardFault_, .Lfunc_end137-HardFault_
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text.DefaultHandler_,"ax",%progbits
	.globl	DefaultHandler_
	.p2align	1
	.type	DefaultHandler_,%function
	.code	16
	.thumb_func
DefaultHandler_:
.Lfunc_begin138:
	.fnstart
	.cfi_startproc
	@ COMPILER BARRIER
.LBB138_1:
	b	.LBB138_1
.Lfunc_end138:
	.size	DefaultHandler_, .Lfunc_end138-DefaultHandler_
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text.DefaultPreInit,"ax",%progbits
	.globl	DefaultPreInit
	.p2align	1
	.type	DefaultPreInit,%function
	.code	16
	.thumb_func
DefaultPreInit:
.Lfunc_begin139:
	.fnstart
	.cfi_startproc
	bx	lr
.Lfunc_end139:
	.size	DefaultPreInit, .Lfunc_end139-DefaultPreInit
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17hc08c0a6398143c4fE","ax",%progbits
	.p2align	1
	.type	<&mut W as core::fmt::Write>::write_str::hc08c0a6398143c4f,%function
	.code	16
	.thumb_func
<&mut W as core::fmt::Write>::write_str::hc08c0a6398143c4f:
.Lfunc_begin140:
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	mov	r0, r1
	mov	r1, r2
	bl	_defmt_write
	movs	r0, #0
	pop	{r7, pc}
.Lfunc_end140:
	.size	<&mut W as core::fmt::Write>::write_str::hc08c0a6398143c4f, .Lfunc_end140-<&mut W as core::fmt::Write>::write_str::hc08c0a6398143c4f
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17hb8314b2848965858E","ax",%progbits
	.p2align	1
	.type	<&mut W as core::fmt::Write>::write_char::hb8314b2848965858,%function
	.code	16
	.thumb_func
<&mut W as core::fmt::Write>::write_char::hb8314b2848965858:
.Lfunc_begin141:
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	.pad	#8
	sub	sp, #8
	cmp	r1, #128
	mov.w	r0, #0
	str	r0, [sp, #4]
	bhs	.LBB141_2
	strb.w	r1, [sp, #4]
	movs	r2, #1
	b	.LBB141_7
.LBB141_2:
	cmp.w	r1, #2048
	bhs	.LBB141_4
	movs	r0, #192
	movs	r2, #2
	orr.w	r0, r0, r1, lsr #6
	strb.w	r0, [sp, #4]
	bfi	r1, r2, #6, #26
	strb.w	r1, [sp, #5]
	b	.LBB141_7
.LBB141_4:
	cmp.w	r1, #65536
	bhs	.LBB141_6
	movs	r0, #224
	movs	r2, #2
	orr.w	r0, r0, r1, lsr #12
	strb.w	r0, [sp, #4]
	lsrs	r0, r1, #6
	bfi	r0, r2, #6, #26
	strb.w	r0, [sp, #5]
	bfi	r1, r2, #6, #26
	strb.w	r1, [sp, #6]
	movs	r2, #3
	b	.LBB141_7
.LBB141_6:
	movs	r0, #240
	movs	r2, #2
	orr.w	r0, r0, r1, lsr #18
	strb.w	r0, [sp, #4]
	lsrs	r0, r1, #12
	bfi	r0, r2, #6, #26
	strb.w	r0, [sp, #5]
	lsrs	r0, r1, #6
	bfi	r0, r2, #6, #26
	strb.w	r0, [sp, #6]
	bfi	r1, r2, #6, #26
	movs	r2, #4
	strb.w	r1, [sp, #7]
.LBB141_7:
	add	r0, sp, #4
	mov	r1, r2
	bl	_defmt_write
	movs	r0, #0
	add	sp, #8
	pop	{r7, pc}
.Lfunc_end141:
	.size	<&mut W as core::fmt::Write>::write_char::hb8314b2848965858, .Lfunc_end141-<&mut W as core::fmt::Write>::write_char::hb8314b2848965858
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17h87864b847c528cefE","ax",%progbits
	.p2align	1
	.type	<&mut W as core::fmt::Write>::write_fmt::h87864b847c528cef,%function
	.code	16
	.thumb_func
<&mut W as core::fmt::Write>::write_fmt::h87864b847c528cef:
.Lfunc_begin142:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r11}
	str	r11, [sp, #-4]!
	.cfi_offset r11, -24
	.pad	#32
	sub	sp, #32
	add	r2, sp, #8
	ldr	r0, [r0]
	str	r0, [sp, #4]
	mov	r0, r2
	ldm.w	r1, {r3, r4, r5, r6, r12, lr}
	movw	r1, :lower16:.Lanon.f2125f0e4e7c810e47e19edfd9da912c.10
	stm.w	r0, {r3, r4, r5, r6, r12, lr}
	movt	r1, :upper16:.Lanon.f2125f0e4e7c810e47e19edfd9da912c.10
	add	r0, sp, #4
	bl	core::fmt::write::h5d3fbef16e428eed
	add	sp, #32
	ldr	r11, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.Lfunc_end142:
	.size	<&mut W as core::fmt::Write>::write_fmt::h87864b847c528cef, .Lfunc_end142-<&mut W as core::fmt::Write>::write_fmt::h87864b847c528cef
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h610f375f363efd9cE","ax",%progbits
	.p2align	1
	.type	<&T as core::fmt::Display>::fmt::h610f375f363efd9c,%function
	.code	16
	.thumb_func
<&T as core::fmt::Display>::fmt::h610f375f363efd9c:
.Lfunc_begin143:
	.fnstart
	.cfi_startproc
	ldrd	r0, r2, [r0]
	ldr	r2, [r2, #12]
	bx	r2
.Lfunc_end143:
	.size	<&T as core::fmt::Display>::fmt::h610f375f363efd9c, .Lfunc_end143-<&T as core::fmt::Display>::fmt::h610f375f363efd9c
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN5defmt6export6header17hea8fc65126d0803eE,"ax",%progbits
	.p2align	1
	.type	defmt::export::header::hea8fc65126d0803e,%function
	.code	16
	.thumb_func
defmt::export::header::hea8fc65126d0803e:
.Lfunc_begin144:
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	.pad	#8
	sub	sp, #8
	strh	r0, [r7, #-2]
	subs	r0, r7, #2
	movs	r1, #2
	bl	_defmt_write
	bl	_defmt_timestamp
	add	sp, #8
	pop	{r7, pc}
.Lfunc_end144:
	.size	defmt::export::header::hea8fc65126d0803e, .Lfunc_end144-defmt::export::header::hea8fc65126d0803e
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text.__defmt_default_panic,"ax",%progbits
	.globl	__defmt_default_panic
	.p2align	1
	.type	__defmt_default_panic,%function
	.code	16
	.thumb_func
__defmt_default_panic:
.Lfunc_begin145:
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	movw	r0, :lower16:.Lanon.f2125f0e4e7c810e47e19edfd9da912c.6
	movw	r2, :lower16:.Lanon.f2125f0e4e7c810e47e19edfd9da912c.8
	movt	r0, :upper16:.Lanon.f2125f0e4e7c810e47e19edfd9da912c.6
	movt	r2, :upper16:.Lanon.f2125f0e4e7c810e47e19edfd9da912c.8
	movs	r1, #14
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.Lfunc_end145:
	.size	__defmt_default_panic, .Lfunc_end145-__defmt_default_panic
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN9defmt_rtt7channel7Channel14blocking_write17h3e0378a54da30f05E,"ax",%progbits
	.p2align	1
	.type	defmt_rtt::channel::Channel::blocking_write::h3e0378a54da30f05,%function
	.code	16
	.thumb_func
defmt_rtt::channel::Channel::blocking_write::h3e0378a54da30f05:
.Lfunc_begin146:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r11}
	push.w	{r8, r9, r11}
	.cfi_offset r11, -24
	.cfi_offset r9, -28
	.cfi_offset r8, -32
	cbz	r2, .LBB146_10
	mov	r8, r1
	mov	r5, r0
	ldr	r1, [r0, #16]
	ldr	r0, [r0, #12]
	dmb	sy
	mov	r4, r2
	cmp	r1, r0
	bls	.LBB146_3
	mvns	r2, r0
	add	r1, r2
	cbnz	r1, .LBB146_5
	b	.LBB146_10
.LBB146_3:
	cbz	r1, .LBB146_9
	rsb.w	r1, r0, #1024
	cbz	r1, .LBB146_10
.LBB146_5:
	cmp	r1, r4
	it	lo
	movlo	r4, r1
	adds	r6, r4, r0
	cmp.w	r6, #1024
	bls	.LBB146_7
	ldr	r1, [r5, #4]
	rsb.w	r9, r0, #1024
	add	r0, r1
	mov	r1, r8
	mov	r2, r9
	bl	__aeabi_memcpy
	add.w	r1, r8, r9
	ldr	r0, [r5, #4]
	sub.w	r2, r4, r9
	b	.LBB146_8
.LBB146_7:
	ldr	r1, [r5, #4]
	mov	r2, r4
	add	r0, r1
	mov	r1, r8
.LBB146_8:
	bl	__aeabi_memcpy
	dmb	sy
	bfc	r6, #10, #22
	str	r6, [r5, #12]
	mov	r0, r4
	pop.w	{r8, r9, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB146_9:
	movw	r1, #1023
	subs	r1, r1, r0
	cmp	r1, #0
	bne	.LBB146_5
.LBB146_10:
	movs	r4, #0
	mov	r0, r4
	pop.w	{r8, r9, r11}
	pop	{r4, r5, r6, r7, pc}
.Lfunc_end146:
	.size	defmt_rtt::channel::Channel::blocking_write::h3e0378a54da30f05, .Lfunc_end146-defmt_rtt::channel::Channel::blocking_write::h3e0378a54da30f05
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN9defmt_rtt7channel7Channel17nonblocking_write17h5e7e7d524b1f83feE,"ax",%progbits
	.p2align	1
	.type	defmt_rtt::channel::Channel::nonblocking_write::h5e7e7d524b1f83fe,%function
	.code	16
	.thumb_func
defmt_rtt::channel::Channel::nonblocking_write::h5e7e7d524b1f83fe:
.Lfunc_begin147:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r11}
	push.w	{r8, r9, r11}
	.cfi_offset r11, -24
	.cfi_offset r9, -28
	.cfi_offset r8, -32
	mov	r4, r0
	ldr	r0, [r0, #12]
	mov	r5, r2
	cmp.w	r2, #1024
	dmb	sy
	it	hs
	movhs.w	r5, #1024
	adds	r6, r0, r5
	mov	r9, r1
	cmp.w	r6, #1024
	bls	.LBB147_2
	ldr	r1, [r4, #4]
	rsb.w	r8, r0, #1024
	add	r0, r1
	mov	r1, r9
	mov	r2, r8
	bl	__aeabi_memcpy
	add.w	r1, r9, r8
	ldr	r0, [r4, #4]
	sub.w	r2, r5, r8
	b	.LBB147_3
.LBB147_2:
	ldr	r1, [r4, #4]
	mov	r2, r5
	add	r0, r1
	mov	r1, r9
.LBB147_3:
	bl	__aeabi_memcpy
	dmb	sy
	bfc	r6, #10, #22
	str	r6, [r4, #12]
	mov	r0, r5
	pop.w	{r8, r9, r11}
	pop	{r4, r5, r6, r7, pc}
.Lfunc_end147:
	.size	defmt_rtt::channel::Channel::nonblocking_write::h5e7e7d524b1f83fe, .Lfunc_end147-defmt_rtt::channel::Channel::nonblocking_write::h5e7e7d524b1f83fe
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._defmt_acquire,"ax",%progbits
	.globl	_defmt_acquire
	.p2align	1
	.type	_defmt_acquire,%function
	.code	16
	.thumb_func
_defmt_acquire:
.Lfunc_begin148:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r11}
	str	r11, [sp, #-4]!
	.cfi_offset r11, -24
	.pad	#24
	sub	sp, #24
	bl	__primask_r
	mov	r4, r0
	bl	__cpsid
	movw	r0, :lower16:.L_MergedGlobals
	movt	r0, :upper16:.L_MergedGlobals
	ldrb	r1, [r0]
	cbnz	r1, .LBB148_7
	movs	r1, #1
	strb	r1, [r0]
	bic.w	r2, r1, r4
	strb	r2, [r0, #1]
	ldrb	r2, [r0, #4]
	cbnz	r2, .LBB148_5
	strb	r1, [r0, #4]
	movs	r0, #0
	strb.w	r0, [sp]
	movw	r0, :lower16:_SEGGER_RTT
	movt	r0, :upper16:_SEGGER_RTT
	movw	r6, :lower16:defmt_rtt::channel::Channel::nonblocking_write::h5e7e7d524b1f83fe
	movw	r2, :lower16:defmt_rtt::channel::Channel::blocking_write::h3e0378a54da30f05
	movt	r6, :upper16:defmt_rtt::channel::Channel::nonblocking_write::h5e7e7d524b1f83fe
	ldr	r1, [r0, #44]
	add.w	r4, r0, #24
	and	r1, r1, #3
	mov	r5, sp
	movt	r2, :upper16:defmt_rtt::channel::Channel::blocking_write::h3e0378a54da30f05
	cmp	r1, #2
	it	eq
	moveq	r6, r2
.LBB148_3:
	movs	r2, #1
	mov	r0, r4
	mov	r1, r5
	blx	r6
	cmp	r0, #0
	beq	.LBB148_3
	cmp	r0, #1
	bne	.LBB148_6
.LBB148_5:
	add	sp, #24
	ldr	r11, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.LBB148_6:
	movw	r2, :lower16:.Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.1
	movs	r1, #1
	movt	r2, :upper16:.Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.1
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB148_7:
	movw	r0, :lower16:.Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.3
	movw	r1, :lower16:CORE_PERIPHERALS
	movt	r0, :upper16:.Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.3
	str	r0, [sp]
	movs	r0, #1
	movt	r1, :upper16:CORE_PERIPHERALS
	str	r0, [sp, #4]
	movs	r0, #0
	strd	r1, r0, [sp, #16]
	movw	r1, :lower16:.Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.6
	strd	r0, r0, [sp, #8]
	movt	r1, :upper16:.Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.6
	mov	r0, sp
	bl	core::panicking::panic_fmt::h679f68291595c801
	.inst.n	0xdefe
.Lfunc_end148:
	.size	_defmt_acquire, .Lfunc_end148-_defmt_acquire
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._defmt_flush,"ax",%progbits
	.globl	_defmt_flush
	.p2align	1
	.type	_defmt_flush,%function
	.code	16
	.thumb_func
_defmt_flush:
.Lfunc_begin149:
	.fnstart
	.cfi_startproc
	movw	r0, :lower16:_SEGGER_RTT
	movt	r0, :upper16:_SEGGER_RTT
	ldr	r1, [r0, #44]
	and	r1, r1, #3
	cmp	r1, #2
	it	ne
	bxne	lr
.LBB149_1:
	ldr	r1, [r0, #40]
	ldr	r2, [r0, #36]
	cmp	r1, r2
	beq	.LBB149_4
	ldr	r1, [r0, #40]
	ldr	r2, [r0, #36]
	cmp	r1, r2
	ittt	ne
	ldrne	r1, [r0, #40]
	ldrne	r2, [r0, #36]
	cmpne	r1, r2
	beq	.LBB149_4
	ldr	r1, [r0, #40]
	ldr	r2, [r0, #36]
	cmp	r1, r2
	bne	.LBB149_1
.LBB149_4:
	bx	lr
.Lfunc_end149:
	.size	_defmt_flush, .Lfunc_end149-_defmt_flush
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._defmt_release,"ax",%progbits
	.globl	_defmt_release
	.p2align	1
	.type	_defmt_release,%function
	.code	16
	.thumb_func
_defmt_release:
.Lfunc_begin150:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#4
	sub	sp, #4
	movw	r8, :lower16:.L_MergedGlobals
	movw	r9, :lower16:_SEGGER_RTT
	movt	r8, :upper16:.L_MergedGlobals
	movw	r10, :lower16:defmt_rtt::channel::Channel::blocking_write::h3e0378a54da30f05
	movw	r6, :lower16:defmt_rtt::channel::Channel::nonblocking_write::h5e7e7d524b1f83fe
	movt	r9, :upper16:_SEGGER_RTT
	ldrb.w	r0, [r8, #2]
	movt	r10, :upper16:defmt_rtt::channel::Channel::blocking_write::h3e0378a54da30f05
	movt	r6, :upper16:defmt_rtt::channel::Channel::nonblocking_write::h5e7e7d524b1f83fe
	cbz	r0, .LBB150_7
	cmp	r0, #7
	bhs	.LBB150_4
	ldrb.w	r1, [r8, #3]
	mov.w	r2, #-1
	lsl.w	r0, r2, r0
	mov	r5, r6
	orrs	r0, r1
	add.w	r4, r9, #24
	and	r0, r0, #127
	strb	r0, [r7, #-29]
	ldr.w	r0, [r9, #44]
	sub.w	r11, r7, #29
	and	r0, r0, #3
	cmp	r0, #2
	it	eq
	moveq	r5, r10
.LBB150_3:
	movs	r2, #1
	mov	r0, r4
	mov	r1, r11
	blx	r5
	cmp	r0, #0
	beq	.LBB150_3
	b	.LBB150_6
.LBB150_4:
	adds	r0, #121
	mov	r5, r6
	orr	r0, r0, #128
	strb	r0, [r7, #-30]
	ldr.w	r0, [r9, #44]
	add.w	r4, r9, #24
	and	r0, r0, #3
	sub.w	r11, r7, #30
	cmp	r0, #2
	it	eq
	moveq	r5, r10
.LBB150_5:
	movs	r2, #1
	mov	r0, r4
	mov	r1, r11
	blx	r5
	cmp	r0, #0
	beq	.LBB150_5
.LBB150_6:
	cmp	r0, #1
	bne	.LBB150_13
.LBB150_7:
	movs	r0, #0
	strb	r0, [r7, #-31]
	ldr.w	r0, [r9, #44]
	add.w	r4, r9, #24
	and	r0, r0, #3
	sub.w	r5, r7, #31
	cmp	r0, #2
	it	eq
	moveq	r6, r10
.LBB150_8:
	movs	r2, #1
	mov	r0, r4
	mov	r1, r5
	blx	r6
	cmp	r0, #0
	beq	.LBB150_8
	cmp	r0, #1
	bne	.LBB150_13
	movs	r0, #0
	strh.w	r0, [r8, #2]
	strb.w	r0, [r8]
	ldrb.w	r0, [r8, #1]
	cbz	r0, .LBB150_12
	bl	__cpsie
.LBB150_12:
	add	sp, #4
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB150_13:
	movw	r2, :lower16:.Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.1
	movs	r1, #1
	movt	r2, :upper16:.Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.1
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.Lfunc_end150:
	.size	_defmt_release, .Lfunc_end150-_defmt_release
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._defmt_write,"ax",%progbits
	.globl	_defmt_write
	.p2align	1
	.type	_defmt_write,%function
	.code	16
	.thumb_func
_defmt_write:
.Lfunc_begin151:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#20
	sub	sp, #20
	cmp	r1, #0
	beq.w	.LBB151_31
	movw	r12, :lower16:.L_MergedGlobals
	movw	r10, :lower16:_SEGGER_RTT
	movt	r12, :upper16:.L_MergedGlobals
	adds	r4, r0, r1
	movt	r10, :upper16:_SEGGER_RTT
	sub.w	r9, r7, #33
	ldrb.w	r6, [r12, #2]
	sub.w	r11, r7, #30
	str	r4, [sp, #4]
	b	.LBB151_6
.LBB151_2:
	mov	r0, r8
.LBB151_3:
	movw	r12, :lower16:.L_MergedGlobals
	movt	r12, :upper16:.L_MergedGlobals
.LBB151_4:
	movs	r6, #0
	strh.w	r6, [r12, #2]
.LBB151_5:
	cmp	r0, r4
	beq.w	.LBB151_31
.LBB151_6:
	uxtb	r2, r6
	ldrb	r1, [r0], #1
	cmp	r2, #7
	bhs	.LBB151_12
	cmp	r1, #0
	beq	.LBB151_21
	strb	r1, [r7, #-33]
	mov	r8, r0
	ldr.w	r0, [r10, #44]
	movw	r5, :lower16:defmt_rtt::channel::Channel::nonblocking_write::h5e7e7d524b1f83fe
	and	r0, r0, #3
	mov	r6, r12
	cmp	r0, #2
	movt	r5, :upper16:defmt_rtt::channel::Channel::nonblocking_write::h5e7e7d524b1f83fe
	movw	r0, :lower16:defmt_rtt::channel::Channel::blocking_write::h3e0378a54da30f05
	movt	r0, :upper16:defmt_rtt::channel::Channel::blocking_write::h3e0378a54da30f05
	it	eq
	moveq	r5, r0
.LBB151_9:
	add.w	r0, r10, #24
	movs	r2, #1
	mov	r1, r9
	blx	r5
	cmp	r0, #0
	beq	.LBB151_9
	cmp	r0, #1
	bne.w	.LBB151_32
	mov	r12, r6
	ldrb	r6, [r6, #2]
	mov	r0, r8
	ldrb.w	r1, [r12, #3]
	b	.LBB151_22
.LBB151_12:
	cmp	r1, #0
	str	r0, [sp, #8]
	beq	.LBB151_27
	strb	r1, [r7, #-30]
	movw	r8, :lower16:defmt_rtt::channel::Channel::nonblocking_write::h5e7e7d524b1f83fe
	ldr.w	r0, [r10, #44]
	movt	r8, :upper16:defmt_rtt::channel::Channel::nonblocking_write::h5e7e7d524b1f83fe
	and	r0, r0, #3
	cmp	r0, #2
	movw	r0, :lower16:defmt_rtt::channel::Channel::blocking_write::h3e0378a54da30f05
	movt	r0, :upper16:defmt_rtt::channel::Channel::blocking_write::h3e0378a54da30f05
	it	eq
	moveq	r8, r0
.LBB151_14:
	add.w	r5, r10, #24
	movs	r2, #1
	mov	r0, r5
	mov	r1, r11
	blx	r8
	cmp	r0, #0
	beq	.LBB151_14
	cmp	r0, #1
	sub.w	r8, r7, #29
	bne.w	.LBB151_32
	movw	r12, :lower16:.L_MergedGlobals
	movt	r12, :upper16:.L_MergedGlobals
	ldrb.w	r0, [r12, #2]
	adds	r6, r0, #1
	strb.w	r6, [r12, #2]
	uxtb	r1, r6
	cmp	r1, #134
	ldrd	r4, r0, [sp, #4]
	bne	.LBB151_5
	movs	r0, #255
	strb	r0, [r7, #-29]
	ldr.w	r0, [r10, #44]
	movw	r6, :lower16:defmt_rtt::channel::Channel::nonblocking_write::h5e7e7d524b1f83fe
	and	r0, r0, #3
	movt	r6, :upper16:defmt_rtt::channel::Channel::nonblocking_write::h5e7e7d524b1f83fe
	cmp	r0, #2
	movw	r0, :lower16:defmt_rtt::channel::Channel::blocking_write::h3e0378a54da30f05
	movt	r0, :upper16:defmt_rtt::channel::Channel::blocking_write::h3e0378a54da30f05
	it	eq
	moveq	r6, r0
.LBB151_18:
	movs	r2, #1
	mov	r0, r5
	mov	r1, r8
	blx	r6
	cmp	r0, #0
	beq	.LBB151_18
	cmp	r0, #1
	bne	.LBB151_32
	movw	r12, :lower16:.L_MergedGlobals
	ldr	r0, [sp, #8]
	movt	r12, :upper16:.L_MergedGlobals
	ldr	r4, [sp, #4]
	b	.LBB151_4
.LBB151_21:
	ldrb.w	r1, [r12, #3]
	movs	r3, #1
	lsl.w	r2, r3, r2
	orrs	r1, r2
	strb.w	r1, [r12, #3]
.LBB151_22:
	adds	r6, #1
	strb.w	r6, [r12, #2]
	uxtb	r2, r6
	cmp	r2, #7
	bne.w	.LBB151_5
	lsls	r2, r1, #24
	beq.w	.LBB151_5
	strb.w	r1, [sp, #16]
	mov	r8, r0
	ldr.w	r0, [r10, #44]
	movw	r5, :lower16:defmt_rtt::channel::Channel::nonblocking_write::h5e7e7d524b1f83fe
	and	r0, r0, #3
	movt	r5, :upper16:defmt_rtt::channel::Channel::nonblocking_write::h5e7e7d524b1f83fe
	cmp	r0, #2
	movw	r0, :lower16:defmt_rtt::channel::Channel::blocking_write::h3e0378a54da30f05
	add	r6, sp, #16
	movt	r0, :upper16:defmt_rtt::channel::Channel::blocking_write::h3e0378a54da30f05
	it	eq
	moveq	r5, r0
.LBB151_25:
	add.w	r0, r10, #24
	movs	r2, #1
	mov	r1, r6
	blx	r5
	cmp	r0, #0
	beq	.LBB151_25
	cmp	r0, #1
	beq.w	.LBB151_2
	b	.LBB151_32
.LBB151_27:
	add.w	r0, r6, #121
	movw	r5, :lower16:defmt_rtt::channel::Channel::nonblocking_write::h5e7e7d524b1f83fe
	orr	r0, r0, #128
	strb	r0, [r7, #-31]
	ldr.w	r0, [r10, #44]
	movt	r5, :upper16:defmt_rtt::channel::Channel::nonblocking_write::h5e7e7d524b1f83fe
	and	r0, r0, #3
	sub.w	r8, r7, #31
	cmp	r0, #2
	movw	r0, :lower16:defmt_rtt::channel::Channel::blocking_write::h3e0378a54da30f05
	movt	r0, :upper16:defmt_rtt::channel::Channel::blocking_write::h3e0378a54da30f05
	it	eq
	moveq	r5, r0
.LBB151_28:
	add.w	r0, r10, #24
	movs	r2, #1
	mov	r1, r8
	blx	r5
	cmp	r0, #0
	beq	.LBB151_28
	cmp	r0, #1
	bne	.LBB151_32
	ldr	r0, [sp, #8]
	b	.LBB151_3
.LBB151_31:
	add	sp, #20
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB151_32:
	movw	r2, :lower16:.Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.1
	movs	r1, #1
	movt	r2, :upper16:.Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.1
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.Lfunc_end151:
	.size	_defmt_write, .Lfunc_end151-_defmt_write
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN13embedded_time8fraction8Fraction11checked_div17hd5f447229dd00813E,"ax",%progbits
	.p2align	1
	.type	embedded_time::fraction::Fraction::checked_div::hd5f447229dd00813,%function
	.code	16
	.thumb_func
embedded_time::fraction::Fraction::checked_div::hd5f447229dd00813:
.Lfunc_begin152:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8}
	str	r8, [sp, #-4]!
	.cfi_offset r8, -24
	cmp	r3, #0
	beq.w	.LBB152_34
	ldr.w	r12, [r7, #8]
	cmp	r2, r12
	beq	.LBB152_4
	cmp	r1, r3
	bne	.LBB152_7
.LBB152_3:
	cmp	r2, #0
	mov	r1, r12
	mov	r3, r2
	beq.w	.LBB152_34
.LBB152_4:
	cmp	r1, #0
	beq	.LBB152_16
	cmp	r1, r3
	bne	.LBB152_17
	movs	r1, #1
	movs	r2, #1
	b	.LBB152_24
.LBB152_7:
	orr.w	lr, r3, r1
	cbz	r1, .LBB152_14
	rbit	r4, r1
	rbit	r5, r3
	clz	r4, r4
	clz	r5, r5
	lsr.w	r4, r1, r4
	lsr.w	r5, r3, r5
	rbit	r6, lr
	cmp	r4, r5
	clz	lr, r6
	bne	.LBB152_11
	mov	r5, r4
	b	.LBB152_13
.LBB152_10:
	subs	r4, r4, r5
	rbit	r6, r4
	clz	r6, r6
	and	r6, r6, #31
	lsrs	r4, r6
	cmp	r4, r5
	beq	.LBB152_13
.LBB152_11:
	cmp	r4, r5
	bhi	.LBB152_10
	subs	r5, r5, r4
	rbit	r6, r5
	clz	r6, r6
	and	r6, r6, #31
	lsrs	r5, r6
	cmp	r4, r5
	bne	.LBB152_11
.LBB152_13:
	lsl.w	lr, r5, lr
.LBB152_14:
	cmp	r2, #0
	orr.w	r4, r12, r2
	it	ne
	cmpne.w	r12, #0
	bne	.LBB152_25
	cmp.w	lr, #0
	it	ne
	cmpne	r4, #0
	beq	.LBB152_31
	b	.LBB152_32
.LBB152_16:
	movs	r2, #1
	movs	r1, #0
	b	.LBB152_24
.LBB152_17:
	rbit	r6, r1
	orr.w	r2, r3, r1
	clz	r6, r6
	rbit	r5, r3
	clz	r4, r5
	lsr.w	r5, r1, r6
	and	r6, r4, #31
	lsr.w	r6, r3, r6
	rbit	r2, r2
	cmp	r5, r6
	clz	r2, r2
	bne	.LBB152_20
	mov	r6, r5
	b	.LBB152_22
.LBB152_19:
	subs	r5, r5, r6
	rbit	r4, r5
	clz	r4, r4
	and	r4, r4, #31
	lsrs	r5, r4
	cmp	r5, r6
	beq	.LBB152_22
.LBB152_20:
	cmp	r5, r6
	bhi	.LBB152_19
	subs	r6, r6, r5
	rbit	r4, r6
	clz	r4, r4
	and	r4, r4, #31
	lsrs	r6, r4
	cmp	r5, r6
	bne	.LBB152_20
.LBB152_22:
	lsls.w	r2, r6, r2
	beq	.LBB152_31
	udiv	r1, r1, r2
	udiv	r2, r3, r2
.LBB152_24:
	strd	r1, r2, [r0, #4]
	movs	r1, #1
	str	r1, [r0]
	ldr	r8, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.LBB152_25:
	rbit	r5, r2
	clz	r5, r5
	and	r8, r5, #31
	rbit	r6, r12
	clz	r5, r6
	lsr.w	r6, r2, r8
	and	r5, r5, #31
	lsr.w	r5, r12, r5
	rbit	r4, r4
	cmp	r6, r5
	clz	r8, r4
	bne	.LBB152_28
	mov	r5, r6
	b	.LBB152_30
.LBB152_27:
	subs	r4, r6, r5
	rbit	r6, r4
	clz	r6, r6
	and	r6, r6, #31
	lsr.w	r6, r4, r6
	cmp	r6, r5
	beq	.LBB152_30
.LBB152_28:
	cmp	r6, r5
	bhi	.LBB152_27
	subs	r5, r5, r6
	rbit	r4, r5
	clz	r4, r4
	and	r4, r4, #31
	lsrs	r5, r4
	cmp	r6, r5
	bne	.LBB152_28
.LBB152_30:
	and	r4, r8, #31
	lsl.w	r4, r5, r4
	cmp.w	lr, #0
	it	ne
	cmpne	r4, #0
	bne	.LBB152_32
.LBB152_31:
	movw	r0, :lower16:str.0.833
	movw	r2, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.306
	movt	r0, :upper16:str.0.833
	movt	r2, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.306
	movs	r1, #25
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB152_32:
	udiv	r1, r1, lr
	udiv	r6, r12, r4
	umull	r12, r1, r1, r6
	cbnz	r1, .LBB152_34
	udiv	r1, r2, r4
	udiv	r2, r3, lr
	umull	r2, r1, r1, r2
	cmp	r1, #0
	beq.w	.LBB152_3
.LBB152_34:
	movs	r1, #0
	str	r1, [r0]
	ldr	r8, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.Lfunc_end152:
	.size	embedded_time::fraction::Fraction::checked_div::hd5f447229dd00813, .Lfunc_end152-embedded_time::fraction::Fraction::checked_div::hd5f447229dd00813
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN151_$LT$miniconf..mqtt_client..messages..SettingsResponse$u20$as$u20$core..convert..From$LT$core..result..Result$LT$$LP$$RP$$C$miniconf..Error$GT$$GT$$GT$4from17h7c53701d03be7865E","ax",%progbits
	.p2align	1
	.type	<miniconf::mqtt_client::messages::SettingsResponse as core::convert::From<core::result::Result<(),miniconf::Error>>>::from::h7c53701d03be7865,%function
	.code	16
	.thumb_func
<miniconf::mqtt_client::messages::SettingsResponse as core::convert::From<core::result::Result<(),miniconf::Error>>>::from::h7c53701d03be7865:
.Lfunc_begin153:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r7, lr}
	push	{r4, r5, r7, lr}
	.cfi_def_cfa_offset 16
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r5, -12
	.cfi_offset r4, -16
	.setfp	r7, sp, #8
	add	r7, sp, #8
	.cfi_def_cfa r7, 8
	.pad	#112
	sub	sp, #112
	uxtb	r2, r1
	mov	r4, r0
	cmp	r2, #24
	bne	.LBB153_2
	adds	r0, r4, #6
	movs	r1, #63
	bl	__aeabi_memclr
	movs	r0, #2
	str	r0, [r4]
	movw	r0, #19279
	strh	r0, [r4, #4]
	add	sp, #112
	pop	{r4, r5, r7, pc}
.LBB153_2:
	add	r5, sp, #8
	strb	r1, [r7, #-113]
	movs	r1, #68
	mov	r0, r5
	bl	__aeabi_memclr4
	sub.w	r0, r7, #113
	str	r0, [sp, #76]
	movw	r0, :lower16:<miniconf::Error as core::fmt::Debug>::fmt::hdb291abaf915c143
	movs	r1, #0
	movt	r0, :upper16:<miniconf::Error as core::fmt::Debug>::fmt::hdb291abaf915c143
	add	r2, sp, #88
	strd	r0, r5, [sp, #80]
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.114
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.114
	str	r0, [sp, #88]
	strd	r1, r1, [sp, #96]
	add	r1, sp, #76
	movs	r0, #1
	strd	r1, r0, [sp, #104]
	movw	r1, :lower16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.23
	str	r0, [sp, #92]
	movt	r1, :upper16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.23
	add	r0, sp, #84
	bl	core::fmt::write::h5d3fbef16e428eed
	cbz	r0, .LBB153_4
	add.w	r0, r5, #18
	movs	r1, #50
	bl	__aeabi_memclr
	movs	r0, #14
	str	r0, [sp, #8]
	movw	r0, #26957
	movt	r0, #26990
	str	r0, [sp, #12]
	movw	r0, #28515
	movt	r0, #26222
	str	r0, [sp, #16]
	movw	r0, #17696
	movt	r0, #29298
	str	r0, [sp, #20]
	movw	r0, #29295
	strh.w	r0, [sp, #24]
.LBB153_4:
	ldrb	r0, [r7, #-113]
	movs	r2, #68
	subs	r0, #17
	uxtb	r1, r0
	cmp	r1, #7
	movw	r1, :lower16:.Lswitch.table._ZN151_$LT$miniconf..mqtt_client..messages..SettingsResponse$u20$as$u20$core..convert..From$LT$core..result..Result$LT$$LP$$RP$$C$miniconf..Error$GT$$GT$$GT$4from17h7c53701d03be7865E
	it	hs
	movhs	r0, #4
	sxtb	r0, r0
	movt	r1, :upper16:.Lswitch.table._ZN151_$LT$miniconf..mqtt_client..messages..SettingsResponse$u20$as$u20$core..convert..From$LT$core..result..Result$LT$$LP$$RP$$C$miniconf..Error$GT$$GT$$GT$4from17h7c53701d03be7865E
	ldrb	r5, [r1, r0]
	add	r1, sp, #8
	mov	r0, r4
	bl	__aeabi_memcpy4
	strb.w	r5, [r4, #68]
	add	sp, #112
	pop	{r4, r5, r7, pc}
.Lfunc_end153:
	.size	<miniconf::mqtt_client::messages::SettingsResponse as core::convert::From<core::result::Result<(),miniconf::Error>>>::from::h7c53701d03be7865, .Lfunc_end153-<miniconf::mqtt_client::messages::SettingsResponse as core::convert::From<core::result::Result<(),miniconf::Error>>>::from::h7c53701d03be7865
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN52_$LT$miniconf..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17hdb291abaf915c143E","ax",%progbits
	.p2align	2
	.type	<miniconf::Error as core::fmt::Debug>::fmt::hdb291abaf915c143,%function
	.code	16
	.thumb_func
<miniconf::Error as core::fmt::Debug>::fmt::hdb291abaf915c143:
.Lfunc_begin154:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r7, lr}
	push	{r4, r5, r7, lr}
	.cfi_def_cfa_offset 16
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r5, -12
	.cfi_offset r4, -16
	.setfp	r7, sp, #8
	add	r7, sp, #8
	.cfi_def_cfa r7, 8
	.pad	#16
	sub	sp, #16
	mov	r4, r0
	ldrb	r0, [r0]
	subs	r0, #17
	uxtb	r2, r0
	cmp	r2, #7
	it	hs
	movhs	r0, #4
	uxtb	r0, r0
.LCPI154_0:
	tbb	[pc, r0]
.LJTI154_0:
	.byte	(.LBB154_2-(.LCPI154_0+4))/2
	.byte	(.LBB154_3-(.LCPI154_0+4))/2
	.byte	(.LBB154_4-(.LCPI154_0+4))/2
	.byte	(.LBB154_6-(.LCPI154_0+4))/2
	.byte	(.LBB154_7-(.LCPI154_0+4))/2
	.byte	(.LBB154_8-(.LCPI154_0+4))/2
	.byte	(.LBB154_9-(.LCPI154_0+4))/2
	.p2align	1
.LBB154_2:
	movw	r3, :lower16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.17
	movt	r3, :upper16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.17
	b	.LBB154_5
.LBB154_3:
	movw	r3, :lower16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.16
	movs	r2, #11
	movt	r3, :upper16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.16
	b	.LBB154_10
.LBB154_4:
	movw	r3, :lower16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.15
	movt	r3, :upper16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.15
.LBB154_5:
	movs	r2, #12
	b	.LBB154_10
.LBB154_6:
	movw	r3, :lower16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.14
	movs	r2, #20
	movt	r3, :upper16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.14
	b	.LBB154_10
.LBB154_7:
	movw	r2, :lower16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.12
	mov	r5, sp
	movt	r2, :upper16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.12
	movs	r3, #15
	mov	r0, r5
	bl	core::fmt::Formatter::debug_tuple::h9a9c92e1e856202e
	movw	r2, :lower16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.13
	add	r1, sp, #12
	movt	r2, :upper16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.13
	mov	r0, r5
	str	r4, [sp, #12]
	bl	core::fmt::builders::DebugTuple::field::h344a2bce7ddce2f6
	bl	core::fmt::builders::DebugTuple::finish::hfca393014b7f9d44
	add	sp, #16
	pop	{r4, r5, r7, pc}
.LBB154_8:
	movw	r3, :lower16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.11
	movs	r2, #19
	movt	r3, :upper16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.11
	b	.LBB154_10
.LBB154_9:
	movw	r3, :lower16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.10
	movs	r2, #8
	movt	r3, :upper16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.10
.LBB154_10:
	mov	r0, r1
	mov	r1, r3
	add	sp, #16
	pop.w	{r4, r5, r7, lr}
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.Lfunc_end154:
	.size	<miniconf::Error as core::fmt::Debug>::fmt::hdb291abaf915c143, .Lfunc_end154-<miniconf::Error as core::fmt::Debug>::fmt::hdb291abaf915c143
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17hc6b40de4bedd7834E","ax",%progbits
	.p2align	1
	.type	<&mut W as core::fmt::Write>::write_char::hc6b40de4bedd7834,%function
	.code	16
	.thumb_func
<&mut W as core::fmt::Write>::write_char::hc6b40de4bedd7834:
.Lfunc_begin155:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r11}
	str	r11, [sp, #-4]!
	.cfi_offset r11, -24
	.pad	#4
	sub	sp, #4
	cmp	r1, #128
	ldr	r2, [r0]
	bhs	.LBB155_4
	ldr	r3, [r2]
	cmp	r3, #63
	bhi	.LBB155_3
	adds	r0, r2, r3
	strb	r1, [r0, #4]
	ldr	r0, [r2]
	adds	r0, #1
	str	r0, [r2]
.LBB155_3:
	movs	r0, #0
	cmp	r3, #63
	it	hi
	movhi	r0, #1
	b	.LBB155_19
.LBB155_4:
	cmp.w	r1, #2048
	mov.w	r0, #0
	str	r0, [sp]
	bhs	.LBB155_6
	mvn	r0, #63
	mov.w	lr, #2
	orr.w	r12, r0, r1, lsr #6
	movw	r0, #65534
	movt	r0, #1023
	strb.w	r12, [sp]
	bfi	r1, r0, #6, #26
	strb.w	r1, [sp, #1]
	movs	r3, #0
	b	.LBB155_10
.LBB155_6:
	cmp.w	r1, #65536
	bhs	.LBB155_8
	movw	r3, #65534
	mvn	r0, #31
	movt	r3, #1023
	orr.w	r12, r0, r1, lsr #12
	lsrs	r0, r1, #6
	strb.w	r12, [sp]
	bfi	r1, r3, #6, #26
	strb.w	r1, [sp, #2]
	bfi	r0, r3, #6, #26
	strb.w	r0, [sp, #1]
	mov.w	lr, #3
	mov	r3, r1
	b	.LBB155_9
.LBB155_8:
	mvn	r0, #15
	movw	r5, #65534
	orr.w	r12, r0, r1, lsr #18
	movt	r5, #1023
	lsrs	r0, r1, #12
	mov.w	lr, #4
	lsrs	r3, r1, #6
	strb.w	r12, [sp]
	bfi	r0, r5, #6, #26
	strb.w	r0, [sp, #1]
	bfi	r3, r5, #6, #26
	movs	r5, #2
	strb.w	r3, [sp, #2]
	bfi	r1, r5, #6, #26
	strb.w	r1, [sp, #3]
.LBB155_9:
	mov	r1, r0
.LBB155_10:
	ldr	r4, [r2]
	movs	r0, #0
	add.w	r5, r4, lr
	cmp	r5, #64
	it	hi
	movhi	r0, #1
	bhi	.LBB155_19
	add	r4, r2
	cmp.w	lr, #1
	strb.w	r12, [r4, #4]
	ldr	r5, [r2]
	add.w	r4, r5, #1
	str	r4, [r2]
	beq	.LBB155_19
	add	r4, r2
	mov	r12, sp
	add.w	r5, r12, lr
	add.w	r6, r12, #2
	strb	r1, [r4, #4]
	cmp	r6, r5
	ldr	r1, [r2]
	add.w	r4, r1, #1
	str	r4, [r2]
	beq	.LBB155_19
	rsb.w	lr, lr, #0
	movs	r1, #0
.LBB155_14:
	adds	r5, r2, r4
	add.w	r4, lr, r1
	strb	r3, [r5, #4]
	adds	r5, r4, #3
	ldr	r3, [r2]
	add.w	r5, r3, #1
	str	r5, [r2]
	beq	.LBB155_19
	add.w	r3, r12, r1
	add	r5, r2
	ldrb	r6, [r3, #3]
	strb	r6, [r5, #4]
	adds	r6, r4, #4
	ldr	r5, [r2]
	add.w	r5, r5, #1
	str	r5, [r2]
	beq	.LBB155_19
	add	r5, r2
	ldrb	r6, [r3, #4]
	strb	r6, [r5, #4]
	adds	r6, r4, #5
	ldr	r5, [r2]
	add.w	r5, r5, #1
	str	r5, [r2]
	beq	.LBB155_19
	add	r5, r2
	ldrb	r6, [r3, #5]
	adds	r4, #6
	strb	r6, [r5, #4]
	ldr	r5, [r2]
	add.w	r4, r5, #1
	str	r4, [r2]
	beq	.LBB155_19
	ldrb	r3, [r3, #6]
	adds	r1, #4
	b	.LBB155_14
.LBB155_19:
	add	sp, #4
	ldr	r11, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.Lfunc_end155:
	.size	<&mut W as core::fmt::Write>::write_char::hc6b40de4bedd7834, .Lfunc_end155-<&mut W as core::fmt::Write>::write_char::hc6b40de4bedd7834
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17h33cd034270471a6dE","ax",%progbits
	.p2align	1
	.type	<&mut W as core::fmt::Write>::write_fmt::h33cd034270471a6d,%function
	.code	16
	.thumb_func
<&mut W as core::fmt::Write>::write_fmt::h33cd034270471a6d:
.Lfunc_begin156:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r11}
	str	r11, [sp, #-4]!
	.cfi_offset r11, -24
	.pad	#32
	sub	sp, #32
	add	r2, sp, #8
	ldr	r0, [r0]
	str	r0, [sp, #4]
	mov	r0, r2
	ldm.w	r1, {r3, r4, r5, r6, r12, lr}
	movw	r1, :lower16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.23
	stm.w	r0, {r3, r4, r5, r6, r12, lr}
	movt	r1, :upper16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.23
	add	r0, sp, #4
	bl	core::fmt::write::h5d3fbef16e428eed
	add	sp, #32
	ldr	r11, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.Lfunc_end156:
	.size	<&mut W as core::fmt::Write>::write_fmt::h33cd034270471a6d, .Lfunc_end156-<&mut W as core::fmt::Write>::write_fmt::h33cd034270471a6d
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17ha689d2505e3cdc38E","ax",%progbits
	.p2align	2
	.type	<&T as core::fmt::Debug>::fmt::ha689d2505e3cdc38,%function
	.code	16
	.thumb_func
<&T as core::fmt::Debug>::fmt::ha689d2505e3cdc38:
.Lfunc_begin157:
	.fnstart
	.cfi_startproc
	ldr	r0, [r0]
	ldrb	r2, [r0]
	mov	r0, r1
.LCPI157_0:
	tbb	[pc, r2]
.LJTI157_0:
	.byte	(.LBB157_2-(.LCPI157_0+4))/2
	.byte	(.LBB157_3-(.LCPI157_0+4))/2
	.byte	(.LBB157_4-(.LCPI157_0+4))/2
	.byte	(.LBB157_5-(.LCPI157_0+4))/2
	.byte	(.LBB157_6-(.LCPI157_0+4))/2
	.byte	(.LBB157_7-(.LCPI157_0+4))/2
	.byte	(.LBB157_8-(.LCPI157_0+4))/2
	.byte	(.LBB157_9-(.LCPI157_0+4))/2
	.byte	(.LBB157_10-(.LCPI157_0+4))/2
	.byte	(.LBB157_11-(.LCPI157_0+4))/2
	.byte	(.LBB157_12-(.LCPI157_0+4))/2
	.byte	(.LBB157_13-(.LCPI157_0+4))/2
	.byte	(.LBB157_14-(.LCPI157_0+4))/2
	.byte	(.LBB157_15-(.LCPI157_0+4))/2
	.byte	(.LBB157_16-(.LCPI157_0+4))/2
	.byte	(.LBB157_17-(.LCPI157_0+4))/2
	.byte	(.LBB157_18-(.LCPI157_0+4))/2
	.p2align	1
.LBB157_2:
	movw	r1, :lower16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.49
	movs	r2, #19
	movt	r1, :upper16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.49
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB157_3:
	movw	r1, :lower16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.48
	movs	r2, #21
	movt	r1, :upper16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.48
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB157_4:
	movw	r1, :lower16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.47
	movs	r2, #21
	movt	r1, :upper16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.47
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB157_5:
	movw	r1, :lower16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.46
	movs	r2, #21
	movt	r1, :upper16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.46
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB157_6:
	movw	r1, :lower16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.45
	movs	r2, #20
	movt	r1, :upper16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.45
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB157_7:
	movw	r1, :lower16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.44
	movs	r2, #13
	movt	r1, :upper16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.44
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB157_8:
	movw	r1, :lower16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.43
	movs	r2, #22
	movt	r1, :upper16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.43
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB157_9:
	movw	r1, :lower16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.42
	movs	r2, #24
	movt	r1, :upper16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.42
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB157_10:
	movw	r1, :lower16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.41
	movs	r2, #17
	movt	r1, :upper16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.41
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB157_11:
	movw	r1, :lower16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.40
	movs	r2, #17
	movt	r1, :upper16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.40
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB157_12:
	movw	r1, :lower16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.39
	movs	r2, #13
	movt	r1, :upper16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.39
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB157_13:
	movw	r1, :lower16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.38
	movs	r2, #11
	movt	r1, :upper16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.38
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB157_14:
	movw	r1, :lower16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.37
	movs	r2, #23
	movt	r1, :upper16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.37
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB157_15:
	movw	r1, :lower16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.36
	movs	r2, #16
	movt	r1, :upper16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.36
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB157_16:
	movw	r1, :lower16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.35
	movs	r2, #18
	movt	r1, :upper16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.35
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB157_17:
	movw	r1, :lower16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.34
	movs	r2, #13
	movt	r1, :upper16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.34
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB157_18:
	movw	r1, :lower16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.33
	movs	r2, #11
	movt	r1, :upper16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.33
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.Lfunc_end157:
	.size	<&T as core::fmt::Debug>::fmt::ha689d2505e3cdc38, .Lfunc_end157-<&T as core::fmt::Debug>::fmt::ha689d2505e3cdc38
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN82_$LT$miniconf..mqtt_client..mqtt_client..sm..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h8eebe26439d3aa3bE","ax",%progbits
	.p2align	1
	.type	<miniconf::mqtt_client::mqtt_client::sm::Error as core::fmt::Debug>::fmt::h8eebe26439d3aa3b,%function
	.code	16
	.thumb_func
<miniconf::mqtt_client::mqtt_client::sm::Error as core::fmt::Debug>::fmt::h8eebe26439d3aa3b:
.Lfunc_begin158:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r7, lr}
	push	{r4, r5, r7, lr}
	.cfi_def_cfa_offset 16
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r5, -12
	.cfi_offset r4, -16
	.setfp	r7, sp, #8
	add	r7, sp, #8
	.cfi_def_cfa r7, 8
	.pad	#16
	sub	sp, #16
	ldrb	r2, [r0]
	cbz	r2, .LBB158_2
	movw	r2, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.48
	mov	r4, sp
	adds	r5, r0, #1
	movt	r2, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.48
	movs	r3, #11
	mov	r0, r4
	bl	core::fmt::Formatter::debug_tuple::h9a9c92e1e856202e
	movw	r2, :lower16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.8
	add	r1, sp, #12
	movt	r2, :upper16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.8
	mov	r0, r4
	str	r5, [sp, #12]
	bl	core::fmt::builders::DebugTuple::field::h344a2bce7ddce2f6
	bl	core::fmt::builders::DebugTuple::finish::hfca393014b7f9d44
	add	sp, #16
	pop	{r4, r5, r7, pc}
.LBB158_2:
	movw	r3, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.50
	movs	r2, #12
	movt	r3, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.50
	mov	r0, r1
	mov	r1, r3
	add	sp, #16
	pop.w	{r4, r5, r7, lr}
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.Lfunc_end158:
	.size	<miniconf::mqtt_client::mqtt_client::sm::Error as core::fmt::Debug>::fmt::h8eebe26439d3aa3b, .Lfunc_end158-<miniconf::mqtt_client::mqtt_client::sm::Error as core::fmt::Debug>::fmt::h8eebe26439d3aa3b
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h735aeb6e09b54eefE","ax",%progbits
	.p2align	1
	.type	<&T as core::fmt::Debug>::fmt::h735aeb6e09b54eef,%function
	.code	16
	.thumb_func
<&T as core::fmt::Debug>::fmt::h735aeb6e09b54eef:
.Lfunc_begin159:
	.fnstart
	.cfi_startproc
	movw	r3, :lower16:.Lanon.bf09494b05510f7f30f8c8768d91b265.49
	movs	r2, #2
	movt	r3, :upper16:.Lanon.bf09494b05510f7f30f8c8768d91b265.49
	mov	r0, r1
	mov	r1, r3
	b	core::fmt::Formatter::pad::h936b549e1667e5be
.Lfunc_end159:
	.size	<&T as core::fmt::Debug>::fmt::h735aeb6e09b54eef, .Lfunc_end159-<&T as core::fmt::Debug>::fmt::h735aeb6e09b54eef
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN56_$LT$miniconf..IterError$u20$as$u20$core..fmt..Debug$GT$3fmt17h074b09b19ff751d9E","ax",%progbits
	.p2align	1
	.type	<miniconf::IterError as core::fmt::Debug>::fmt::h074b09b19ff751d9,%function
	.code	16
	.thumb_func
<miniconf::IterError as core::fmt::Debug>::fmt::h074b09b19ff751d9:
.Lfunc_begin160:
	.fnstart
	.cfi_startproc
	ldrb	r0, [r0]
	cmp	r0, #0
	mov	r0, r1
	beq	.LBB160_2
	movw	r1, :lower16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.18
	movs	r2, #23
	movt	r1, :upper16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.18
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB160_2:
	movw	r1, :lower16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.19
	movs	r2, #22
	movt	r1, :upper16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.19
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.Lfunc_end160:
	.size	<miniconf::IterError as core::fmt::Debug>::fmt::h074b09b19ff751d9, .Lfunc_end160-<miniconf::IterError as core::fmt::Debug>::fmt::h074b09b19ff751d9
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN4core4iter8adapters8peekable17Peekable$LT$I$GT$4peek17h2f6060bb9e66d6cfE","ax",%progbits
	.p2align	1
	.type	core::iter::adapters::peekable::Peekable<I>::peek::h2f6060bb9e66d6cf,%function
	.code	16
	.thumb_func
core::iter::adapters::peekable::Peekable<I>::peek::h2f6060bb9e66d6cf:
.Lfunc_begin161:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#12
	sub	sp, #12
	mov	r4, r0
	ldr	r0, [r0, #40]
	cbz	r0, .LBB161_2
	ldr	r0, [r4, #44]
	b	.LBB161_70
.LBB161_2:
	ldrb.w	r0, [r4, #37]
	cmp	r0, #0
	bne.w	.LBB161_68
	ldrd	r6, r10, [r4, #16]
	subs.w	r2, r10, r6
	ldr.w	r9, [r4, #8]
	blo.w	.LBB161_66
	ldr	r0, [r4, #12]
	str	r0, [sp, #8]
	cmp	r10, r0
	bhi.w	.LBB161_66
	ldr	r5, [r4, #28]
	adds	r0, r5, r4
	cmp	r5, #4
	add.w	r8, r0, #31
	bhi	.LBB161_8
	add.w	r0, r4, #32
	str	r0, [sp, #4]
	b	.LBB161_37
.LBB161_7:
	subs.w	r2, r10, r6
	it	lo
	movlo	r2, #0
	blo.w	.LBB161_66
.LBB161_8:
	ldrb.w	r0, [r8]
	cmp	r2, #8
	add.w	r1, r9, r6
	bhs	.LBB161_13
	cbz	r2, .LBB161_14
	ldrb	r3, [r1]
	cmp	r3, r0
	bne	.LBB161_15
	movs	r2, #0
.LBB161_12:
	movs	r0, #1
	cmp	r0, #1
	beq	.LBB161_17
	b	.LBB161_65
.LBB161_13:
	bl	core::slice::memchr::memchr_general_case::h79cbfa5db1e3b72b
	mov	r2, r1
	cmp	r0, #1
	beq	.LBB161_17
	b	.LBB161_65
.LBB161_14:
	movs	r2, #0
	b	.LBB161_16
.LBB161_15:
	cmp	r2, #1
	bne	.LBB161_19
.LBB161_16:
	movs	r0, #0
	cmp	r0, #1
	bne.w	.LBB161_65
.LBB161_17:
	adds	r0, r6, r2
	adds	r6, r0, #1
	str	r6, [r4, #16]
	cmp	r6, r5
	blo	.LBB161_7
	ldr	r0, [sp, #8]
	cmp	r6, r0
	bhi	.LBB161_7
	b	.LBB161_72
.LBB161_19:
	ldrb	r3, [r1, #1]
	cmp	r3, r0
	bne	.LBB161_21
	movs	r2, #1
	b	.LBB161_12
.LBB161_21:
	cmp	r2, #2
	beq	.LBB161_16
	ldrb	r3, [r1, #2]
	cmp	r3, r0
	bne	.LBB161_24
	movs	r2, #2
	b	.LBB161_12
.LBB161_24:
	cmp	r2, #3
	beq	.LBB161_16
	ldrb	r3, [r1, #3]
	cmp	r3, r0
	bne	.LBB161_27
	movs	r2, #3
	b	.LBB161_12
.LBB161_27:
	cmp	r2, #4
	beq	.LBB161_16
	ldrb	r3, [r1, #4]
	cmp	r3, r0
	bne	.LBB161_30
	movs	r2, #4
	b	.LBB161_12
.LBB161_30:
	cmp	r2, #5
	beq	.LBB161_16
	ldrb	r3, [r1, #5]
	cmp	r3, r0
	bne	.LBB161_33
	movs	r2, #5
	b	.LBB161_12
.LBB161_33:
	cmp	r2, #6
	beq	.LBB161_16
	ldrb	r1, [r1, #6]
	cmp	r1, r0
	bne	.LBB161_16
	movs	r2, #6
	b	.LBB161_12
.LBB161_36:
	subs.w	r2, r10, r6
	it	lo
	movlo	r2, #0
	blo	.LBB161_66
.LBB161_37:
	ldrb.w	r0, [r8]
	cmp	r2, #8
	add.w	r1, r9, r6
	bhs	.LBB161_41
	cbz	r2, .LBB161_42
	ldrb	r3, [r1]
	cmp	r3, r0
	bne	.LBB161_43
	movs	r2, #0
	movs	r0, #1
	cmp	r0, #1
	beq	.LBB161_57
	b	.LBB161_65
.LBB161_41:
	bl	core::slice::memchr::memchr_general_case::h79cbfa5db1e3b72b
	mov	r2, r1
	cmp	r0, #1
	beq	.LBB161_57
	b	.LBB161_65
.LBB161_42:
	movs	r2, #0
	movs	r0, #0
	cmp	r0, #1
	beq	.LBB161_57
	b	.LBB161_65
.LBB161_43:
	cmp	r2, #1
	beq	.LBB161_56
	ldrb	r3, [r1, #1]
	cmp	r3, r0
	bne	.LBB161_46
	movs	r2, #1
	movs	r0, #1
	cmp	r0, #1
	beq	.LBB161_57
	b	.LBB161_65
.LBB161_46:
	cmp	r2, #2
	beq	.LBB161_56
	ldrb	r3, [r1, #2]
	cmp	r3, r0
	bne	.LBB161_49
	movs	r2, #2
	movs	r0, #1
	cmp	r0, #1
	beq	.LBB161_57
	b	.LBB161_65
.LBB161_49:
	cmp	r2, #3
	beq	.LBB161_56
	ldrb	r3, [r1, #3]
	cmp	r3, r0
	bne	.LBB161_52
	movs	r2, #3
	movs	r0, #1
	cmp	r0, #1
	beq	.LBB161_57
	b	.LBB161_65
.LBB161_52:
	cmp	r2, #4
	beq	.LBB161_56
	ldrb	r3, [r1, #4]
	cmp	r3, r0
	bne	.LBB161_55
	movs	r2, #4
	movs	r0, #1
	cmp	r0, #1
	beq	.LBB161_57
	b	.LBB161_65
.LBB161_55:
	cmp	r2, #5
	bne	.LBB161_60
.LBB161_56:
	movs	r0, #0
	cmp	r0, #1
	bne	.LBB161_65
.LBB161_57:
	adds	r0, r6, r2
	adds	r6, r0, #1
	str	r6, [r4, #16]
	cmp	r6, r5
	blo	.LBB161_36
	ldr	r0, [sp, #8]
	cmp	r6, r0
	bhi	.LBB161_36
	sub.w	r11, r6, r5
	ldr	r1, [sp, #4]
	add.w	r0, r9, r11
	mov	r2, r5
	bl	memcmp
	cmp	r0, #0
	bne	.LBB161_36
	b	.LBB161_71
.LBB161_60:
	ldrb	r3, [r1, #5]
	cmp	r3, r0
	bne	.LBB161_62
	movs	r2, #5
	movs	r0, #1
	cmp	r0, #1
	beq	.LBB161_57
	b	.LBB161_65
.LBB161_62:
	cmp	r2, #6
	beq	.LBB161_56
	ldrb	r1, [r1, #6]
	cmp	r1, r0
	bne	.LBB161_56
	movs	r2, #6
	movs	r0, #1
	cmp	r0, #1
	beq	.LBB161_57
.LBB161_65:
	str.w	r10, [r4, #16]
.LBB161_66:
	ldrb.w	r0, [r4, #36]
	ldrd	r1, r2, [r4]
	cmp	r0, #0
	it	eq
	cmpeq	r2, r1
	beq	.LBB161_68
	movs	r0, #1
	strb.w	r0, [r4, #37]
	add.w	r0, r9, r1
	subs	r1, r2, r1
	b	.LBB161_69
.LBB161_68:
	movs	r0, #0
	movs	r1, #0
.LBB161_69:
	movs	r2, #1
	str	r1, [r4, #48]
	strd	r2, r0, [r4, #40]
.LBB161_70:
	cmp	r0, #0
	it	ne
	addne.w	r0, r4, #44
	add	sp, #12
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB161_71:
	ldr	r1, [r4]
	str	r6, [r4]
	add.w	r0, r9, r1
	sub.w	r1, r11, r1
	b	.LBB161_69
.LBB161_72:
	movw	r2, :lower16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.30
	movs	r1, #4
	movt	r2, :upper16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.30
	mov	r0, r5
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.Lfunc_end161:
	.size	core::iter::adapters::peekable::Peekable<I>::peek::h2f6060bb9e66d6cf, .Lfunc_end161-core::iter::adapters::peekable::Peekable<I>::peek::h2f6060bb9e66d6cf
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN42_$LT$f32$u20$as$u20$miniconf..Miniconf$GT$10string_set17h65f156fa2cd6ed1aE","ax",%progbits
	.p2align	2
	.type	<f32 as miniconf::Miniconf>::string_set::h65f156fa2cd6ed1a,%function
	.code	16
	.thumb_func
<f32 as miniconf::Miniconf>::string_set::h65f156fa2cd6ed1a:
.Lfunc_begin162:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#4
	sub	sp, #4
	.vsave	{d8}
	vpush	{d8}
	.cfi_offset d8, -48
	.pad	#832
	sub.w	sp, sp, #832
	mov	r6, r0
	mov	r0, r1
	mov	r9, r3
	mov	r11, r2
	bl	core::iter::adapters::peekable::Peekable<I>::peek::h2f6060bb9e66d6cf
	cbz	r0, .LBB162_2
	movs	r0, #18
	b	.LBB162_17
.LBB162_2:
	cmp.w	r9, #0
	beq	.LBB162_16
	movw	r8, #19
	rsb.w	lr, r9, #0
	sub.w	r4, r9, #1
	movs	r0, #0
	movs	r1, #1
	movt	r8, #128
.LBB162_4:
	ldrb.w	r10, [r11, r0]
	sub.w	r2, r10, #9
	cmp	r2, #23
	bhi	.LBB162_18
	lsl.w	r2, r1, r2
	tst.w	r2, r8
	beq	.LBB162_18
	cmp	r4, r0
	beq	.LBB162_16
	add.w	r2, r11, r0
	ldrb.w	r10, [r2, #1]
	sub.w	r3, r10, #9
	cmp	r3, #23
	bhi	.LBB162_19
	lsl.w	r3, r1, r3
	tst.w	r3, r8
	beq	.LBB162_19
	add.w	r3, lr, r0
	adds	r5, r3, #2
	beq	.LBB162_16
	ldrb.w	r10, [r2, #2]
	sub.w	r5, r10, #9
	cmp	r5, #23
	bhi	.LBB162_20
	lsl.w	r5, r1, r5
	tst.w	r5, r8
	beq	.LBB162_20
	adds	r3, #3
	beq	.LBB162_16
	ldrb.w	r10, [r2, #3]
	sub.w	r2, r10, #9
	cmp	r2, #23
	bhi	.LBB162_21
	lsl.w	r2, r1, r2
	tst.w	r2, r8
	beq	.LBB162_21
	adds	r0, #4
	cmp	r9, r0
	bne	.LBB162_4
.LBB162_16:
	movs	r0, #4
.LBB162_17:
	add.w	sp, sp, #832
	vpop	{d8}
	add	sp, #4
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB162_18:
	str	r6, [sp, #40]
	add.w	r1, r11, r0
	str	r1, [sp, #44]
	b	.LBB162_22
.LBB162_19:
	orr	r1, r0, #1
	str	r6, [sp, #40]
	add	r1, r11
	str	r1, [sp, #44]
	adds	r0, #1
	b	.LBB162_22
.LBB162_20:
	orr	r1, r0, #2
	str	r6, [sp, #40]
	add	r1, r11
	str	r1, [sp, #44]
	adds	r0, #2
	b	.LBB162_22
.LBB162_21:
	orr	r1, r0, #3
	str	r6, [sp, #40]
	add	r1, r11
	str	r1, [sp, #44]
	adds	r0, #3
.LBB162_22:
	movs	r2, #13
	mov	r6, r9
	mov.w	r12, #1
	movt	r2, #1024
	mov	r5, r0
	cmp	r0, r9
	it	hi
	movhi	r6, r0
	b	.LBB162_25
.LBB162_23:
	lsl.w	r1, r12, r1
	tst	r1, r2
	beq	.LBB162_28
.LBB162_24:
	adds	r5, #1
.LBB162_25:
	cmp	r6, r5
	beq	.LBB162_30
	ldrb.w	r3, [r11, r5]
	sub.w	r1, r3, #48
	cmp	r1, #10
	blo	.LBB162_24
	sub.w	r1, r3, #43
	cmp	r1, #26
	bls	.LBB162_23
.LBB162_28:
	cmp	r3, #101
	beq	.LBB162_24
	cmp	r5, r0
	mov	r6, r5
	blo.w	.LBB162_104
.LBB162_30:
	cmp	r6, r9
	bhi.w	.LBB162_103
	subs	r2, r6, r0
	beq.w	.LBB162_75
	cmp.w	r10, #45
	it	ne
	cmpne.w	r10, #43
	bne	.LBB162_35
	subs	r2, #1
	beq.w	.LBB162_75
	str	r6, [sp, #36]
	ldr	r6, [sp, #44]
	adds	r6, #1
	b	.LBB162_36
.LBB162_35:
	str	r6, [sp, #36]
	ldr	r6, [sp, #44]
.LBB162_36:
	strd	r4, lr, [sp, #28]
	sub.w	r0, r10, #45
	mov	r1, r6
	clz	r0, r0
	mov	r4, r2
	lsrs	r3, r0, #5
	add	r0, sp, #48
	bl	core::num::dec2flt::parse::parse_number::h53c7787c169de877
	ldrb.w	r12, [sp, #64]
	str	r6, [sp, #44]
	cmp.w	r12, #2
	bne	.LBB162_41
	cmp	r4, #3
	ldr	r6, [sp, #36]
	ldrd	lr, r12, [sp, #28]
	blo.w	.LBB162_75
	ldr	r0, [sp, #44]
	str	r4, [sp, #20]
	ldrb	r1, [r0]
	ldrb	r2, [r0, #1]
	ldrb	r4, [r0, #2]
	eor	r3, r1, #78
	eor	r0, r2, #65
	orrs	r0, r3
	eor	r3, r4, #78
	orrs	r0, r3
	tst.w	r0, #223
	beq.w	.LBB162_72
	eor	r0, r1, #73
	eor	r1, r2, #78
	orrs	r0, r1
	eor	r1, r4, #70
	orrs	r0, r1
	ldr	r4, [sp, #20]
	tst.w	r0, #223
	bne.w	.LBB162_75
	ldr	r0, [sp, #44]
	mov	r1, r4
	strd	r12, r6, [sp, #32]
	mov	r6, lr
	bl	core::num::dec2flt::parse::parse_partial_inf_nan::parse_inf_rest::h8f4a02175d0c9550
	mov	lr, r6
	vldr	s0, .LCPI162_1
	ldrd	r12, r6, [sp, #32]
	b	.LBB162_73
.LBB162_41:
	ldrd	lr, r10, [sp, #48]
	adds.w	r0, lr, #10
	ldrb.w	r2, [sp, #65]
	adc	r1, r10, #0
	rsbs.w	r0, r0, #27
	mov.w	r0, #0
	str	r2, [sp, #24]
	sbcs.w	r1, r0, r1
	str	r4, [sp, #20]
	ldrd	r2, r3, [sp, #56]
	str.w	r12, [sp, #16]
	blo	.LBB162_51
	rsbs.w	r1, r2, #16777216
	sbcs	r0, r3
	blo	.LBB162_51
	ldr	r0, [sp, #24]
	cmp	r0, #0
	bne	.LBB162_51
	subs.w	r0, lr, #11
	sbcs	r0, r10, #0
	bge	.LBB162_47
	mov	r0, r2
	mov	r1, r3
	mov	r6, lr
	bl	<f32 as core::num::dec2flt::float::RawFloat>::from_u64::h4eddb77395e2e77b
	vmov.f32	s16, s0
	cmp.w	r10, #0
	bmi.w	.LBB162_95
	mov	r0, r6
	b	.LBB162_50
.LBB162_47:
	movw	r0, :lower16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.21
	movt	r0, :upper16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.21
	add.w	r0, r0, lr, lsl #3
	strd	r10, lr, [sp, #8]
	ldrd	r0, r6, [r0, #-80]
	umull	lr, r4, r6, r2
	umull	r1, r10, r3, r0
	umull	r12, r0, r2, r0
	add	r1, lr
	str.w	r12, [sp, #4]
	adds	r1, r1, r0
	mov.w	r0, #0
	adc	r0, r0, #0
	cmp	r6, #0
	str	r0, [sp]
	mov	r12, r3
	it	ne
	movne	r6, #1
	cmp	r3, #0
	it	ne
	movne.w	r12, #1
	and.w	r6, r6, r12
	cmp.w	r10, #0
	it	ne
	movne.w	r10, #1
	cmp	r4, #0
	orr.w	r6, r6, r10
	ldrd	r10, lr, [sp, #8]
	it	ne
	movne	r4, #1
	orrs	r6, r4
	ldrd	r4, r0, [sp]
	orrs	r6, r4
	bne	.LBB162_51
	rsbs.w	r6, r0, #16777216
	mov.w	r6, #0
	sbcs	r6, r1
	blo	.LBB162_51
	bl	<f32 as core::num::dec2flt::float::RawFloat>::from_u64::h4eddb77395e2e77b
	vmov.f32	s16, s0
	movs	r0, #10
.LBB162_50:
	bl	<f32 as core::num::dec2flt::float::RawFloat>::pow10_fast_path::h2e6c360518413f56
	vmul.f32	s0, s16, s0
	b	.LBB162_79
.LBB162_51:
	mov	r0, lr
	mov	r1, r10
	str.w	lr, [sp, #12]
	str.w	r10, [sp, #8]
	strd	r2, r3, [sp]
	bl	core::num::dec2flt::lemire::compute_float::hdcbf7205757f8ba8
	ldr	r3, [sp, #24]
	mov	r6, r0
	mov	r10, r1
	mov	r4, r2
	cbz	r3, .LBB162_54
	cmp	r4, #0
	bmi	.LBB162_54
	ldr	r0, [sp]
	adds	r2, r0, #1
	ldr	r0, [sp, #4]
	adc	r3, r0, #0
	ldrd	r1, r0, [sp, #8]
	bl	core::num::dec2flt::lemire::compute_float::hdcbf7205757f8ba8
	eor.w	r1, r1, r10
	eors	r0, r6
	orrs	r0, r1
	it	eq
	cmpeq	r4, r2
	bne	.LBB162_55
	b	.LBB162_78
.LBB162_54:
	cmp	r4, #0
	bpl	.LBB162_78
.LBB162_55:
	movs	r0, #0
	bl	core::num::dec2flt::common::BiasedFp::zero_pow2::h579a9fdf4d32f785
	add	r3, sp, #4
	stm	r3!, {r0, r1, r2}
	movs	r0, #255
	bl	core::num::dec2flt::common::BiasedFp::zero_pow2::h579a9fdf4d32f785
	mov	r10, r0
	mov	r4, r1
	mov	r6, r2
	add	r0, sp, #48
	ldr	r1, [sp, #44]
	ldr	r2, [sp, #20]
	bl	core::num::dec2flt::decimal::parse_decimal::h93a23ff188fc0f81
	ldr	r0, [sp, #48]
	cmp	r0, #0
	beq	.LBB162_76
	ldr	r0, [sp, #52]
	cmn.w	r0, #324
	blt	.LBB162_76
	str	r6, [sp, #44]
	mov	r6, r10
	cmp.w	r0, #310
	str	r4, [sp, #24]
	bge	.LBB162_77
	mov.w	r10, #0
	cmp	r0, #1
	blt	.LBB162_65
.LBB162_59:
	cmp	r0, #18
	bhi	.LBB162_61
	movw	r1, :lower16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.20
	movt	r1, :upper16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.20
	ldrb	r4, [r1, r0]
	b	.LBB162_62
.LBB162_61:
	movs	r4, #60
.LBB162_62:
	add	r0, sp, #48
	mov	r1, r4
	bl	core::num::dec2flt::decimal::Decimal::right_shift::h74dc9d2f7bb2bda8
	ldr	r0, [sp, #52]
	cmn.w	r0, #2048
	ble	.LBB162_76
	cmp	r0, #1
	add	r10, r4
	bge	.LBB162_59
	b	.LBB162_65
.LBB162_64:
	cmp	r0, #1
	sub.w	r10, r10, r4
	bge.w	.LBB162_96
.LBB162_65:
	cbz	r0, .LBB162_68
	rsbs	r0, r0, #0
	cmp	r0, #18
	bhi	.LBB162_70
	movw	r1, :lower16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.20
	movt	r1, :upper16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.20
	ldrb	r1, [r1, r0]
	b	.LBB162_71
.LBB162_68:
	ldrb.w	r0, [sp, #57]
	cmp	r0, #4
	bhi.w	.LBB162_96
	movs	r1, #1
	cmp	r0, #2
	it	lo
	movlo	r1, #2
	b	.LBB162_71
.LBB162_70:
	movs	r1, #60
.LBB162_71:
	add	r0, sp, #48
	mov	r4, r1
	bl	core::num::dec2flt::decimal::Decimal::left_shift::ha96395fde205faea
	ldr	r0, [sp, #52]
	cmp.w	r0, #2048
	blt	.LBB162_64
	b	.LBB162_77
.LBB162_72:
	movs	r0, #3
	vldr	s0, .LCPI162_0
	ldr	r4, [sp, #20]
.LBB162_73:
	cmp	r0, r4
	bne	.LBB162_75
	vneg.f32	s2, s0
	cmp.w	r10, #45
	vseleq.f32	s0, s2, s0
	b	.LBB162_80
.LBB162_75:
	movs	r0, #10
	b	.LBB162_17
.LBB162_76:
	ldrd	r6, r0, [sp, #4]
	str	r0, [sp, #24]
	ldr	r0, [sp, #12]
	str	r0, [sp, #44]
.LBB162_77:
	ldr.w	r10, [sp, #24]
	ldr	r4, [sp, #44]
.LBB162_78:
	asrs	r0, r4, #31
	lsls	r0, r0, #23
	orr.w	r1, r0, r4, lsr #9
	orr.w	r0, r6, r4, lsl #23
	orr.w	r1, r1, r10
	bl	<f32 as core::num::dec2flt::float::RawFloat>::from_u64_bits::h7685f84f0a31e923
.LBB162_79:
	vneg.f32	s2, s0
	ldr	r0, [sp, #16]
	cmp	r0, #0
	ldr	r6, [sp, #36]
	ldrd	lr, r12, [sp, #28]
	vseleq.f32	s0, s0, s2
.LBB162_80:
	cmp	r5, r9
	bhs	.LBB162_94
	movs	r1, #1
.LBB162_82:
	ldrb.w	r0, [r11, r6]
	sub.w	r2, r0, #9
	movs	r0, #14
	cmp	r2, #23
	bhi.w	.LBB162_17
	lsl.w	r2, r1, r2
	tst.w	r2, r8
	beq.w	.LBB162_17
	cmp	r6, lr
	beq	.LBB162_94
	add.w	r2, r11, r6
	ldrb	r0, [r2, #1]
	sub.w	r3, r0, #9
	movs	r0, #14
	cmp	r3, #23
	bhi.w	.LBB162_17
	lsl.w	r3, r1, r3
	tst.w	r3, r8
	beq.w	.LBB162_17
	add.w	r3, r6, r12
	adds	r0, r3, #2
	beq	.LBB162_94
	ldrb	r0, [r2, #2]
	mov	r5, r6
	sub.w	r6, r0, #9
	movs	r0, #14
	cmp	r6, #23
	bhi.w	.LBB162_17
	lsl.w	r6, r1, r6
	tst.w	r6, r8
	beq.w	.LBB162_17
	adds	r0, r3, #3
	beq	.LBB162_94
	ldrb	r0, [r2, #3]
	sub.w	r2, r0, #9
	movs	r0, #14
	cmp	r2, #23
	bhi.w	.LBB162_17
	lsl.w	r2, r1, r2
	tst.w	r2, r8
	beq.w	.LBB162_17
	add.w	r12, r12, #4
	mov	r6, r5
	adds.w	r0, r5, r12
	add.w	r11, r11, #4
	sub.w	lr, lr, #4
	bne	.LBB162_82
.LBB162_94:
	ldr	r0, [sp, #40]
	vstr	s0, [r0]
	movs	r0, #24
	b	.LBB162_17
.LBB162_95:
	rsbs	r0, r6, #0
	bl	<f32 as core::num::dec2flt::float::RawFloat>::pow10_fast_path::h2e6c360518413f56
	vdiv.f32	s0, s16, s0
	b	.LBB162_79
.LBB162_96:
	sub.w	r10, r10, #1
	cmn.w	r10, #127
	bgt	.LBB162_98
.LBB162_97:
	mvn	r0, #125
	sub.w	r4, r0, r10
	add	r0, sp, #48
	cmp	r4, #60
	it	hs
	movhs	r4, #60
	mov	r1, r4
	bl	core::num::dec2flt::decimal::Decimal::right_shift::h74dc9d2f7bb2bda8
	add	r10, r4
	cmn.w	r10, #126
	blo	.LBB162_97
.LBB162_98:
	add.w	r0, r10, #127
	cmp	r0, #254
	bgt.w	.LBB162_77
	add	r4, sp, #48
	movs	r1, #24
	mov	r0, r4
	bl	core::num::dec2flt::decimal::Decimal::left_shift::ha96395fde205faea
	mov	r0, r4
	bl	core::num::dec2flt::decimal::Decimal::round::ha3bf16e5d49ff8bf
	lsrs	r2, r0, #24
	orr.w	r2, r2, r1, lsl #8
	orr.w	r2, r2, r1, lsr #24
	cbz	r2, .LBB162_102
	add	r4, sp, #48
	movs	r1, #1
	mov	r0, r4
	bl	core::num::dec2flt::decimal::Decimal::right_shift::h74dc9d2f7bb2bda8
	mov	r0, r4
	bl	core::num::dec2flt::decimal::Decimal::round::ha3bf16e5d49ff8bf
	add.w	r2, r10, #128
	cmp	r2, #254
	bgt.w	.LBB162_77
	add.w	r10, r10, #1
.LBB162_102:
	mov	r6, r0
	subs.w	r0, r0, #8388608
	sbcs	r0, r1, #0
	mov.w	r0, #127
	it	lo
	movlo	r0, #126
	add.w	r4, r0, r10
	mov.w	r10, #0
	bfc	r6, #23, #9
	b	.LBB162_78
.LBB162_103:
	movw	r2, :lower16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.5
	mov	r0, r6
	movt	r2, :upper16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.5
	mov	r1, r9
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB162_104:
	movw	r2, :lower16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.5
	mov	r1, r5
	movt	r2, :upper16:.Lanon.df8ce4529e13d3933241d72a4ca2f01e.5
	bl	core::slice::index::slice_index_order_fail::h8a53f055fb6ee074
	.inst.n	0xdefe
	.p2align	2
.LCPI162_0:
	.long	0x7fc00000
.LCPI162_1:
	.long	0x7f800000
.Lfunc_end162:
	.size	<f32 as miniconf::Miniconf>::string_set::h65f156fa2cd6ed1a, .Lfunc_end162-<f32 as miniconf::Miniconf>::string_set::h65f156fa2cd6ed1a
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN4core3num7dec2flt6lemire13compute_float17hdcbf7205757f8ba8E,"ax",%progbits
	.p2align	1
	.type	core::num::dec2flt::lemire::compute_float::hdcbf7205757f8ba8,%function
	.code	16
	.thumb_func
core::num::dec2flt::lemire::compute_float::hdcbf7205757f8ba8:
.Lfunc_begin163:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#20
	sub	sp, #20
	mov	r6, r0
	movs	r0, #0
	mov	r8, r3
	mov	r5, r2
	mov	r11, r1
	mov.w	r9, #-1
	movs	r4, #0
	bl	core::num::dec2flt::common::BiasedFp::zero_pow2::h579a9fdf4d32f785
	movs	r0, #255
	str	r2, [sp, #16]
	bl	core::num::dec2flt::common::BiasedFp::zero_pow2::h579a9fdf4d32f785
	mov.w	r0, #-1
	str	r2, [sp, #12]
	bl	core::num::dec2flt::common::BiasedFp::zero_pow2::h579a9fdf4d32f785
	orrs.w	r0, r5, r8
	beq.w	.LBB163_16
	mvn	r0, #64
	subs	r0, r6, r0
	sbcs.w	r0, r11, r9
	blt.w	.LBB163_16
	movs	r4, #0
	rsbs.w	r0, r6, #38
	sbcs.w	r0, r4, r11
	bge	.LBB163_4
.LBB163_3:
	movs	r1, #0
	ldr	r2, [sp, #12]
	mov	r0, r4
	add	sp, #20
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB163_4:
	clz	r0, r5
	cmp.w	r8, #0
	add.w	r4, r0, #32
	mov	r10, r2
	it	ne
	clzne	r4, r8
	and	r0, r4, #63
	rsb.w	r2, r0, #32
	lsl.w	r1, r8, r0
	lsr.w	r2, r5, r2
	orr.w	r3, r2, r1
	subs.w	r1, r0, #32
	lsl.w	r2, r5, r0
	mov	r0, r6
	itt	pl
	lslpl.w	r3, r5, r1
	movpl	r2, #0
	mov	r1, r11
	bl	core::num::dec2flt::lemire::compute_product_approx::h25610b609a3e8ae8
	mvn	lr, #64
	mov.w	r12, #-1
	adds.w	r5, lr, #64
	mov	r8, r0
	adc	r0, r12, #0
	eor.w	r5, r5, r8
	eors	r0, r1
	orrs	r5, r0
	adds.w	r0, lr, #37
	adc	r12, r12, #0
	cbnz	r5, .LBB163_7
	subs	r0, r0, r6
	sbcs.w	r0, r12, r11
	blt	.LBB163_7
	movs	r4, #0
	mov	r2, r10
	b	.LBB163_17
.LBB163_7:
	lsrs	r0, r3, #31
	mov	r5, r3
	add.w	r10, r0, #38
	and	r0, r10, #7
	lsr.w	r9, r3, r0
	mov	r0, r6
	strd	r2, r1, [sp, #4]
	bl	core::num::dec2flt::lemire::power::h40f4ef2b860ed5df
	rsb	r1, r4, r5, lsr #31
	add	r1, r0
	add.w	r0, r1, #127
	cmp	r0, #1
	blt	.LBB163_15
	mvn	r3, #64
	mov	r12, r5
	adds	r3, #47
	mov.w	r5, #-1
	adc	r4, r5, #0
	rsbs.w	r5, r8, #1
	mov.w	r2, #0
	ldr	r5, [sp, #8]
	sbcs.w	r5, r2, r5
	blo	.LBB163_13
	subs	r3, r3, r6
	sbcs.w	r3, r4, r11
	bge	.LBB163_13
	rsbs.w	r3, r6, #10
	mov.w	r3, #0
	sbcs.w	r3, r3, r11
	blt	.LBB163_13
	and	r3, r9, #3
	teq.w	r3, #1
	bne	.LBB163_13
	rsb.w	r2, r10, #32
	subs.w	r3, r10, #32
	lsr.w	r2, r9, r2
	lsl.w	r6, r9, r10
	itt	pl
	lslpl.w	r2, r9, r3
	movpl	r6, #0
	ldr	r3, [sp, #4]
	eor.w	r2, r2, r12
	eors	r3, r6
	orrs	r2, r3
	mov.w	r2, #0
	it	eq
	biceq	r9, r9, #1
.LBB163_13:
	and	r3, r9, #1
	adds.w	r3, r3, r9
	adc	r6, r2, #0
	lsrs	r2, r3, #25
	orr.w	r2, r2, r6, lsl #7
	orr.w	r2, r2, r6, lsr #25
	cmp	r2, #0
	it	ne
	addne.w	r0, r1, #128
	cmp	r0, #254
	ble	.LBB163_18
	movs	r4, #0
	b	.LBB163_3
.LBB163_15:
	mvn	r0, #125
	movs	r4, #0
	subs	r0, r0, r1
	cmp	r0, #63
	ble	.LBB163_19
.LBB163_16:
	ldr	r2, [sp, #16]
.LBB163_17:
	movs	r1, #0
	mov	r0, r4
	add	sp, #20
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB163_18:
	lsrs.w	r1, r6, #1
	rrx	r3, r3
	bic	r1, r1, #-2147483648
	bic	r4, r3, #8388608
	cmp	r2, #0
	mov	r2, r0
	itt	ne
	movne	r1, #0
	movne	r4, #0
	mov	r0, r4
	add	sp, #20
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB163_19:
	and	r0, r0, #63
	subs.w	r1, r0, #32
	lsr.w	r0, r9, r0
	it	pl
	movpl	r4, #0
	it	pl
	movpl	r0, #0
	and	r1, r0, #1
	adds	r0, r0, r1
	adc	r2, r4, #0
	lsrs	r3, r0, #24
	lsrs.w	r1, r2, #1
	orr.w	r3, r3, r2, lsl #8
	rrx	r4, r0
	orr.w	r2, r3, r2, lsr #24
	cmp	r2, #0
	it	ne
	movne	r2, #1
	mov	r0, r4
	add	sp, #20
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.Lfunc_end163:
	.size	core::num::dec2flt::lemire::compute_float::hdcbf7205757f8ba8, .Lfunc_end163-core::num::dec2flt::lemire::compute_float::hdcbf7205757f8ba8
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN42_$LT$f32$u20$as$u20$miniconf..Miniconf$GT$10string_get17h0cc957cb8457eedeE","ax",%progbits
	.p2align	1
	.type	<f32 as miniconf::Miniconf>::string_get::h0cc957cb8457eede,%function
	.code	16
	.thumb_func
<f32 as miniconf::Miniconf>::string_get::h0cc957cb8457eede:
.Lfunc_begin164:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r7, lr}
	push	{r4, r5, r7, lr}
	.cfi_def_cfa_offset 16
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r5, -12
	.cfi_offset r4, -16
	.setfp	r7, sp, #8
	add	r7, sp, #8
	.cfi_def_cfa r7, 8
	.pad	#16
	sub	sp, #16
	mov	r5, r0
	mov	r0, r1
	mov	r4, r2
	bl	core::iter::adapters::peekable::Peekable<I>::peek::h2f6060bb9e66d6cf
	cbz	r0, .LBB164_2
	movs	r0, #1
	movs	r2, #18
	b	.LBB164_6
.LBB164_2:
	mov.w	r0, #512
	str	r0, [sp, #8]
	movs	r0, #0
	vldr	s0, [r5]
	str	r0, [sp, #12]
	add	r0, sp, #4
	str	r4, [sp, #4]
	bl	<&mut serde_json_core::ser::Serializer as serde::ser::Serializer>::serialize_f32::h9646727876011b6e
	cbz	r0, .LBB164_4
	b	.LBB164_5
.LBB164_4:
	ldr	r1, [sp, #12]
.LBB164_5:
	lsrs	r3, r1, #16
	movs	r2, #22
	lsls	r1, r1, #16
.LBB164_6:
	lsls	r2, r2, #8
	lsls	r3, r3, #16
	orr.w	r2, r2, r1, lsl #16
	orr.w	r1, r3, r1, lsr #16
	add	r0, r2
	add	sp, #16
	pop	{r4, r5, r7, pc}
.Lfunc_end164:
	.size	<f32 as miniconf::Miniconf>::string_get::h0cc957cb8457eede, .Lfunc_end164-<f32 as miniconf::Miniconf>::string_get::h0cc957cb8457eede
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN43_$LT$bool$u20$as$u20$miniconf..Miniconf$GT$10string_set17hc172dc945a045a3aE","ax",%progbits
	.p2align	1
	.type	<bool as miniconf::Miniconf>::string_set::hc172dc945a045a3a,%function
	.code	16
	.thumb_func
<bool as miniconf::Miniconf>::string_set::hc172dc945a045a3a:
.Lfunc_begin165:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#4
	sub	sp, #4
	mov	r8, r0
	mov	r0, r1
	mov	r6, r3
	mov	r11, r2
	bl	core::iter::adapters::peekable::Peekable<I>::peek::h2f6060bb9e66d6cf
	cbz	r0, .LBB165_3
	movs	r0, #18
.LBB165_2:
	add	sp, #4
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB165_3:
	cmp	r6, #0
	beq	.LBB165_17
	movw	r10, #19
	rsb.w	lr, r6, #0
	sub.w	r9, r6, #1
	movs	r5, #0
	movs	r1, #1
	movt	r10, #128
.LBB165_5:
	ldrb.w	r0, [r11, r5]
	sub.w	r2, r0, #9
	cmp	r2, #23
	bhi	.LBB165_21
	lsl.w	r2, r1, r2
	tst.w	r2, r10
	beq	.LBB165_21
	cmp	r9, r5
	beq	.LBB165_17
	add.w	r2, r11, r5
	ldrb	r0, [r2, #1]
	sub.w	r3, r0, #9
	cmp	r3, #23
	bhi	.LBB165_18
	lsl.w	r3, r1, r3
	tst.w	r3, r10
	beq	.LBB165_18
	add.w	r3, lr, r5
	adds	r0, r3, #2
	beq	.LBB165_17
	ldrb	r0, [r2, #2]
	sub.w	r4, r0, #9
	cmp	r4, #23
	bhi	.LBB165_19
	lsl.w	r4, r1, r4
	tst.w	r4, r10
	beq	.LBB165_19
	adds	r0, r3, #3
	beq	.LBB165_17
	ldrb	r0, [r2, #3]
	sub.w	r2, r0, #9
	cmp	r2, #23
	bhi	.LBB165_20
	lsl.w	r2, r1, r2
	tst.w	r2, r10
	beq	.LBB165_20
	adds	r5, #4
	cmp	r6, r5
	bne	.LBB165_5
.LBB165_17:
	movs	r0, #4
	add	sp, #4
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB165_18:
	adds	r5, #1
	b	.LBB165_21
.LBB165_19:
	adds	r5, #2
	b	.LBB165_21
.LBB165_20:
	adds	r5, #3
.LBB165_21:
	cmp	r0, #116
	beq	.LBB165_32
	cmp	r0, #102
	bne.w	.LBB165_55
	adds	r0, r5, #1
	cmp	r6, r0
	mov	r1, r0
	it	hi
	movhi	r1, r6
	cmp	r0, r6
	bhs.w	.LBB165_54
	ldrb.w	r0, [r11, r0]
	cmp	r0, #97
	mov.w	r0, #8
	bne	.LBB165_2
	adds	r2, r5, #2
	cmp	r2, r1
	beq	.LBB165_2
	ldrb.w	r0, [r11, r2]
	cmp	r0, #108
	mov.w	r0, #8
	bne	.LBB165_2
	adds	r2, r5, #3
	cmp	r2, r1
	beq.w	.LBB165_2
	ldrb.w	r0, [r11, r2]
	cmp	r0, #115
	mov.w	r0, #8
	bne.w	.LBB165_2
	adds	r2, r5, #4
	cmp	r2, r1
	beq.w	.LBB165_2
	ldrb.w	r0, [r11, r2]
	cmp	r0, #101
	bne	.LBB165_54
	adds	r5, #5
	mov.w	r12, #0
	b	.LBB165_39
.LBB165_32:
	adds	r0, r5, #1
	cmp	r6, r0
	mov	r1, r0
	it	hi
	movhi	r1, r6
	cmp	r0, r6
	bhs	.LBB165_54
	ldrb.w	r0, [r11, r0]
	cmp	r0, #114
	mov.w	r0, #8
	bne.w	.LBB165_2
	adds	r2, r5, #2
	cmp	r2, r1
	beq.w	.LBB165_2
	ldrb.w	r0, [r11, r2]
	cmp	r0, #117
	mov.w	r0, #8
	bne.w	.LBB165_2
	adds	r2, r5, #3
	cmp	r2, r1
	beq.w	.LBB165_2
	ldrb.w	r0, [r11, r2]
	cmp	r0, #101
	bne	.LBB165_54
	adds	r5, #4
	mov.w	r12, #1
.LBB165_39:
	cmp	r5, r6
	bhs	.LBB165_53
	movs	r6, #1
.LBB165_41:
	ldrb.w	r0, [r11, r5]
	sub.w	r1, r0, #9
	movs	r0, #14
	cmp	r1, #23
	bhi.w	.LBB165_2
	lsl.w	r1, r6, r1
	tst.w	r1, r10
	beq.w	.LBB165_2
	cmp	r5, r9
	beq	.LBB165_53
	add.w	r1, r11, r5
	ldrb	r0, [r1, #1]
	sub.w	r2, r0, #9
	movs	r0, #14
	cmp	r2, #23
	bhi.w	.LBB165_2
	lsl.w	r2, r6, r2
	tst.w	r2, r10
	beq.w	.LBB165_2
	add.w	r2, r5, lr
	adds	r0, r2, #2
	beq	.LBB165_53
	ldrb	r0, [r1, #2]
	sub.w	r3, r0, #9
	movs	r0, #14
	cmp	r3, #23
	bhi.w	.LBB165_2
	lsl.w	r3, r6, r3
	tst.w	r3, r10
	beq.w	.LBB165_2
	adds	r0, r2, #3
	beq	.LBB165_53
	ldrb	r0, [r1, #3]
	sub.w	r1, r0, #9
	movs	r0, #14
	cmp	r1, #23
	bhi.w	.LBB165_2
	lsl.w	r1, r6, r1
	tst.w	r1, r10
	beq.w	.LBB165_2
	add.w	lr, lr, #4
	add.w	r11, r11, #4
	adds.w	r0, r5, lr
	sub.w	r9, r9, #4
	bne	.LBB165_41
.LBB165_53:
	movs	r0, #24
	strb.w	r12, [r8]
	add	sp, #4
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB165_54:
	movs	r0, #8
	add	sp, #4
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB165_55:
	movs	r0, #11
	add	sp, #4
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.Lfunc_end165:
	.size	<bool as miniconf::Miniconf>::string_set::hc172dc945a045a3a, .Lfunc_end165-<bool as miniconf::Miniconf>::string_set::hc172dc945a045a3a
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN43_$LT$bool$u20$as$u20$miniconf..Miniconf$GT$10string_get17he0e03183ba0b45e9E","ax",%progbits
	.p2align	1
	.type	<bool as miniconf::Miniconf>::string_get::he0e03183ba0b45e9,%function
	.code	16
	.thumb_func
<bool as miniconf::Miniconf>::string_get::he0e03183ba0b45e9:
.Lfunc_begin166:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r7, lr}
	push	{r4, r5, r7, lr}
	.cfi_def_cfa_offset 16
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r5, -12
	.cfi_offset r4, -16
	.setfp	r7, sp, #8
	add	r7, sp, #8
	.cfi_def_cfa r7, 8
	.pad	#16
	sub	sp, #16
	mov	r5, r0
	mov	r0, r1
	mov	r4, r2
	bl	core::iter::adapters::peekable::Peekable<I>::peek::h2f6060bb9e66d6cf
	cbz	r0, .LBB166_2
	movs	r0, #1
	movs	r2, #18
	b	.LBB166_6
.LBB166_2:
	mov.w	r0, #512
	ldrb	r1, [r5]
	str	r0, [sp, #8]
	movs	r0, #0
	str	r0, [sp, #12]
	add	r0, sp, #4
	str	r4, [sp, #4]
	cmp	r1, #0
	it	ne
	movne	r1, #1
	bl	<&mut serde_json_core::ser::Serializer as serde::ser::Serializer>::serialize_bool::h099b6880f35ee002
	cbz	r0, .LBB166_4
	b	.LBB166_5
.LBB166_4:
	ldr	r1, [sp, #12]
.LBB166_5:
	lsrs	r3, r1, #16
	movs	r2, #22
	lsls	r1, r1, #16
.LBB166_6:
	lsls	r2, r2, #8
	lsls	r3, r3, #16
	orr.w	r2, r2, r1, lsl #16
	orr.w	r1, r3, r1, lsr #16
	add	r0, r2
	add	sp, #16
	pop	{r4, r5, r7, pc}
.Lfunc_end166:
	.size	<bool as miniconf::Miniconf>::string_get::he0e03183ba0b45e9, .Lfunc_end166-<bool as miniconf::Miniconf>::string_get::he0e03183ba0b45e9
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN4core3cmp3Ord3max17hdad388a91279e379E,"ax",%progbits
	.p2align	1
	.type	core::cmp::Ord::max::hdad388a91279e379,%function
	.code	16
	.thumb_func
core::cmp::Ord::max::hdad388a91279e379:
.Lfunc_begin167:
	.fnstart
	.cfi_startproc
	uxth	r2, r1
	uxth	r3, r0
	cmp	r3, r2
	it	ls
	movls	r0, r1
	bx	lr
.Lfunc_end167:
	.size	core::cmp::Ord::max::hdad388a91279e379, .Lfunc_end167-core::cmp::Ord::max::hdad388a91279e379
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN6minimq3ser13packet_writer20ReversedPacketWriter17write_utf8_string17hef12e04e07667af0E,"ax",%progbits
	.p2align	1
	.type	minimq::ser::packet_writer::ReversedPacketWriter::write_utf8_string::hef12e04e07667af0,%function
	.code	16
	.thumb_func
minimq::ser::packet_writer::ReversedPacketWriter::write_utf8_string::hef12e04e07667af0:
.Lfunc_begin168:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r11}
	push.w	{r8, r9, r11}
	.cfi_offset r11, -24
	.cfi_offset r9, -28
	.cfi_offset r8, -32
	movw	r3, :lower16:core::cmp::Ord::max::hdad388a91279e379
	movt	r3, :upper16:core::cmp::Ord::max::hdad388a91279e379
	cmp	r2, r3
	bls	.LBB168_2
	movs	r0, #1
	pop.w	{r8, r9, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB168_2:
	mov	r4, r0
	ldr	r0, [r0, #8]
	mov	r5, r2
	cmp	r0, r2
	blo	.LBB168_5
	ldr.w	r8, [r4, #4]
	cmp	r0, r8
	bhi	.LBB168_8
	ldr.w	r9, [r4]
	subs	r6, r0, r5
	add.w	r0, r9, r6
	mov	r2, r5
	bl	__aeabi_memcpy
	cmp	r6, #2
	str	r6, [r4, #8]
	bhs	.LBB168_6
.LBB168_5:
	movs	r0, #0
	pop.w	{r8, r9, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB168_6:
	cmp	r6, r8
	itttt	ls
	subls	r0, r6, #2
	revls	r1, r5
	lsrls	r1, r1, #16
	strhls.w	r1, [r9, r0]
	itttt	ls
	strls	r0, [r4, #8]
	movls	r0, #11
	popls.w	{r8, r9, r11}
	popls	{r4, r5, r6, r7, pc}
.LBB168_7:
	movw	r2, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.4
	mov	r0, r6
	movt	r2, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.4
	mov	r1, r8
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB168_8:
	movw	r2, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.4
	movt	r2, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.4
	mov	r1, r8
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.Lfunc_end168:
	.size	minimq::ser::packet_writer::ReversedPacketWriter::write_utf8_string::hef12e04e07667af0, .Lfunc_end168-minimq::ser::packet_writer::ReversedPacketWriter::write_utf8_string::hef12e04e07667af0
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN6minimq3ser13packet_writer20ReversedPacketWriter16write_properties17h502ebb0001b99ed2E,"ax",%progbits
	.p2align	2
	.type	minimq::ser::packet_writer::ReversedPacketWriter::write_properties::h502ebb0001b99ed2,%function
	.code	16
	.thumb_func
minimq::ser::packet_writer::ReversedPacketWriter::write_properties::h502ebb0001b99ed2:
.Lfunc_begin169:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#28
	sub	sp, #28
	mov	r4, r0
	mov	r11, r0
	cmp	r2, #0
	mov	r5, r1
	ldr	r6, [r4, #4]!
	ldr	r3, [r4, #4]
	mov	r1, r6
	mov	r0, r3
	beq.w	.LBB169_180
	add.w	r0, r2, r2, lsl #2
	str	r6, [sp, #12]
	lsls	r6, r0, #2
	mov	r0, r3
	mov.w	r8, #0
	str	r3, [sp, #8]
	str	r4, [sp, #24]
	strd	r6, r5, [sp, #16]
	b	.LBB169_4
.LBB169_2:
	ldr.w	r1, [r11]
	subs	r0, #2
	movs	r2, #42
.LBB169_3:
	strb	r2, [r1, r0]
	add.w	r8, r8, #20
	str.w	r0, [r11, #8]
	cmp	r6, r8
	beq.w	.LBB169_179
.LBB169_4:
	ldrb.w	r1, [r5, r8]
.LCPI169_0:
	tbh	[pc, r1, lsl #1]
.LJTI169_0:
	.short	(.LBB169_6-(.LCPI169_0+4))/2
	.short	(.LBB169_11-(.LCPI169_0+4))/2
	.short	(.LBB169_16-(.LCPI169_0+4))/2
	.short	(.LBB169_24-(.LCPI169_0+4))/2
	.short	(.LBB169_32-(.LCPI169_0+4))/2
	.short	(.LBB169_40-(.LCPI169_0+4))/2
	.short	(.LBB169_44-(.LCPI169_0+4))/2
	.short	(.LBB169_49-(.LCPI169_0+4))/2
	.short	(.LBB169_57-(.LCPI169_0+4))/2
	.short	(.LBB169_62-(.LCPI169_0+4))/2
	.short	(.LBB169_70-(.LCPI169_0+4))/2
	.short	(.LBB169_78-(.LCPI169_0+4))/2
	.short	(.LBB169_83-(.LCPI169_0+4))/2
	.short	(.LBB169_88-(.LCPI169_0+4))/2
	.short	(.LBB169_93-(.LCPI169_0+4))/2
	.short	(.LBB169_101-(.LCPI169_0+4))/2
	.short	(.LBB169_109-(.LCPI169_0+4))/2
	.short	(.LBB169_119-(.LCPI169_0+4))/2
	.short	(.LBB169_124-(.LCPI169_0+4))/2
	.short	(.LBB169_129-(.LCPI169_0+4))/2
	.short	(.LBB169_134-(.LCPI169_0+4))/2
	.short	(.LBB169_139-(.LCPI169_0+4))/2
	.short	(.LBB169_144-(.LCPI169_0+4))/2
	.short	(.LBB169_157-(.LCPI169_0+4))/2
	.short	(.LBB169_162-(.LCPI169_0+4))/2
	.short	(.LBB169_167-(.LCPI169_0+4))/2
	.short	(.LBB169_172-(.LCPI169_0+4))/2
	.p2align	1
.LBB169_6:
	cmp	r0, #0
	beq.w	.LBB169_177
	ldr	r1, [r4]
	cmp	r0, r1
	bhi.w	.LBB169_182
	add.w	r1, r5, r8
	ldr.w	r2, [r11]
	subs	r3, r0, #1
	str.w	r3, [r11, #8]
	ldrb	r1, [r1, #1]
	strb	r1, [r2, r3]
	beq.w	.LBB169_177
	ldr	r1, [r4]
	cmp	r3, r1
	bhi.w	.LBB169_176
	ldr.w	r1, [r11]
	subs	r0, #2
	movs	r2, #1
	b	.LBB169_3
.LBB169_11:
	cmp	r0, #4
	blo.w	.LBB169_177
	ldr	r1, [r4]
	cmp	r0, r1
	bhi.w	.LBB169_182
	add.w	r1, r5, r8
	ldr.w	r2, [r11]
	subs	r3, r0, #4
	str.w	r3, [r11, #8]
	ldr	r1, [r1, #4]
	rev	r1, r1
	str	r1, [r2, r3]
	beq.w	.LBB169_177
	ldr	r1, [r4]
	cmp	r3, r1
	bhi.w	.LBB169_176
	ldr.w	r1, [r11]
	subs	r0, #5
	movs	r2, #2
	b	.LBB169_3
.LBB169_16:
	add.w	r1, r5, r8
	movw	r2, :lower16:core::cmp::Ord::max::hdad388a91279e379
	movt	r2, :upper16:core::cmp::Ord::max::hdad388a91279e379
	ldr	r5, [r1, #8]
	cmp	r5, r2
	bhi.w	.LBB169_181
	cmp	r0, r5
	blo.w	.LBB169_177
	ldr.w	r9, [r4]
	cmp	r0, r9
	bhi.w	.LBB169_183
	ldr.w	r10, [r11]
	subs	r6, r0, r5
	ldr	r1, [r1, #4]
	add.w	r0, r10, r6
	mov	r2, r5
	bl	__aeabi_memcpy
	cmp	r6, #2
	str.w	r6, [r11, #8]
	blo.w	.LBB169_177
	cmp	r6, r9
	bhi.w	.LBB169_184
	subs	r0, r6, #2
	str.w	r0, [r11, #8]
	rev	r1, r5
	lsr.w	r1, r1, #16
	strh.w	r1, [r10, r0]
	beq.w	.LBB169_177
	ldr	r4, [sp, #24]
	ldr	r1, [r4]
	cmp	r0, r1
	bhi.w	.LBB169_182
	ldr.w	r1, [r11]
	subs	r0, r6, #3
	movs	r2, #3
	b	.LBB169_117
.LBB169_24:
	add.w	r1, r5, r8
	movw	r2, :lower16:core::cmp::Ord::max::hdad388a91279e379
	movt	r2, :upper16:core::cmp::Ord::max::hdad388a91279e379
	ldr	r5, [r1, #8]
	cmp	r5, r2
	bhi.w	.LBB169_181
	cmp	r0, r5
	blo.w	.LBB169_177
	ldr.w	r9, [r4]
	cmp	r0, r9
	bhi.w	.LBB169_183
	ldr.w	r10, [r11]
	subs	r6, r0, r5
	ldr	r1, [r1, #4]
	add.w	r0, r10, r6
	mov	r2, r5
	bl	__aeabi_memcpy
	cmp	r6, #2
	str.w	r6, [r11, #8]
	blo.w	.LBB169_177
	cmp	r6, r9
	bhi.w	.LBB169_184
	subs	r0, r6, #2
	str.w	r0, [r11, #8]
	rev	r1, r5
	lsr.w	r1, r1, #16
	strh.w	r1, [r10, r0]
	beq.w	.LBB169_177
	ldr	r4, [sp, #24]
	ldr	r1, [r4]
	cmp	r0, r1
	bhi.w	.LBB169_182
	ldr.w	r1, [r11]
	subs	r0, r6, #3
	movs	r2, #8
	b	.LBB169_117
.LBB169_32:
	add.w	r1, r5, r8
	movw	r2, :lower16:core::cmp::Ord::max::hdad388a91279e379
	movt	r2, :upper16:core::cmp::Ord::max::hdad388a91279e379
	ldr	r5, [r1, #8]
	cmp	r5, r2
	bhi.w	.LBB169_181
	cmp	r0, r5
	blo.w	.LBB169_177
	ldr.w	r9, [r4]
	cmp	r0, r9
	bhi.w	.LBB169_183
	ldr.w	r10, [r11]
	subs	r6, r0, r5
	ldr	r1, [r1, #4]
	add.w	r0, r10, r6
	mov	r2, r5
	bl	__aeabi_memcpy
	cmp	r6, #2
	str.w	r6, [r11, #8]
	blo.w	.LBB169_177
	cmp	r6, r9
	bhi.w	.LBB169_184
	subs	r0, r6, #2
	str.w	r0, [r11, #8]
	rev	r1, r5
	lsr.w	r1, r1, #16
	strh.w	r1, [r10, r0]
	beq.w	.LBB169_177
	ldr	r4, [sp, #24]
	ldr	r1, [r4]
	cmp	r0, r1
	bhi.w	.LBB169_182
	ldr.w	r1, [r11]
	subs	r0, r6, #3
	movs	r2, #9
	b	.LBB169_117
.LBB169_40:
	add.w	r0, r5, r8
	ldr	r1, [r0, #4]
	mov	r0, r11
	bl	minimq::ser::packet_writer::ReversedPacketWriter::write_variable_length_integer::h1fe59e45f0b7bcb1
	uxtb	r0, r0
	cmp	r0, #11
	bne.w	.LBB169_178
	ldr.w	r0, [r11, #8]
	cmp	r0, #0
	beq.w	.LBB169_177
	ldr	r1, [r4]
	cmp	r0, r1
	bhi.w	.LBB169_182
	ldr.w	r1, [r11]
	subs	r0, #1
	movs	r2, #11
	b	.LBB169_3
.LBB169_44:
	cmp	r0, #4
	blo.w	.LBB169_177
	ldr	r1, [r4]
	cmp	r0, r1
	bhi.w	.LBB169_182
	add.w	r1, r5, r8
	ldr.w	r2, [r11]
	subs	r3, r0, #4
	str.w	r3, [r11, #8]
	ldr	r1, [r1, #4]
	rev	r1, r1
	str	r1, [r2, r3]
	beq.w	.LBB169_177
	ldr	r1, [r4]
	cmp	r3, r1
	bhi.w	.LBB169_176
	ldr.w	r1, [r11]
	subs	r0, #5
	movs	r2, #17
	b	.LBB169_3
.LBB169_49:
	add.w	r1, r5, r8
	movw	r2, :lower16:core::cmp::Ord::max::hdad388a91279e379
	movt	r2, :upper16:core::cmp::Ord::max::hdad388a91279e379
	ldr	r5, [r1, #8]
	cmp	r5, r2
	bhi.w	.LBB169_181
	cmp	r0, r5
	blo.w	.LBB169_177
	ldr.w	r9, [r4]
	cmp	r0, r9
	bhi.w	.LBB169_183
	ldr.w	r10, [r11]
	subs	r6, r0, r5
	ldr	r1, [r1, #4]
	add.w	r0, r10, r6
	mov	r2, r5
	bl	__aeabi_memcpy
	cmp	r6, #2
	str.w	r6, [r11, #8]
	blo.w	.LBB169_177
	cmp	r6, r9
	bhi.w	.LBB169_184
	subs	r0, r6, #2
	str.w	r0, [r11, #8]
	rev	r1, r5
	lsr.w	r1, r1, #16
	strh.w	r1, [r10, r0]
	beq.w	.LBB169_177
	ldr	r4, [sp, #24]
	ldr	r1, [r4]
	cmp	r0, r1
	bhi.w	.LBB169_182
	ldr.w	r1, [r11]
	subs	r0, r6, #3
	movs	r2, #18
	b	.LBB169_117
.LBB169_57:
	cmp	r0, #2
	blo.w	.LBB169_177
	ldr	r1, [r4]
	cmp	r0, r1
	bhi.w	.LBB169_182
	add.w	r1, r5, r8
	ldr.w	r2, [r11]
	subs	r3, r0, #2
	str.w	r3, [r11, #8]
	ldrh	r1, [r1, #2]
	rev	r1, r1
	lsr.w	r1, r1, #16
	strh	r1, [r2, r3]
	beq.w	.LBB169_177
	ldr	r1, [r4]
	cmp	r3, r1
	bhi.w	.LBB169_176
	ldr.w	r1, [r11]
	subs	r0, #3
	movs	r2, #19
	b	.LBB169_3
.LBB169_62:
	add.w	r1, r5, r8
	movw	r2, :lower16:core::cmp::Ord::max::hdad388a91279e379
	movt	r2, :upper16:core::cmp::Ord::max::hdad388a91279e379
	ldr	r5, [r1, #8]
	cmp	r5, r2
	bhi.w	.LBB169_181
	cmp	r0, r5
	blo.w	.LBB169_177
	ldr.w	r9, [r4]
	cmp	r0, r9
	bhi.w	.LBB169_183
	ldr.w	r10, [r11]
	subs	r6, r0, r5
	ldr	r1, [r1, #4]
	add.w	r0, r10, r6
	mov	r2, r5
	bl	__aeabi_memcpy
	cmp	r6, #2
	str.w	r6, [r11, #8]
	blo.w	.LBB169_177
	cmp	r6, r9
	bhi.w	.LBB169_184
	subs	r0, r6, #2
	str.w	r0, [r11, #8]
	rev	r1, r5
	lsr.w	r1, r1, #16
	strh.w	r1, [r10, r0]
	beq.w	.LBB169_177
	ldr	r4, [sp, #24]
	ldr	r1, [r4]
	cmp	r0, r1
	bhi.w	.LBB169_182
	ldr.w	r1, [r11]
	subs	r0, r6, #3
	movs	r2, #21
	b	.LBB169_117
.LBB169_70:
	add.w	r1, r5, r8
	movw	r2, :lower16:core::cmp::Ord::max::hdad388a91279e379
	movt	r2, :upper16:core::cmp::Ord::max::hdad388a91279e379
	ldr	r5, [r1, #8]
	cmp	r5, r2
	bhi.w	.LBB169_181
	cmp	r0, r5
	blo.w	.LBB169_177
	ldr.w	r9, [r4]
	cmp	r0, r9
	bhi.w	.LBB169_183
	ldr.w	r10, [r11]
	subs	r6, r0, r5
	ldr	r1, [r1, #4]
	add.w	r0, r10, r6
	mov	r2, r5
	bl	__aeabi_memcpy
	cmp	r6, #2
	str.w	r6, [r11, #8]
	blo.w	.LBB169_177
	cmp	r6, r9
	bhi.w	.LBB169_184
	subs	r0, r6, #2
	str.w	r0, [r11, #8]
	rev	r1, r5
	lsr.w	r1, r1, #16
	strh.w	r1, [r10, r0]
	beq.w	.LBB169_177
	ldr	r4, [sp, #24]
	ldr	r1, [r4]
	cmp	r0, r1
	bhi.w	.LBB169_182
	ldr.w	r1, [r11]
	subs	r0, r6, #3
	movs	r2, #22
	b	.LBB169_117
.LBB169_78:
	cmp	r0, #0
	beq.w	.LBB169_177
	ldr	r1, [r4]
	cmp	r0, r1
	bhi.w	.LBB169_182
	add.w	r1, r5, r8
	ldr.w	r2, [r11]
	subs	r3, r0, #1
	str.w	r3, [r11, #8]
	ldrb	r1, [r1, #1]
	strb	r1, [r2, r3]
	beq.w	.LBB169_177
	ldr	r1, [r4]
	cmp	r3, r1
	bhi.w	.LBB169_176
	ldr.w	r1, [r11]
	subs	r0, #2
	movs	r2, #23
	b	.LBB169_3
.LBB169_83:
	cmp	r0, #4
	blo.w	.LBB169_177
	ldr	r1, [r4]
	cmp	r0, r1
	bhi.w	.LBB169_182
	add.w	r1, r5, r8
	ldr.w	r2, [r11]
	subs	r3, r0, #4
	str.w	r3, [r11, #8]
	ldr	r1, [r1, #4]
	rev	r1, r1
	str	r1, [r2, r3]
	beq.w	.LBB169_177
	ldr	r1, [r4]
	cmp	r3, r1
	bhi.w	.LBB169_176
	ldr.w	r1, [r11]
	subs	r0, #5
	movs	r2, #24
	b	.LBB169_3
.LBB169_88:
	cmp	r0, #0
	beq.w	.LBB169_177
	ldr	r1, [r4]
	cmp	r0, r1
	bhi.w	.LBB169_182
	add.w	r1, r5, r8
	ldr.w	r2, [r11]
	subs	r3, r0, #1
	str.w	r3, [r11, #8]
	ldrb	r1, [r1, #1]
	strb	r1, [r2, r3]
	beq.w	.LBB169_177
	ldr	r1, [r4]
	cmp	r3, r1
	bhi.w	.LBB169_176
	ldr.w	r1, [r11]
	subs	r0, #2
	movs	r2, #25
	b	.LBB169_3
.LBB169_93:
	add.w	r1, r5, r8
	movw	r2, :lower16:core::cmp::Ord::max::hdad388a91279e379
	movt	r2, :upper16:core::cmp::Ord::max::hdad388a91279e379
	ldr	r5, [r1, #8]
	cmp	r5, r2
	bhi.w	.LBB169_181
	cmp	r0, r5
	blo.w	.LBB169_177
	ldr.w	r9, [r4]
	cmp	r0, r9
	bhi.w	.LBB169_183
	ldr.w	r10, [r11]
	subs	r6, r0, r5
	ldr	r1, [r1, #4]
	add.w	r0, r10, r6
	mov	r2, r5
	bl	__aeabi_memcpy
	cmp	r6, #2
	str.w	r6, [r11, #8]
	blo.w	.LBB169_177
	cmp	r6, r9
	bhi.w	.LBB169_184
	subs	r0, r6, #2
	str.w	r0, [r11, #8]
	rev	r1, r5
	lsr.w	r1, r1, #16
	strh.w	r1, [r10, r0]
	beq.w	.LBB169_177
	ldr	r4, [sp, #24]
	ldr	r1, [r4]
	cmp	r0, r1
	bhi.w	.LBB169_182
	ldr.w	r1, [r11]
	subs	r0, r6, #3
	movs	r2, #26
	b	.LBB169_117
.LBB169_101:
	add.w	r1, r5, r8
	movw	r2, :lower16:core::cmp::Ord::max::hdad388a91279e379
	movt	r2, :upper16:core::cmp::Ord::max::hdad388a91279e379
	ldr	r5, [r1, #8]
	cmp	r5, r2
	bhi.w	.LBB169_181
	cmp	r0, r5
	blo.w	.LBB169_177
	ldr.w	r9, [r4]
	cmp	r0, r9
	bhi.w	.LBB169_183
	ldr.w	r10, [r11]
	subs	r6, r0, r5
	ldr	r1, [r1, #4]
	add.w	r0, r10, r6
	mov	r2, r5
	bl	__aeabi_memcpy
	cmp	r6, #2
	str.w	r6, [r11, #8]
	blo.w	.LBB169_177
	cmp	r6, r9
	bhi.w	.LBB169_184
	subs	r0, r6, #2
	str.w	r0, [r11, #8]
	rev	r1, r5
	lsr.w	r1, r1, #16
	strh.w	r1, [r10, r0]
	beq.w	.LBB169_177
	ldr	r4, [sp, #24]
	ldr	r1, [r4]
	cmp	r0, r1
	bhi.w	.LBB169_182
	ldr.w	r1, [r11]
	subs	r0, r6, #3
	movs	r2, #28
	b	.LBB169_117
.LBB169_109:
	add.w	r1, r5, r8
	movw	r2, :lower16:core::cmp::Ord::max::hdad388a91279e379
	movt	r2, :upper16:core::cmp::Ord::max::hdad388a91279e379
	ldr	r5, [r1, #8]
	cmp	r5, r2
	bhi.w	.LBB169_181
	cmp	r0, r5
	blo.w	.LBB169_177
	ldr.w	r9, [r4]
	cmp	r0, r9
	bhi.w	.LBB169_183
	ldr.w	r10, [r11]
	subs	r6, r0, r5
	ldr	r1, [r1, #4]
	add.w	r0, r10, r6
	mov	r2, r5
	bl	__aeabi_memcpy
	cmp	r6, #2
	str.w	r6, [r11, #8]
	blo.w	.LBB169_177
	cmp	r6, r9
	bhi.w	.LBB169_184
	subs	r0, r6, #2
	str.w	r0, [r11, #8]
	rev	r1, r5
	lsr.w	r1, r1, #16
	strh.w	r1, [r10, r0]
	beq.w	.LBB169_177
	ldr	r4, [sp, #24]
	ldr	r1, [r4]
	cmp	r0, r1
	bhi.w	.LBB169_182
	ldr.w	r1, [r11]
	subs	r0, r6, #3
	movs	r2, #31
.LBB169_117:
	strb	r2, [r1, r0]
.LBB169_118:
	ldrd	r6, r5, [sp, #16]
	add.w	r8, r8, #20
	str.w	r0, [r11, #8]
	cmp	r6, r8
	bne.w	.LBB169_4
	b	.LBB169_179
.LBB169_119:
	cmp	r0, #2
	blo.w	.LBB169_177
	ldr	r1, [r4]
	cmp	r0, r1
	bhi.w	.LBB169_182
	add.w	r1, r5, r8
	ldr.w	r2, [r11]
	subs	r3, r0, #2
	str.w	r3, [r11, #8]
	ldrh	r1, [r1, #2]
	rev	r1, r1
	lsr.w	r1, r1, #16
	strh	r1, [r2, r3]
	beq.w	.LBB169_177
	ldr	r1, [r4]
	cmp	r3, r1
	bhi.w	.LBB169_176
	ldr.w	r1, [r11]
	subs	r0, #3
	movs	r2, #33
	b	.LBB169_3
.LBB169_124:
	cmp	r0, #2
	blo.w	.LBB169_177
	ldr	r1, [r4]
	cmp	r0, r1
	bhi.w	.LBB169_182
	add.w	r1, r5, r8
	ldr.w	r2, [r11]
	subs	r3, r0, #2
	str.w	r3, [r11, #8]
	ldrh	r1, [r1, #2]
	rev	r1, r1
	lsr.w	r1, r1, #16
	strh	r1, [r2, r3]
	beq.w	.LBB169_177
	ldr	r1, [r4]
	cmp	r3, r1
	bhi.w	.LBB169_176
	ldr.w	r1, [r11]
	subs	r0, #3
	movs	r2, #34
	b	.LBB169_3
.LBB169_129:
	cmp	r0, #2
	blo.w	.LBB169_177
	ldr	r1, [r4]
	cmp	r0, r1
	bhi.w	.LBB169_182
	add.w	r1, r5, r8
	ldr.w	r2, [r11]
	subs	r3, r0, #2
	str.w	r3, [r11, #8]
	ldrh	r1, [r1, #2]
	rev	r1, r1
	lsr.w	r1, r1, #16
	strh	r1, [r2, r3]
	beq.w	.LBB169_177
	ldr	r1, [r4]
	cmp	r3, r1
	bhi.w	.LBB169_176
	ldr.w	r1, [r11]
	subs	r0, #3
	movs	r2, #35
	b	.LBB169_3
.LBB169_134:
	cmp	r0, #0
	beq.w	.LBB169_177
	ldr	r1, [r4]
	cmp	r0, r1
	bhi.w	.LBB169_182
	add.w	r1, r5, r8
	ldr.w	r2, [r11]
	subs	r3, r0, #1
	str.w	r3, [r11, #8]
	ldrb	r1, [r1, #1]
	strb	r1, [r2, r3]
	beq.w	.LBB169_177
	ldr	r1, [r4]
	cmp	r3, r1
	bhi.w	.LBB169_176
	ldr.w	r1, [r11]
	subs	r0, #2
	movs	r2, #36
	b	.LBB169_3
.LBB169_139:
	cmp	r0, #0
	beq.w	.LBB169_177
	ldr	r1, [r4]
	cmp	r0, r1
	bhi.w	.LBB169_182
	add.w	r1, r5, r8
	ldr.w	r2, [r11]
	subs	r3, r0, #1
	str.w	r3, [r11, #8]
	ldrb	r1, [r1, #1]
	strb	r1, [r2, r3]
	beq.w	.LBB169_177
	ldr	r1, [r4]
	cmp	r3, r1
	bhi.w	.LBB169_176
	ldr.w	r1, [r11]
	subs	r0, #2
	movs	r2, #37
	b	.LBB169_3
.LBB169_144:
	add.w	r1, r5, r8
	movw	r2, :lower16:core::cmp::Ord::max::hdad388a91279e379
	movt	r2, :upper16:core::cmp::Ord::max::hdad388a91279e379
	ldr	r6, [r1, #16]
	cmp	r6, r2
	bhi.w	.LBB169_181
	cmp	r0, r6
	blo.w	.LBB169_177
	ldr.w	r10, [r4]
	cmp	r0, r10
	bhi.w	.LBB169_186
	ldr	r2, [r1, #4]
	ldr.w	r9, [r11]
	subs	r5, r0, r6
	str	r2, [sp, #4]
	ldr	r4, [r1, #8]
	ldr	r1, [r1, #12]
	add.w	r0, r9, r5
	mov	r2, r6
	bl	__aeabi_memcpy
	cmp	r5, #2
	str.w	r5, [r11, #8]
	blo.w	.LBB169_177
	cmp	r5, r10
	bhi.w	.LBB169_187
	rev	r1, r6
	subs	r0, r5, #2
	lsrs	r1, r1, #16
	str.w	r0, [r11, #8]
	strh.w	r1, [r9, r0]
	movw	r1, :lower16:core::cmp::Ord::max::hdad388a91279e379
	movt	r1, :upper16:core::cmp::Ord::max::hdad388a91279e379
	cmp	r4, r1
	bhi.w	.LBB169_181
	cmp	r0, r4
	blo.w	.LBB169_177
	cmp	r0, r10
	bhi.w	.LBB169_186
	subs	r6, r0, r4
	ldr	r1, [sp, #4]
	add.w	r0, r9, r6
	mov	r2, r4
	bl	__aeabi_memcpy
	cmp	r6, #2
	str.w	r6, [r11, #8]
	blo	.LBB169_177
	cmp	r6, r10
	bhi.w	.LBB169_188
	subs	r0, r6, #2
	str.w	r0, [r11, #8]
	rev	r1, r4
	lsr.w	r1, r1, #16
	strh.w	r1, [r9, r0]
	beq	.LBB169_177
	cmp	r0, r10
	bhi.w	.LBB169_186
	subs	r0, r6, #3
	movs	r1, #38
	ldr	r4, [sp, #24]
	strb.w	r1, [r9, r0]
	b	.LBB169_118
.LBB169_157:
	cmp	r0, #4
	blo	.LBB169_177
	ldr	r1, [r4]
	cmp	r0, r1
	bhi	.LBB169_182
	add.w	r1, r5, r8
	ldr.w	r2, [r11]
	subs	r3, r0, #4
	str.w	r3, [r11, #8]
	ldr	r1, [r1, #4]
	rev	r1, r1
	str	r1, [r2, r3]
	beq	.LBB169_177
	ldr	r1, [r4]
	cmp	r3, r1
	bhi	.LBB169_176
	ldr.w	r1, [r11]
	subs	r0, #5
	movs	r2, #39
	b.w	.LBB169_3
.LBB169_162:
	cmp	r0, #0
	beq	.LBB169_177
	ldr	r1, [r4]
	cmp	r0, r1
	bhi	.LBB169_182
	add.w	r1, r5, r8
	ldr.w	r2, [r11]
	subs	r3, r0, #1
	str.w	r3, [r11, #8]
	ldrb	r1, [r1, #1]
	strb	r1, [r2, r3]
	beq	.LBB169_177
	ldr	r1, [r4]
	cmp	r3, r1
	bhi	.LBB169_176
	ldr.w	r1, [r11]
	subs	r0, #2
	movs	r2, #40
	b.w	.LBB169_3
.LBB169_167:
	cbz	r0, .LBB169_177
	ldr	r1, [r4]
	cmp	r0, r1
	bhi	.LBB169_182
	add.w	r1, r5, r8
	ldr.w	r2, [r11]
	subs	r3, r0, #1
	str.w	r3, [r11, #8]
	ldrb	r1, [r1, #1]
	strb	r1, [r2, r3]
	beq	.LBB169_177
	ldr	r1, [r4]
	cmp	r3, r1
	bhi	.LBB169_176
	ldr.w	r1, [r11]
	subs	r0, #2
	movs	r2, #41
	b.w	.LBB169_3
.LBB169_172:
	cbz	r0, .LBB169_177
	ldr	r1, [r4]
	cmp	r0, r1
	bhi	.LBB169_182
	add.w	r1, r5, r8
	ldr.w	r2, [r11]
	subs	r3, r0, #1
	str.w	r3, [r11, #8]
	ldrb	r1, [r1, #1]
	strb	r1, [r2, r3]
	beq	.LBB169_177
	ldr	r1, [r4]
	cmp	r3, r1
	bls.w	.LBB169_2
.LBB169_176:
	movw	r2, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.4
	mov	r0, r3
	movt	r2, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.4
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB169_177:
	movs	r0, #0
.LBB169_178:
	add	sp, #28
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB169_179:
	ldr	r1, [r4]
	ldrd	r3, r6, [sp, #8]
.LBB169_180:
	add	r1, r3
	add	r0, r6
	subs	r1, r1, r0
	mov	r0, r11
	add	sp, #28
	pop.w	{r8, r9, r10, r11}
	pop.w	{r4, r5, r6, r7, lr}
	b	minimq::ser::packet_writer::ReversedPacketWriter::write_variable_length_integer::h1fe59e45f0b7bcb1
.LBB169_181:
	movs	r0, #1
	add	sp, #28
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB169_182:
	movw	r2, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.4
	movt	r2, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.4
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB169_183:
	movw	r2, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.4
	b	.LBB169_185
.LBB169_184:
	movw	r2, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.4
	mov	r0, r6
.LBB169_185:
	movt	r2, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.4
	mov	r1, r9
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB169_186:
	movw	r2, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.4
	b	.LBB169_189
.LBB169_187:
	movw	r2, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.4
	mov	r0, r5
	b	.LBB169_189
.LBB169_188:
	movw	r2, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.4
	mov	r0, r6
.LBB169_189:
	movt	r2, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.4
	mov	r1, r10
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.Lfunc_end169:
	.size	minimq::ser::packet_writer::ReversedPacketWriter::write_properties::h502ebb0001b99ed2, .Lfunc_end169-minimq::ser::packet_writer::ReversedPacketWriter::write_properties::h502ebb0001b99ed2
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN6minimq3ser13packet_writer20ReversedPacketWriter29write_variable_length_integer17h1fe59e45f0b7bcb1E,"ax",%progbits
	.p2align	1
	.type	minimq::ser::packet_writer::ReversedPacketWriter::write_variable_length_integer::h1fe59e45f0b7bcb1,%function
	.code	16
	.thumb_func
minimq::ser::packet_writer::ReversedPacketWriter::write_variable_length_integer::h1fe59e45f0b7bcb1:
.Lfunc_begin170:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r7, lr}
	push	{r4, r5, r7, lr}
	.cfi_def_cfa_offset 16
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r5, -12
	.cfi_offset r4, -16
	.setfp	r7, sp, #8
	add	r7, sp, #8
	.cfi_def_cfa r7, 8
	movs	r2, #0
	cmp.w	r2, r1, lsr #28
	beq	.LBB170_2
	movs	r0, #1
	pop	{r4, r5, r7, pc}
.LBB170_2:
	tst.w	r1, #266338304
	beq	.LBB170_6
	ldr	r3, [r0, #8]
	cmp	r3, #4
	blo	.LBB170_17
	ldr.w	r12, [r0, #4]
	cmp	r3, r12
	bhi	.LBB170_18
	ldr.w	lr, [r0]
	subs	r3, #4
	add.w	r2, lr, r3
	mvn	r5, #127
	orn	r12, r1, #127
	strb.w	r12, [lr, r3]
	orr.w	r4, r5, r1, lsr #7
	strb	r4, [r2, #1]
	orr.w	r5, r5, r1, lsr #14
	strb	r5, [r2, #2]
	lsrs	r1, r1, #21
	strb	r1, [r2, #3]
	str	r3, [r0, #8]
	movs	r0, #11
	pop	{r4, r5, r7, pc}
.LBB170_6:
	tst.w	r1, #2080768
	beq	.LBB170_10
	ldr	r3, [r0, #8]
	cmp	r3, #3
	blo	.LBB170_17
	ldr.w	r12, [r0, #4]
	cmp	r3, r12
	bhi	.LBB170_18
	ldr	r2, [r0]
	subs	r3, #3
	adds	r4, r2, r3
	mvn	r12, #127
	orn	r5, r1, #127
	strb	r5, [r2, r3]
	orr.w	r2, r12, r1, lsr #7
	strb	r2, [r4, #1]
	ubfx	r1, r1, #14, #7
	strb	r1, [r4, #2]
	str	r3, [r0, #8]
	movs	r0, #11
	pop	{r4, r5, r7, pc}
.LBB170_10:
	tst.w	r1, #16256
	beq	.LBB170_14
	ldr	r3, [r0, #8]
	cmp	r3, #2
	blo	.LBB170_17
	ldr.w	r12, [r0, #4]
	cmp	r3, r12
	bhi	.LBB170_18
	ldr	r2, [r0]
	subs	r3, #2
	adds	r5, r2, r3
	orn	r4, r1, #127
	strb	r4, [r2, r3]
	ubfx	r1, r1, #7, #7
	strb	r1, [r5, #1]
	str	r3, [r0, #8]
	movs	r0, #11
	pop	{r4, r5, r7, pc}
.LBB170_14:
	ldr	r3, [r0, #8]
	cbz	r3, .LBB170_17
	ldr.w	r12, [r0, #4]
	cmp	r3, r12
	bhi	.LBB170_18
	ldr	r2, [r0]
	subs	r3, #1
	and	r1, r1, #127
	strb	r1, [r2, r3]
	str	r3, [r0, #8]
	movs	r0, #11
	pop	{r4, r5, r7, pc}
.LBB170_17:
	movs	r0, #0
	pop	{r4, r5, r7, pc}
.LBB170_18:
	movw	r2, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.4
	mov	r0, r3
	movt	r2, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.4
	mov	r1, r12
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.Lfunc_end170:
	.size	minimq::ser::packet_writer::ReversedPacketWriter::write_variable_length_integer::h1fe59e45f0b7bcb1, .Lfunc_end170-minimq::ser::packet_writer::ReversedPacketWriter::write_variable_length_integer::h1fe59e45f0b7bcb1
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN6minimq3ser13packet_writer20ReversedPacketWriter8finalize17h384e5c658c82f6d2E,"ax",%progbits
	.p2align	1
	.type	minimq::ser::packet_writer::ReversedPacketWriter::finalize::h384e5c658c82f6d2,%function
	.code	16
	.thumb_func
minimq::ser::packet_writer::ReversedPacketWriter::finalize::h384e5c658c82f6d2:
.Lfunc_begin171:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r11}
	push.w	{r8, r9, r11}
	.cfi_offset r11, -24
	.cfi_offset r9, -28
	.cfi_offset r8, -32
	mov	r5, r1
	ldr	r1, [r1, #4]
	mov	r4, r0
	mov	r0, r5
	ldr	r6, [r5, #8]
	mov	r9, r3
	subs	r1, r1, r6
	mov	r8, r2
	bl	minimq::ser::packet_writer::ReversedPacketWriter::write_variable_length_integer::h1fe59e45f0b7bcb1
	uxtb	r0, r0
	cmp	r0, #11
	bne	.LBB171_7
	uxtb.w	r0, r9
	cmp	r0, #16
	bhs	.LBB171_10
	ldr	r0, [r5, #8]
	cbz	r0, .LBB171_6
	ldr	r1, [r5, #4]
	cmp	r0, r1
	bhi	.LBB171_11
	ldr	r2, [r5]
	subs	r0, #1
	cmp	r1, r0
	orr.w	r3, r9, r8, lsl #4
	strb	r3, [r2, r0]
	str	r0, [r5, #8]
	bne	.LBB171_8
	movs	r0, #5
	b	.LBB171_7
.LBB171_6:
	movs	r0, #0
.LBB171_7:
	strb	r0, [r4, #1]
	movs	r0, #1
	strb	r0, [r4]
	pop.w	{r8, r9, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB171_8:
	blo	.LBB171_12
	add	r2, r0
	subs	r0, r1, r0
	strd	r2, r0, [r4, #4]
	movs	r0, #0
	strb	r0, [r4]
	pop.w	{r8, r9, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB171_10:
	movw	r0, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.2
	movw	r2, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.1
	movt	r0, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.2
	movt	r2, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.1
	movs	r1, #33
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB171_11:
	movw	r2, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.4
	movt	r2, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.4
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB171_12:
	movw	r2, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.5
	movt	r2, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.5
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.Lfunc_end171:
	.size	minimq::ser::packet_writer::ReversedPacketWriter::finalize::h384e5c658c82f6d2, .Lfunc_end171-minimq::ser::packet_writer::ReversedPacketWriter::finalize::h384e5c658c82f6d2
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN6minimq3ser9serialize15publish_message17h3fe8b31b5970804eE,"ax",%progbits
	.p2align	1
	.type	minimq::ser::serialize::publish_message::h3fe8b31b5970804e,%function
	.code	16
	.thumb_func
minimq::ser::serialize::publish_message::h3fe8b31b5970804e:
.Lfunc_begin172:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10}
	push.w	{r8, r9, r10}
	.cfi_offset r10, -24
	.cfi_offset r9, -28
	.cfi_offset r8, -32
	.pad	#24
	sub	sp, #24
	ldr	r6, [r7, #24]
	mov	r8, r2
	mov	r9, r3
	mov	r4, r0
	ldr.w	r10, [r7, #20]
	cbz	r6, .LBB172_15
	add.w	r0, r6, r6, lsl #2
	mov	r2, r10
	add.w	r0, r10, r0, lsl #2
.LBB172_2:
	ldrb	r3, [r2]
	cmp	r3, #6
	bhs	.LBB172_10
.LBB172_3:
	adds	r2, #20
	cmp	r0, r2
	beq	.LBB172_15
	ldrb	r3, [r2]
	cmp	r3, #6
	bhs	.LBB172_11
.LBB172_5:
	adds	r2, #20
	cmp	r0, r2
	beq	.LBB172_15
	ldrb	r3, [r2]
	cmp	r3, #6
	bhs	.LBB172_12
.LBB172_7:
	adds	r2, #20
	cmp	r0, r2
	beq	.LBB172_15
	ldrb	r3, [r2]
	cmp	r3, #6
	bhs	.LBB172_13
.LBB172_9:
	adds	r2, #20
	cmp	r0, r2
	bne	.LBB172_2
	b	.LBB172_15
.LBB172_10:
	cmp	r3, #19
	beq	.LBB172_3
	b	.LBB172_14
.LBB172_11:
	cmp	r3, #19
	beq	.LBB172_5
	b	.LBB172_14
.LBB172_12:
	cmp	r3, #19
	beq	.LBB172_7
	b	.LBB172_14
.LBB172_13:
	cmp	r3, #19
	beq	.LBB172_9
.LBB172_14:
	movw	r0, #2561
	strh	r0, [r4]
	add	sp, #24
	pop.w	{r8, r9, r10}
	pop	{r4, r5, r6, r7, pc}
.LBB172_15:
	ldr	r2, [r7, #12]
	str	r1, [sp]
	cmp.w	r2, #512
	mov.w	r0, #512
	str	r0, [sp, #4]
	bls	.LBB172_17
.LBB172_16:
	movs	r0, #0
	b	.LBB172_20
.LBB172_17:
	rsb.w	r5, r2, #512
	ldr	r3, [r7, #8]
	adds	r0, r1, r5
	mov	r1, r3
	bl	__aeabi_memcpy
	mov	r0, sp
	mov	r1, r10
	mov	r2, r6
	str	r5, [sp, #8]
	bl	minimq::ser::packet_writer::ReversedPacketWriter::write_properties::h502ebb0001b99ed2
	uxtb	r0, r0
	cmp	r0, #11
	bne	.LBB172_20
	movw	r0, :lower16:core::cmp::Ord::max::hdad388a91279e379
	movt	r0, :upper16:core::cmp::Ord::max::hdad388a91279e379
	cmp	r9, r0
	bls	.LBB172_21
	movs	r0, #1
.LBB172_20:
	strb	r0, [r4, #1]
	movs	r0, #1
	strb	r0, [r4]
	add	sp, #24
	pop.w	{r8, r9, r10}
	pop	{r4, r5, r6, r7, pc}
.LBB172_21:
	ldr	r0, [sp, #8]
	cmp	r0, r9
	blo	.LBB172_16
	ldr.w	r10, [sp, #4]
	cmp	r0, r10
	bhi	.LBB172_26
	ldr	r5, [sp]
	sub.w	r6, r0, r9
	adds	r0, r5, r6
	mov	r1, r8
	mov	r2, r9
	bl	__aeabi_memcpy
	cmp	r6, #2
	blo	.LBB172_16
	cmp	r6, r10
	bhi	.LBB172_27
	subs	r0, r6, #2
	str	r0, [sp, #20]
	rev.w	r1, r9
	ldr	r3, [r7, #16]
	lsrs	r1, r1, #16
	strh	r1, [r5, r0]
	str	r0, [sp, #8]
	ldr	r0, [sp, #4]
	str	r0, [sp, #16]
	ldr	r0, [sp]
	str	r0, [sp, #12]
	add	r1, sp, #12
	movs	r2, #3
	mov	r0, r4
	bl	minimq::ser::packet_writer::ReversedPacketWriter::finalize::h384e5c658c82f6d2
	add	sp, #24
	pop.w	{r8, r9, r10}
	pop	{r4, r5, r6, r7, pc}
.LBB172_26:
	movw	r2, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.4
	b	.LBB172_28
.LBB172_27:
	movw	r2, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.4
	mov	r0, r6
.LBB172_28:
	movt	r2, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.4
	mov	r1, r10
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.Lfunc_end172:
	.size	minimq::ser::serialize::publish_message::h3fe8b31b5970804e, .Lfunc_end172-minimq::ser::serialize::publish_message::h3fe8b31b5970804e
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN67_$LT$minimq..mqtt_client..sm..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h73afb84edc8faa65E","ax",%progbits
	.p2align	1
	.type	<minimq::mqtt_client::sm::Error as core::fmt::Debug>::fmt::h73afb84edc8faa65,%function
	.code	16
	.thumb_func
<minimq::mqtt_client::sm::Error as core::fmt::Debug>::fmt::h73afb84edc8faa65:
.Lfunc_begin173:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r7, lr}
	push	{r4, r5, r7, lr}
	.cfi_def_cfa_offset 16
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r5, -12
	.cfi_offset r4, -16
	.setfp	r7, sp, #8
	add	r7, sp, #8
	.cfi_def_cfa r7, 8
	.pad	#16
	sub	sp, #16
	ldrb	r2, [r0]
	cbz	r2, .LBB173_2
	movw	r2, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.48
	mov	r4, sp
	adds	r5, r0, #1
	movt	r2, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.48
	movs	r3, #11
	mov	r0, r4
	bl	core::fmt::Formatter::debug_tuple::h9a9c92e1e856202e
	movw	r2, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.49
	add	r1, sp, #12
	movt	r2, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.49
	mov	r0, r4
	str	r5, [sp, #12]
	bl	core::fmt::builders::DebugTuple::field::h344a2bce7ddce2f6
	bl	core::fmt::builders::DebugTuple::finish::hfca393014b7f9d44
	add	sp, #16
	pop	{r4, r5, r7, pc}
.LBB173_2:
	movw	r3, :lower16:.Lanon.1dae7de82751de57b633ec762d574f68.50
	movs	r2, #12
	movt	r3, :upper16:.Lanon.1dae7de82751de57b633ec762d574f68.50
	mov	r0, r1
	mov	r1, r3
	add	sp, #16
	pop.w	{r4, r5, r7, lr}
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.Lfunc_end173:
	.size	<minimq::mqtt_client::sm::Error as core::fmt::Debug>::fmt::h73afb84edc8faa65, .Lfunc_end173-<minimq::mqtt_client::sm::Error as core::fmt::Debug>::fmt::h73afb84edc8faa65
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN10no_std_net6parser6Parser14read_ipv4_addr17hbfba6d08fe551d9aE,"ax",%progbits
	.p2align	1
	.type	no_std_net::parser::Parser::read_ipv4_addr::hbfba6d08fe551d9a,%function
	.code	16
	.thumb_func
no_std_net::parser::Parser::read_ipv4_addr::hbfba6d08fe551d9a:
.Lfunc_begin174:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#4
	sub	sp, #4
	ldrd	r1, r10, [r0, #4]
	cmp	r10, r1
	ldr.w	r12, [r0]
	bne	.LBB174_3
	movs	r5, #0
	mov	r3, r1
	lsls	r5, r5, #31
	bne	.LBB174_7
.LBB174_2:
	movs	r4, #0
	mov	r3, r10
	mov.w	lr, #0
	b	.LBB174_19
.LBB174_3:
	bhs.w	.LBB174_146
	ldrb.w	r3, [r12, r10]
	sub.w	r6, r3, #48
	uxtb	r5, r6
	cmp	r5, #10
	bhs	.LBB174_6
	add.w	r3, r10, #1
	movs	r5, #1
	lsls	r5, r5, #31
	beq	.LBB174_2
	b	.LBB174_7
.LBB174_6:
	sub.w	r6, r3, #55
	movs	r5, #0
	mov	r3, r10
	lsls	r5, r5, #31
	beq	.LBB174_2
.LBB174_7:
	cmp	r3, r1
	bne	.LBB174_9
	movs	r5, #0
	mov	r3, r1
	lsls	r2, r5, #31
	uxtb.w	lr, r6
	bne	.LBB174_13
	b	.LBB174_18
.LBB174_9:
	bhs.w	.LBB174_145
	ldrb.w	r5, [r12, r3]
	sub.w	r4, r5, #48
	uxtb	r2, r4
	cmp	r2, #10
	bhs	.LBB174_12
	adds	r3, #1
	movs	r5, #1
	lsls	r2, r5, #31
	uxtb.w	lr, r6
	bne	.LBB174_13
	b	.LBB174_18
.LBB174_12:
	sub.w	r4, r5, #55
	movs	r5, #0
	lsls	r2, r5, #31
	uxtb.w	lr, r6
	beq	.LBB174_18
.LBB174_13:
	add.w	r2, lr, lr, lsl #2
	lsls	r2, r2, #1
	uxtab	r4, r2, r4
	cmp	r4, #255
	bls	.LBB174_15
.LBB174_14:
	movs	r4, #0
	mov	r3, r10
	b	.LBB174_19
.LBB174_15:
	cmp	r3, r1
	bne	.LBB174_27
	movs	r5, #0
	mov	r3, r1
	lsls	r2, r5, #31
	bne	.LBB174_34
.LBB174_17:
	mov	lr, r4
.LBB174_18:
	movs	r4, #1
.LBB174_19:
	cmp	r4, #0
	it	ne
	cmpne	r3, r1
	bne	.LBB174_22
.LBB174_20:
	str.w	r10, [r0, #8]
	movs	r0, #0
	movs	r2, #0
.LBB174_21:
	lsrs	r1, r2, #24
	orr.w	r0, r0, r2, lsl #8
	add	sp, #4
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB174_22:
	bhs.w	.LBB174_151
	ldrb.w	r2, [r12, r3]
	cmp	r2, #46
	bne	.LBB174_20
	adds	r5, r3, #1
	cmp	r5, r1
	bne	.LBB174_30
	movs	r6, #0
	mov	r3, r1
	lsls	r2, r6, #31
	bne	.LBB174_38
.LBB174_26:
	movs	r6, #0
	mov.w	r11, #0
	cmp	r6, #0
	it	ne
	cmpne	r5, r1
	beq	.LBB174_20
	b	.LBB174_51
.LBB174_27:
	bhs.w	.LBB174_145
	ldrb.w	r5, [r12, r3]
	sub.w	r6, r5, #48
	uxtb	r2, r6
	cmp	r2, #10
	bhs	.LBB174_33
	adds	r3, #1
	movs	r5, #1
	lsls	r2, r5, #31
	beq	.LBB174_17
	b	.LBB174_34
.LBB174_30:
	bhs.w	.LBB174_149
	ldrb.w	r6, [r12, r5]
	sub.w	r4, r6, #48
	uxtb	r2, r4
	cmp	r2, #10
	bhs	.LBB174_37
	adds	r3, #2
	movs	r6, #1
	lsls	r2, r6, #31
	beq	.LBB174_26
	b	.LBB174_38
.LBB174_33:
	sub.w	r6, r5, #55
	movs	r5, #0
	lsls	r2, r5, #31
	beq	.LBB174_17
.LBB174_34:
	add.w	r2, r4, r4, lsl #2
	mov	lr, r4
	lsls	r2, r2, #1
	uxtab	r5, r2, r6
	cmp	r5, #255
	bhi	.LBB174_14
	cmp	r3, r1
	bne	.LBB174_43
	movs	r6, #0
	mov	r3, r1
	b	.LBB174_58
.LBB174_37:
	sub.w	r4, r6, #55
	movs	r6, #0
	mov	r3, r5
	lsls	r2, r6, #31
	beq	.LBB174_26
.LBB174_38:
	cmp	r3, r1
	bne	.LBB174_40
	movs	r6, #0
	mov	r3, r1
	b	.LBB174_47
.LBB174_40:
	bhs.w	.LBB174_145
	ldrb.w	r6, [r12, r3]
	sub.w	r8, r6, #48
	uxtb.w	r2, r8
	cmp	r2, #10
	bhs	.LBB174_46
	adds	r3, #1
	movs	r6, #1
	b	.LBB174_47
.LBB174_43:
	bhs.w	.LBB174_145
	ldrb.w	r2, [r12, r3]
	subs	r2, #48
	uxtb	r2, r2
	cmp	r2, #10
	bhs	.LBB174_57
	adds	r3, #1
	movs	r6, #1
	b	.LBB174_58
.LBB174_46:
	sub.w	r8, r6, #55
	movs	r6, #0
.LBB174_47:
	lsls	r2, r6, #31
	uxtb.w	r11, r4
	bne	.LBB174_49
.LBB174_48:
	movs	r6, #1
	mov	r5, r3
	cmp	r6, #0
	it	ne
	cmpne	r5, r1
	beq.w	.LBB174_20
	b	.LBB174_51
.LBB174_49:
	add.w	r2, r11, r11, lsl #2
	lsls	r2, r2, #1
	uxtab	r6, r2, r8
	cmp	r6, #255
	bls	.LBB174_55
.LBB174_50:
	movs	r6, #0
	cmp	r6, #0
	it	ne
	cmpne	r5, r1
	beq.w	.LBB174_20
.LBB174_51:
	bhs.w	.LBB174_150
	ldrb.w	r2, [r12, r5]
	cmp	r2, #46
	bne.w	.LBB174_20
	adds	r3, r5, #1
	cmp	r3, r1
	bne	.LBB174_62
	movs	r5, #0
	mov	r2, r1
	b	.LBB174_72
.LBB174_55:
	cmp	r3, r1
	bne	.LBB174_59
	movs	r4, #0
	mov	r3, r1
	b	.LBB174_66
.LBB174_57:
	movs	r6, #0
.LBB174_58:
	lsls	r2, r6, #31
	mov	lr, r5
	bne.w	.LBB174_14
	b	.LBB174_18
.LBB174_59:
	bhs.w	.LBB174_145
	ldrb.w	r4, [r12, r3]
	sub.w	r8, r4, #48
	uxtb.w	r2, r8
	cmp	r2, #10
	bhs	.LBB174_65
	adds	r3, #1
	movs	r4, #1
	b	.LBB174_66
.LBB174_62:
	bhs.w	.LBB174_145
	ldrb.w	r4, [r12, r3]
	sub.w	r6, r4, #48
	uxtb	r2, r6
	cmp	r2, #10
	bhs	.LBB174_71
	adds	r2, r5, #2
	movs	r5, #1
	b	.LBB174_72
.LBB174_65:
	sub.w	r8, r4, #55
	movs	r4, #0
.LBB174_66:
	lsls	r2, r4, #31
	bne	.LBB174_68
	mov	r11, r6
	b	.LBB174_48
.LBB174_68:
	add.w	r2, r6, r6, lsl #2
	mov	r11, r6
	lsls	r2, r2, #1
	uxtab	r8, r2, r8
	cmp.w	r8, #255
	bhi	.LBB174_50
	cmp	r3, r1
	bne	.LBB174_79
	movs	r4, #0
	mov	r3, r1
	b	.LBB174_95
.LBB174_71:
	sub.w	r6, r4, #55
	movs	r5, #0
	mov	r2, r3
.LBB174_72:
	lsls	r4, r5, #31
	bne	.LBB174_74
	movs	r5, #0
	mov.w	r9, #0
	b	.LBB174_87
.LBB174_74:
	cmp	r2, r1
	bne	.LBB174_76
	movs	r5, #0
	mov	r2, r1
	b	.LBB174_83
.LBB174_76:
	bhs.w	.LBB174_152
	ldrb.w	r4, [r12, r2]
	sub.w	r8, r4, #48
	uxtb.w	r5, r8
	cmp	r5, #10
	bhs	.LBB174_82
	adds	r2, #1
	movs	r5, #1
	b	.LBB174_83
.LBB174_79:
	bhs.w	.LBB174_145
	ldrb.w	r2, [r12, r3]
	subs	r2, #48
	uxtb	r2, r2
	cmp	r2, #10
	bhs	.LBB174_94
	adds	r3, #1
	movs	r4, #1
	b	.LBB174_95
.LBB174_82:
	sub.w	r8, r4, #55
	movs	r5, #0
.LBB174_83:
	lsls	r4, r5, #31
	uxtb.w	r9, r6
	bne	.LBB174_85
.LBB174_84:
	movs	r5, #1
	mov	r3, r2
	b	.LBB174_87
.LBB174_85:
	add.w	r4, r9, r9, lsl #2
	lsls	r4, r4, #1
	uxtab	r6, r4, r8
	cmp	r6, #255
	bls	.LBB174_92
.LBB174_86:
	movs	r5, #0
.LBB174_87:
	cmp	r5, #0
	it	ne
	cmpne	r3, r1
	beq.w	.LBB174_20
	bhs.w	.LBB174_151
	ldrb.w	r2, [r12, r3]
	cmp	r2, #46
	bne.w	.LBB174_20
	adds	r5, r3, #1
	str	r5, [r0, #8]
	cmp	r5, r1
	bne	.LBB174_99
	movs	r6, #0
	b	.LBB174_109
.LBB174_92:
	cmp	r2, r1
	bne	.LBB174_96
	movs	r5, #0
	mov	r2, r1
	b	.LBB174_103
.LBB174_94:
	movs	r4, #0
.LBB174_95:
	lsls	r2, r4, #31
	mov	r11, r8
	beq.w	.LBB174_48
	b	.LBB174_50
.LBB174_96:
	bhs.w	.LBB174_152
	ldrb.w	r4, [r12, r2]
	sub.w	r8, r4, #48
	uxtb.w	r5, r8
	cmp	r5, #10
	bhs	.LBB174_102
	adds	r2, #1
	movs	r5, #1
	b	.LBB174_103
.LBB174_99:
	bhs.w	.LBB174_149
	ldrb.w	r6, [r12, r5]
	adds	r3, #2
	str	r3, [r0, #8]
	sub.w	r8, r6, #48
	uxtb.w	r2, r8
	cmp	r2, #10
	bhs	.LBB174_108
	movs	r6, #1
	b	.LBB174_110
.LBB174_102:
	sub.w	r8, r4, #55
	movs	r5, #0
.LBB174_103:
	lsls	r4, r5, #31
	bne	.LBB174_105
	mov	r9, r6
	b	.LBB174_84
.LBB174_105:
	add.w	r4, r6, r6, lsl #2
	mov	r9, r6
	lsls	r4, r4, #1
	uxtab	r8, r4, r8
	cmp.w	r8, #255
	bhi	.LBB174_86
	cmp	r2, r1
	bne	.LBB174_117
	movs	r5, #0
	mov	r2, r1
	b	.LBB174_132
.LBB174_108:
	sub.w	r8, r6, #55
	movs	r6, #0
.LBB174_109:
	mov	r3, r5
	str	r5, [r0, #8]
.LBB174_110:
	lsls	r2, r6, #31
	bne	.LBB174_112
	movs	r1, #0
	movs	r6, #0
	b	.LBB174_126
.LBB174_112:
	cmp	r3, r1
	bne	.LBB174_114
	movs	r4, #0
	b	.LBB174_121
.LBB174_114:
	bhs	.LBB174_145
	ldrb.w	r4, [r12, r3]
	sub.w	r2, r4, #48
	uxtb	r6, r2
	cmp	r6, #10
	add.w	r6, r3, #1
	str	r6, [r0, #8]
	bhs	.LBB174_120
	movs	r4, #1
	mov	r3, r6
	b	.LBB174_122
.LBB174_117:
	bhs	.LBB174_152
	ldrb.w	r4, [r12, r2]
	subs	r4, #48
	uxtb	r4, r4
	cmp	r4, #10
	bhs	.LBB174_131
	adds	r2, #1
	movs	r5, #1
	b	.LBB174_132
.LBB174_120:
	sub.w	r2, r4, #55
	movs	r4, #0
.LBB174_121:
	str	r3, [r0, #8]
.LBB174_122:
	lsls	r4, r4, #31
	uxtb.w	r6, r8
	bne	.LBB174_124
.LBB174_123:
	movs	r1, #1
	b	.LBB174_127
.LBB174_124:
	add.w	r4, r6, r6, lsl #2
	lsls	r4, r4, #1
	uxtab	r8, r4, r2
	cmp.w	r8, #255
	bls	.LBB174_129
.LBB174_125:
	movs	r1, #0
.LBB174_126:
	str	r5, [r0, #8]
.LBB174_127:
	cmp	r1, #0
	beq.w	.LBB174_20
	uxtb.w	r0, r9
	uxtb.w	r1, lr
	bfi	r1, r11, #8, #8
	orr.w	r0, r1, r0, lsl #16
	orr.w	r2, r0, r6, lsl #24
	movs	r0, #1
	b	.LBB174_21
.LBB174_129:
	cmp	r3, r1
	bne	.LBB174_133
	movs	r4, #0
	b	.LBB174_137
.LBB174_131:
	movs	r5, #0
.LBB174_132:
	lsls	r4, r5, #31
	mov	r9, r8
	beq.w	.LBB174_84
	b	.LBB174_86
.LBB174_133:
	bhs	.LBB174_145
	ldrb.w	r4, [r12, r3]
	sub.w	r2, r4, #48
	uxtb	r6, r2
	cmp	r6, #10
	add.w	r6, r3, #1
	str	r6, [r0, #8]
	bhs	.LBB174_136
	movs	r4, #1
	mov	r3, r6
	b	.LBB174_138
.LBB174_136:
	sub.w	r2, r4, #55
	movs	r4, #0
.LBB174_137:
	str	r3, [r0, #8]
.LBB174_138:
	lsls	r4, r4, #31
	bne	.LBB174_140
	mov	r6, r8
	b	.LBB174_123
.LBB174_140:
	add.w	r4, r8, r8, lsl #2
	mov	r6, r8
	lsls	r4, r4, #1
	uxtab	r2, r4, r2
	cmp	r2, #255
	bhi	.LBB174_125
	cmp	r3, r1
	beq	.LBB174_147
	bhs	.LBB174_145
	ldrb.w	r1, [r12, r3]
	subs	r1, #48
	uxtb	r1, r1
	cmp	r1, #10
	add.w	r1, r3, #1
	str	r1, [r0, #8]
	bhs	.LBB174_147
	movs	r1, #1
	b	.LBB174_148
.LBB174_145:
	mov	r10, r3
.LBB174_146:
	movw	r2, :lower16:.Lanon.bf09494b05510f7f30f8c8768d91b265.21
	mov	r0, r10
	movt	r2, :upper16:.Lanon.bf09494b05510f7f30f8c8768d91b265.21
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB174_147:
	movs	r1, #0
	str	r3, [r0, #8]
.LBB174_148:
	lsls	r1, r1, #31
	mov	r6, r2
	beq	.LBB174_123
	b	.LBB174_125
.LBB174_149:
	mov	r10, r5
	b	.LBB174_146
.LBB174_150:
	mov	r3, r5
.LBB174_151:
	movw	r2, :lower16:.Lanon.bf09494b05510f7f30f8c8768d91b265.21
	mov	r0, r3
	movt	r2, :upper16:.Lanon.bf09494b05510f7f30f8c8768d91b265.21
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB174_152:
	mov	r10, r2
	b	.LBB174_146
.Lfunc_end174:
	.size	no_std_net::parser::Parser::read_ipv4_addr::hbfba6d08fe551d9a, .Lfunc_end174-no_std_net::parser::Parser::read_ipv4_addr::hbfba6d08fe551d9a
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN10no_std_net6parser6Parser19read_ipv6_addr_impl11read_groups17hd512b6e9aa5cf889E,"ax",%progbits
	.p2align	1
	.type	no_std_net::parser::Parser::read_ipv6_addr_impl::read_groups::hd512b6e9aa5cf889,%function
	.code	16
	.thumb_func
no_std_net::parser::Parser::read_ipv6_addr_impl::read_groups::hd512b6e9aa5cf889:
.Lfunc_begin175:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#20
	sub	sp, #20
	cmp	r2, #0
	mov	r11, r1
	mov.w	r1, #0
	beq.w	.LBB175_84
	mov	r6, r2
	mov	r10, r0
	sub.w	r8, r2, #1
	movs	r4, #0
	str	r2, [sp, #16]
	strd	r11, r8, [sp, #8]
.LBB175_2:
	cmp	r4, r8
	bhs	.LBB175_10
	ldr.w	r5, [r10, #8]
	cbz	r4, .LBB175_8
	ldr.w	r1, [r10, #4]
	cmp	r5, r1
	beq	.LBB175_21
	bhs.w	.LBB175_92
	ldr.w	r0, [r10]
	ldrb	r0, [r0, r5]
	cmp	r0, #58
	bne	.LBB175_21
	adds	r0, r5, #1
	str.w	r0, [r10, #8]
.LBB175_8:
	mov	r0, r10
	bl	no_std_net::parser::Parser::read_ipv4_addr::hbfba6d08fe551d9a
	uxtb	r2, r0
	cbz	r2, .LBB175_21
	lsls	r2, r2, #31
	bne.w	.LBB175_87
.LBB175_10:
	ldr.w	r0, [r10, #8]
	cbz	r4, .LBB175_22
.LBB175_11:
	ldr.w	r1, [r10, #4]
	cmp	r0, r1
	beq	.LBB175_20
	bhs.w	.LBB175_91
	ldr.w	r12, [r10]
	ldrb.w	r2, [r12, r0]
	cmp	r2, #58
	bne	.LBB175_20
	add.w	r8, r0, #1
	cmp	r8, r1
	beq	.LBB175_23
.LBB175_15:
	bhs.w	.LBB175_95
	ldrb.w	r5, [r12, r8]
	add.w	r3, r8, #1
	str.w	r3, [r10, #8]
	sub.w	r9, r5, #48
	uxtb.w	r2, r9
	cmp	r2, #10
	blo	.LBB175_19
	sub.w	r2, r5, #97
	uxtb	r2, r2
	cmp	r2, #6
	bhs	.LBB175_40
	sub.w	r9, r5, #87
.LBB175_19:
	movs	r2, #1
	b	.LBB175_25
.LBB175_20:
	movs	r1, #0
	str.w	r0, [r10, #8]
	lsls	r0, r1, #16
	bne	.LBB175_51
	b	.LBB175_85
.LBB175_21:
	str.w	r5, [r10, #8]
	cmp	r4, #0
	ldr.w	r0, [r10, #8]
	bne	.LBB175_11
.LBB175_22:
	ldrd	r12, r1, [r10]
	mov	r8, r0
	cmp	r8, r1
	bne	.LBB175_15
.LBB175_23:
	movs	r2, #0
.LBB175_24:
	mov	r3, r8
	str.w	r8, [r10, #8]
.LBB175_25:
	lsls	r2, r2, #31
	bne	.LBB175_28
	movs	r1, #0
	movs	r5, #0
.LBB175_27:
	str.w	r8, [r10, #8]
	b	.LBB175_50
.LBB175_28:
	cmp	r3, r1
	bne	.LBB175_31
	movs	r2, #0
.LBB175_30:
	mov	lr, r3
	str.w	r3, [r10, #8]
	b	.LBB175_36
.LBB175_31:
	bhs.w	.LBB175_93
	ldrb.w	r5, [r12, r3]
	add.w	lr, r3, #1
	str.w	lr, [r10, #8]
	sub.w	r6, r5, #48
	uxtb	r2, r6
	cmp	r2, #10
	blo	.LBB175_35
	sub.w	r2, r5, #97
	uxtb	r2, r2
	cmp	r2, #6
	bhs	.LBB175_56
	sub.w	r6, r5, #87
.LBB175_35:
	movs	r2, #1
.LBB175_36:
	lsls	r2, r2, #31
	uxtb.w	r5, r9
	beq	.LBB175_49
	cmp	lr, r1
	bne	.LBB175_42
	mov.w	r11, #0
.LBB175_39:
	str.w	lr, [r10, #8]
	str.w	lr, [sp, #4]
	b	.LBB175_47
.LBB175_40:
	cmp	r5, #64
	bls	.LBB175_55
	cmp	r5, #71
	mov.w	r2, #0
	sub.w	r9, r5, #55
	it	lo
	movlo	r2, #1
	bhs	.LBB175_24
	b	.LBB175_25
.LBB175_42:
	bhs.w	.LBB175_94
	ldrb.w	r9, [r12, lr]
	sub.w	r2, r9, #48
	uxtb	r3, r2
	cmp	r3, #10
	add.w	r3, lr, #1
	str	r3, [sp, #4]
	str.w	r3, [r10, #8]
	blo	.LBB175_46
	sub.w	r3, r9, #97
	uxtb	r3, r3
	cmp	r3, #6
	bhs	.LBB175_69
	sub.w	r2, r9, #87
.LBB175_46:
	str	r2, [sp]
	mov.w	r11, #1
.LBB175_47:
	lsls	r2, r5, #4
	lsls.w	r3, r11, #31
	uxtab	r5, r2, r6
	bne	.LBB175_53
	ldr.w	r11, [sp, #8]
.LBB175_49:
	movs	r1, #1
.LBB175_50:
	cmp	r1, #0
	it	ne
	movne	r1, #1
	ldrd	r8, r6, [sp, #12]
	it	eq
	streq.w	r0, [r10, #8]
	lsls	r0, r1, #16
	beq.w	.LBB175_85
.LBB175_51:
	cmp	r4, #8
	beq.w	.LBB175_90
	strh.w	r5, [r11, r4, lsl #1]
	adds	r4, #1
	cmp	r6, r4
	bne.w	.LBB175_2
	b	.LBB175_86
.LBB175_53:
	ldr	r3, [sp]
	lsls	r2, r5, #4
	ldr.w	r11, [sp, #8]
	uxtab	lr, r2, r3
	movs	r2, #0
	cmp.w	r2, lr, lsr #16
	beq	.LBB175_58
.LBB175_54:
	movs	r1, #0
	b	.LBB175_27
.LBB175_55:
	sub.w	r9, r5, #55
	movs	r2, #0
	b	.LBB175_24
.LBB175_56:
	cmp	r5, #64
	bls	.LBB175_61
	cmp	r5, #71
	mov.w	r2, #0
	sub.w	r6, r5, #55
	it	lo
	movlo	r2, #1
	bhs.w	.LBB175_30
	b	.LBB175_36
.LBB175_58:
	ldr	r3, [sp, #4]
	cmp	r3, r1
	bne	.LBB175_62
	movs	r2, #0
.LBB175_60:
	mov	r6, r3
	str.w	r3, [r10, #8]
	b	.LBB175_67
.LBB175_61:
	sub.w	r6, r5, #55
	movs	r2, #0
	b	.LBB175_30
.LBB175_62:
	bhs.w	.LBB175_93
	ldrb.w	r5, [r12, r3]
	adds	r6, r3, #1
	str.w	r6, [r10, #8]
	sub.w	r9, r5, #48
	uxtb.w	r2, r9
	cmp	r2, #10
	blo	.LBB175_66
	sub.w	r2, r5, #97
	uxtb	r2, r2
	cmp	r2, #6
	bhs	.LBB175_79
	sub.w	r9, r5, #87
.LBB175_66:
	movs	r2, #1
.LBB175_67:
	lsls	r2, r2, #31
	bne	.LBB175_71
	mov	r5, lr
	b	.LBB175_49
.LBB175_69:
	cmp.w	r9, #64
	bls	.LBB175_74
	cmp.w	r9, #71
	mov.w	r11, #0
	it	lo
	movlo.w	r11, #1
	sub.w	r2, r9, #55
	str	r2, [sp]
	bhs.w	.LBB175_39
	b	.LBB175_47
.LBB175_71:
	lsl.w	r2, lr, #4
	mov	r5, lr
	uxtab	r3, r2, r9
	movs	r2, #0
	cmp.w	r2, r3, lsr #16
	bne	.LBB175_54
	cmp	r6, r1
	bne	.LBB175_75
.LBB175_73:
	movs	r1, #0
	str.w	r6, [r10, #8]
	lsls	r1, r1, #31
	mov	r5, r3
	beq.w	.LBB175_49
	b	.LBB175_54
.LBB175_74:
	sub.w	r2, r9, #55
	str	r2, [sp]
	mov.w	r11, #0
	b	.LBB175_39
.LBB175_75:
	bhs.w	.LBB175_98
	ldrb.w	r1, [r12, r6]
	sub.w	r2, r1, #48
	uxtb	r2, r2
	cmp	r2, #10
	add.w	r2, r6, #1
	str.w	r2, [r10, #8]
	blo	.LBB175_78
	sub.w	r2, r1, #97
	uxtb	r2, r2
	cmp	r2, #6
	bhs	.LBB175_82
.LBB175_78:
	movs	r1, #1
	lsls	r1, r1, #31
	mov	r5, r3
	beq.w	.LBB175_49
	b	.LBB175_54
.LBB175_79:
	cmp	r5, #64
	bls	.LBB175_81
	cmp	r5, #71
	mov.w	r2, #0
	sub.w	r9, r5, #55
	it	lo
	movlo	r2, #1
	bhs	.LBB175_60
	b	.LBB175_67
.LBB175_81:
	sub.w	r9, r5, #55
	movs	r2, #0
	b	.LBB175_60
.LBB175_82:
	cmp	r1, #64
	bls	.LBB175_73
	cmp	r1, #71
	mov.w	r1, #0
	ite	lo
	movlo	r1, #1
	strhs.w	r6, [r10, #8]
	lsls	r1, r1, #31
	mov	r5, r3
	beq.w	.LBB175_49
	b	.LBB175_54
.LBB175_84:
	movs	r4, #0
	mov	r0, r4
	add	sp, #20
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB175_85:
	movs	r1, #0
	mov	r0, r4
	add	sp, #20
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB175_86:
	movs	r1, #0
	mov	r4, r6
	mov	r0, r4
	add	sp, #20
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB175_87:
	cmp	r4, #7
	bhi	.LBB175_96
	lsrs	r2, r0, #8
	cmp	r4, #7
	rev	r2, r2
	lsr.w	r2, r2, #16
	strh.w	r2, [r11, r4, lsl #1]
	beq	.LBB175_97
	mvn	r2, #255
	add.w	r3, r11, r4, lsl #1
	uxtb	r1, r1
	and.w	r0, r2, r0, lsr #16
	add	r0, r1
	strh	r0, [r3, #2]
	adds	r4, #2
	movs	r1, #1
	mov	r0, r4
	add	sp, #20
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB175_90:
	movw	r2, :lower16:.Lanon.bf09494b05510f7f30f8c8768d91b265.28
	movs	r0, #8
	movt	r2, :upper16:.Lanon.bf09494b05510f7f30f8c8768d91b265.28
	movs	r1, #8
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB175_91:
	movw	r2, :lower16:.Lanon.bf09494b05510f7f30f8c8768d91b265.21
	movt	r2, :upper16:.Lanon.bf09494b05510f7f30f8c8768d91b265.21
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB175_92:
	movw	r2, :lower16:.Lanon.bf09494b05510f7f30f8c8768d91b265.21
	mov	r0, r5
	movt	r2, :upper16:.Lanon.bf09494b05510f7f30f8c8768d91b265.21
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB175_93:
	mov	r8, r3
	b	.LBB175_95
.LBB175_94:
	mov	r8, lr
.LBB175_95:
	movw	r2, :lower16:.Lanon.bf09494b05510f7f30f8c8768d91b265.21
	mov	r0, r8
	movt	r2, :upper16:.Lanon.bf09494b05510f7f30f8c8768d91b265.21
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB175_96:
	movw	r2, :lower16:.Lanon.bf09494b05510f7f30f8c8768d91b265.26
	movs	r1, #8
	movt	r2, :upper16:.Lanon.bf09494b05510f7f30f8c8768d91b265.26
	mov	r0, r4
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB175_97:
	movw	r2, :lower16:.Lanon.bf09494b05510f7f30f8c8768d91b265.27
	adds	r0, r4, #1
	movt	r2, :upper16:.Lanon.bf09494b05510f7f30f8c8768d91b265.27
	movs	r1, #8
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB175_98:
	mov	r8, r6
	b	.LBB175_95
.Lfunc_end175:
	.size	no_std_net::parser::Parser::read_ipv6_addr_impl::read_groups::hd512b6e9aa5cf889, .Lfunc_end175-no_std_net::parser::Parser::read_ipv6_addr_impl::read_groups::hd512b6e9aa5cf889
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN71_$LT$no_std_net..parser..AddrParseError$u20$as$u20$core..fmt..Debug$GT$3fmt17h06e2b4c657f0e984E","ax",%progbits
	.p2align	1
	.type	<no_std_net::parser::AddrParseError as core::fmt::Debug>::fmt::h06e2b4c657f0e984,%function
	.code	16
	.thumb_func
<no_std_net::parser::AddrParseError as core::fmt::Debug>::fmt::h06e2b4c657f0e984:
.Lfunc_begin176:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r7, lr}
	push	{r4, r5, r7, lr}
	.cfi_def_cfa_offset 16
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r5, -12
	.cfi_offset r4, -16
	.setfp	r7, sp, #8
	add	r7, sp, #8
	.cfi_def_cfa r7, 8
	.pad	#16
	sub	sp, #16
	movw	r2, :lower16:.Lanon.bf09494b05510f7f30f8c8768d91b265.43
	mov	r5, sp
	mov	r4, r0
	movt	r2, :upper16:.Lanon.bf09494b05510f7f30f8c8768d91b265.43
	movs	r3, #14
	mov	r0, r5
	bl	core::fmt::Formatter::debug_tuple::h9a9c92e1e856202e
	movw	r2, :lower16:.Lanon.bf09494b05510f7f30f8c8768d91b265.44
	add	r1, sp, #12
	movt	r2, :upper16:.Lanon.bf09494b05510f7f30f8c8768d91b265.44
	mov	r0, r5
	str	r4, [sp, #12]
	bl	core::fmt::builders::DebugTuple::field::h344a2bce7ddce2f6
	bl	core::fmt::builders::DebugTuple::finish::hfca393014b7f9d44
	add	sp, #16
	pop	{r4, r5, r7, pc}
.Lfunc_end176:
	.size	<no_std_net::parser::AddrParseError as core::fmt::Debug>::fmt::h06e2b4c657f0e984, .Lfunc_end176-<no_std_net::parser::AddrParseError as core::fmt::Debug>::fmt::h06e2b4c657f0e984
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text.rust_begin_unwind,"ax",%progbits
	.p2align	1
	.type	rust_begin_unwind,%function
	.code	16
	.thumb_func
rust_begin_unwind:
.Lfunc_begin177:
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	.pad	#56
	sub	sp, #56
	mov	r4, r0
	bl	__cpsid
	movw	r0, :lower16:_ZN11panic_probe3imp5panic8PANICKED17hf951954ea29682c6E.0
	movt	r0, :upper16:_ZN11panic_probe3imp5panic8PANICKED17hf951954ea29682c6E.0
	ldrb	r1, [r0]
	cmp	r1, #0
	bne	.LBB177_2
	movs	r5, #1
	strb	r5, [r0]
	str	r4, [sp, #4]
	bl	_defmt_acquire
	movw	r0, :lower16:"{\"package\":\"panic-probe\",\"tag\":\"defmt_error\",\"data\":\"{}\",\"disambiguator\":\"1034545429517152257\"}"
	movt	r0, :upper16:"{\"package\":\"panic-probe\",\"tag\":\"defmt_error\",\"data\":\"{}\",\"disambiguator\":\"1034545429517152257\"}"
	bl	defmt::export::header::hea8fc65126d0803e
	movw	r0, :lower16:"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=__internal_Display}\",\"disambiguator\":\"5091384029326657320\"}"
	movs	r1, #2
	movt	r0, :upper16:"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=__internal_Display}\",\"disambiguator\":\"5091384029326657320\"}"
	strh.w	r0, [sp, #28]
	add	r0, sp, #28
	bl	_defmt_write
	add	r0, sp, #4
	str	r0, [sp, #8]
	movw	r0, :lower16:.Lanon.464e5119cbb7cd21d9b5d296818f3990.0
	movw	r1, :lower16:.Lanon.f2125f0e4e7c810e47e19edfd9da912c.10
	movt	r0, :upper16:.Lanon.464e5119cbb7cd21d9b5d296818f3990.0
	str	r0, [sp, #12]
	add	r0, sp, #8
	str	r0, [sp, #16]
	movw	r0, :lower16:<&T as core::fmt::Display>::fmt::h610f375f363efd9c
	movt	r1, :upper16:.Lanon.f2125f0e4e7c810e47e19edfd9da912c.10
	movt	r0, :upper16:<&T as core::fmt::Display>::fmt::h610f375f363efd9c
	str	r0, [sp, #20]
	add	r0, sp, #52
	str	r0, [sp, #24]
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.114
	add	r2, sp, #28
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.114
	strd	r0, r5, [sp, #28]
	movs	r0, #0
	strd	r0, r0, [sp, #36]
	add	r0, sp, #16
	strd	r0, r5, [sp, #44]
	add	r0, sp, #24
	bl	core::fmt::write::h5d3fbef16e428eed
	movw	r0, :lower16:.Lanon.f2125f0e4e7c810e47e19edfd9da912c.5
	movs	r1, #1
	movt	r0, :upper16:.Lanon.f2125f0e4e7c810e47e19edfd9da912c.5
	bl	_defmt_write
	bl	_defmt_release
.LBB177_2:
	movw	r0, #60708
	movt	r0, #57344
	ldr	r1, [r0]
	bic	r1, r1, #262144
	str	r1, [r0]
	bl	cortex_m::asm::udf::h4b1746e72104f419
	.inst.n	0xdefe
.Lfunc_end177:
	.size	rust_begin_unwind, .Lfunc_end177-rust_begin_unwind
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN8cortex_m3asm3udf17h4b1746e72104f419E,"ax",%progbits
	.p2align	1
	.type	cortex_m::asm::udf::h4b1746e72104f419,%function
	.code	16
	.thumb_func
cortex_m::asm::udf::h4b1746e72104f419:
.Lfunc_begin178:
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	bl	__udf
	.inst.n	0xdefe
.Lfunc_end178:
	.size	cortex_m::asm::udf::h4b1746e72104f419, .Lfunc_end178-cortex_m::asm::udf::h4b1746e72104f419
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17hf7cab8b09e0ee289E","ax",%progbits
	.p2align	1
	.type	<&T as core::fmt::Display>::fmt::hf7cab8b09e0ee289,%function
	.code	16
	.thumb_func
<&T as core::fmt::Display>::fmt::hf7cab8b09e0ee289:
.Lfunc_begin179:
	.fnstart
	.cfi_startproc
	ldr	r0, [r0]
	b	<core::panic::panic_info::PanicInfo as core::fmt::Display>::fmt::h4ec511762c61d457
.Lfunc_end179:
	.size	<&T as core::fmt::Display>::fmt::hf7cab8b09e0ee289, .Lfunc_end179-<&T as core::fmt::Display>::fmt::hf7cab8b09e0ee289
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN15serde_json_core3ser10Serializer17extend_from_slice17h7ef655ceaae37f25E,"ax",%progbits
	.p2align	1
	.type	serde_json_core::ser::Serializer::extend_from_slice::h7ef655ceaae37f25,%function
	.code	16
	.thumb_func
serde_json_core::ser::Serializer::extend_from_slice::h7ef655ceaae37f25:
.Lfunc_begin180:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8}
	str	r8, [sp, #-4]!
	.cfi_offset r8, -24
	ldrd	r12, r4, [r0, #4]
	add.w	lr, r4, r2
	cmp	lr, r12
	bls	.LBB180_2
.LBB180_1:
	movs	r0, #0
	cmp	lr, r12
	it	hi
	movhi	r0, #1
	ldr	r8, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.LBB180_2:
	ldr	r3, [r0]
	mov	r8, r4
	add	r3, r4
	add	r2, r1
	cmp	r12, r4
	add.w	r5, r3, #1
	it	hi
	movhi	r8, r12
	sub.w	r6, r8, r4
.LBB180_3:
	cbz	r6, .LBB180_11
	ldrb	r3, [r1], #1
	cmp	r1, r2
	strb	r3, [r5, #-1]
	add.w	r3, r4, #1
	str	r3, [r0, #8]
	beq	.LBB180_1
	cmp	r3, r8
	beq	.LBB180_11
	ldrb	r3, [r1]
	adds	r1, #1
	strb	r3, [r5]
	cmp	r1, r2
	add.w	r3, r4, #2
	str	r3, [r0, #8]
	beq	.LBB180_1
	cmp	r3, r8
	beq	.LBB180_11
	ldrb	r3, [r1]
	adds	r1, #1
	strb	r3, [r5, #1]
	cmp	r1, r2
	add.w	r3, r4, #3
	str	r3, [r0, #8]
	beq	.LBB180_1
	cmp	r3, r8
	beq	.LBB180_11
	ldrb	r3, [r1]
	adds	r1, #1
	strb	r3, [r5, #2]
	adds	r4, #4
	cmp	r1, r2
	add.w	r5, r5, #4
	sub.w	r6, r6, #4
	str	r4, [r0, #8]
	bne	.LBB180_3
	b	.LBB180_1
.LBB180_11:
	movw	r2, :lower16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.25
	mov	r0, r8
	movt	r2, :upper16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.25
	mov	r1, r12
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.Lfunc_end180:
	.size	serde_json_core::ser::Serializer::extend_from_slice::h7ef655ceaae37f25, .Lfunc_end180-serde_json_core::ser::Serializer::extend_from_slice::h7ef655ceaae37f25
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN87_$LT$$RF$mut$u20$serde_json_core..ser..Serializer$u20$as$u20$serde..ser..Serializer$GT$14serialize_bool17h099b6880f35ee002E","ax",%progbits
	.p2align	1
	.type	<&mut serde_json_core::ser::Serializer as serde::ser::Serializer>::serialize_bool::h099b6880f35ee002,%function
	.code	16
	.thumb_func
<&mut serde_json_core::ser::Serializer as serde::ser::Serializer>::serialize_bool::h099b6880f35ee002:
.Lfunc_begin181:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r11}
	str	r11, [sp, #-4]!
	.cfi_offset r11, -24
	cbz	r1, .LBB181_6
	ldrd	r1, r3, [r0, #4]
	add.w	lr, r3, #4
	cmp	lr, r1
	bhi	.LBB181_7
	cmp	r1, r3
	mov	r12, r3
	it	hi
	movhi	r12, r1
	cmp	r3, r1
	bhs	.LBB181_14
	ldr	r2, [r0]
	adds	r4, r3, #1
	cmp	r4, r12
	mov.w	r5, #116
	strb	r5, [r2, r3]
	beq	.LBB181_14
	adds	r5, r3, #2
	movs	r6, #114
	cmp	r5, r12
	strb	r6, [r2, r4]
	beq	.LBB181_14
	adds	r3, #3
	movs	r4, #117
	cmp	r3, r12
	strb	r4, [r2, r5]
	bne	.LBB181_13
	b	.LBB181_14
.LBB181_6:
	ldrd	r1, r3, [r0, #4]
	add.w	lr, r3, #5
	cmp	lr, r1
	bls	.LBB181_8
.LBB181_7:
	movs	r0, #1
	ldr	r11, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.LBB181_8:
	cmp	r1, r3
	mov	r12, r3
	it	hi
	movhi	r12, r1
	cmp	r3, r1
	bhs	.LBB181_14
	ldr	r2, [r0]
	adds	r4, r3, #1
	cmp	r4, r12
	mov.w	r5, #102
	strb	r5, [r2, r3]
	beq	.LBB181_14
	adds	r5, r3, #2
	movs	r6, #97
	cmp	r5, r12
	strb	r6, [r2, r4]
	beq	.LBB181_14
	adds	r4, r3, #3
	movs	r6, #108
	cmp	r4, r12
	strb	r6, [r2, r5]
	beq	.LBB181_14
	adds	r3, #4
	movs	r5, #115
	cmp	r3, r12
	strb	r5, [r2, r4]
	beq	.LBB181_14
.LBB181_13:
	movs	r1, #101
	strb	r1, [r2, r3]
	str.w	lr, [r0, #8]
	movs	r0, #0
	ldr	r11, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.LBB181_14:
	movw	r2, :lower16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.25
	mov	r0, r12
	movt	r2, :upper16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.25
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.Lfunc_end181:
	.size	<&mut serde_json_core::ser::Serializer as serde::ser::Serializer>::serialize_bool::h099b6880f35ee002, .Lfunc_end181-<&mut serde_json_core::ser::Serializer as serde::ser::Serializer>::serialize_bool::h099b6880f35ee002
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN87_$LT$$RF$mut$u20$serde_json_core..ser..Serializer$u20$as$u20$serde..ser..Serializer$GT$12serialize_u817h2dfadc270344fb0aE","ax",%progbits
	.p2align	1
	.type	<&mut serde_json_core::ser::Serializer as serde::ser::Serializer>::serialize_u8::h2dfadc270344fb0a,%function
	.code	16
	.thumb_func
<&mut serde_json_core::ser::Serializer as serde::ser::Serializer>::serialize_u8::h2dfadc270344fb0a:
.Lfunc_begin182:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8}
	str	r8, [sp, #-4]!
	.cfi_offset r8, -24
	.pad	#8
	sub	sp, #8
	uxtb	r3, r1
	movs	r5, #205
	mul	r2, r3, r5
	cmp	r3, #9
	lsr.w	r6, r2, #11
	add.w	r2, r6, r6, lsl #2
	sub.w	r1, r1, r2, lsl #1
	orr	r2, r1, #48
	strb.w	r2, [sp, #6]
	bhi	.LBB182_2
	movs	r4, #2
	b	.LBB182_5
.LBB182_2:
	mul	r1, r6, r5
	cmp	r3, #100
	lsr.w	r1, r1, #11
	orr.w	r1, r1, r1, lsl #2
	sub.w	r1, r6, r1, lsl #1
	orr	r2, r1, #48
	strb.w	r2, [sp, #5]
	bhs	.LBB182_4
	movs	r4, #1
	b	.LBB182_5
.LBB182_4:
	movs	r1, #41
	movs	r4, #0
	muls	r1, r3, r1
	lsrs	r1, r1, #12
	add.w	r2, r1, #48
	strb.w	r2, [sp, #4]
.LBB182_5:
	eor	r6, r4, #3
	ldrd	r1, r3, [r0, #4]
	add.w	lr, r6, r3
	cmp	lr, r1
	bhi	.LBB182_12
	cmp	r1, r3
	mov	r12, r3
	it	hi
	movhi	r12, r1
	cmp	r3, r1
	bhs	.LBB182_13
	add	r5, sp, #4
	ldr.w	r8, [r0]
	adds	r6, r5, r4
	adds	r4, r5, #3
	adds	r5, r6, #1
	strb.w	r2, [r8, r3]
	cmp	r5, r4
	add.w	r2, r3, #1
	str	r2, [r0, #8]
	beq	.LBB182_12
	cmp	r2, r12
	beq	.LBB182_13
	ldrb	r5, [r6, #1]
	adds	r6, #2
	strb.w	r5, [r8, r2]
	cmp	r6, r4
	add.w	r2, r3, #2
	str	r2, [r0, #8]
	beq	.LBB182_12
	cmp	r2, r12
	beq	.LBB182_13
	ldrb	r6, [r6]
	strb.w	r6, [r8, r2]
	adds	r2, r3, #3
	str	r2, [r0, #8]
.LBB182_12:
	movs	r0, #0
	cmp	lr, r1
	it	hi
	movhi	r0, #1
	add	sp, #8
	ldr	r8, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.LBB182_13:
	movw	r2, :lower16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.25
	mov	r0, r12
	movt	r2, :upper16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.25
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.Lfunc_end182:
	.size	<&mut serde_json_core::ser::Serializer as serde::ser::Serializer>::serialize_u8::h2dfadc270344fb0a, .Lfunc_end182-<&mut serde_json_core::ser::Serializer as serde::ser::Serializer>::serialize_u8::h2dfadc270344fb0a
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN87_$LT$$RF$mut$u20$serde_json_core..ser..Serializer$u20$as$u20$serde..ser..Serializer$GT$13serialize_f3217h9646727876011b6eE","ax",%progbits
	.p2align	1
	.type	<&mut serde_json_core::ser::Serializer as serde::ser::Serializer>::serialize_f32::h9646727876011b6e,%function
	.code	16
	.thumb_func
<&mut serde_json_core::ser::Serializer as serde::ser::Serializer>::serialize_f32::h9646727876011b6e:
.Lfunc_begin183:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#60
	sub	sp, #60
	vmov	r1, s0
	mov	r9, r0
	movw	r0, #65535
	movt	r0, #127
	and	r2, r1, #2139095040
	cmp.w	r2, #2139095040
	bne	.LBB183_2
	movw	r3, :lower16:.Lanon.58fbd25ae7aa87e0d2ef344e55c3bacf.1
	ands	r0, r1
	movs	r6, #4
	cmp.w	r1, #-1
	movw	r1, :lower16:.Lanon.58fbd25ae7aa87e0d2ef344e55c3bacf.2
	movt	r3, :upper16:.Lanon.58fbd25ae7aa87e0d2ef344e55c3bacf.1
	movw	r2, :lower16:.Lanon.58fbd25ae7aa87e0d2ef344e55c3bacf.0
	movt	r1, :upper16:.Lanon.58fbd25ae7aa87e0d2ef344e55c3bacf.2
	itt	gt
	movgt	r6, #3
	movgt	r3, r1
	movt	r2, :upper16:.Lanon.58fbd25ae7aa87e0d2ef344e55c3bacf.0
	cmp	r0, #0
	ite	ne
	movne	r6, #3
	moveq	r2, r3
	ldrd	r1, r3, [r9, #4]
	add.w	r12, r3, r6
	cmp	r12, r1
	bhi.w	.LBB183_154
	b.w	.LBB183_144
.LBB183_2:
	and.w	r3, r1, r0
	cmp	r1, #0
	ubfx	r2, r1, #23, #8
	bmi	.LBB183_6
	movs	r6, #0
	orrs.w	r0, r2, r3
	bne	.LBB183_7
.LBB183_4:
	movw	r2, :lower16:.Lanon.58fbd25ae7aa87e0d2ef344e55c3bacf.3
	add	r0, sp, #36
	movt	r2, :upper16:.Lanon.58fbd25ae7aa87e0d2ef344e55c3bacf.3
	add	r0, r6
	ldrb	r3, [r2, #2]
	strb	r3, [r0, #2]
	ldrh	r2, [r2]
	movs	r3, #3
	strh	r2, [r0]
	add.w	r6, r3, r1, lsr #31
.LBB183_5:
	add	r2, sp, #36
	ldrd	r1, r3, [r9, #4]
	add.w	r12, r3, r6
	cmp	r12, r1
	bhi.w	.LBB183_154
	b.w	.LBB183_144
.LBB183_6:
	movs	r0, #45
	strb.w	r0, [sp, #36]
	movs	r6, #1
	orrs.w	r0, r2, r3
	beq	.LBB183_4
.LBB183_7:
	sub.w	r1, r2, #152
	cmp	r2, #0
	mov	r5, r3
	mov.w	r10, #0
	strd	r9, r6, [sp, #20]
	ite	ne
	addne.w	r5, r5, #8388608
	mvneq	r1, #150
	cmp	r3, #0
	and	r0, r5, #1
	str	r0, [sp, #16]
	lsl.w	r11, r5, #2
	it	ne
	movne	r3, #1
	cmp	r2, #2
	mov.w	r2, #0
	it	lo
	movlo	r2, #1
	orr.w	r0, r3, r2
	add.w	r9, r11, #2
	mvns	r2, r0
	cmp.w	r1, #-1
	add.w	r6, r2, r5, lsl #2
	ble.w	.LBB183_16
	movw	r0, #13377
	movw	r3, #37711
	movt	r0, #1
	movt	r3, #18
	mul	lr, r1, r0
	movw	r0, :lower16:ryu::d2s_full_table::DOUBLE_POW5_INV_SPLIT::h1e579245bcd5631b
	movt	r0, :upper16:ryu::d2s_full_table::DOUBLE_POW5_INV_SPLIT::h1e579245bcd5631b
	str	r6, [sp, #12]
	lsr.w	r2, lr, #18
	str	r2, [sp, #32]
	rsb	r1, r1, lr, lsr #18
	str	r1, [sp, #8]
	add.w	r0, r0, r2, lsl #4
	muls	r2, r3, r2
	str.w	r9, [sp, #28]
	ldrd	r0, r3, [r0, #8]
	adds	r0, #1
	add.w	r2, r1, r2, lsr #19
	umull	r6, r4, r0, r11
	adc	r12, r3, #0
	adds	r2, #29
	movs	r6, #0
	umull	r5, r3, r0, r9
	and	r2, r2, #63
	umlal	r4, r6, r12, r11
	movs	r5, #0
	rsb.w	r1, r2, #32
	umlal	r3, r5, r12, r9
	lsl.w	r8, r6, r1
	lsrs	r4, r2
	orr.w	r8, r8, r4
	lsrs	r3, r2
	lsl.w	r9, r5, r1
	subs.w	r4, r2, #32
	it	pl
	lsrpl.w	r8, r6, r4
	orr.w	r6, r3, r9
	ldr.w	r9, [sp, #12]
	umull	r0, r3, r0, r9
	cmp	r4, #0
	mov.w	r0, #0
	umlal	r3, r0, r12, r9
	it	pl
	lsrpl.w	r6, r5, r4
	lsr.w	r2, r3, r2
	cmp	r4, #0
	lsl.w	r1, r0, r1
	mov	r5, r9
	orr.w	r12, r2, r1
	it	pl
	lsrpl.w	r12, r0, r4
	mov	r4, lr
	cmp.w	lr, #262144
	sub.w	lr, r6, #1
	blo.w	.LBB183_24
	movw	r2, #52429
	ldr	r3, [sp, #32]
	movt	r2, #52428
	umull	r0, r1, lr, r2
	umull	r0, r2, r12, r2
	lsrs	r0, r1, #3
	lsrs	r1, r2, #3
	cmp	r0, r1
	bhi	.LBB183_11
	subs	r0, r3, #1
	movw	r1, :lower16:ryu::d2s_full_table::DOUBLE_POW5_INV_SPLIT::h1e579245bcd5631b
	movt	r1, :upper16:ryu::d2s_full_table::DOUBLE_POW5_INV_SPLIT::h1e579245bcd5631b
	movw	r2, #37711
	add.w	r1, r1, r0, lsl #4
	movt	r2, #18
	muls	r0, r2, r0
	mov	r9, r3
	ldrd	r1, r2, [r1, #8]
	adds	r1, #1
	umull	r1, r3, r1, r11
	adc	r2, r2, #0
	ldr	r1, [sp, #8]
	add.w	r0, r1, r0, lsr #19
	movs	r1, #0
	adds	r0, #28
	umlal	r3, r1, r2, r11
	and	r0, r0, #63
	rsb.w	r2, r0, #32
	lsrs	r3, r0
	lsl.w	r2, r1, r2
	subs	r0, #32
	orr.w	r2, r2, r3
	mov	r3, r9
	it	pl
	lsrpl.w	r2, r1, r0
	movw	r0, #52429
	movt	r0, #52428
	umull	r0, r1, r2, r0
	lsrs	r0, r1, #3
	add.w	r0, r0, r0, lsl #2
	sub.w	r10, r2, r0, lsl #1
.LBB183_11:
	cmp.w	r4, #2621440
	ldr	r4, [sp, #28]
	bhs.w	.LBB183_25
.LBB183_12:
	movw	r0, #52429
	movt	r0, #52428
	mul	r0, r11, r0
	cmp.w	r0, #858993459
	bls.w	.LBB183_36
	ldr	r0, [sp, #16]
	cmp	r0, #0
	bne.w	.LBB183_41
	movw	r11, #52429
	str	r6, [sp, #28]
	movt	r11, #52428
	movs	r6, #0
	mul	r0, r5, r11
	cmp.w	r0, #858993459
	mov.w	r0, #0
	bls.w	.LBB183_55
.LBB183_15:
	ldr	r3, [sp, #32]
	mov.w	r9, #0
	cmp	r6, r3
	it	hs
	movhs.w	r9, #1
	b	.LBB183_69
.LBB183_16:
	movw	r2, #53509
	str	r0, [sp, #4]
	movt	r2, #65524
	mul	r3, r1, r2
	movw	r2, :lower16:ryu::d2s_full_table::DOUBLE_POW5_SPLIT::hba4162dd50d31dad
	movt	r2, :upper16:ryu::d2s_full_table::DOUBLE_POW5_SPLIT::hba4162dd50d31dad
	str	r3, [sp, #12]
	add.w	r0, r1, r3, lsr #20
	movw	r1, #27825
	movt	r1, #65517
	str	r0, [sp, #32]
	sub.w	r2, r2, r0, lsl #4
	mul	r5, r0, r1
	lsrs	r0, r3, #20
	str	r0, [sp, #8]
	ldrd	r1, r2, [r2, #8]
	umull	r3, r4, r1, r11
	sub.w	r5, r0, r5, lsr #19
	movs	r3, #0
	adds	r5, #28
	umlal	r4, r3, r2, r11
	and	r5, r5, #63
	rsb.w	lr, r5, #32
	lsr.w	r12, r4, r5
	lsl.w	r4, r3, lr
	orr.w	r8, r12, r4
	umull	r4, r0, r1, r9
	movs	r4, #0
	umlal	r0, r4, r2, r9
	subs.w	r9, r5, #32
	it	pl
	lsrpl.w	r8, r3, r9
	umull	r1, r3, r1, r6
	lsrs	r0, r5
	movs	r1, #0
	cmp.w	r9, #0
	umlal	r3, r1, r2, r6
	lsl.w	r2, r4, lr
	orr.w	r2, r2, r0
	lsr.w	r0, r3, r5
	lsl.w	r3, r1, lr
	orr.w	r12, r0, r3
	movw	r3, #52429
	movt	r3, #52428
	it	pl
	lsrpl.w	r2, r4, r9
	cmp.w	r9, #0
	sub.w	lr, r2, #1
	it	pl
	lsrpl.w	r12, r1, r9
	umull	r0, r1, r12, r3
	ldr	r4, [sp, #12]
	cmp.w	r4, #1048576
	str	r2, [sp, #28]
	lsr.w	r5, r1, #3
	blo	.LBB183_19
	umull	r0, r1, lr, r3
	lsrs	r0, r1, #3
	cmp	r0, r5
	bhi	.LBB183_19
	ldr	r0, [sp, #32]
	movw	r2, :lower16:ryu::d2s_full_table::DOUBLE_POW5_SPLIT::hba4162dd50d31dad
	rsb.w	r0, r0, #1
	movw	r1, #37711
	movt	r2, :upper16:ryu::d2s_full_table::DOUBLE_POW5_SPLIT::hba4162dd50d31dad
	movt	r1, #18
	add.w	r2, r2, r0, lsl #4
	muls	r0, r1, r0
	ldr	r6, [sp, #8]
	ldrd	r1, r2, [r2, #8]
	umull	r1, r3, r1, r11
	sub.w	r0, r6, r0, lsr #19
	movs	r1, #0
	adds	r0, #27
	umlal	r3, r1, r2, r11
	and	r0, r0, #63
	lsr.w	r2, r3, r0
	rsb.w	r3, r0, #32
	lsl.w	r3, r1, r3
	subs	r0, #32
	orr.w	r2, r2, r3
	it	pl
	lsrpl.w	r2, r1, r0
	movw	r0, #52429
	movt	r0, #52428
	umull	r0, r1, r2, r0
	lsrs	r0, r1, #3
	add.w	r0, r0, r0, lsl #2
	sub.w	r10, r2, r0, lsl #1
.LBB183_19:
	cmp.w	r4, #2097152
	bhs	.LBB183_22
	ldr	r1, [sp, #16]
	ldr	r2, [sp, #4]
	eor	r0, r1, #1
	ldr	r4, [sp, #28]
	movw	r11, #52429
	and.w	r9, r0, r2
	cmp	r1, #0
	mov.w	r0, #1
	it	ne
	movne	r4, lr
	mov	r6, r4
	movt	r11, #52428
	ldr	r3, [sp, #32]
	umull	r2, r1, r6, r11
	str	r3, [sp, #32]
	cmp.w	r5, r1, lsr #3
	blo	.LBB183_27
.LBB183_21:
	mov.w	lr, #0
	b	.LBB183_29
.LBB183_22:
	cmp.w	r4, #32505856
	bhs.w	.LBB183_44
	ldr	r0, [sp, #8]
	mov.w	r1, #-1
	subs	r0, #1
	lsl.w	r0, r1, r0
	bic.w	r0, r11, r0
	clz	r0, r0
	lsrs	r0, r0, #5
	b	.LBB183_45
.LBB183_24:
	ldr	r3, [sp, #32]
	cmp.w	r4, #2621440
	ldr	r4, [sp, #28]
	blo.w	.LBB183_12
.LBB183_25:
	movw	r11, #52429
	movs	r0, #0
	mov.w	r9, #0
	movt	r11, #52428
	cmp.w	r9, #0
	it	eq
	cmpeq	r0, #0
	beq.w	.LBB183_70
.LBB183_26:
	umull	r1, r2, r12, r11
	lsrs	r5, r2, #3
	umull	r2, r1, r6, r11
	str	r3, [sp, #32]
	cmp.w	r5, r1, lsr #3
	bhs	.LBB183_21
.LBB183_27:
	lsrs	r1, r1, #3
	mov.w	lr, #0
	mov	r3, r8
	mov	r2, r12
.LBB183_28:
	umull	r4, r6, r3, r11
	mov	r12, r5
	add.w	r5, r5, r5, lsl #2
	add.w	lr, lr, #1
	lsr.w	r8, r6, #3
	umull	r1, r6, r1, r11
	rsb	r2, r2, r5, lsl #1
	add.w	r5, r8, r8, lsl #2
	uxtb.w	r4, r10
	sub.w	r10, r3, r5, lsl #1
	umull	r1, r3, r12, r11
	clz	r2, r2
	lsrs	r1, r6, #3
	clz	r4, r4
	lsrs	r2, r2, #5
	lsrs	r4, r4, #5
	and.w	r9, r9, r2
	ands	r0, r4
	cmp.w	r1, r3, lsr #3
	lsr.w	r5, r3, #3
	mov	r3, r8
	mov	r2, r12
	bhi	.LBB183_28
.LBB183_29:
	cmp.w	r9, #0
	beq.w	.LBB183_50
	umull	r1, r2, r12, r11
	lsrs	r1, r2, #3
	add.w	r1, r1, r1, lsl #2
	sub.w	r1, r12, r1, lsl #1
	cmp	r1, #0
	bne.w	.LBB183_50
	movw	r5, #39321
	str.w	r9, [sp, #28]
	movt	r5, #6553
.LBB183_32:
	umull	r1, r4, r12, r11
	umull	r1, r3, r8, r11
	lsrs	r1, r4, #3
	lsrs	r3, r3, #3
	mul	r4, r1, r11
	uxtb.w	r6, r10
	add.w	r2, r3, r3, lsl #2
	clz	r6, r6
	ror.w	r4, r4, #1
	cmp	r4, r5
	lsr.w	r4, r6, #5
	and.w	r0, r0, r4
	sub.w	r10, r8, r2, lsl #1
	bhi.w	.LBB183_46
	umull	r1, r2, r3, r11
	lsrs	r1, r2, #3
	movw	r2, #34079
	movt	r2, #20971
	umull	r2, r4, r12, r2
	add.w	r2, r1, r1, lsl #2
	lsrs	r1, r4, #5
	uxtb.w	r4, r10
	sub.w	r10, r3, r2, lsl #1
	movw	r2, #34079
	mul	r6, r1, r11
	movt	r2, #20971
	umull	r2, r3, r8, r2
	clz	r9, r4
	ror.w	r2, r6, #1
	cmp	r2, r5
	lsr.w	r2, r9, #5
	and.w	r0, r0, r2
	lsr.w	r3, r3, #5
	bhi.w	.LBB183_47
	umull	r1, r2, r3, r11
	mov	r4, r8
	lsrs	r1, r2, #3
	movw	r2, #19923
	movt	r2, #4194
	umull	r2, r6, r12, r2
	add.w	r9, r1, r1, lsl #2
	uxtb.w	r2, r10
	lsrs	r1, r6, #6
	clz	r8, r2
	movw	r2, #19923
	mul	r6, r1, r11
	movt	r2, #4194
	sub.w	r10, r3, r9, lsl #1
	umull	r2, r3, r4, r2
	ror.w	r2, r6, #1
	mov	r6, r11
	cmp	r2, r5
	lsr.w	r2, r8, #5
	and.w	r0, r0, r2
	lsr.w	r11, r3, #6
	bhi.w	.LBB183_48
	movw	r8, #5977
	umull	r1, r2, r11, r6
	movt	r8, #53687
	add.w	lr, lr, #4
	umull	r1, r3, r12, r8
	lsrs	r2, r2, #3
	uxtb.w	r1, r10
	ldr.w	r9, [sp, #28]
	clz	r1, r1
	lsr.w	r12, r3, #13
	lsrs	r1, r1, #5
	mul	r3, r12, r6
	ands	r0, r1
	add.w	r1, r2, r2, lsl #2
	umull	r2, r4, r4, r8
	sub.w	r10, r11, r1, lsl #1
	movw	r1, #39322
	ror.w	r2, r3, #1
	movt	r1, #6553
	cmp	r2, r1
	lsr.w	r8, r4, #13
	mov	r11, r6
	blo.w	.LBB183_32
	b	.LBB183_50
.LBB183_36:
	mov	lr, r3
	movw	r1, #34079
	movw	r3, #19923
	movw	r4, #5977
	movw	r5, #52429
	str	r6, [sp, #28]
	movs	r6, #0
	movt	r1, #20971
	movt	r3, #4194
	movt	r4, #53687
	movt	r5, #52428
.LBB183_37:
	umull	r0, r2, r11, r5
	lsrs	r0, r2, #2
	muls	r0, r5, r0
	cmp.w	r0, #858993459
	bhi.w	.LBB183_65
	umull	r0, r2, r11, r1
	lsrs	r0, r2, #3
	muls	r0, r5, r0
	cmp.w	r0, #858993459
	bhi.w	.LBB183_66
	umull	r0, r2, r11, r3
	lsrs	r0, r2, #3
	muls	r0, r5, r0
	cmp.w	r0, #858993459
	bhi.w	.LBB183_67
	umull	r0, r2, r11, r4
	adds	r6, #4
	lsr.w	r11, r2, #9
	mul	r0, r11, r5
	cmn.w	r0, #-858993460
	blo	.LBB183_37
	b	.LBB183_68
.LBB183_41:
	movw	r11, #52429
	str.w	lr, [sp, #4]
	movt	r11, #52428
	mul	r0, r4, r11
	cmp.w	r0, #858993459
	mov.w	r0, #0
	bls.w	.LBB183_60
	ldr	r3, [sp, #32]
.LBB183_43:
	cmp	r0, r3
	ldr	r0, [sp, #4]
	it	hs
	movhs	r6, r0
	movs	r0, #0
	mov.w	r9, #0
	cmp.w	r9, #0
	it	eq
	cmpeq	r0, #0
	beq.w	.LBB183_70
	b	.LBB183_26
.LBB183_44:
	movs	r0, #0
.LBB183_45:
	movw	r11, #52429
	mov.w	r9, #0
	movt	r11, #52428
	ldrd	r6, r3, [sp, #28]
	cmp.w	r9, #0
	it	eq
	cmpeq	r0, #0
	bne.w	.LBB183_26
	b	.LBB183_70
.LBB183_46:
	add.w	lr, lr, #1
	mov	r12, r1
	mov	r8, r3
	b	.LBB183_50
.LBB183_47:
	add.w	lr, lr, #2
	mov	r12, r1
	mov	r8, r3
	b	.LBB183_49
.LBB183_48:
	add.w	lr, lr, #3
	mov	r12, r1
	mov	r8, r11
.LBB183_49:
	ldr.w	r9, [sp, #28]
.LBB183_50:
	lsls.w	r1, r8, #31
	uxtb.w	r2, r10
	mov.w	r1, #5
	it	eq
	moveq	r1, #4
	cmp	r2, #5
	it	ne
	movne	r1, r10
	cmp	r0, #0
	it	eq
	moveq	r1, r10
	cmp	r8, r12
	bne	.LBB183_52
	ldr	r0, [sp, #16]
	eor	r0, r0, #1
	and.w	r0, r0, r9
	cmp	r0, #1
	bne	.LBB183_53
.LBB183_52:
	uxtb	r1, r1
	movs	r0, #0
	cmp	r1, #4
	it	hi
	movhi	r0, #1
	b	.LBB183_54
.LBB183_53:
	movs	r0, #1
.LBB183_54:
	ldr.w	r10, [sp, #24]
	add.w	r9, r0, r8
	b	.LBB183_84
.LBB183_55:
	movw	r1, #34079
	movw	r3, #19923
	movw	lr, #5977
	movs	r6, #0
	movt	r1, #20971
	movt	r3, #4194
	movt	lr, #53687
.LBB183_56:
	umull	r2, r4, r5, r11
	lsrs	r2, r4, #2
	mul	r2, r2, r11
	cmp.w	r2, #858993459
	bhi.w	.LBB183_98
	umull	r2, r4, r5, r1
	lsrs	r2, r4, #3
	mul	r2, r2, r11
	cmp.w	r2, #858993459
	bhi.w	.LBB183_99
	umull	r2, r4, r5, r3
	lsrs	r2, r4, #3
	mul	r2, r2, r11
	cmp.w	r2, #858993459
	bhi.w	.LBB183_100
	umull	r2, r4, r5, lr
	adds	r6, #4
	lsrs	r5, r4, #9
	mul	r2, r5, r11
	cmn.w	r2, #-858993460
	blo	.LBB183_56
	b	.LBB183_15
.LBB183_60:
	movw	r1, #34079
	movw	lr, #19923
	movw	r9, #5977
	movt	r1, #20971
	movt	lr, #4194
	movt	r9, #53687
	ldr	r3, [sp, #32]
.LBB183_61:
	umull	r2, r5, r4, r11
	lsrs	r2, r5, #2
	mul	r2, r2, r11
	cmp.w	r2, #858993459
	bhi.w	.LBB183_101
	umull	r2, r5, r4, r1
	lsrs	r2, r5, #3
	mul	r2, r2, r11
	cmp.w	r2, #858993459
	bhi.w	.LBB183_102
	umull	r2, r5, r4, lr
	lsrs	r2, r5, #3
	mul	r2, r2, r11
	cmp.w	r2, #858993459
	bhi.w	.LBB183_103
	umull	r2, r5, r4, r9
	adds	r0, #4
	lsrs	r4, r5, #9
	mul	r2, r4, r11
	cmn.w	r2, #-858993460
	blo	.LBB183_61
	b	.LBB183_43
.LBB183_65:
	adds	r6, #1
	b	.LBB183_68
.LBB183_66:
	adds	r6, #2
	b	.LBB183_68
.LBB183_67:
	adds	r6, #3
.LBB183_68:
	movs	r0, #0
	mov	r3, lr
	cmp	r6, lr
	mov.w	r9, #0
	it	hs
	movhs	r0, #1
	mov	r11, r5
.LBB183_69:
	ldr	r6, [sp, #28]
	cmp.w	r9, #0
	it	eq
	cmpeq	r0, #0
	bne.w	.LBB183_26
.LBB183_70:
	umull	r0, r1, r6, r11
	movs	r5, #0
	umull	r2, r0, r12, r11
	str	r3, [sp, #32]
	lsrs	r4, r1, #3
	cmp.w	r4, r0, lsr #3
	bls	.LBB183_77
	movw	r2, #34079
	movw	r9, #19923
	movw	r10, #5977
	lsr.w	r12, r0, #3
	mov.w	lr, #0
	movt	r2, #20971
	movt	r9, #4194
	movt	r10, #53687
.LBB183_72:
	umull	r0, r3, r4, r11
	umull	r5, r0, r12, r11
	umull	r5, r6, r8, r11
	lsrs	r3, r3, #3
	cmp.w	r3, r0, lsr #3
	lsr.w	r3, r6, #3
	bls	.LBB183_78
	umull	r5, r6, r4, r2
	umull	r5, r11, r12, r2
	umull	r5, r1, r8, r2
	lsrs	r5, r6, #5
	cmp.w	r5, r11, lsr #5
	lsr.w	r5, r1, #5
	bls	.LBB183_79
	umull	r0, r1, r4, r9
	umull	r3, r0, r12, r9
	umull	r3, r6, r8, r9
	lsrs	r1, r1, #6
	cmp.w	r1, r0, lsr #6
	lsr.w	r3, r6, #6
	bls	.LBB183_80
	umull	r1, r4, r4, r10
	movw	r11, #52429
	umull	r1, r6, r12, r10
	add.w	lr, lr, #4
	umull	r1, r5, r8, r10
	lsrs	r4, r4, #13
	lsr.w	r12, r6, #13
	movt	r11, #52428
	lsr.w	r8, r5, #13
	cmp.w	r4, r6, lsr #13
	bhi	.LBB183_72
	lsr.w	r12, r0, #6
	mov	r0, r3
	mov	r3, r8
	ldr	r4, [sp, #24]
	b	.LBB183_82
.LBB183_77:
	mov.w	lr, #0
	ldr	r4, [sp, #24]
	b	.LBB183_83
.LBB183_78:
	add.w	lr, lr, #1
	mov	r0, r8
	ldr	r4, [sp, #24]
	b	.LBB183_82
.LBB183_79:
	lsr.w	r12, r0, #3
	add.w	lr, lr, #2
	mov	r0, r3
	mov	r3, r5
	b	.LBB183_81
.LBB183_80:
	lsr.w	r12, r11, #5
	add.w	lr, lr, #3
	mov	r0, r5
.LBB183_81:
	movw	r11, #52429
	ldr	r4, [sp, #24]
	movt	r11, #52428
.LBB183_82:
	umull	r1, r2, r0, r11
	movs	r5, #0
	mov	r8, r3
	lsrs	r1, r2, #3
	add.w	r1, r1, r1, lsl #2
	sub.w	r10, r0, r1, lsl #1
.LBB183_83:
	sub.w	r0, r8, r12
	clz	r0, r0
	uxtb.w	r1, r10
	lsrs	r0, r0, #5
	cmp	r1, #4
	mov	r10, r4
	it	hi
	movhi	r5, #1
	orrs	r0, r5
	add.w	r9, r8, r0
.LBB183_84:
	movw	r11, #57599
	ldr	r0, [sp, #32]
	movt	r11, #1525
	add.w	r1, lr, r0
	cmp	r9, r11
	bls	.LBB183_86
	movs	r4, #9
	b	.LBB183_105
.LBB183_86:
	movw	r0, #38527
	movt	r0, #152
	cmp	r9, r0
	bls	.LBB183_88
	movs	r4, #8
	b	.LBB183_105
.LBB183_88:
	movw	r0, #16959
	movt	r0, #15
	cmp	r9, r0
	bls	.LBB183_90
	movs	r4, #7
	b	.LBB183_105
.LBB183_90:
	movw	r0, #34463
	movt	r0, #1
	cmp	r9, r0
	bls	.LBB183_92
	movs	r4, #6
	b	.LBB183_105
.LBB183_92:
	movw	r0, #9999
	cmp	r9, r0
	bls	.LBB183_94
	movs	r4, #5
	b	.LBB183_105
.LBB183_94:
	lsr.w	r0, r9, #3
	cmp	r0, #124
	bls	.LBB183_96
	movs	r4, #4
	b	.LBB183_105
.LBB183_96:
	cmp.w	r9, #99
	bls	.LBB183_104
	movs	r4, #3
	b	.LBB183_105
.LBB183_98:
	adds	r6, #1
	b	.LBB183_15
.LBB183_99:
	adds	r6, #2
	b	.LBB183_15
.LBB183_100:
	adds	r6, #3
	b	.LBB183_15
.LBB183_101:
	adds	r0, #1
	b	.LBB183_43
.LBB183_102:
	adds	r0, #2
	b	.LBB183_43
.LBB183_103:
	adds	r0, #3
	b	.LBB183_43
.LBB183_104:
	movs	r4, #1
	cmp.w	r9, #9
	it	hi
	movhi	r4, #2
.LBB183_105:
	cmp	r1, #0
	add.w	r5, r4, r1
	bmi	.LBB183_114
	cmp	r5, #14
	bge	.LBB183_114
	add.w	r0, r4, r10
	movw	r2, #10000
	add	r3, sp, #36
	cmp	r9, r2
	add.w	r2, r3, r0
	str	r2, [sp, #16]
	strd	r4, r5, [sp, #28]
	blo.w	.LBB183_125
	movw	r0, #55536
	movw	lr, #5977
	movw	r4, #34079
	movw	r10, :lower16:ryu::digit_table::DIGIT_TABLE::h67064246f2e4c187
	movt	r0, #65535
	movt	lr, #53687
	movt	r4, #20971
	mov.w	r12, #100
	movt	r10, :upper16:ryu::digit_table::DIGIT_TABLE::h67064246f2e4c187
.LBB183_109:
	umull	r3, r6, r9, lr
	mov	r5, r11
	lsrs	r3, r6, #13
	mla	r6, r3, r0, r9
	umull	r11, r8, r6, r4
	mov	r11, r5
	lsr.w	r5, r8, #5
	cmp	r9, r11
	mls	r6, r5, r12, r6
	mov	r9, r3
	ldrh.w	r5, [r10, r5, lsl #1]
	strh	r5, [r2, #-4]!
	ldrh.w	r6, [r10, r6, lsl #1]
	strh	r6, [r2, #2]
	bhi	.LBB183_109
	cmp	r3, #99
	bls	.LBB183_112
.LBB183_111:
	uxth	r0, r3
	movw	r6, #5243
	lsrs	r0, r0, #2
	muls	r0, r6, r0
	movs	r6, #100
	lsrs	r0, r0, #17
	mls	r3, r0, r6, r3
	movw	r6, :lower16:ryu::digit_table::DIGIT_TABLE::h67064246f2e4c187
	movt	r6, :upper16:ryu::digit_table::DIGIT_TABLE::h67064246f2e4c187
	uxth	r3, r3
	ldrh.w	r3, [r6, r3, lsl #1]
	strh	r3, [r2, #-2]!
	mov	r3, r0
.LBB183_112:
	ldrd	r9, r4, [sp, #20]
	ldrd	r6, r5, [sp, #28]
	add.w	r8, sp, #36
	cmp	r3, #9
	bls.w	.LBB183_126
	movw	r0, :lower16:ryu::digit_table::DIGIT_TABLE::h67064246f2e4c187
	movt	r0, :upper16:ryu::digit_table::DIGIT_TABLE::h67064246f2e4c187
	ldrh.w	r0, [r0, r3, lsl #1]
	strh	r0, [r2, #-2]
	cmp	r6, r5
	blt.w	.LBB183_127
	b	.LBB183_128
.LBB183_114:
	sub.w	r12, r5, #1
	cmp.w	r12, #13
	bhs	.LBB183_119
	movw	r0, #10000
	add.w	r1, r10, #1
	cmp	r9, r0
	add.w	r6, r1, r4
	add.w	r8, sp, #36
	blo.w	.LBB183_129
	add.w	r0, r4, r10
	movw	lr, #55536
	add	r0, r8
	movw	r8, #5977
	movw	r10, #34079
	movw	r2, :lower16:ryu::digit_table::DIGIT_TABLE::h67064246f2e4c187
	str	r1, [sp, #16]
	movt	lr, #65535
	subs	r1, r0, #3
	movt	r8, #53687
	movt	r10, #20971
	mov.w	r12, #100
	movt	r2, :upper16:ryu::digit_table::DIGIT_TABLE::h67064246f2e4c187
	str	r5, [sp, #32]
.LBB183_117:
	umull	r3, r5, r9, r8
	mov	r4, r9
	cmp	r4, r11
	lsr.w	r9, r5, #13
	mla	r3, r9, lr, r4
	umull	r5, r0, r3, r10
	lsr.w	r0, r0, #5
	mls	r3, r0, r12, r3
	ldrh.w	r0, [r2, r0, lsl #1]
	ldrh.w	r3, [r2, r3, lsl #1]
	strh	r3, [r1, #2]
	strh	r0, [r1], #-4
	bhi	.LBB183_117
	adds	r4, r1, #4
	ldr.w	r10, [sp, #24]
	ldr	r5, [sp, #32]
	add.w	r8, sp, #36
	ldr	r1, [sp, #16]
	b	.LBB183_130
.LBB183_119:
	adds	r0, r5, #5
	cmp	r0, #6
	bhs.w	.LBB183_134
	add.w	r8, sp, #36
	cmp.w	r5, #-1
	add.w	r0, r8, r10
	rsb.w	r6, r5, #2
	movw	r1, #11824
	strh	r1, [r0]
	bgt	.LBB183_122
	mov	r1, r6
	cmp	r6, #3
	it	le
	movle	r1, #3
	adds	r0, #2
	subs	r1, #2
	movs	r2, #48
	bl	__aeabi_memset
.LBB183_122:
	add.w	r0, r4, r10
	movw	r1, #10000
	add	r6, r0
	cmp	r9, r1
	add.w	r0, r8, r6
	blo.w	.LBB183_139
	movw	r12, #55536
	movw	lr, #5977
	movw	r8, #34079
	movw	r3, :lower16:ryu::digit_table::DIGIT_TABLE::h67064246f2e4c187
	movt	r12, #65535
	movt	lr, #53687
	movt	r8, #20971
	mov.w	r10, #100
	movt	r3, :upper16:ryu::digit_table::DIGIT_TABLE::h67064246f2e4c187
.LBB183_124:
	umull	r1, r4, r9, lr
	cmp	r9, r11
	lsr.w	r1, r4, #13
	mla	r4, r1, r12, r9
	mov	r9, r1
	umull	r5, r2, r4, r8
	lsr.w	r2, r2, #5
	mls	r4, r2, r10, r4
	ldrh.w	r2, [r3, r2, lsl #1]
	strh	r2, [r0, #-4]!
	ldrh.w	r4, [r3, r4, lsl #1]
	strh	r4, [r0, #2]
	bhi	.LBB183_124
	b	.LBB183_140
.LBB183_125:
	mov	r3, r9
	cmp	r3, #99
	bhi.w	.LBB183_111
	b	.LBB183_112
.LBB183_126:
	add.w	r0, r3, #48
	strb	r0, [r2, #-1]
	cmp	r6, r5
	bge	.LBB183_128
.LBB183_127:
	movs	r2, #48
	ldr	r0, [sp, #16]
	bl	__aeabi_memset
.LBB183_128:
	adds	r0, r5, r4
	movw	r1, #12334
	adds	r6, r0, #2
	add	r2, sp, #36
	strh.w	r1, [r8, r0]
	ldrd	r1, r3, [r9, #4]
	add.w	r12, r3, r6
	cmp	r12, r1
	bhi.w	.LBB183_154
	b	.LBB183_144
.LBB183_129:
	add.w	r4, r8, r6
.LBB183_130:
	cmp.w	r9, #99
	bls	.LBB183_132
	uxth.w	r0, r9
	movw	r2, #5243
	lsrs	r0, r0, #2
	movw	r3, :lower16:ryu::digit_table::DIGIT_TABLE::h67064246f2e4c187
	muls	r0, r2, r0
	movs	r2, #100
	movt	r3, :upper16:ryu::digit_table::DIGIT_TABLE::h67064246f2e4c187
	lsrs	r0, r0, #17
	mls	r2, r0, r2, r9
	mov	r9, r0
	uxth	r2, r2
	ldrh.w	r2, [r3, r2, lsl #1]
	strh	r2, [r4, #-2]!
.LBB183_132:
	cmp.w	r9, #9
	bls	.LBB183_137
	movw	r0, :lower16:ryu::digit_table::DIGIT_TABLE::h67064246f2e4c187
	movt	r0, :upper16:ryu::digit_table::DIGIT_TABLE::h67064246f2e4c187
	ldrh.w	r0, [r0, r9, lsl #1]
	strh	r0, [r4, #-2]
	b	.LBB183_138
.LBB183_134:
	cmp	r4, #1
	bne.w	.LBB183_155
	add	r0, sp, #36
	add.w	r1, r9, #48
	add.w	r2, r10, r0
	movs	r3, #101
	cmp.w	r12, #-1
	strb	r1, [r2]
	add.w	r1, r10, #2
	strb	r3, [r2, #1]
	add.w	r2, r0, r1
	ble.w	.LBB183_168
	mov	r0, r12
	ldr.w	r9, [sp, #20]
	b	.LBB183_169
.LBB183_137:
	add.w	r0, r9, #48
	strb	r0, [r4, #-1]
.LBB183_138:
	add	r1, r8
	add.w	r0, r8, r10
	mov	r2, r5
	bl	__aeabi_memmove
	add.w	r0, r5, r10
	movs	r1, #46
	ldr.w	r9, [sp, #20]
	add	r2, sp, #36
	strb.w	r1, [r8, r0]
	ldrd	r1, r3, [r9, #4]
	add.w	r12, r3, r6
	cmp	r12, r1
	bhi	.LBB183_154
	b	.LBB183_144
.LBB183_139:
	mov	r1, r9
.LBB183_140:
	cmp	r1, #99
	bls	.LBB183_142
	uxth	r2, r1
	movw	r3, #5243
	lsrs	r2, r2, #2
	muls	r2, r3, r2
	movs	r3, #100
	lsrs	r2, r2, #17
	mls	r1, r2, r3, r1
	movw	r3, :lower16:ryu::digit_table::DIGIT_TABLE::h67064246f2e4c187
	movt	r3, :upper16:ryu::digit_table::DIGIT_TABLE::h67064246f2e4c187
	uxth	r1, r1
	ldrh.w	r1, [r3, r1, lsl #1]
	strh	r1, [r0, #-2]!
	mov	r1, r2
.LBB183_142:
	ldr.w	r9, [sp, #20]
	cmp	r1, #9
	bls.w	.LBB183_159
	movw	r2, :lower16:ryu::digit_table::DIGIT_TABLE::h67064246f2e4c187
	movt	r2, :upper16:ryu::digit_table::DIGIT_TABLE::h67064246f2e4c187
	ldrh.w	r1, [r2, r1, lsl #1]
	add	r2, sp, #36
	strh	r1, [r0, #-2]
	ldrd	r1, r3, [r9, #4]
	add.w	r12, r3, r6
	cmp	r12, r1
	bhi	.LBB183_154
.LBB183_144:
	cmp	r6, #0
	beq	.LBB183_154
	ldr.w	r4, [r9]
	mov	r0, r3
	add	r4, r3
	add.w	lr, r2, r6
	cmp	r1, r3
	add.w	r5, r4, #1
	it	hi
	movhi	r0, r1
	subs	r4, r0, r3
.LBB183_146:
	cmp	r4, #0
	beq.w	.LBB183_176
	ldrb	r6, [r2], #1
	cmp	r2, lr
	strb	r6, [r5, #-1]
	add.w	r6, r3, #1
	str.w	r6, [r9, #8]
	beq	.LBB183_154
	cmp	r6, r0
	beq.w	.LBB183_176
	ldrb	r6, [r2]
	adds	r2, #1
	strb	r6, [r5]
	cmp	r2, lr
	add.w	r6, r3, #2
	str.w	r6, [r9, #8]
	beq	.LBB183_154
	cmp	r6, r0
	beq.w	.LBB183_176
	ldrb	r6, [r2]
	adds	r2, #1
	strb	r6, [r5, #1]
	cmp	r2, lr
	add.w	r6, r3, #3
	str.w	r6, [r9, #8]
	beq	.LBB183_154
	cmp	r6, r0
	beq.w	.LBB183_176
	ldrb	r6, [r2]
	adds	r2, #1
	strb	r6, [r5, #2]
	adds	r3, #4
	cmp	r2, lr
	add.w	r5, r5, #4
	sub.w	r4, r4, #4
	str.w	r3, [r9, #8]
	bne	.LBB183_146
.LBB183_154:
	movs	r0, #0
	cmp	r12, r1
	it	hi
	movhi	r0, #1
	add	sp, #60
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB183_155:
	add.w	r3, r4, r10
	add	r2, sp, #36
	movw	r1, #10000
	adds	r0, r3, r2
	movw	r8, :lower16:ryu::digit_table::DIGIT_TABLE::h67064246f2e4c187
	cmp	r9, r1
	add.w	r4, r0, #1
	movt	r8, :upper16:ryu::digit_table::DIGIT_TABLE::h67064246f2e4c187
	blo	.LBB183_160
	strd	r3, r5, [sp, #28]
	movw	r10, #55536
	movw	r5, #5977
	movw	r3, #34079
	movt	r10, #65535
	subs	r6, r0, #3
	movt	r5, #53687
	movt	r3, #20971
	movs	r0, #100
	str	r4, [sp, #16]
.LBB183_157:
	umull	r1, r2, r9, r5
	mov	r4, r9
	cmp	r4, r11
	lsr.w	r9, r2, #13
	mla	r1, r9, r10, r4
	umull	r2, lr, r1, r3
	lsr.w	r2, lr, #5
	mls	r1, r2, r0, r1
	ldrh.w	r1, [r8, r1, lsl #1]
	strh	r1, [r6, #2]
	ldrh.w	r1, [r8, r2, lsl #1]
	strh	r1, [r6], #-4
	bhi	.LBB183_157
	adds	r6, #4
	ldr.w	r10, [sp, #24]
	ldr	r5, [sp, #32]
	add	r2, sp, #36
	ldr	r3, [sp, #28]
	ldr	r4, [sp, #16]
	b	.LBB183_161
.LBB183_159:
	adds	r1, #48
	strb	r1, [r0, #-1]
	b.w	.LBB183_5
.LBB183_160:
	mov	r6, r4
.LBB183_161:
	cmp.w	r9, #99
	bls	.LBB183_163
	uxth.w	r0, r9
	movw	r1, #5243
	lsrs	r0, r0, #2
	muls	r0, r1, r0
	movs	r1, #100
	lsrs	r0, r0, #17
	mls	r1, r0, r1, r9
	mov	r9, r0
	uxth	r1, r1
	ldrh.w	r1, [r8, r1, lsl #1]
	strh	r1, [r6, #-2]!
.LBB183_163:
	cmp.w	r9, #9
	bls	.LBB183_165
	ldrh.w	r0, [r8, r9, lsl #1]
	strh	r0, [r6, #-2]
	b	.LBB183_166
.LBB183_165:
	add.w	r0, r9, #48
	strb	r0, [r6, #-1]
.LBB183_166:
	add.w	r0, r2, r10
	adds	r3, #2
	cmp.w	r12, #0
	add	r2, r3
	ldrb	r1, [r0, #1]
	ldr.w	r9, [sp, #20]
	strb	r1, [r0]
	mov.w	r1, #46
	strb	r1, [r0, #1]
	mov.w	r0, #101
	strb	r0, [r4]
	bmi	.LBB183_171
	mov	r0, r12
	b	.LBB183_172
.LBB183_168:
	rsb.w	r0, r5, #1
	ldr.w	r9, [sp, #20]
	cmp	r0, #9
	mov.w	r3, #45
	strb	r3, [r2], #1
	ble	.LBB183_177
.LBB183_169:
	movw	r3, :lower16:ryu::digit_table::DIGIT_TABLE::h67064246f2e4c187
	movt	r3, :upper16:ryu::digit_table::DIGIT_TABLE::h67064246f2e4c187
	ldrh.w	r0, [r3, r0, lsl #1]
	lsr.w	r3, r12, #31
	strh	r0, [r2]
	adds	r0, r3, #2
.LBB183_170:
	adds	r6, r0, r1
	b.w	.LBB183_5
.LBB183_171:
	movs	r0, #45
	strb	r0, [r2], #1
	rsb.w	r0, r5, #1
.LBB183_172:
	cmp	r0, #9
	ble	.LBB183_174
	ldrh.w	r0, [r8, r0, lsl #1]
	lsr.w	r1, r12, #31
	strh	r0, [r2]
	adds	r0, r1, #2
	b	.LBB183_175
.LBB183_174:
	adds	r0, #48
	movs	r1, #1
	strb	r0, [r2]
	add.w	r0, r1, r12, lsr #31
.LBB183_175:
	adds	r6, r0, r3
	b.w	.LBB183_5
.LBB183_176:
	movw	r2, :lower16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.25
	movt	r2, :upper16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.25
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB183_177:
	adds	r0, #48
	strb	r0, [r2]
	movs	r0, #2
	b	.LBB183_170
.Lfunc_end183:
	.size	<&mut serde_json_core::ser::Serializer as serde::ser::Serializer>::serialize_f32::h9646727876011b6e, .Lfunc_end183-<&mut serde_json_core::ser::Serializer as serde::ser::Serializer>::serialize_f32::h9646727876011b6e
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN87_$LT$$RF$mut$u20$serde_json_core..ser..Serializer$u20$as$u20$serde..ser..Serializer$GT$13serialize_str17h559be0d6eaa1ef8fE","ax",%progbits
	.p2align	2
	.type	<&mut serde_json_core::ser::Serializer as serde::ser::Serializer>::serialize_str::h559be0d6eaa1ef8f,%function
	.code	16
	.thumb_func
<&mut serde_json_core::ser::Serializer as serde::ser::Serializer>::serialize_str::h559be0d6eaa1ef8f:
.Lfunc_begin184:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#4
	sub	sp, #4
	ldrd	r6, r3, [r0, #4]
	cmp	r3, r6
	bhs.w	.LBB184_63
	ldr	r6, [r0]
	movs	r5, #34
	cmp	r2, #0
	strb	r5, [r6, r3]
	add.w	r3, r3, #1
	str	r3, [r0, #8]
	mov.w	r6, #0
	str	r6, [sp]
	beq.w	.LBB184_64
	add.w	r10, r1, r2
	mov.w	lr, #92
	mov	r8, sp
.LBB184_3:
	mov	r6, r1
	ldrsb	r5, [r1], #1
	cmp.w	r5, #-1
	uxtb.w	r11, r5
	bgt	.LBB184_8
	ldrb	r1, [r6, #1]
	cmp.w	r11, #223
	and	r5, r11, #31
	and	r4, r1, #63
	bls	.LBB184_7
	ldrb	r1, [r6, #2]
	cmp.w	r11, #240
	and	r1, r1, #63
	orr.w	r4, r1, r4, lsl #6
	blo.w	.LBB184_29
	ldrb	r1, [r6, #3]
	and	r5, r5, #7
	and	r1, r1, #63
	orr.w	r4, r1, r4, lsl #6
	adds	r1, r6, #4
	orr.w	r11, r4, r5, lsl #18
	sub.w	r6, r11, #8
	cmp	r6, #26
	bls	.LBB184_9
	b	.LBB184_30
.LBB184_7:
	adds	r1, r6, #2
	orr.w	r11, r4, r5, lsl #6
.LBB184_8:
	sub.w	r6, r11, #8
	cmp	r6, #26
	bhi.w	.LBB184_30
.LBB184_9:
.LCPI184_0:
	tbb	[pc, r6]
.LJTI184_0:
	.byte	(.LBB184_11-(.LCPI184_0+4))/2
	.byte	(.LBB184_14-(.LCPI184_0+4))/2
	.byte	(.LBB184_17-(.LCPI184_0+4))/2
	.byte	(.LBB184_32-(.LCPI184_0+4))/2
	.byte	(.LBB184_20-(.LCPI184_0+4))/2
	.byte	(.LBB184_23-(.LCPI184_0+4))/2
	.byte	(.LBB184_32-(.LCPI184_0+4))/2
	.byte	(.LBB184_32-(.LCPI184_0+4))/2
	.byte	(.LBB184_32-(.LCPI184_0+4))/2
	.byte	(.LBB184_32-(.LCPI184_0+4))/2
	.byte	(.LBB184_32-(.LCPI184_0+4))/2
	.byte	(.LBB184_32-(.LCPI184_0+4))/2
	.byte	(.LBB184_32-(.LCPI184_0+4))/2
	.byte	(.LBB184_32-(.LCPI184_0+4))/2
	.byte	(.LBB184_32-(.LCPI184_0+4))/2
	.byte	(.LBB184_32-(.LCPI184_0+4))/2
	.byte	(.LBB184_32-(.LCPI184_0+4))/2
	.byte	(.LBB184_32-(.LCPI184_0+4))/2
	.byte	(.LBB184_32-(.LCPI184_0+4))/2
	.byte	(.LBB184_32-(.LCPI184_0+4))/2
	.byte	(.LBB184_32-(.LCPI184_0+4))/2
	.byte	(.LBB184_32-(.LCPI184_0+4))/2
	.byte	(.LBB184_32-(.LCPI184_0+4))/2
	.byte	(.LBB184_32-(.LCPI184_0+4))/2
	.byte	(.LBB184_32-(.LCPI184_0+4))/2
	.byte	(.LBB184_32-(.LCPI184_0+4))/2
	.byte	(.LBB184_26-(.LCPI184_0+4))/2
	.p2align	1
.LBB184_11:
	ldr	r6, [r0, #4]
	cmp	r3, r6
	bhs.w	.LBB184_63
	ldr	r2, [r0]
	adds	r4, r3, #1
	str	r4, [r0, #8]
	strb.w	lr, [r2, r3]
	ldr	r2, [r0, #4]
	cmp	r4, r2
	bhs.w	.LBB184_63
	movs	r5, #2
	movs	r6, #98
	b	.LBB184_43
.LBB184_14:
	ldr	r6, [r0, #4]
	cmp	r3, r6
	bhs.w	.LBB184_63
	ldr	r2, [r0]
	adds	r4, r3, #1
	str	r4, [r0, #8]
	strb.w	lr, [r2, r3]
	ldr	r2, [r0, #4]
	cmp	r4, r2
	bhs.w	.LBB184_63
	movs	r5, #2
	movs	r6, #116
	b	.LBB184_43
.LBB184_17:
	ldr	r6, [r0, #4]
	cmp	r3, r6
	bhs.w	.LBB184_63
	ldr	r2, [r0]
	adds	r4, r3, #1
	str	r4, [r0, #8]
	strb.w	lr, [r2, r3]
	ldr	r2, [r0, #4]
	cmp	r4, r2
	bhs.w	.LBB184_63
	movs	r5, #2
	movs	r6, #110
	b	.LBB184_43
.LBB184_20:
	ldr	r6, [r0, #4]
	cmp	r3, r6
	bhs.w	.LBB184_63
	ldr	r2, [r0]
	adds	r4, r3, #1
	str	r4, [r0, #8]
	strb.w	lr, [r2, r3]
	ldr	r2, [r0, #4]
	cmp	r4, r2
	bhs.w	.LBB184_63
	movs	r5, #2
	movs	r6, #102
	b	.LBB184_43
.LBB184_23:
	ldr	r6, [r0, #4]
	cmp	r3, r6
	bhs.w	.LBB184_63
	ldr	r2, [r0]
	adds	r4, r3, #1
	str	r4, [r0, #8]
	strb.w	lr, [r2, r3]
	ldr	r2, [r0, #4]
	cmp	r4, r2
	bhs.w	.LBB184_63
	movs	r5, #2
	movs	r6, #114
	b	.LBB184_43
.LBB184_26:
	ldr	r6, [r0, #4]
	cmp	r3, r6
	bhs.w	.LBB184_63
	ldr	r2, [r0]
	adds	r4, r3, #1
	str	r4, [r0, #8]
	strb.w	lr, [r2, r3]
	ldr	r2, [r0, #4]
	cmp	r4, r2
	bhs.w	.LBB184_63
	movs	r5, #2
	movs	r6, #34
	b	.LBB184_43
.LBB184_29:
	adds	r1, r6, #3
	orr.w	r11, r4, r5, lsl #12
	sub.w	r6, r11, #8
	cmp	r6, #26
	bls.w	.LBB184_9
.LBB184_30:
	cmp.w	r11, #92
	beq	.LBB184_40
	cmp.w	r11, #1114112
	beq.w	.LBB184_64
.LBB184_32:
	cmp.w	r11, #32
	bhs	.LBB184_46
	ldr	r2, [r0, #4]
	cmp	r3, r2
	bhs.w	.LBB184_63
	ldr	r2, [r0]
	adds	r6, r3, #1
	str	r6, [r0, #8]
	strb.w	lr, [r2, r3]
	ldr	r2, [r0, #4]
	cmp	r6, r2
	bhs.w	.LBB184_63
	ldr	r2, [r0]
	movs	r5, #117
	strb	r5, [r2, r6]
	adds	r6, r3, #2
	ldr	r2, [r0, #4]
	str	r6, [r0, #8]
	cmp	r6, r2
	bhs.w	.LBB184_63
	ldr	r2, [r0]
	movs	r5, #48
	strb	r5, [r2, r6]
	adds	r6, r3, #3
	ldr	r2, [r0, #4]
	str	r6, [r0, #8]
	cmp	r6, r2
	bhs.w	.LBB184_63
	ldr	r2, [r0]
	movs	r5, #48
	adds	r4, r3, #4
	strb	r5, [r2, r6]
	and	r6, r11, #15
	cmp	r6, #10
	mov.w	r5, #55
	ldr	r2, [r0, #4]
	it	lo
	movlo	r5, #48
	cmp	r4, r2
	str	r4, [r0, #8]
	bhs.w	.LBB184_63
	uxtb.w	r12, r11
	ldr.w	r9, [r0]
	lsr.w	r2, r12, #4
	adds	r2, #48
	strb.w	r2, [r9, r4]
	adds	r4, r3, #5
	ldr	r2, [r0, #4]
	cmp	r4, r2
	str	r4, [r0, #8]
	bhs.w	.LBB184_63
	add	r6, r5
	movs	r5, #6
	b	.LBB184_43
.LBB184_40:
	ldr	r6, [r0, #4]
	cmp	r3, r6
	bhs.w	.LBB184_63
	ldr	r2, [r0]
	movs	r6, #92
	adds	r4, r3, #1
	str	r4, [r0, #8]
	strb	r6, [r2, r3]
	ldr	r2, [r0, #4]
	cmp	r4, r2
	bhs.w	.LBB184_63
	movs	r5, #2
.LBB184_43:
	ldr	r2, [r0]
	strb	r6, [r2, r4]
	adds	r4, r3, r5
.LBB184_44:
	str	r4, [r0, #8]
.LBB184_45:
	cmp	r1, r10
	mov	r3, r4
	bne.w	.LBB184_3
	b	.LBB184_65
.LBB184_46:
	cmp.w	r11, #128
	bhs	.LBB184_48
	strb.w	r11, [sp]
	movs	r4, #1
	b	.LBB184_54
.LBB184_48:
	cmp.w	r11, #2048
	bhs	.LBB184_50
	mvn	r2, #63
	movs	r4, #2
	orr.w	r6, r2, r11, lsr #6
	strb.w	r6, [sp]
	bfi	r11, r4, #6, #26
	strb.w	r11, [sp, #1]
	b	.LBB184_53
.LBB184_50:
	cmp.w	r11, #65536
	bhs	.LBB184_52
	mvn	r2, #31
	lsr.w	r5, r11, #6
	orr.w	r6, r2, r11, lsr #12
	movs	r2, #2
	strb.w	r6, [sp]
	movs	r4, #3
	bfi	r5, r2, #6, #26
	strb.w	r5, [sp, #1]
	bfi	r11, r2, #6, #26
	strb.w	r11, [sp, #2]
	b	.LBB184_53
.LBB184_52:
	mvn	r2, #15
	lsr.w	r5, r11, #12
	orr.w	r6, r2, r11, lsr #18
	movs	r2, #2
	bfi	r5, r2, #6, #26
	strb.w	r5, [sp, #1]
	lsr.w	r5, r11, #6
	movs	r4, #4
	strb.w	r6, [sp]
	bfi	r5, r2, #6, #26
	strb.w	r5, [sp, #2]
	bfi	r11, r2, #6, #26
	strb.w	r11, [sp, #3]
.LBB184_53:
	mov	r11, r6
.LBB184_54:
	adds	r5, r3, r4
	ldr.w	r12, [r0, #4]
	cmp	r5, r12
	bhi	.LBB184_63
	cmp	r12, r3
	mov	r9, r3
	it	hi
	movhi	r9, r12
	cmp	r3, r12
	bhs	.LBB184_68
	ldr	r5, [r0]
	add.w	r6, r8, r4
	add.w	r4, r8, #1
	cmp	r4, r6
	add.w	r4, r3, #1
	strb.w	r11, [r5, r3]
	str	r4, [r0, #8]
	beq	.LBB184_45
	cmp	r4, r9
	beq	.LBB184_68
	ldrb.w	r2, [sp, #1]
	add.w	r11, r8, #2
	strb	r2, [r5, r4]
	cmp	r11, r6
	add.w	r4, r3, #2
	str	r4, [r0, #8]
	beq	.LBB184_45
	cmp	r4, r9
	beq	.LBB184_68
	ldrb.w	r2, [sp, #2]
	add.w	r11, r8, #3
	strb	r2, [r5, r4]
	cmp	r11, r6
	add.w	r4, r3, #3
	str	r4, [r0, #8]
	beq.w	.LBB184_45
	cmp	r4, r9
	beq	.LBB184_68
	ldrb.w	r2, [sp, #3]
	strb	r2, [r5, r4]
	adds	r4, r3, #4
	b	.LBB184_44
.LBB184_63:
	movs	r0, #1
	add	sp, #4
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB184_64:
	mov	r4, r3
.LBB184_65:
	ldr	r1, [r0, #4]
	cmp	r4, r1
	bhs	.LBB184_67
	ldr	r2, [r0]
	movs	r3, #34
	strb	r3, [r2, r4]
	adds	r2, r4, #1
	str	r2, [r0, #8]
.LBB184_67:
	movs	r0, #0
	cmp	r4, r1
	it	hs
	movhs	r0, #1
	add	sp, #4
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB184_68:
	movw	r2, :lower16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.25
	mov	r0, r9
	movt	r2, :upper16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.25
	mov	r1, r12
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.Lfunc_end184:
	.size	<&mut serde_json_core::ser::Serializer as serde::ser::Serializer>::serialize_str::h559be0d6eaa1ef8f, .Lfunc_end184-<&mut serde_json_core::ser::Serializer as serde::ser::Serializer>::serialize_str::h559be0d6eaa1ef8f
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN64_$LT$serde_json_core..ser..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17hed4f224dbf78539cE","ax",%progbits
	.p2align	1
	.type	<serde_json_core::ser::Error as core::fmt::Debug>::fmt::hed4f224dbf78539c,%function
	.code	16
	.thumb_func
<serde_json_core::ser::Error as core::fmt::Debug>::fmt::hed4f224dbf78539c:
.Lfunc_begin185:
	.fnstart
	.cfi_startproc
	movw	r3, :lower16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.50
	movs	r2, #10
	movt	r3, :upper16:.Lanon.c5389c40fbf9b668b5009946a4adcadf.50
	mov	r0, r1
	mov	r1, r3
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.Lfunc_end185:
	.size	<serde_json_core::ser::Error as core::fmt::Debug>::fmt::hed4f224dbf78539c, .Lfunc_end185-<serde_json_core::ser::Error as core::fmt::Debug>::fmt::hed4f224dbf78539c
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp5iface9interface8IpPacket7ip_repr17h34c58f58187ffea8E,"ax",%progbits
	.p2align	2
	.type	smoltcp::iface::interface::IpPacket::ip_repr::h34c58f58187ffea8,%function
	.code	16
	.thumb_func
smoltcp::iface::interface::IpPacket::ip_repr::h34c58f58187ffea8:
.Lfunc_begin186:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8}
	str	r8, [sp, #-4]!
	.cfi_offset r8, -24
	mov	r8, r0
	ldr	r0, [r1]
	mov	r5, r1
.LCPI186_0:
	tbb	[pc, r0]
.LJTI186_0:
	.byte	(.LBB186_5-(.LCPI186_0+4))/2
	.byte	(.LBB186_7-(.LCPI186_0+4))/2
	.byte	(.LBB186_2-(.LCPI186_0+4))/2
	.byte	(.LBB186_2-(.LCPI186_0+4))/2
	.byte	(.LBB186_2-(.LCPI186_0+4))/2
	.byte	(.LBB186_5-(.LCPI186_0+4))/2
	.p2align	1
.LBB186_2:
	mov	r0, r5
	ldrb	r1, [r0, #4]!
	cbz	r1, .LBB186_8
	cmp	r1, #1
	bne	.LBB186_7
	ldr	r0, [r5, #8]
	ldr	r1, [r5, #12]
	str.w	r0, [r8, #4]
	ldr	r0, [r5, #16]
	str.w	r1, [r8, #8]
	ldr	r1, [r5, #20]
	b	.LBB186_6
.LBB186_5:
	ldr	r0, [r5, #4]
	ldr	r1, [r5, #8]
	str.w	r0, [r8, #4]
	ldr	r0, [r5, #12]
	str.w	r1, [r8, #8]
	ldr	r1, [r5, #16]
.LBB186_6:
	str.w	r0, [r8, #12]
	movs	r0, #1
	str.w	r1, [r8, #16]
	strb.w	r0, [r8]
	ldr	r8, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.LBB186_7:
	add.w	r0, r5, #8
	add.w	r1, r8, #4
	ldm	r0!, {r2, r3, r4, r5, r6}
	stm	r1!, {r2, r3, r4, r5, r6}
	ldm.w	r0, {r2, r3, r4, r5, r6}
	stm	r1!, {r2, r3, r4, r5, r6}
	movs	r0, #2
	strb.w	r0, [r8]
	ldr	r8, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.LBB186_8:
	add.w	r6, r0, #18
	adds	r1, r0, #1
	add.w	r0, r8, #1
	movs	r2, #17
	bl	__aeabi_memcpy
	add.w	r0, r8, #18
	movs	r2, #17
	mov	r1, r6
	bl	__aeabi_memcpy
	ldrh.w	r0, [r5, #39]
	ldr	r1, [r5, #44]
	strh.w	r0, [r8, #35]
	ldrb.w	r0, [r5, #41]
	str.w	r1, [r8, #40]
	strb.w	r0, [r8, #37]
	movs	r0, #0
	strb.w	r0, [r8]
	ldr	r8, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.Lfunc_end186:
	.size	smoltcp::iface::interface::IpPacket::ip_repr::h34c58f58187ffea8, .Lfunc_end186-smoltcp::iface::interface::IpPacket::ip_repr::h34c58f58187ffea8
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp5iface9interface8IpPacket12emit_payload17hc58717c03a59069eE,"ax",%progbits
	.p2align	2
	.type	smoltcp::iface::interface::IpPacket::emit_payload::hc58717c03a59069e,%function
	.code	16
	.thumb_func
smoltcp::iface::interface::IpPacket::emit_payload::hc58717c03a59069e:
.Lfunc_begin187:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#260
	sub	sp, #260
	mov	r6, r0
	ldr	r0, [r0]
	ldr.w	r10, [r7, #8]
	mov	r4, r1
	add.w	r9, r2, #31
	mov	r5, r3
	mov	r11, r2
.LCPI187_0:
	tbb	[pc, r0]
.LJTI187_0:
	.byte	(.LBB187_2-(.LCPI187_0+4))/2
	.byte	(.LBB187_15-(.LCPI187_0+4))/2
	.byte	(.LBB187_10-(.LCPI187_0+4))/2
	.byte	(.LBB187_12-(.LCPI187_0+4))/2
	.byte	(.LBB187_6-(.LCPI187_0+4))/2
	.byte	(.LBB187_18-(.LCPI187_0+4))/2
	.p2align	1
.LBB187_2:
	cmp	r5, #1
	bls.w	.LBB187_358
	ldrb	r0, [r6, #20]
	movs	r1, #0
	strb.w	r1, [r11, #1]
	cmp	r0, #0
	beq.w	.LBB187_97
	cmp	r0, #1
	bne.w	.LBB187_101
	ldrh	r2, [r6, #22]
	ldrh	r0, [r6, #24]
	ldrd	r1, r3, [r6, #28]
	cmp	r5, #5
	mov.w	r6, #0
	b.w	.LBB187_98
.LBB187_6:
	ldr	r0, [r6, #48]
	str	r0, [sp, #44]
	ldr	r0, [r6, #52]
	str	r0, [sp, #88]
	ldrd	r9, r0, [r6, #56]
	str	r0, [sp, #60]
	ldr	r0, [r6, #64]
	str	r0, [sp, #24]
	ldr	r0, [r6, #68]
	str	r0, [sp, #20]
	ldr	r0, [r6, #72]
	str	r0, [sp, #72]
	ldr	r0, [r6, #76]
	str	r0, [sp, #16]
	ldr	r0, [r6, #80]
	str	r0, [sp, #12]
	ldr	r0, [r6, #84]
	str	r0, [sp, #68]
	ldr	r0, [r6, #88]
	str	r0, [sp, #8]
	ldr	r0, [r6, #92]
	str	r0, [sp, #4]
	ldr.w	r0, [r10, #4]
	cmp	r0, #1
	ldrh.w	r0, [r6, #104]
	str	r0, [sp, #52]
	ldrh.w	r0, [r6, #106]
	str	r0, [sp, #48]
	ldrh.w	r0, [r6, #108]
	str	r0, [sp, #80]
	ldrh.w	r0, [r6, #112]
	str	r0, [sp, #28]
	ldrb.w	r0, [r6, #114]
	str	r0, [sp, #40]
	ldrb.w	r0, [r6, #115]
	ldrh.w	r2, [r6, #110]
	str	r0, [sp, #92]
	ldrb.w	r0, [r6, #116]
	str	r0, [sp, #32]
	ldrb.w	r0, [r6, #117]
	str	r0, [sp, #64]
	ldrd	r3, r0, [r6, #96]
	str	r0, [sp, #76]
	str.w	r10, [sp, #96]
	str	r3, [sp, #36]
	str	r2, [sp, #56]
	bne	.LBB187_21
	ldrb	r0, [r4]
	mov	r1, r10
	ldr.w	lr, [r10]
	cmp	r0, #1
	ldr.w	r8, [r10, #8]
	ldr.w	r10, [sp, #60]
	str	r5, [sp, #84]
	beq.w	.LBB187_104
	cmp	r0, #2
	bne.w	.LBB187_403
	mvn	r3, #39
	b.w	.LBB187_105
.LBB187_10:
	ldr	r1, [r6, #52]
	cmp	r1, r5
	itttt	eq
	ldreq	r1, [r6, #48]
	moveq	r0, r11
	moveq	r2, r5
	addeq	sp, #260
	ittt	eq
	popeq.w	{r8, r9, r10, r11}
	popeq.w	{r4, r5, r6, r7, lr}
	beq	__aeabi_memcpy
.LBB187_11:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.33
	mov	r0, r5
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.33
	bl	core::slice::<impl [T]>::copy_from_slice::len_mismatch_fail::h7bf74017f2463c91
	.inst.n	0xdefe
.LBB187_12:
	ldrb	r0, [r4]
	str.w	r11, [sp, #100]
	str	r5, [sp, #104]
	cmp	r0, #0
	beq	.LBB187_24
	cmp	r0, #1
	bne	.LBB187_27
	ldr	r0, [r4, #8]
	str.w	r0, [sp, #129]
	movs	r0, #1
	strb.w	r0, [sp, #128]
	ldr	r1, [r4, #12]
	b	.LBB187_28
.LBB187_15:
	ldrb	r0, [r4]
	str.w	r10, [sp, #96]
	mov	r10, r5
	add.w	r5, r6, #48
	cbz	r0, .LBB187_25
	cmp	r0, #1
	bne.w	.LBB187_40
	ldr	r0, [r4, #8]
	str.w	r0, [sp, #101]
	movs	r0, #1
	strb.w	r0, [sp, #100]
	ldr	r1, [r4, #12]
	b	.LBB187_41
.LBB187_18:
	ldrb	r0, [r4]
	add.w	r8, r6, #24
	str.w	r11, [sp, #156]
	str	r5, [sp, #160]
	cbz	r0, .LBB187_26
	cmp	r0, #1
	bne.w	.LBB187_48
	ldr	r0, [r4, #8]
	str.w	r0, [sp, #129]
	movs	r0, #1
	strb.w	r0, [sp, #128]
	ldr	r1, [r4, #12]
	b	.LBB187_49
.LBB187_21:
	ldrb	r0, [r4]
	ldr.w	r10, [sp, #60]
	cmp	r0, #0
	beq.w	.LBB187_106
.LBB187_22:
	cmp	r0, #1
	bne.w	.LBB187_88
	ldr	r0, [r4, #8]
	str.w	r0, [sp, #129]
	movs	r0, #1
	strb.w	r0, [sp, #128]
	ldr	r1, [r4, #12]
	b	.LBB187_89
.LBB187_24:
	adds	r1, r4, #1
	add	r0, sp, #128
	movs	r2, #17
	bl	__aeabi_memcpy
	add.w	r1, r4, #18
	add	r0, sp, #168
	movs	r2, #17
	bl	__aeabi_memcpy
	b	.LBB187_29
.LBB187_25:
	adds	r1, r4, #1
	add	r0, sp, #100
	movs	r2, #17
	bl	__aeabi_memcpy
	add.w	r1, r4, #18
	add	r0, sp, #128
	movs	r2, #17
	bl	__aeabi_memcpy
	b	.LBB187_42
.LBB187_26:
	adds	r1, r4, #1
	add	r0, sp, #128
	movs	r2, #17
	bl	__aeabi_memcpy
	add.w	r1, r4, #18
	add	r0, sp, #168
	movs	r2, #17
	bl	__aeabi_memcpy
	b	.LBB187_50
.LBB187_27:
	add.w	r12, r4, #4
	add.w	lr, sp, #200
	mov	r8, r12
	mov	r3, lr
	mov	r9, r5
	ldm.w	r8!, {r0, r1, r2, r4, r5}
	stm	r3!, {r0, r1, r2, r4, r5}
	ldm.w	r8, {r0, r1, r2, r4, r5}
	stm	r3!, {r0, r1, r2, r4, r5}
	ldr	r0, [sp, #216]
	str.w	r0, [sp, #141]
	ldr	r0, [sp, #212]
	str.w	r0, [sp, #137]
	ldr	r0, [sp, #208]
	str.w	r0, [sp, #133]
	ldr	r0, [sp, #204]
	str.w	r0, [sp, #129]
	movs	r0, #2
	strb.w	r0, [sp, #128]
	ldm.w	r12!, {r1, r2, r3, r4, r5}
	stm.w	lr!, {r1, r2, r3, r4, r5}
	ldm.w	r12, {r1, r2, r3, r4, r5}
	stm.w	lr, {r1, r2, r3, r4, r5}
	ldr	r1, [sp, #232]
	str.w	r1, [sp, #181]
	ldr	r1, [sp, #228]
	str.w	r1, [sp, #177]
	ldr	r1, [sp, #224]
	mov	r5, r9
	str.w	r1, [sp, #173]
	ldr	r1, [sp, #220]
.LBB187_28:
	str.w	r1, [sp, #169]
	strb.w	r0, [sp, #168]
.LBB187_29:
	cmp	r5, #1
	bls.w	.LBB187_371
	ldrh	r1, [r6, #48]
	cmp	r5, #3
	ldrh	r0, [r6, #50]
	ldr	r2, [r6, #56]
	rev16	r1, r1
	strh.w	r1, [r11]
	bls.w	.LBB187_372
	mov	r4, r5
	cmp	r5, #5
	rev16	r0, r0
	strh.w	r0, [r11, #2]
	bls.w	.LBB187_373
	add.w	r0, r2, #8
	movw	r5, #65527
	uxth	r1, r2
	rev	r3, r0
	cmp	r1, r5
	uxth	r1, r0
	lsr.w	r3, r3, #16
	strh.w	r3, [r11, #4]
	bhi.w	.LBB187_374
	cmp	r1, r4
	bhi.w	.LBB187_375
	sub.w	r0, r1, #8
	cmp	r2, r0
	bne.w	.LBB187_376
	ldr	r1, [r6, #52]
	add.w	r0, r11, #8
	bl	__aeabi_memcpy
	ldrb.w	r0, [r10, #13]
	lsls	r0, r0, #31
	bne	.LBB187_37
	add	r0, sp, #100
	b	.LBB187_77
.LBB187_37:
	cmp	r4, #7
	bhi.w	.LBB187_87
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.677
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.677
.LBB187_39:
	movs	r0, #8
	mov	r1, r4
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB187_40:
	add.w	r8, r4, #4
	add.w	lr, sp, #200
	mov	r12, r8
	str	r5, [sp, #92]
	mov	r3, lr
	str.w	r10, [sp, #84]
	ldm.w	r12!, {r0, r1, r4, r5, r10}
	stm.w	r3!, {r0, r1, r4, r5, r10}
	ldm.w	r12, {r0, r1, r2, r4, r5}
	stm	r3!, {r0, r1, r2, r4, r5}
	ldr	r0, [sp, #216]
	str.w	r0, [sp, #113]
	ldr	r0, [sp, #212]
	str.w	r0, [sp, #109]
	ldr	r0, [sp, #208]
	str.w	r0, [sp, #105]
	ldr	r0, [sp, #204]
	str.w	r0, [sp, #101]
	movs	r0, #2
	strb.w	r0, [sp, #100]
	ldm.w	r8!, {r1, r2, r3, r4, r5}
	stm.w	lr!, {r1, r2, r3, r4, r5}
	ldm.w	r8, {r1, r2, r3, r4, r5}
	stm.w	lr, {r1, r2, r3, r4, r5}
	ldr	r1, [sp, #232]
	str.w	r1, [sp, #141]
	ldr	r1, [sp, #228]
	str.w	r1, [sp, #137]
	ldr	r1, [sp, #224]
	ldr	r5, [sp, #92]
	ldr.w	r10, [sp, #84]
	str.w	r1, [sp, #133]
	ldr	r1, [sp, #220]
.LBB187_41:
	str.w	r1, [sp, #129]
	strb.w	r0, [sp, #128]
.LBB187_42:
	ldrb	r0, [r5]
	str.w	r11, [sp, #120]
	str.w	r10, [sp, #124]
.LCPI187_1:
	tbh	[pc, r0, lsl #1]
.LJTI187_2:
	.short	(.LBB187_44-(.LCPI187_1+4))/2
	.short	(.LBB187_130-(.LCPI187_1+4))/2
	.short	(.LBB187_136-(.LCPI187_1+4))/2
	.short	(.LBB187_139-(.LCPI187_1+4))/2
	.short	(.LBB187_143-(.LCPI187_1+4))/2
	.short	(.LBB187_145-(.LCPI187_1+4))/2
	.short	(.LBB187_151-(.LCPI187_1+4))/2
	.short	(.LBB187_160-(.LCPI187_1+4))/2
	.p2align	1
.LBB187_44:
	cmp.w	r10, #0
	beq.w	.LBB187_359
	ldrb	r3, [r5, #1]
	add.w	r12, r6, #52
	ldrb.w	r2, [r6, #50]
	movs	r0, #1
	ldrd	r9, r6, [r6, #92]
	strb.w	r0, [r11]
	movs	r0, #0
.LCPI187_2:
	tbh	[pc, r3, lsl #1]
.LJTI187_14:
	.short	(.LBB187_262-(.LCPI187_2+4))/2
	.short	(.LBB187_47-(.LCPI187_2+4))/2
	.short	(.LBB187_256-(.LCPI187_2+4))/2
	.short	(.LBB187_257-(.LCPI187_2+4))/2
	.short	(.LBB187_258-(.LCPI187_2+4))/2
	.short	(.LBB187_259-(.LCPI187_2+4))/2
	.short	(.LBB187_260-(.LCPI187_2+4))/2
	.short	(.LBB187_261-(.LCPI187_2+4))/2
	.p2align	1
.LBB187_47:
	movs	r0, #1
	b.w	.LBB187_262
.LBB187_48:
	add.w	r12, r4, #4
	add.w	lr, sp, #200
	mov	r3, r12
	str.w	r9, [sp, #92]
	mov	r9, r10
	mov	r10, lr
	str	r5, [sp, #84]
	ldm	r3!, {r0, r1, r2, r4, r5}
	stm.w	r10!, {r0, r1, r2, r4, r5}
	ldm.w	r3, {r0, r1, r2, r4, r5}
	stm.w	r10, {r0, r1, r2, r4, r5}
	ldr	r0, [sp, #216]
	str.w	r0, [sp, #141]
	ldr	r0, [sp, #212]
	str.w	r0, [sp, #137]
	ldr	r0, [sp, #208]
	str.w	r0, [sp, #133]
	ldr	r0, [sp, #204]
	str.w	r0, [sp, #129]
	movs	r0, #2
	strb.w	r0, [sp, #128]
	mov	r10, r9
	ldr.w	r9, [sp, #92]
	ldm.w	r12!, {r1, r2, r3, r4, r5}
	stm.w	lr!, {r1, r2, r3, r4, r5}
	ldm.w	r12, {r1, r2, r3, r4, r5}
	stm.w	lr, {r1, r2, r3, r4, r5}
	ldr	r1, [sp, #232]
	str.w	r1, [sp, #181]
	ldr	r1, [sp, #228]
	str.w	r1, [sp, #177]
	ldr	r1, [sp, #224]
	ldr	r5, [sp, #84]
	str.w	r1, [sp, #173]
	ldr	r1, [sp, #220]
.LBB187_49:
	str.w	r1, [sp, #169]
	strb.w	r0, [sp, #168]
.LBB187_50:
	ldrb.w	r1, [r6, #83]
	movs	r0, #250
	cmp	r1, #0
	ldrb.w	r1, [r6, #88]
	it	eq
	moveq	r0, #244
	cmp	r1, #0
	ldrb.w	r1, [r6, #95]
	it	ne
	addne	r0, #9
	cmp	r1, #0
	ldrh	r1, [r6, #44]
	it	ne
	addne	r0, #6
	ldrb.w	r2, [r6, #68]
	cmp	r1, #1
	ldrb.w	r1, [r6, #73]
	it	eq
	addeq	r0, #4
	cmp	r2, #0
	it	ne
	addne	r0, #6
	cmp	r1, #0
	ldr	r2, [r6, #36]
	ldrb.w	r1, [r6, #100]
	it	ne
	addne	r0, #6
	cmp	r2, #1
	it	eq
	addeq	r0, #6
	cmp	r1, #2
	beq	.LBB187_52
	ldrb.w	r2, [r8, #81]
	ldrb.w	r3, [r8, #86]
	add	r1, r2
	add	r1, r3
	add.w	r0, r0, r1, lsl #2
	adds	r0, #2
.LBB187_52:
	ldrd	r1, r2, [r6, #28]
	cmp	r1, #0
	add	r2, r0
	it	ne
	addne	r0, r2, #2
	cmp	r5, #1
	bls.w	.LBB187_371
	ldrh	r2, [r6, #20]
	cmp	r5, #3
	ldrh	r1, [r6, #22]
	rev16	r2, r2
	strh.w	r2, [r11]
	bls.w	.LBB187_372
	cmp	r5, #5
	rev16	r1, r1
	strh.w	r1, [r11, #2]
	bls.w	.LBB187_377
	add.w	r1, r0, #8
	movw	r3, #65527
	uxth	r0, r0
	str.w	r10, [sp, #96]
	rev	r2, r1
	cmp	r0, r3
	uxth	r4, r1
	lsr.w	r2, r2, #16
	strh.w	r2, [r11, #4]
	bhi.w	.LBB187_378
	mov	r10, r5
	cmp	r4, r5
	bhi.w	.LBB187_379
	sub.w	r5, r4, #8
	cmp	r5, #107
	bls.w	.LBB187_380
	add.w	r0, r11, #42
	movs	r1, #74
	bl	__aeabi_memclr
	cmp	r5, #235
	bls.w	.LBB187_381
	add.w	r0, r11, #116
	movs	r1, #128
	bl	__aeabi_memclr
	ldrb.w	r0, [r6, #48]
	movw	r1, :lower16:.Lswitch.table._ZN7smoltcp5iface9interface8IpPacket12emit_payload17hc58717c03a59069eE
	movt	r1, :upper16:.Lswitch.table._ZN7smoltcp5iface9interface8IpPacket12emit_payload17hc58717c03a59069eE
	movw	r2, #1537
	cmp	r5, #239
	strh.w	r2, [r11, #9]
	ldrb	r1, [r1, r0]
	ldr.w	r2, [r8, #26]
	strb.w	r1, [r11, #8]
	ldr	r1, [r6, #24]
	str.w	r2, [r9, #5]
	rev	r1, r1
	str.w	r1, [r11, #12]
	ldrh.w	r1, [r8, #30]
	strh.w	r1, [r9, #9]
	mov.w	r1, #0
	strb.w	r1, [r11, #11]
	strh.w	r1, [r11, #16]
	bls.w	.LBB187_382
	movw	r1, #33379
	add.w	r3, r6, #56
	movt	r1, #25427
	str.w	r1, [r11, #244]
	ldm	r3, {r1, r2, r3}
	str.w	r1, [r11, #20]
	ldrb.w	r1, [r6, #82]
	str.w	r2, [r11, #24]
	ldr.w	r2, [r6, #78]
	lsls	r1, r1, #7
	strb.w	r0, [sp, #201]
	movs	r0, #2
	str.w	r3, [r11, #28]
	str.w	r2, [r11, #32]
	sub.w	r2, r4, #248
	strh.w	r1, [r11, #18]
	ldrb.w	r3, [r6, #49]
	add.w	r1, r11, #248
	strb.w	r0, [sp, #200]
	add	r0, sp, #200
	strb.w	r3, [sp, #202]
	bl	smoltcp::wire::dhcpv4::DhcpOption::emit::h2dfd0c6515dfb1fc
	ldrb.w	r2, [r6, #88]
	mov	r3, r0
	cmp	r2, #0
	mov	r2, r1
	beq	.LBB187_62
	ldrh.w	r0, [r8, #69]
	mov	r1, r3
	strh.w	r0, [sp, #205]
	ldr.w	r0, [r8, #65]
	str.w	r0, [sp, #201]
	movs	r0, #4
	strb.w	r0, [sp, #200]
	add	r0, sp, #200
	bl	smoltcp::wire::dhcpv4::DhcpOption::emit::h2dfd0c6515dfb1fc
	mov	r3, r0
	mov	r2, r1
.LBB187_62:
	ldrb.w	r0, [r8, #71]
	cbz	r0, .LBB187_64
	ldr	r0, [r6, #96]
	str.w	r0, [sp, #201]
	movs	r0, #5
	strb.w	r0, [sp, #200]
	add	r0, sp, #200
	mov	r1, r3
	bl	smoltcp::wire::dhcpv4::DhcpOption::emit::h2dfd0c6515dfb1fc
	mov	r3, r0
	mov	r2, r1
.LBB187_64:
	ldrb.w	r0, [r6, #68]
	cbz	r0, .LBB187_66
	ldr.w	r0, [r8, #45]
	str.w	r0, [sp, #201]
	movs	r0, #7
	strb.w	r0, [sp, #200]
	add	r0, sp, #200
	mov	r1, r3
	bl	smoltcp::wire::dhcpv4::DhcpOption::emit::h2dfd0c6515dfb1fc
	mov	r3, r0
	mov	r2, r1
.LBB187_66:
	ldrb.w	r0, [r8, #49]
	cbz	r0, .LBB187_68
	ldr.w	r0, [r8, #50]
	str.w	r0, [sp, #201]
	movs	r0, #8
	strb.w	r0, [sp, #200]
	add	r0, sp, #200
	mov	r1, r3
	bl	smoltcp::wire::dhcpv4::DhcpOption::emit::h2dfd0c6515dfb1fc
	mov	r3, r0
	mov	r2, r1
.LBB187_68:
	ldrb.w	r0, [r8, #59]
	cbz	r0, .LBB187_70
	ldr	r0, [r6, #84]
	str.w	r0, [sp, #201]
	movs	r0, #3
	strb.w	r0, [sp, #200]
	add	r0, sp, #200
	mov	r1, r3
	bl	smoltcp::wire::dhcpv4::DhcpOption::emit::h2dfd0c6515dfb1fc
	mov	r3, r0
	mov	r2, r1
.LBB187_70:
	ldrh	r0, [r6, #44]
	cmp	r0, #1
	beq	.LBB187_79
	ldr	r0, [r6, #36]
	cmp	r0, #1
	beq	.LBB187_80
.LBB187_72:
	ldrb.w	r5, [r6, #100]
	cmp	r5, #2
	bne	.LBB187_81
.LBB187_73:
	ldr	r0, [r6, #28]
	cbz	r0, .LBB187_75
.LBB187_74:
	str	r0, [sp, #204]
	ldr	r0, [r6, #32]
	str	r0, [sp, #208]
	movw	r0, #14090
	strh.w	r0, [sp, #200]
	add	r0, sp, #200
	mov	r1, r3
	bl	smoltcp::wire::dhcpv4::DhcpOption::emit::h2dfd0c6515dfb1fc
	mov	r3, r0
	mov	r2, r1
.LBB187_75:
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.207
	mov	r1, r3
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.207
	bl	smoltcp::wire::dhcpv4::DhcpOption::emit::h2dfd0c6515dfb1fc
	ldr	r0, [sp, #96]
	ldrb	r0, [r0, #13]
	lsls	r0, r0, #31
	bne	.LBB187_86
	add	r0, sp, #156
.LBB187_77:
	add	r1, sp, #128
	add	r2, sp, #168
	bl	smoltcp::wire::udp::Packet<T>::fill_checksum::h2376b94bafc59b55
.LBB187_78:
	add	sp, #260
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB187_79:
	ldrh.w	r0, [r8, #22]
	mov	r1, r3
	strh.w	r0, [sp, #202]
	movs	r0, #9
	strb.w	r0, [sp, #200]
	add	r0, sp, #200
	bl	smoltcp::wire::dhcpv4::DhcpOption::emit::h2dfd0c6515dfb1fc
	mov	r3, r0
	mov	r2, r1
	ldr	r0, [r6, #36]
	cmp	r0, #1
	bne	.LBB187_72
.LBB187_80:
	ldr	r0, [r6, #40]
	str	r0, [sp, #204]
	movs	r0, #6
	strb.w	r0, [sp, #200]
	add	r0, sp, #200
	mov	r1, r3
	bl	smoltcp::wire::dhcpv4::DhcpOption::emit::h2dfd0c6515dfb1fc
	mov	r3, r0
	mov	r2, r1
	ldrb.w	r5, [r6, #100]
	cmp	r5, #2
	beq	.LBB187_73
.LBB187_81:
	ldrb.w	r1, [r8, #81]
	movs	r0, #0
	cmp	r5, #0
	ldrb.w	r5, [r8, #86]
	ldr.w	r4, [r8, #77]
	ldr.w	lr, [r8, #82]
	str	r0, [sp, #108]
	ldr.w	r12, [r8, #87]
	str	r0, [sp, #104]
	str	r0, [sp, #100]
	itt	ne
	strne	r4, [sp, #100]
	movne	r0, #1
	cbz	r1, .LBB187_83
	add	r1, sp, #100
	str.w	lr, [r1, r0, lsl #2]
	adds	r0, #1
.LBB187_83:
	cbz	r5, .LBB187_85
	add	r1, sp, #100
	str.w	r12, [r1, r0, lsl #2]
	adds	r0, #1
.LBB187_85:
	lsls	r0, r0, #2
	add	r1, sp, #100
	str	r0, [sp, #208]
	movw	r0, #1546
	str	r1, [sp, #204]
	mov	r1, r3
	strh.w	r0, [sp, #200]
	add	r0, sp, #200
	bl	smoltcp::wire::dhcpv4::DhcpOption::emit::h2dfd0c6515dfb1fc
	mov	r3, r0
	mov	r2, r1
	ldr	r0, [r6, #28]
	cmp	r0, #0
	bne	.LBB187_74
	b	.LBB187_75
.LBB187_86:
	cmp.w	r10, #7
	bls.w	.LBB187_395
.LBB187_87:
	movs	r0, #0
	strh.w	r0, [r11, #6]
	add	sp, #260
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB187_88:
	add.w	r12, r4, #4
	add.w	lr, sp, #200
	mov	r2, r12
	mov	r3, lr
	str	r5, [sp, #84]
	ldm	r2!, {r0, r1, r4, r5, r6}
	stm	r3!, {r0, r1, r4, r5, r6}
	ldm.w	r2, {r0, r1, r4, r5, r6}
	stm	r3!, {r0, r1, r4, r5, r6}
	ldr	r0, [sp, #216]
	str.w	r0, [sp, #141]
	ldr	r0, [sp, #212]
	str.w	r0, [sp, #137]
	ldr	r0, [sp, #208]
	str.w	r0, [sp, #133]
	ldr	r0, [sp, #204]
	str.w	r0, [sp, #129]
	movs	r0, #2
	strb.w	r0, [sp, #128]
	ldr.w	r10, [sp, #60]
	ldm.w	r12!, {r1, r2, r3, r4, r5}
	stm.w	lr!, {r1, r2, r3, r4, r5}
	ldm.w	r12, {r1, r2, r3, r4, r5}
	stm.w	lr, {r1, r2, r3, r4, r5}
	ldr	r1, [sp, #232]
	str.w	r1, [sp, #181]
	ldr	r1, [sp, #228]
	str.w	r1, [sp, #177]
	ldr	r1, [sp, #224]
	ldr	r5, [sp, #84]
	str.w	r1, [sp, #173]
	ldr	r1, [sp, #220]
.LBB187_89:
	str.w	r1, [sp, #169]
	strb.w	r0, [sp, #168]
	ldr	r6, [sp, #56]
	cmp	r5, #1
	bls.w	.LBB187_107
.LBB187_90:
	ldr	r0, [sp, #52]
	cmp	r5, #3
	rev16	r0, r0
	strh.w	r0, [r11]
	bls.w	.LBB187_383
	ldr	r0, [sp, #48]
	cmp	r5, #7
	rev16	r0, r0
	strh.w	r0, [r11, #2]
	bls.w	.LBB187_384
	ldr	r0, [sp, #44]
	cmp	r5, #11
	rev	r0, r0
	str.w	r0, [r11, #4]
	bls.w	.LBB187_385
	ldr	r0, [sp, #88]
	cmp	r0, #0
	it	eq
	moveq	r9, r0
	cmp	r5, #15
	rev.w	r0, r9
	str.w	r0, [r11, #8]
	bls.w	.LBB187_386
	movs	r0, #20
	cmp	r6, #1
	mov	r1, r10
	mov.w	r2, #8
	it	eq
	moveq	r0, #24
	cmp.w	r10, #0
	it	ne
	movne	r1, #1
	add.w	r2, r2, r1, lsl #3
	ldr	r3, [sp, #72]
	cmp	r3, #0
	it	eq
	lsleq	r2, r1, #3
	ldr	r1, [sp, #68]
	cmp	r1, #0
	it	ne
	addne	r2, #8
	ldr	r1, [sp, #92]
	cmp	r1, #0
	it	ne
	addne	r0, #3
	ldr	r4, [sp, #64]
	cmp	r4, #0
	ldr	r1, [sp, #80]
	it	ne
	addne	r0, #2
	cmp	r2, #0
	add	r2, r0
	it	ne
	addne	r0, r2, #2
	lsls	r2, r0, #30
	and	r2, r0, #60
	rev	r1, r1
	it	ne
	addne	r0, r2, #4
	movs	r2, #240
	lsrs	r1, r1, #16
	strh.w	r1, [r11, #14]
	and.w	r0, r2, r0, lsl #2
	strh.w	r0, [r11, #12]
	ldr	r3, [sp, #40]
	mov.w	r1, #2048
	ldr.w	r9, [sp, #96]
.LCPI187_3:
	tbb	[pc, r3]
.LJTI187_1:
	.byte	(.LBB187_111-(.LCPI187_3+4))/2
	.byte	(.LBB187_110-(.LCPI187_3+4))/2
	.byte	(.LBB187_96-(.LCPI187_3+4))/2
	.byte	(.LBB187_109-(.LCPI187_3+4))/2
	.byte	(.LBB187_108-(.LCPI187_3+4))/2
	.p2align	1
.LBB187_96:
	mov.w	r1, #512
	b	.LBB187_110
.LBB187_97:
	ldrh	r2, [r6, #22]
	ldrh	r0, [r6, #24]
	ldrd	r1, r3, [r6, #28]
	cmp	r5, #5
	mov.w	r6, #8
.LBB187_98:
	strb.w	r6, [r11]
	bls.w	.LBB187_393
	cmp	r5, #7
	rev16	r2, r2
	strh.w	r2, [r11, #4]
	bls.w	.LBB187_394
	rev16	r0, r0
	sub.w	r2, r5, #8
	strh.w	r0, [r11, #6]
	cmp	r2, r3
	add.w	r0, r11, #8
	it	hi
	movhi	r2, r3
	b.w	.LBB187_245
.LBB187_101:
	ldrb	r2, [r6, #21]
	mov	r1, r5
	ldrd	r0, r3, [r6, #24]
	ldr	r5, [r6, #36]
	ldrb	r4, [r6, #22]
	str	r5, [sp, #212]
	ldr	r5, [r6, #32]
	str	r5, [sp, #208]
	ldr.w	r8, [r6, #40]
	str	r3, [sp, #204]
	ldr.w	r9, [r6, #44]
	str	r0, [sp, #200]
	movs	r0, #3
	strb.w	r0, [r11]
	movs	r0, #1
	movs	r3, #0
.LCPI187_4:
	tbh	[pc, r2, lsl #1]
.LJTI187_15:
	.short	(.LBB187_241-(.LCPI187_4+4))/2
	.short	(.LBB187_240-(.LCPI187_4+4))/2
	.short	(.LBB187_103-(.LCPI187_4+4))/2
	.short	(.LBB187_226-(.LCPI187_4+4))/2
	.short	(.LBB187_227-(.LCPI187_4+4))/2
	.short	(.LBB187_228-(.LCPI187_4+4))/2
	.short	(.LBB187_229-(.LCPI187_4+4))/2
	.short	(.LBB187_230-(.LCPI187_4+4))/2
	.short	(.LBB187_231-(.LCPI187_4+4))/2
	.short	(.LBB187_232-(.LCPI187_4+4))/2
	.short	(.LBB187_233-(.LCPI187_4+4))/2
	.short	(.LBB187_234-(.LCPI187_4+4))/2
	.short	(.LBB187_235-(.LCPI187_4+4))/2
	.short	(.LBB187_236-(.LCPI187_4+4))/2
	.short	(.LBB187_237-(.LCPI187_4+4))/2
	.short	(.LBB187_238-(.LCPI187_4+4))/2
	.short	(.LBB187_239-(.LCPI187_4+4))/2
	.p2align	1
.LBB187_103:
	movs	r0, #2
	b.w	.LBB187_240
.LBB187_104:
	mvn	r3, #19
.LBB187_105:
	movs	r6, #20
	cmp	r2, #1
	mov	r5, r10
	mov.w	r1, #8
	it	eq
	moveq	r6, #24
	cmp.w	r10, #0
	it	ne
	movne	r5, #1
	add.w	r1, r1, r5, lsl #3
	ldr.w	r12, [sp, #72]
	cmp.w	r12, #0
	it	eq
	lsleq	r1, r5, #3
	ldr	r5, [sp, #68]
	cmp	r5, #0
	it	ne
	addne	r1, #8
	ldr	r5, [sp, #92]
	cmp	r5, #0
	it	ne
	addne	r6, #3
	ldr	r5, [sp, #64]
	cmp	r5, #0
	it	ne
	addne	r6, #2
	cmp	r1, #0
	add.w	r5, r6, r1
	it	ne
	addne	r6, r5, #2
	ands	r1, r6, #3
	it	ne
	ornne	r1, r6, #3
	subs	r1, r1, r6
	ldr	r2, [sp, #80]
	add	r1, lr
	add	r1, r3
	mul	r1, r1, r8
	cmp	r1, r2
	it	lo
	movlo	r2, r1
	str	r2, [sp, #80]
	ldr	r5, [sp, #84]
	cmp	r0, #0
	bne.w	.LBB187_22
.LBB187_106:
	adds	r1, r4, #1
	add	r0, sp, #128
	movs	r2, #17
	bl	__aeabi_memcpy
	add.w	r1, r4, #18
	add	r0, sp, #168
	movs	r2, #17
	bl	__aeabi_memcpy
	ldr	r6, [sp, #56]
	cmp	r5, #1
	bhi.w	.LBB187_90
.LBB187_107:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.610
	movs	r0, #2
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.610
	mov	r1, r5
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB187_108:
	mov.w	r1, #1024
	b	.LBB187_110
.LBB187_109:
	mov.w	r1, #256
.LBB187_110:
	orrs	r0, r1
.LBB187_111:
	ldr	r1, [sp, #88]
	movs	r2, #60
	subs	r1, #1
	clz	r1, r1
	lsrs	r1, r1, #5
	rev16	r0, r0
	orr.w	r0, r0, r1, lsl #4
	rev	r1, r0
	and.w	r1, r2, r1, lsr #18
	cmp	r1, #20
	rev16	r0, r0
	strh.w	r0, [r11, #12]
	blo.w	.LBB187_387
	cmp	r1, r5
	bhi.w	.LBB187_388
	cmp	r6, #1
	add.w	r3, r11, #20
	sub.w	r2, r1, #20
	bne	.LBB187_115
	ldr	r0, [sp, #28]
	strh.w	r0, [sp, #202]
	movs	r0, #2
	strb.w	r0, [sp, #200]
	add	r0, sp, #200
	mov	r1, r3
	bl	smoltcp::wire::tcp::TcpOption::emit::haa9fd5de668a2388
	mov	r3, r0
	mov	r2, r1
.LBB187_115:
	ldr	r0, [sp, #92]
	cbz	r0, .LBB187_117
	ldr	r0, [sp, #32]
	strb.w	r0, [sp, #201]
	movs	r0, #3
	strb.w	r0, [sp, #200]
	add	r0, sp, #200
	mov	r1, r3
	bl	smoltcp::wire::tcp::TcpOption::emit::haa9fd5de668a2388
	mov	r3, r0
	mov	r2, r1
.LBB187_117:
	cmp	r4, #0
	beq	.LBB187_127
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.629
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.629
.LBB187_119:
	mov	r1, r3
	bl	smoltcp::wire::tcp::TcpOption::emit::haa9fd5de668a2388
	mov	r3, r0
	mov	r2, r1
.LBB187_120:
	cbz	r2, .LBB187_122
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.630
	mov	r1, r3
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.630
	bl	smoltcp::wire::tcp::TcpOption::emit::haa9fd5de668a2388
.LBB187_122:
	cmp	r5, #19
	bls.w	.LBB187_389
	ldrh.w	r0, [r11, #12]
	movs	r1, #60
	ldr	r2, [sp, #36]
	and.w	r0, r1, r0, lsr #2
	movs	r1, #0
	cmp	r0, r5
	strh.w	r1, [r11, #18]
	bhi.w	.LBB187_390
	subs	r1, r5, r0
	ldr	r3, [sp, #76]
	cmp	r3, r1
	bhi.w	.LBB187_391
	add	r0, r11
	mov	r1, r2
	ldr	r2, [sp, #76]
	bl	__aeabi_memcpy
	ldrb.w	r0, [r9, #14]
	lsls	r0, r0, #31
	mov.w	r0, #0
	strh.w	r0, [r11, #16]
	bne.w	.LBB187_78
	add	r0, sp, #128
	add	r1, sp, #168
	movs	r2, #3
	mov	r3, r5
	bl	smoltcp::wire::ip::checksum::pseudo_header::ha771da54de6c08b8
	mov	r4, r0
	mov	r0, r11
	mov	r1, r5
	bl	smoltcp::wire::ip::checksum::data::hebb229fc732545ff
	uxth	r0, r0
	uxtah	r0, r0, r4
	lsrs	r1, r0, #16
	uxtah	r0, r1, r0
	add.w	r0, r0, r0, lsr #16
	mvns	r0, r0
	rev	r0, r0
	lsrs	r0, r0, #16
	strh.w	r0, [r11, #16]
	add	sp, #260
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB187_127:
	ldr	r0, [sp, #88]
	cmp	r0, #1
	bne	.LBB187_120
	cmp.w	r10, #1
	itt	ne
	ldrne	r0, [sp, #72]
	cmpne	r0, #1
	bne.w	.LBB187_168
.LBB187_129:
	ldr	r0, [sp, #24]
	str	r0, [sp, #208]
	ldr	r0, [sp, #20]
	str	r0, [sp, #212]
	ldr	r0, [sp, #72]
	str	r0, [sp, #216]
	ldr	r0, [sp, #16]
	str	r0, [sp, #220]
	ldr	r0, [sp, #12]
	str	r0, [sp, #224]
	ldr	r0, [sp, #68]
	str	r0, [sp, #228]
	ldr	r0, [sp, #8]
	str	r0, [sp, #232]
	ldr	r0, [sp, #4]
	str	r0, [sp, #236]
	movs	r0, #5
	str.w	r10, [sp, #204]
	strb.w	r0, [sp, #200]
	add	r0, sp, #200
	b	.LBB187_119
.LBB187_130:
	cmp.w	r10, #0
	beq.w	.LBB187_359
	ldrd	r9, r8, [r6, #96]
	ldr	r1, [r6, #52]
	cmp.w	r10, #1
	mov.w	r0, #2
	strb.w	r0, [r11]
	beq.w	.LBB187_360
	cmp.w	r10, #7
	mov.w	r0, #0
	strb.w	r0, [r11, #1]
	bls.w	.LBB187_407
	add.w	r12, r6, #56
	add	r0, sp, #200
	rev	r1, r1
	str.w	r1, [r11, #4]
	mov	r1, r0
	add.w	lr, r11, #8
	ldm.w	r12!, {r2, r3, r4, r5, r6}
	stm	r1!, {r2, r3, r4, r5, r6}
	ldm.w	r12, {r2, r3, r4, r5, r6}
	stm	r1!, {r2, r3, r4, r5, r6}
	add	r1, sp, #168
	str.w	lr, [sp, #168]
	sub.w	r6, r10, #8
	str	r6, [sp, #172]
	bl	smoltcp::wire::ipv6::Repr::emit::ha6a20889af1b4d41
	cmp	r6, #39
	bls.w	.LBB187_408
	sub.w	r2, r10, #48
	mov	r5, r10
	cmp	r2, r8
	ldr.w	r10, [sp, #96]
	bne.w	.LBB187_398
	add.w	r0, r11, #48
	mov	r1, r9
	bl	__aeabi_memcpy
	b.w	.LBB187_300
.LBB187_136:
	cmp.w	r10, #0
	beq.w	.LBB187_359
	ldrb	r1, [r5, #1]
	ldrb.w	r0, [r6, #50]
	ldrd	r9, r8, [r6, #92]
	lsls	r2, r1, #30
	mov.w	r2, #3
	strb.w	r2, [r11]
	beq.w	.LBB187_176
	cmp	r1, #1
	it	eq
	moveq	r0, #1
	b	.LBB187_177
.LBB187_139:
	cmp.w	r10, #0
	beq.w	.LBB187_359
	ldrb	r5, [r5, #1]
	ldr	r2, [r6, #52]
	ldrb.w	r3, [r6, #50]
	add.w	r12, r6, #56
	ldrd	r4, r9, [r6, #96]
	movs	r0, #4
	strb.w	r0, [r11]
	movs	r0, #0
	mov	r1, r10
.LCPI187_5:
	tbh	[pc, r5, lsl #1]
.LJTI187_13:
	.short	(.LBB187_182-(.LCPI187_5+4))/2
	.short	(.LBB187_142-(.LCPI187_5+4))/2
	.short	(.LBB187_180-(.LCPI187_5+4))/2
	.short	(.LBB187_181-(.LCPI187_5+4))/2
	.p2align	1
.LBB187_142:
	movs	r0, #1
	b	.LBB187_182
.LBB187_143:
	cmp.w	r10, #0
	beq.w	.LBB187_359
	ldrh	r3, [r6, #50]
	ldrh	r2, [r6, #52]
	mov	r5, r10
	cmp.w	r10, #1
	ldrd	r1, r0, [r6, #56]
	mov.w	r6, #128
	b	.LBB187_147
.LBB187_145:
	cmp.w	r10, #0
	beq.w	.LBB187_359
	ldrh	r3, [r6, #50]
	ldrh	r2, [r6, #52]
	mov	r5, r10
	cmp.w	r10, #1
	ldrd	r1, r0, [r6, #56]
	mov.w	r6, #129
.LBB187_147:
	ldr.w	r10, [sp, #96]
	strb.w	r6, [r11]
	beq.w	.LBB187_360
	cmp	r5, #5
	mov.w	r6, #0
	strb.w	r6, [r11, #1]
	bls.w	.LBB187_404
	cmp	r5, #7
	rev16	r3, r3
	strh.w	r3, [r11, #4]
	bls.w	.LBB187_405
	rev16	r3, r2
	sub.w	r2, r5, #8
	strh.w	r3, [r11, #6]
	cmp	r2, r0
	it	hi
	movhi	r2, r0
	add.w	r0, r11, #8
	bl	__aeabi_memcpy
	b.w	.LBB187_300
.LBB187_151:
	ldrb.w	r1, [r6, #57]
	str.w	r9, [sp, #92]
	str	r1, [sp, #88]
	ldrb.w	r1, [r6, #58]
	str	r1, [sp, #80]
	ldrb.w	r1, [r6, #59]
	str	r1, [sp, #76]
	ldrb.w	r1, [r6, #67]
	str	r1, [sp, #68]
	ldr	r1, [r6, #68]
	str	r1, [sp, #72]
	ldrb.w	r0, [r6, #56]
	ldrd	r2, r8, [r6, #88]
	ldrd	r4, r1, [r6, #72]
	str	r1, [sp, #56]
	lsrs	r1, r2, #16
	orr.w	r1, r1, r8, lsl #16
	str	r2, [sp, #48]
	str	r1, [sp, #32]
	add.w	r9, r6, #60
	ldrd	r2, r1, [r6, #80]
	str	r1, [sp, #52]
	ldr	r1, [r6, #96]
	str	r1, [sp, #40]
	add.w	r12, r6, #112
	ubfx	r1, r4, #8, #8
	str	r1, [sp, #64]
	ubfx	r1, r4, #16, #8
	str	r1, [sp, #60]
	ldr	r1, [r6, #100]
	str	r1, [sp, #36]
	ldrd	r1, r3, [r6, #104]
	str	r3, [sp, #24]
	ldr.w	r3, [r6, #148]
	str	r3, [sp, #20]
	ldrb.w	r3, [r6, #136]
	str	r3, [sp, #44]
	lsr.w	r3, r8, #16
	str	r3, [sp, #28]
	add.w	lr, r5, #89
	lsrs	r6, r4, #24
	mov	r5, r10
.LCPI187_6:
	tbh	[pc, r0, lsl #1]
.LJTI187_5:
	.short	(.LBB187_153-(.LCPI187_6+4))/2
	.short	(.LBB187_189-(.LCPI187_6+4))/2
	.short	(.LBB187_203-(.LCPI187_6+4))/2
	.short	(.LBB187_211-(.LCPI187_6+4))/2
	.short	(.LBB187_220-(.LCPI187_6+4))/2
	.p2align	1
.LBB187_153:
	ldrb.w	r0, [r9, #4]
	cmp	r5, #0
	strb.w	r0, [sp, #160]
	ldr.w	r0, [r9]
	str	r0, [sp, #156]
	beq.w	.LBB187_359
	cmp	r5, #1
	ldr.w	r10, [sp, #96]
	mov.w	r0, #133
	strb.w	r0, [r11]
	beq.w	.LBB187_360
	movs	r0, #0
	strb.w	r0, [r11, #1]
	add	r0, sp, #120
	bl	smoltcp::wire::icmpv6::Packet<T>::clear_reserved::heeabc31498d221e9
	ldr	r0, [sp, #88]
	lsls	r0, r0, #31
	beq.w	.LBB187_300
	ldrb.w	r2, [r11]
	movs	r0, #8
	sub.w	r1, r2, #128
	cmp	r1, #15
	bhi.w	.LBB187_281
.LCPI187_7:
	tbh	[pc, r1, lsl #1]
.LJTI187_12:
	.short	(.LBB187_309-(.LCPI187_7+4))/2
	.short	(.LBB187_309-(.LCPI187_7+4))/2
	.short	(.LBB187_306-(.LCPI187_7+4))/2
	.short	(.LBB187_282-(.LCPI187_7+4))/2
	.short	(.LBB187_282-(.LCPI187_7+4))/2
	.short	(.LBB187_309-(.LCPI187_7+4))/2
	.short	(.LBB187_307-(.LCPI187_7+4))/2
	.short	(.LBB187_159-(.LCPI187_7+4))/2
	.short	(.LBB187_159-(.LCPI187_7+4))/2
	.short	(.LBB187_308-(.LCPI187_7+4))/2
	.short	(.LBB187_282-(.LCPI187_7+4))/2
	.short	(.LBB187_282-(.LCPI187_7+4))/2
	.short	(.LBB187_282-(.LCPI187_7+4))/2
	.short	(.LBB187_282-(.LCPI187_7+4))/2
	.short	(.LBB187_282-(.LCPI187_7+4))/2
	.short	(.LBB187_309-(.LCPI187_7+4))/2
	.p2align	1
.LBB187_159:
	movs	r0, #24
	b.w	.LBB187_309
.LBB187_160:
	ldrb.w	r0, [r6, #52]
	ldr	r1, [r6, #64]
	ldrb.w	r9, [r6, #53]
	mov	r4, r10
	ldrh.w	r8, [r6, #54]
	ldr	r2, [r6, #56]
	str	r1, [sp, #200]
	ldrb.w	r1, [r6, #68]
	cmp	r0, #0
	ldr.w	r10, [r6, #60]
	strb.w	r1, [sp, #204]
	beq	.LBB187_169
	cmp	r4, #0
	beq.w	.LBB187_359
	mov	r5, r4
	cmp	r4, #1
	mov.w	r0, #143
	strb.w	r0, [r11]
	beq.w	.LBB187_360
	movs	r0, #0
	strb.w	r0, [r11, #1]
	add	r0, sp, #120
	mov	r9, r2
	bl	smoltcp::wire::icmpv6::Packet<T>::clear_reserved::heeabc31498d221e9
	cmp	r5, #7
	bls.w	.LBB187_414
	ldrb.w	r0, [r11]
	movs	r6, #8
	rev16.w	r1, r8
	strh.w	r1, [r11, #6]
	sub.w	r2, r0, #128
	cmp	r2, #15
	bhi.w	.LBB187_187
	mov	r5, r4
	movs	r0, #28
.LCPI187_8:
	tbh	[pc, r2, lsl #1]
.LJTI187_3:
	.short	(.LBB187_279-(.LCPI187_8+4))/2
	.short	(.LBB187_279-(.LCPI187_8+4))/2
	.short	(.LBB187_277-(.LCPI187_8+4))/2
	.short	(.LBB187_188-(.LCPI187_8+4))/2
	.short	(.LBB187_188-(.LCPI187_8+4))/2
	.short	(.LBB187_279-(.LCPI187_8+4))/2
	.short	(.LBB187_275-(.LCPI187_8+4))/2
	.short	(.LBB187_167-(.LCPI187_8+4))/2
	.short	(.LBB187_167-(.LCPI187_8+4))/2
	.short	(.LBB187_276-(.LCPI187_8+4))/2
	.short	(.LBB187_188-(.LCPI187_8+4))/2
	.short	(.LBB187_188-(.LCPI187_8+4))/2
	.short	(.LBB187_188-(.LCPI187_8+4))/2
	.short	(.LBB187_188-(.LCPI187_8+4))/2
	.short	(.LBB187_188-(.LCPI187_8+4))/2
	.short	(.LBB187_279-(.LCPI187_8+4))/2
	.p2align	1
.LBB187_167:
	movs	r0, #24
	b	.LBB187_277
.LBB187_168:
	ldr	r0, [sp, #68]
	cmp	r0, #1
	bne.w	.LBB187_120
	b	.LBB187_129
.LBB187_169:
	cmp	r4, #0
	beq.w	.LBB187_359
	ldrb.w	r0, [r6, #69]
	str	r2, [sp, #92]
	str	r0, [sp, #80]
	ldrb.w	r0, [r6, #70]
	str	r0, [sp, #76]
	ldrb.w	r0, [r6, #71]
	str	r0, [sp, #72]
	ldrh.w	r0, [r6, #72]
	str	r0, [sp, #88]
	ldrh.w	r0, [r6, #74]
	str	r0, [sp, #64]
	ldr	r0, [r6, #76]
	mov	r5, r4
	str	r0, [sp, #60]
	ldr	r0, [r6, #80]
	cmp	r4, #1
	str	r0, [sp, #68]
	mov.w	r0, #130
	strb.w	r0, [r11]
	beq.w	.LBB187_360
	movs	r0, #0
	strb.w	r0, [r11, #1]
	add	r0, sp, #120
	bl	smoltcp::wire::icmpv6::Packet<T>::clear_reserved::heeabc31498d221e9
	cmp	r5, #5
	bls.w	.LBB187_418
	ldr	r0, [sp, #88]
	cmp	r5, #23
	rev16	r0, r0
	strh.w	r0, [r11, #4]
	ldr	r0, [sp, #92]
	bls.w	.LBB187_419
	str.w	r0, [r11, #11]
	ldr	r0, [sp, #200]
	ldr	r1, [sp, #80]
	str.w	r0, [r11, #19]
	ldrb.w	r0, [sp, #204]
	cmp	r1, #0
	strb.w	r9, [r11, #8]
	strh.w	r8, [r11, #9]
	str.w	r10, [r11, #15]
	strb.w	r0, [r11, #23]
	beq.w	.LBB187_247
	cmp	r4, #24
	beq.w	.LBB187_364
	ldrb.w	r0, [r11, #24]
	movs	r1, #1
	mov	r5, r4
	bfi	r0, r1, #3, #29
	b	.LBB187_249
.LBB187_176:
	movs	r0, #0
.LBB187_177:
	cmp.w	r10, #1
	bls.w	.LBB187_361
	cmp.w	r10, #7
	strb.w	r0, [r11, #1]
	bls.w	.LBB187_406
	add	r0, sp, #200
	add.w	r12, r6, #52
	b	.LBB187_265
.LBB187_180:
	movs	r0, #2
	b	.LBB187_182
.LBB187_181:
	mov	r0, r3
.LBB187_182:
	cmp	r1, #1
	bls.w	.LBB187_362
	cmp	r1, #7
	mov	r10, r1
	strb.w	r0, [r11, #1]
	bls.w	.LBB187_409
	add	r0, sp, #200
	mov	r8, r4
	rev	r2, r2
	str.w	r2, [r11, #4]
	mov	r2, r0
	add.w	lr, r11, #8
	ldm.w	r12!, {r1, r3, r4, r5, r6}
	stm	r2!, {r1, r3, r4, r5, r6}
	ldm.w	r12, {r1, r3, r4, r5, r6}
	stm	r2!, {r1, r3, r4, r5, r6}
	add	r1, sp, #168
	str.w	lr, [sp, #168]
	sub.w	r5, r10, #8
	str	r5, [sp, #172]
	bl	smoltcp::wire::ipv6::Repr::emit::ha6a20889af1b4d41
	cmp	r5, #39
	bls.w	.LBB187_396
	sub.w	r0, r10, #48
	cmp	r0, r9
	bne.w	.LBB187_412
	mov	r5, r10
	add.w	r0, r11, #48
	mov	r1, r8
	mov	r2, r9
	b	.LBB187_298
.LBB187_187:
	subs	r0, #1
	mov	r5, r4
	cmp	r0, #4
	blo.w	.LBB187_279
.LBB187_188:
	movs	r6, #4
	b	.LBB187_279
.LBB187_189:
	str	r2, [sp, #16]
	add	r0, sp, #168
	str	r1, [sp, #12]
	mov	r10, r4
	str	r0, [sp, #92]
	str	r5, [sp, #84]
	ldm.w	r12, {r1, r2, r3, r4, r5, r6}
	stm	r0!, {r1, r2, r3, r4, r5, r6}
	ldr	r5, [sp, #84]
	ldr.w	r0, [lr, #4]
	cmp	r5, #0
	ldr.w	r1, [lr, #7]
	str.w	r1, [sp, #163]
	str	r0, [sp, #160]
	ldr.w	r0, [lr]
	str	r0, [sp, #156]
	beq.w	.LBB187_359
	cmp	r5, #1
	mov.w	r0, #134
	strb.w	r0, [r11]
	beq.w	.LBB187_360
	cmp	r5, #4
	mov.w	r0, #0
	strb.w	r0, [r11, #1]
	bls.w	.LBB187_365
	cmp	r5, #5
	ldr	r0, [sp, #88]
	strb.w	r0, [r11, #4]
	beq.w	.LBB187_368
	cmp	r5, #7
	ldr	r0, [sp, #80]
	strb.w	r0, [r11, #5]
	bls.w	.LBB187_424
	movw	r2, #16960
	movs	r3, #0
	movt	r2, #15
	ldr	r0, [sp, #16]
	ldr	r1, [sp, #52]
	mov	r4, r10
	bl	__aeabi_uldivmod
	rev	r0, r0
	cmp	r5, #11
	lsr.w	r0, r0, #16
	strh.w	r0, [r11, #6]
	bls.w	.LBB187_425
	mov.w	r2, #1000
	movs	r3, #0
	ldr	r0, [sp, #48]
	mov	r1, r8
	bl	__aeabi_uldivmod
	cmp	r5, #15
	rev	r0, r0
	str.w	r0, [r11, #8]
	bls.w	.LBB187_426
	mov.w	r2, #1000
	movs	r3, #0
	ldrd	r1, r0, [sp, #36]
	movs	r6, #0
	bl	__aeabi_uldivmod
	ldr	r1, [sp, #76]
	lsls	r1, r1, #31
	rev	r0, r0
	str.w	r0, [r11, #12]
	beq	.LBB187_198
	add.w	r0, r11, #16
	str	r0, [sp, #192]
	sub.w	r0, r5, #16
	str	r0, [sp, #196]
	ldr.w	r0, [r9, #3]
	str	r0, [sp, #204]
	ldr.w	r0, [r9]
	str.w	r0, [sp, #201]
	add	r0, sp, #200
	add	r1, sp, #192
	strb.w	r6, [sp, #200]
	bl	smoltcp::wire::ndiscoption::Repr::emit::h27a83c9e81ae302d
	ldrb.w	r0, [sp, #201]
	adds	r0, #9
	bic	r6, r0, #7
.LBB187_198:
	ldr	r0, [sp, #72]
	cmp	r0, #1
	bne.w	.LBB187_274
	ldrb.w	r0, [r11]
	movs	r2, #8
	ldr.w	r10, [sp, #96]
	sub.w	r1, r0, #128
	cmp	r1, #15
	bhi.w	.LBB187_289
	movs	r0, #28
.LCPI187_9:
	tbh	[pc, r1, lsl #1]
.LJTI187_10:
	.short	(.LBB187_343-(.LCPI187_9+4))/2
	.short	(.LBB187_343-(.LCPI187_9+4))/2
	.short	(.LBB187_341-(.LCPI187_9+4))/2
	.short	(.LBB187_290-(.LCPI187_9+4))/2
	.short	(.LBB187_290-(.LCPI187_9+4))/2
	.short	(.LBB187_343-(.LCPI187_9+4))/2
	.short	(.LBB187_339-(.LCPI187_9+4))/2
	.short	(.LBB187_202-(.LCPI187_9+4))/2
	.short	(.LBB187_202-(.LCPI187_9+4))/2
	.short	(.LBB187_340-(.LCPI187_9+4))/2
	.short	(.LBB187_290-(.LCPI187_9+4))/2
	.short	(.LBB187_290-(.LCPI187_9+4))/2
	.short	(.LBB187_290-(.LCPI187_9+4))/2
	.short	(.LBB187_290-(.LCPI187_9+4))/2
	.short	(.LBB187_290-(.LCPI187_9+4))/2
	.short	(.LBB187_343-(.LCPI187_9+4))/2
	.p2align	1
.LBB187_202:
	movs	r0, #24
	b	.LBB187_341
.LBB187_203:
	ldr.w	r0, [r9, #3]
	cmp	r5, #0
	str.w	r0, [sp, #159]
	ldr.w	r0, [r9]
	str	r0, [sp, #156]
	beq.w	.LBB187_359
	cmp	r5, #1
	ldr.w	r10, [sp, #96]
	mov.w	r0, #135
	strb.w	r0, [r11]
	beq.w	.LBB187_360
	movs	r0, #0
	strb.w	r0, [r11, #1]
	add	r0, sp, #120
	mov	r8, r6
	mov	r6, r2
	bl	smoltcp::wire::icmpv6::Packet<T>::clear_reserved::heeabc31498d221e9
	cmp	r5, #23
	bls.w	.LBB187_416
	ldr	r0, [sp, #88]
	strb.w	r0, [r11, #8]
	ldr	r0, [sp, #80]
	strb.w	r0, [r11, #9]
	ldr	r0, [sp, #76]
	strb.w	r0, [r11, #10]
	ldr	r0, [sp, #156]
	str.w	r0, [r11, #11]
	ldr.w	r0, [sp, #159]
	str.w	r0, [r11, #14]
	ldr	r0, [sp, #68]
	strb.w	r0, [r11, #18]
	ldr	r0, [sp, #72]
	str.w	r0, [r11, #19]
	ldr	r0, [sp, #64]
	strb.w	r4, [r11, #23]
	lsls	r0, r0, #31
	beq.w	.LBB187_300
	ldrb.w	r0, [r11]
	movs	r1, #8
	sub.w	r2, r0, #128
	cmp	r2, #15
	bhi.w	.LBB187_283
	movs	r0, #28
.LCPI187_10:
	tbh	[pc, r2, lsl #1]
.LJTI187_9:
	.short	(.LBB187_315-(.LCPI187_10+4))/2
	.short	(.LBB187_315-(.LCPI187_10+4))/2
	.short	(.LBB187_313-(.LCPI187_10+4))/2
	.short	(.LBB187_284-(.LCPI187_10+4))/2
	.short	(.LBB187_284-(.LCPI187_10+4))/2
	.short	(.LBB187_315-(.LCPI187_10+4))/2
	.short	(.LBB187_311-(.LCPI187_10+4))/2
	.short	(.LBB187_210-(.LCPI187_10+4))/2
	.short	(.LBB187_210-(.LCPI187_10+4))/2
	.short	(.LBB187_312-(.LCPI187_10+4))/2
	.short	(.LBB187_284-(.LCPI187_10+4))/2
	.short	(.LBB187_284-(.LCPI187_10+4))/2
	.short	(.LBB187_284-(.LCPI187_10+4))/2
	.short	(.LBB187_284-(.LCPI187_10+4))/2
	.short	(.LBB187_284-(.LCPI187_10+4))/2
	.short	(.LBB187_315-(.LCPI187_10+4))/2
	.p2align	1
.LBB187_210:
	movs	r1, #24
	b	.LBB187_315
.LBB187_211:
	ldr.w	r0, [r9, #3]
	cmp	r5, #0
	str.w	r0, [sp, #159]
	ldr.w	r0, [r9]
	str	r0, [sp, #156]
	beq.w	.LBB187_359
	cmp	r5, #1
	ldr.w	r10, [sp, #96]
	mov.w	r0, #136
	strb.w	r0, [r11]
	beq.w	.LBB187_360
	movs	r0, #0
	strb.w	r0, [r11, #1]
	add	r0, sp, #120
	mov	r8, r6
	mov	r6, r2
	bl	smoltcp::wire::icmpv6::Packet<T>::clear_reserved::heeabc31498d221e9
	cmp	r5, #4
	bls.w	.LBB187_366
	cmp	r5, #23
	ldr	r0, [sp, #88]
	strb.w	r0, [r11, #4]
	bls.w	.LBB187_416
	ldr	r0, [sp, #80]
	strb.w	r0, [r11, #8]
	ldr	r0, [sp, #76]
	strb.w	r0, [r11, #9]
	ldr	r0, [sp, #156]
	str.w	r0, [r11, #10]
	ldr.w	r0, [sp, #159]
	str.w	r0, [r11, #13]
	ldr	r0, [sp, #68]
	strb.w	r0, [r11, #17]
	ldr	r0, [sp, #72]
	str.w	r0, [r11, #18]
	ldr	r0, [sp, #60]
	strb.w	r4, [r11, #22]
	lsls	r0, r0, #31
	ldr	r0, [sp, #64]
	strb.w	r0, [r11, #23]
	beq.w	.LBB187_300
	ldrb.w	r0, [r11]
	movs	r1, #8
	sub.w	r2, r0, #128
	cmp	r2, #15
	bhi.w	.LBB187_287
	movs	r0, #28
.LCPI187_11:
	tbh	[pc, r2, lsl #1]
.LJTI187_8:
	.short	(.LBB187_337-(.LCPI187_11+4))/2
	.short	(.LBB187_337-(.LCPI187_11+4))/2
	.short	(.LBB187_335-(.LCPI187_11+4))/2
	.short	(.LBB187_288-(.LCPI187_11+4))/2
	.short	(.LBB187_288-(.LCPI187_11+4))/2
	.short	(.LBB187_337-(.LCPI187_11+4))/2
	.short	(.LBB187_333-(.LCPI187_11+4))/2
	.short	(.LBB187_219-(.LCPI187_11+4))/2
	.short	(.LBB187_219-(.LCPI187_11+4))/2
	.short	(.LBB187_334-(.LCPI187_11+4))/2
	.short	(.LBB187_288-(.LCPI187_11+4))/2
	.short	(.LBB187_288-(.LCPI187_11+4))/2
	.short	(.LBB187_288-(.LCPI187_11+4))/2
	.short	(.LBB187_288-(.LCPI187_11+4))/2
	.short	(.LBB187_288-(.LCPI187_11+4))/2
	.short	(.LBB187_337-(.LCPI187_11+4))/2
	.p2align	1
.LBB187_219:
	movs	r1, #24
	b	.LBB187_337
.LBB187_220:
	ldr.w	r0, [r9, #3]
	str.w	r0, [sp, #151]
	strd	r2, r6, [sp, #16]
	str	r1, [sp, #12]
	add	r1, sp, #168
	ldr.w	r0, [r9]
	str	r0, [sp, #148]
	str	r1, [sp, #8]
	mov	r0, r1
	mov	r8, r4
	mov	r10, r5
	ldm.w	r12, {r1, r2, r3, r4, r5, r6}
	stm	r0!, {r1, r2, r3, r4, r5, r6}
	ldr.w	r0, [lr, #4]
	cmp.w	r10, #0
	ldr.w	r1, [lr, #7]
	str.w	r1, [sp, #163]
	str	r0, [sp, #160]
	ldr.w	r0, [lr]
	str	r0, [sp, #156]
	beq.w	.LBB187_359
	mov	r5, r10
	cmp.w	r10, #1
	mov.w	r0, #137
	strb.w	r0, [r11]
	beq.w	.LBB187_360
	movs	r0, #0
	strb.w	r0, [r11, #1]
	add	r0, sp, #120
	bl	smoltcp::wire::icmpv6::Packet<T>::clear_reserved::heeabc31498d221e9
	cmp	r5, #23
	ldr	r1, [sp, #20]
	bls.w	.LBB187_416
	ldr	r0, [sp, #88]
	strb.w	r0, [r11, #8]
	ldr	r0, [sp, #80]
	strb.w	r0, [r11, #9]
	ldr	r0, [sp, #76]
	strb.w	r0, [r11, #10]
	ldr	r0, [sp, #148]
	str.w	r0, [r11, #11]
	ldr.w	r0, [sp, #151]
	str.w	r0, [r11, #14]
	ldr	r0, [sp, #68]
	strb.w	r0, [r11, #18]
	ldr	r0, [sp, #72]
	str.w	r0, [r11, #19]
	cmp	r5, #39
	ldr	r0, [sp, #16]
	strb.w	r8, [r11, #23]
	bls.w	.LBB187_427
	ldr.w	r9, [sp, #92]
	strb.w	r1, [r11, #26]
	ldr	r1, [sp, #56]
	str.w	r1, [r11, #27]
	str.w	r0, [r9]
	ldr	r0, [sp, #52]
	ldr	r1, [sp, #48]
	str.w	r0, [r9, #4]
	ldr	r2, [sp, #64]
	lsls	r0, r1, #23
	strb.w	r2, [r11, #24]
	ldr	r2, [sp, #60]
	strb.w	r2, [r11, #25]
	strb.w	r1, [r11, #39]
	bmi.w	.LBB187_270
	movs	r0, #0
	ldr.w	r8, [sp, #44]
	b	.LBB187_321
.LBB187_226:
	movs	r0, #3
	b	.LBB187_240
.LBB187_227:
	movs	r0, #4
	b	.LBB187_240
.LBB187_228:
	movs	r0, #5
	b	.LBB187_240
.LBB187_229:
	movs	r0, #6
	b	.LBB187_240
.LBB187_230:
	movs	r0, #7
	b	.LBB187_240
.LBB187_231:
	movs	r0, #8
	b	.LBB187_240
.LBB187_232:
	movs	r0, #9
	b	.LBB187_240
.LBB187_233:
	movs	r0, #10
	b	.LBB187_240
.LBB187_234:
	movs	r0, #11
	b	.LBB187_240
.LBB187_235:
	movs	r0, #12
	b	.LBB187_240
.LBB187_236:
	movs	r0, #13
	b	.LBB187_240
.LBB187_237:
	movs	r0, #14
	b	.LBB187_240
.LBB187_238:
	movs	r0, #15
	b	.LBB187_240
.LBB187_239:
	mov	r0, r4
.LBB187_240:
	mov	r3, r0
.LBB187_241:
	cmp	r1, #7
	strb.w	r3, [r11, #1]
	bls.w	.LBB187_400
	add.w	r0, r11, #8
	ldrb.w	r2, [r10, #12]
	str	r0, [sp, #168]
	mov	r4, r1
	sub.w	r5, r1, #8
	add	r0, sp, #200
	add	r1, sp, #168
	str	r5, [sp, #172]
	bl	smoltcp::wire::ipv4::Repr::emit::h67afef602fc405e1
	cmp	r5, #19
	bls.w	.LBB187_401
	sub.w	r0, r4, #28
	cmp	r0, r9
	bne.w	.LBB187_402
	mov	r5, r4
	add.w	r0, r11, #28
	mov	r1, r8
	mov	r2, r9
.LBB187_245:
	bl	__aeabi_memcpy
	ldrb.w	r0, [r10, #15]
	lsls	r0, r0, #31
	mov.w	r0, #0
	strh.w	r0, [r11, #2]
	bne.w	.LBB187_78
	mov	r0, r11
	mov	r1, r5
	bl	smoltcp::wire::ip::checksum::data::hebb229fc732545ff
	b	.LBB187_303
.LBB187_247:
	cmp	r4, #24
	beq.w	.LBB187_369
	ldrb.w	r0, [r11, #24]
	mov	r5, r4
	and	r0, r0, #7
.LBB187_249:
	ldr	r1, [sp, #76]
	strb.w	r0, [r11, #24]
	cmp	r1, #8
	bhs.w	.LBB187_420
	and	r0, r0, #8
	cmp	r5, #25
	orr.w	r0, r0, r1
	strb.w	r0, [r11, #24]
	beq.w	.LBB187_363
	cmp	r5, #27
	ldr	r0, [sp, #72]
	strb.w	r0, [r11, #25]
	bls.w	.LBB187_421
	ldrb.w	r2, [r11]
	ldr	r1, [sp, #64]
	movs	r6, #8
	sub.w	r0, r2, #128
	cmp	r0, #15
	rev16	r1, r1
	strh.w	r1, [r11, #26]
	bhi	.LBB187_268
.LCPI187_12:
	tbb	[pc, r0]
.LJTI187_4:
	.byte	(.LBB187_295-(.LCPI187_12+4))/2
	.byte	(.LBB187_295-(.LCPI187_12+4))/2
	.byte	(.LBB187_291-(.LCPI187_12+4))/2
	.byte	(.LBB187_269-(.LCPI187_12+4))/2
	.byte	(.LBB187_269-(.LCPI187_12+4))/2
	.byte	(.LBB187_295-(.LCPI187_12+4))/2
	.byte	(.LBB187_292-(.LCPI187_12+4))/2
	.byte	(.LBB187_255-(.LCPI187_12+4))/2
	.byte	(.LBB187_255-(.LCPI187_12+4))/2
	.byte	(.LBB187_293-(.LCPI187_12+4))/2
	.byte	(.LBB187_269-(.LCPI187_12+4))/2
	.byte	(.LBB187_269-(.LCPI187_12+4))/2
	.byte	(.LBB187_269-(.LCPI187_12+4))/2
	.byte	(.LBB187_269-(.LCPI187_12+4))/2
	.byte	(.LBB187_269-(.LCPI187_12+4))/2
	.byte	(.LBB187_295-(.LCPI187_12+4))/2
	.p2align	1
.LBB187_255:
	movs	r6, #24
	b	.LBB187_295
.LBB187_256:
	movs	r0, #2
	b	.LBB187_262
.LBB187_257:
	movs	r0, #3
	b	.LBB187_262
.LBB187_258:
	movs	r0, #4
	b	.LBB187_262
.LBB187_259:
	movs	r0, #5
	b	.LBB187_262
.LBB187_260:
	movs	r0, #6
	b	.LBB187_262
.LBB187_261:
	mov	r0, r2
.LBB187_262:
	cmp.w	r10, #1
	bls.w	.LBB187_361
	cmp.w	r10, #7
	strb.w	r0, [r11, #1]
	bls.w	.LBB187_406
	mov	r8, r6
	add	r0, sp, #200
.LBB187_265:
	mov	r2, r0
	add.w	lr, r11, #8
	ldm.w	r12!, {r1, r3, r4, r5, r6}
	stm	r2!, {r1, r3, r4, r5, r6}
	ldm.w	r12, {r1, r3, r4, r5, r6}
	stm	r2!, {r1, r3, r4, r5, r6}
	add	r1, sp, #168
	str.w	lr, [sp, #168]
	sub.w	r5, r10, #8
	str	r5, [sp, #172]
	bl	smoltcp::wire::ipv6::Repr::emit::ha6a20889af1b4d41
	cmp	r5, #39
	bls.w	.LBB187_396
	sub.w	r2, r10, #48
	cmp	r2, r8
	bne.w	.LBB187_398
	mov	r5, r10
	add.w	r0, r11, #48
	mov	r1, r9
	b	.LBB187_298
.LBB187_268:
	subs	r0, r2, #1
	cmp	r0, #4
	blo	.LBB187_295
.LBB187_269:
	movs	r6, #4
	b	.LBB187_295
.LBB187_270:
	ldrb.w	r2, [r11]
	movs	r0, #8
	sub.w	r1, r2, #128
	cmp	r1, #15
	bhi	.LBB187_285
	ldr.w	r8, [sp, #44]
	ldrd	r6, r3, [sp, #28]
.LCPI187_13:
	tbb	[pc, r1]
.LJTI187_6:
	.byte	(.LBB187_320-(.LCPI187_13+4))/2
	.byte	(.LBB187_320-(.LCPI187_13+4))/2
	.byte	(.LBB187_317-(.LCPI187_13+4))/2
	.byte	(.LBB187_286-(.LCPI187_13+4))/2
	.byte	(.LBB187_286-(.LCPI187_13+4))/2
	.byte	(.LBB187_320-(.LCPI187_13+4))/2
	.byte	(.LBB187_318-(.LCPI187_13+4))/2
	.byte	(.LBB187_273-(.LCPI187_13+4))/2
	.byte	(.LBB187_273-(.LCPI187_13+4))/2
	.byte	(.LBB187_319-(.LCPI187_13+4))/2
	.byte	(.LBB187_286-(.LCPI187_13+4))/2
	.byte	(.LBB187_286-(.LCPI187_13+4))/2
	.byte	(.LBB187_286-(.LCPI187_13+4))/2
	.byte	(.LBB187_286-(.LCPI187_13+4))/2
	.byte	(.LBB187_286-(.LCPI187_13+4))/2
	.byte	(.LBB187_320-(.LCPI187_13+4))/2
	.p2align	1
.LBB187_273:
	movs	r0, #24
	b	.LBB187_320
.LBB187_274:
	ldr.w	r10, [sp, #96]
	b	.LBB187_345
.LBB187_275:
	movs	r0, #16
	b	.LBB187_277
.LBB187_276:
	movs	r0, #40
.LBB187_277:
	cmp	r0, r5
	bhi.w	.LBB187_417
	mov	r6, r0
.LBB187_279:
	subs	r0, r5, r6
	cmp	r0, r10
	bne.w	.LBB187_415
	mov	r1, r9
	b	.LBB187_297
.LBB187_281:
	subs	r1, r2, #1
	cmp	r1, #4
	blo	.LBB187_309
.LBB187_282:
	movs	r0, #4
	b	.LBB187_309
.LBB187_283:
	subs	r0, #1
	cmp	r0, #4
	blo.w	.LBB187_315
.LBB187_284:
	movs	r1, #4
	b	.LBB187_315
.LBB187_285:
	subs	r1, r2, #1
	ldr.w	r8, [sp, #44]
	cmp	r1, #4
	ldrd	r6, r3, [sp, #28]
	blo.w	.LBB187_320
.LBB187_286:
	movs	r0, #4
	b	.LBB187_320
.LBB187_287:
	subs	r0, #1
	cmp	r0, #4
	blo.w	.LBB187_337
.LBB187_288:
	movs	r1, #4
	b	.LBB187_337
.LBB187_289:
	subs	r0, #1
	cmp	r0, #4
	blo.w	.LBB187_343
.LBB187_290:
	movs	r2, #4
	b	.LBB187_343
.LBB187_291:
	movs	r6, #28
	b	.LBB187_295
.LBB187_292:
	movs	r6, #16
	b	.LBB187_295
.LBB187_293:
	cmp	r5, #39
	bls.w	.LBB187_432
	movs	r6, #40
.LBB187_295:
	subs	r0, r5, r6
	ldr.w	r10, [sp, #68]
	cmp	r0, r10
	bne.w	.LBB187_422
	ldr	r1, [sp, #60]
.LBB187_297:
	add.w	r0, r11, r6
	mov	r2, r10
.LBB187_298:
	bl	__aeabi_memcpy
.LBB187_299:
	ldr.w	r10, [sp, #96]
.LBB187_300:
	ldrb.w	r0, [r10, #16]
	lsls	r0, r0, #31
	bne	.LBB187_304
	cmp	r5, #3
	bls.w	.LBB187_392
	movs	r0, #0
	strh.w	r0, [r11, #2]
	add	r0, sp, #100
	add	r1, sp, #128
	movs	r2, #7
	mov	r3, r5
	bl	smoltcp::wire::ip::checksum::pseudo_header::ha771da54de6c08b8
	mov	r4, r0
	mov	r0, r11
	mov	r1, r5
	bl	smoltcp::wire::ip::checksum::data::hebb229fc732545ff
	uxth	r0, r0
	uxtah	r0, r0, r4
	lsrs	r1, r0, #16
	uxtah	r0, r1, r0
	add.w	r0, r0, r0, lsr #16
.LBB187_303:
	mvns	r0, r0
	rev	r0, r0
	lsrs	r0, r0, #16
	strh.w	r0, [r11, #2]
	add	sp, #260
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB187_304:
	cmp	r5, #3
	bls.w	.LBB187_392
	movs	r0, #0
	strh.w	r0, [r11, #2]
	add	sp, #260
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB187_306:
	movs	r0, #28
	b	.LBB187_309
.LBB187_307:
	movs	r0, #16
	b	.LBB187_309
.LBB187_308:
	movs	r0, #40
.LBB187_309:
	cmp	r0, r5
	bhi.w	.LBB187_417
	add.w	r1, r11, r0
	subs	r0, r5, r0
	str	r0, [sp, #172]
	ldr	r0, [sp, #80]
	strb.w	r0, [sp, #201]
	ldr	r0, [sp, #76]
	strb.w	r0, [sp, #202]
	ldr	r0, [sp, #156]
	str.w	r0, [sp, #203]
	ldrb.w	r0, [sp, #160]
	str	r1, [sp, #168]
	strb.w	r0, [sp, #207]
	b	.LBB187_316
.LBB187_311:
	movs	r1, #16
	b	.LBB187_315
.LBB187_312:
	movs	r0, #40
.LBB187_313:
	cmp	r0, r5
	bhi.w	.LBB187_417
	mov	r1, r0
.LBB187_315:
	add.w	r0, r11, r1
	str	r0, [sp, #168]
	subs	r0, r5, r1
	str	r0, [sp, #172]
	ldr	r0, [sp, #60]
	strb.w	r0, [sp, #201]
	strb.w	r8, [sp, #202]
	ldr	r0, [sp, #56]
	str.w	r0, [sp, #203]
	strb.w	r6, [sp, #207]
.LBB187_316:
	movs	r0, #0
	b	.LBB187_338
.LBB187_317:
	movs	r0, #28
	b	.LBB187_320
.LBB187_318:
	movs	r0, #16
	b	.LBB187_320
.LBB187_319:
	movs	r0, #40
.LBB187_320:
	add.w	r1, r11, r0
	subs	r0, r5, r0
	str	r0, [sp, #196]
	ldr	r0, [sp, #40]
	strb.w	r0, [sp, #207]
	movs	r0, #1
	str	r1, [sp, #192]
	add	r1, sp, #192
	strb.w	r0, [sp, #200]
	add	r0, sp, #200
	strh.w	r6, [sp, #205]
	str.w	r3, [sp, #201]
	bl	smoltcp::wire::ndiscoption::Repr::emit::h27a83c9e81ae302d
	movs	r0, #8
.LBB187_321:
	cmp.w	r8, #11
	beq.w	.LBB187_299
	ldrb.w	r3, [r11]
	movs	r2, #8
	sub.w	r1, r3, #128
	cmp	r1, #15
	bhi	.LBB187_326
.LCPI187_14:
	tbb	[pc, r1]
.LJTI187_7:
	.byte	(.LBB187_331-(.LCPI187_14+4))/2
	.byte	(.LBB187_331-(.LCPI187_14+4))/2
	.byte	(.LBB187_328-(.LCPI187_14+4))/2
	.byte	(.LBB187_327-(.LCPI187_14+4))/2
	.byte	(.LBB187_327-(.LCPI187_14+4))/2
	.byte	(.LBB187_331-(.LCPI187_14+4))/2
	.byte	(.LBB187_329-(.LCPI187_14+4))/2
	.byte	(.LBB187_325-(.LCPI187_14+4))/2
	.byte	(.LBB187_325-(.LCPI187_14+4))/2
	.byte	(.LBB187_330-(.LCPI187_14+4))/2
	.byte	(.LBB187_327-(.LCPI187_14+4))/2
	.byte	(.LBB187_327-(.LCPI187_14+4))/2
	.byte	(.LBB187_327-(.LCPI187_14+4))/2
	.byte	(.LBB187_327-(.LCPI187_14+4))/2
	.byte	(.LBB187_327-(.LCPI187_14+4))/2
	.byte	(.LBB187_331-(.LCPI187_14+4))/2
	.p2align	1
.LBB187_325:
	movs	r2, #24
	b	.LBB187_331
.LBB187_326:
	subs	r1, r3, #1
	cmp	r1, #4
	blo	.LBB187_331
.LBB187_327:
	movs	r2, #4
	b	.LBB187_331
.LBB187_328:
	movs	r2, #28
	b	.LBB187_331
.LBB187_329:
	movs	r2, #16
	b	.LBB187_331
.LBB187_330:
	movs	r2, #40
.LBB187_331:
	subs	r1, r5, r2
	cmp	r1, r0
	blo.w	.LBB187_428
	add	r2, r11
	ldr.w	lr, [sp, #8]
	add	r2, r0
	subs	r0, r1, r0
	str	r0, [sp, #196]
	ldr	r0, [sp, #36]
	str	r0, [sp, #204]
	ldr	r0, [sp, #24]
	str	r0, [sp, #212]
	add	r0, sp, #200
	ldr	r1, [sp, #12]
	str	r2, [sp, #192]
	str	r1, [sp, #208]
	add.w	r1, r0, #16
	ldm.w	lr, {r2, r3, r4, r5, r6, r12}
	stm.w	r1, {r2, r3, r4, r5, r6, r12}
	ldr.w	r1, [sp, #163]
	str	r1, [sp, #248]
	ldr	r1, [sp, #160]
	str.w	r1, [sp, #245]
	ldr	r1, [sp, #156]
	str.w	r1, [sp, #241]
	movs	r1, #3
	strb.w	r1, [sp, #200]
	add	r1, sp, #192
	strb.w	r8, [sp, #240]
	bl	smoltcp::wire::ndiscoption::Repr::emit::h27a83c9e81ae302d
	mov	r5, r10
	b	.LBB187_299
.LBB187_333:
	movs	r1, #16
	b	.LBB187_337
.LBB187_334:
	movs	r0, #40
.LBB187_335:
	cmp	r0, r5
	bhi.w	.LBB187_417
	mov	r1, r0
.LBB187_337:
	add.w	r0, r11, r1
	str	r0, [sp, #168]
	subs	r0, r5, r1
	str	r0, [sp, #172]
	ldr	r0, [sp, #56]
	strb.w	r8, [sp, #201]
	str.w	r0, [sp, #202]
	movs	r0, #1
	strh.w	r6, [sp, #206]
.LBB187_338:
	strb.w	r0, [sp, #200]
	add	r0, sp, #200
	add	r1, sp, #168
	bl	smoltcp::wire::ndiscoption::Repr::emit::h27a83c9e81ae302d
	b	.LBB187_300
.LBB187_339:
	movs	r2, #16
	b	.LBB187_343
.LBB187_340:
	movs	r0, #40
.LBB187_341:
	cmp	r0, r5
	bhi.w	.LBB187_417
	mov	r2, r0
.LBB187_343:
	subs	r1, r5, r2
	cmp	r1, r6
	blo.w	.LBB187_429
	add.w	r0, r11, r2
	str	r4, [sp, #204]
	add	r0, r6
	str	r0, [sp, #192]
	subs	r0, r1, r6
	str	r0, [sp, #196]
	movs	r0, #4
	strb.w	r0, [sp, #200]
	add	r0, sp, #200
	add	r1, sp, #192
	bl	smoltcp::wire::ndiscoption::Repr::emit::h27a83c9e81ae302d
	adds	r6, #8
.LBB187_345:
	ldr	r0, [sp, #12]
	cmp	r0, #1
	bne.w	.LBB187_300
	ldrb.w	r0, [r11]
	movs	r2, #8
	sub.w	r1, r0, #128
	cmp	r1, #15
	bhi	.LBB187_350
	movs	r0, #28
.LCPI187_15:
	tbb	[pc, r1]
.LJTI187_11:
	.byte	(.LBB187_356-(.LCPI187_15+4))/2
	.byte	(.LBB187_356-(.LCPI187_15+4))/2
	.byte	(.LBB187_354-(.LCPI187_15+4))/2
	.byte	(.LBB187_351-(.LCPI187_15+4))/2
	.byte	(.LBB187_351-(.LCPI187_15+4))/2
	.byte	(.LBB187_356-(.LCPI187_15+4))/2
	.byte	(.LBB187_352-(.LCPI187_15+4))/2
	.byte	(.LBB187_349-(.LCPI187_15+4))/2
	.byte	(.LBB187_349-(.LCPI187_15+4))/2
	.byte	(.LBB187_353-(.LCPI187_15+4))/2
	.byte	(.LBB187_351-(.LCPI187_15+4))/2
	.byte	(.LBB187_351-(.LCPI187_15+4))/2
	.byte	(.LBB187_351-(.LCPI187_15+4))/2
	.byte	(.LBB187_351-(.LCPI187_15+4))/2
	.byte	(.LBB187_351-(.LCPI187_15+4))/2
	.byte	(.LBB187_356-(.LCPI187_15+4))/2
	.p2align	1
.LBB187_349:
	movs	r0, #24
	b	.LBB187_354
.LBB187_350:
	subs	r0, #1
	cmp	r0, #4
	blo	.LBB187_356
.LBB187_351:
	movs	r2, #4
	b	.LBB187_356
.LBB187_352:
	movs	r2, #16
	b	.LBB187_356
.LBB187_353:
	movs	r0, #40
.LBB187_354:
	cmp	r0, r5
	bhi.w	.LBB187_417
	mov	r2, r0
.LBB187_356:
	subs	r1, r5, r2
	cmp	r1, r6
	blo.w	.LBB187_430
	add.w	r0, r11, r2
	subs	r1, r1, r6
	add	r0, r6
	str	r0, [sp, #192]
	add	r0, sp, #200
	ldr.w	lr, [sp, #92]
	str	r1, [sp, #196]
	add.w	r1, r0, #8
	ldm.w	lr, {r2, r3, r4, r5, r6, r12}
	stm.w	r1, {r2, r3, r4, r5, r6, r12}
	ldr	r1, [sp, #44]
	strb.w	r1, [sp, #232]
	ldr	r1, [sp, #156]
	str.w	r1, [sp, #233]
	ldr	r1, [sp, #160]
	str.w	r1, [sp, #237]
	ldr.w	r1, [sp, #163]
	str	r1, [sp, #240]
	ldr	r1, [sp, #20]
	str	r1, [sp, #244]
	movs	r1, #2
	strb.w	r1, [sp, #200]
	add	r1, sp, #192
	bl	smoltcp::wire::ndiscoption::Repr::emit::h27a83c9e81ae302d
	ldr	r5, [sp, #84]
	b	.LBB187_300
.LBB187_358:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.288
	movs	r0, #1
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.288
	mov	r1, r5
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB187_359:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.347
	movs	r0, #0
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.347
	movs	r1, #0
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB187_360:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.348
	movs	r0, #1
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.348
	movs	r1, #1
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB187_361:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.348
	movs	r0, #1
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.348
	mov	r1, r10
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB187_362:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.348
	movs	r0, #1
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.348
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB187_363:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.529
	movs	r0, #25
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.529
	movs	r1, #25
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB187_364:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.525
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.525
	b	.LBB187_370
.LBB187_365:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.535
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.535
	b	.LBB187_367
.LBB187_366:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.541
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.541
.LBB187_367:
	movs	r0, #4
	mov	r1, r5
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB187_368:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.536
	movs	r0, #5
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.536
	movs	r1, #5
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB187_369:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.526
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.526
.LBB187_370:
	movs	r0, #24
	movs	r1, #24
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB187_371:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.674
	movs	r0, #2
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.674
	mov	r1, r5
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB187_372:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.675
	movs	r0, #4
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.675
	mov	r1, r5
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB187_373:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.676
	movs	r0, #6
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.676
	mov	r1, r4
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB187_374:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.679
	movs	r0, #8
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.679
	bl	core::slice::index::slice_index_order_fail::h8a53f055fb6ee074
	.inst.n	0xdefe
.LBB187_375:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.679
	mov	r0, r1
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.679
	mov	r1, r4
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB187_376:
	movw	r3, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.34
	mov	r1, r2
	movt	r3, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.34
	b	.LBB187_399
.LBB187_377:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.676
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.676
	movs	r0, #6
	mov	r1, r5
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB187_378:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.679
	movs	r0, #8
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.679
	mov	r1, r4
	bl	core::slice::index::slice_index_order_fail::h8a53f055fb6ee074
	.inst.n	0xdefe
.LBB187_379:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.679
	mov	r0, r4
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.679
	b	.LBB187_411
.LBB187_380:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.204
	movs	r0, #108
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.204
	mov	r1, r5
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB187_381:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.205
	movs	r0, #236
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.205
	mov	r1, r5
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB187_382:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.206
	movs	r0, #240
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.206
	mov	r1, r5
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB187_383:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.611
	movs	r0, #4
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.611
	mov	r1, r5
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB187_384:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.612
	movs	r0, #8
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.612
	mov	r1, r5
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB187_385:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.613
	movs	r0, #12
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.613
	mov	r1, r5
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB187_386:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.614
	movs	r0, #16
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.614
	mov	r1, r5
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB187_387:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.616
	movs	r0, #20
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.616
	bl	core::slice::index::slice_index_order_fail::h8a53f055fb6ee074
	.inst.n	0xdefe
.LBB187_388:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.616
	mov	r0, r1
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.616
	mov	r1, r5
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB187_389:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.615
	movs	r0, #20
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.615
	mov	r1, r5
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB187_390:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.617
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.617
	mov	r1, r5
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB187_391:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.631
	ldr	r0, [sp, #76]
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.631
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB187_392:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.357
	movs	r0, #4
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.357
	mov	r1, r5
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB187_393:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.289
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.289
	movs	r0, #6
	mov	r1, r5
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB187_394:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.290
	movs	r0, #8
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.290
	mov	r1, r5
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB187_395:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.677
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.677
	b	.LBB187_410
.LBB187_396:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.366
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.366
.LBB187_397:
	movs	r0, #40
	mov	r1, r5
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB187_398:
	movw	r3, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.367
	mov	r0, r2
	movt	r3, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.367
	mov	r1, r8
.LBB187_399:
	mov	r2, r3
	bl	core::slice::<impl [T]>::copy_from_slice::len_mismatch_fail::h7bf74017f2463c91
	.inst.n	0xdefe
.LBB187_400:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.291
	movs	r0, #8
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.291
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB187_401:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.293
	movs	r0, #20
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.293
	mov	r1, r5
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB187_402:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.294
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.294
	b	.LBB187_413
.LBB187_403:
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.401
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.402
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.401
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.402
	movs	r1, #29
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB187_404:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.358
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.358
	movs	r0, #6
	mov	r1, r5
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB187_405:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.359
	movs	r0, #8
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.359
	mov	r1, r5
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB187_406:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.362
	movs	r0, #8
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.362
	mov	r1, r10
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB187_407:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.360
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.360
	b	.LBB187_410
.LBB187_408:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.366
	movs	r0, #40
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.366
	mov	r1, r6
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB187_409:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.361
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.361
.LBB187_410:
	movs	r0, #8
.LBB187_411:
	mov	r1, r10
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB187_412:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.367
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.367
.LBB187_413:
	mov	r1, r9
	bl	core::slice::<impl [T]>::copy_from_slice::len_mismatch_fail::h7bf74017f2463c91
	.inst.n	0xdefe
.LBB187_414:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.531
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.531
	b.w	.LBB187_39
.LBB187_415:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.532
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.532
	b	.LBB187_423
.LBB187_416:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.540
	movs	r0, #24
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.540
	mov	r1, r5
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB187_417:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.362
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.362
	mov	r1, r5
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB187_418:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.523
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.523
	movs	r0, #6
	mov	r1, r5
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB187_419:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.524
	movs	r0, #24
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.524
	mov	r1, r4
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB187_420:
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.527
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.528
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.527
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.528
	movs	r1, #27
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB187_421:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.530
	movs	r0, #28
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.530
	mov	r1, r5
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB187_422:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.533
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.533
.LBB187_423:
	mov	r1, r10
	bl	core::slice::<impl [T]>::copy_from_slice::len_mismatch_fail::h7bf74017f2463c91
	.inst.n	0xdefe
.LBB187_424:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.537
	movs	r0, #8
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.537
	mov	r1, r5
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB187_425:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.538
	movs	r0, #12
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.538
	mov	r1, r5
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB187_426:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.539
	movs	r0, #16
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.539
	mov	r1, r5
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB187_427:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.542
	movs	r0, #40
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.542
	mov	r1, r5
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB187_428:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.547
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.547
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB187_429:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.548
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.548
	b	.LBB187_431
.LBB187_430:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.549
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.549
.LBB187_431:
	mov	r0, r6
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB187_432:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.362
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.362
	b	.LBB187_397
.Lfunc_end187:
	.size	smoltcp::iface::interface::IpPacket::emit_payload::hc58717c03a59069e, .Lfunc_end187-smoltcp::iface::interface::IpPacket::emit_payload::hc58717c03a59069e
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp4wire4ipv44Repr4emit17h67afef602fc405e1E,"ax",%progbits
	.p2align	2
	.type	smoltcp::wire::ipv4::Repr::emit::h67afef602fc405e1,%function
	.code	16
	.thumb_func
smoltcp::wire::ipv4::Repr::emit::h67afef602fc405e1:
.Lfunc_begin188:
	.fnstart
	.cfi_startproc
	.save	{r4, r6, r7, lr}
	push	{r4, r6, r7, lr}
	.cfi_def_cfa_offset 16
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r4, -16
	.setfp	r7, sp, #8
	add	r7, sp, #8
	.cfi_def_cfa r7, 8
	mov	r3, r1
	ldr	r1, [r1, #4]
	cmp	r1, #0
	beq.w	.LBB188_23
	ldr	r4, [r3]
	cmp	r1, #1
	mov.w	r3, #69
	strb	r3, [r4]
	beq.w	.LBB188_24
	cmp	r1, #3
	mov.w	r3, #0
	strb	r3, [r4, #1]
	bls.w	.LBB188_27
	ldrh	r3, [r0]
	cmp	r1, #5
	add.w	r3, r3, #20
	rev	r3, r3
	lsr.w	r3, r3, #16
	strh	r3, [r4, #2]
	bls.w	.LBB188_28
	cmp	r1, #7
	mov.w	r3, #0
	strh	r3, [r4, #4]
	bls.w	.LBB188_29
	cmp	r1, #8
	mov.w	r3, #64
	strh	r3, [r4, #6]
	beq.w	.LBB188_25
	ldrb.w	lr, [r0, #12]
	mov.w	r12, #0
	ldrb	r3, [r0, #14]
	strb	r3, [r4, #8]
.LCPI188_0:
	tbb	[pc, lr]
.LJTI188_0:
	.byte	(.LBB188_18-(.LCPI188_0+4))/2
	.byte	(.LBB188_8-(.LCPI188_0+4))/2
	.byte	(.LBB188_9-(.LCPI188_0+4))/2
	.byte	(.LBB188_10-(.LCPI188_0+4))/2
	.byte	(.LBB188_11-(.LCPI188_0+4))/2
	.byte	(.LBB188_12-(.LCPI188_0+4))/2
	.byte	(.LBB188_13-(.LCPI188_0+4))/2
	.byte	(.LBB188_14-(.LCPI188_0+4))/2
	.byte	(.LBB188_15-(.LCPI188_0+4))/2
	.byte	(.LBB188_16-(.LCPI188_0+4))/2
	.byte	(.LBB188_17-(.LCPI188_0+4))/2
	.p2align	1
.LBB188_8:
	mov.w	r12, #1
	b	.LBB188_18
.LBB188_9:
	mov.w	r12, #2
	b	.LBB188_18
.LBB188_10:
	mov.w	r12, #6
	b	.LBB188_18
.LBB188_11:
	mov.w	r12, #17
	b	.LBB188_18
.LBB188_12:
	mov.w	r12, #43
	b	.LBB188_18
.LBB188_13:
	mov.w	r12, #44
	b	.LBB188_18
.LBB188_14:
	mov.w	r12, #58
	b	.LBB188_18
.LBB188_15:
	mov.w	r12, #59
	b	.LBB188_18
.LBB188_16:
	mov.w	r12, #60
	b	.LBB188_18
.LBB188_17:
	ldrb.w	r12, [r0, #13]
.LBB188_18:
	cmp	r1, #9
	bls	.LBB188_26
	cmp	r1, #15
	strb.w	r12, [r4, #9]
	bls	.LBB188_30
	cmp	r1, #19
	ldr	r3, [r0, #4]
	str	r3, [r4, #12]
	bls	.LBB188_31
	ldr	r0, [r0, #8]
	str	r0, [r4, #16]
	lsls	r0, r2, #31
	mov.w	r0, #0
	strh	r0, [r4, #10]
	it	ne
	popne	{r4, r6, r7, pc}
.LBB188_22:
	ldrh	r0, [r4]
	ldrh	r2, [r4, #4]
	ldrh	r1, [r4, #2]
	rev	r0, r0
	lsrs	r0, r0, #16
	rev	r1, r1
	add.w	r0, r0, r1, lsr #16
	ldrh	r1, [r4, #6]
	rev	r2, r2
	add.w	r0, r0, r2, lsr #16
	ldrh	r2, [r4, #8]
	rev	r1, r1
	add.w	r0, r0, r1, lsr #16
	ldrh	r1, [r4, #10]
	rev	r2, r2
	add.w	r0, r0, r2, lsr #16
	ldrh	r2, [r4, #12]
	rev	r1, r1
	add.w	r0, r0, r1, lsr #16
	ldrh	r1, [r4, #14]
	rev	r2, r2
	add.w	r0, r0, r2, lsr #16
	ldrh	r2, [r4, #16]
	rev	r1, r1
	add.w	r0, r0, r1, lsr #16
	ldrh	r1, [r4, #18]
	rev	r2, r2
	add.w	r0, r0, r2, lsr #16
	rev	r1, r1
	add.w	r0, r0, r1, lsr #16
	lsrs	r1, r0, #16
	uxtah	r0, r1, r0
	add.w	r0, r0, r0, lsr #16
	mvns	r0, r0
	rev	r0, r0
	lsrs	r0, r0, #16
	strh	r0, [r4, #10]
	pop	{r4, r6, r7, pc}
.LBB188_23:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.421
	movs	r0, #0
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.421
	movs	r1, #0
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB188_24:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.422
	movs	r0, #1
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.422
	movs	r1, #1
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB188_25:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.426
	movs	r0, #8
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.426
	movs	r1, #8
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB188_26:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.427
	movs	r0, #9
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.427
	movs	r1, #9
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB188_27:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.423
	movs	r0, #4
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.423
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB188_28:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.424
	movs	r0, #6
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.424
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB188_29:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.425
	movs	r0, #8
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.425
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB188_30:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.428
	movs	r0, #16
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.428
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB188_31:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.429
	movs	r0, #20
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.429
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.Lfunc_end188:
	.size	smoltcp::wire::ipv4::Repr::emit::h67afef602fc405e1, .Lfunc_end188-smoltcp::wire::ipv4::Repr::emit::h67afef602fc405e1
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp4wire2ip8checksum4data17hebb229fc732545ffE,"ax",%progbits
	.p2align	1
	.type	smoltcp::wire::ip::checksum::data::hebb229fc732545ff,%function
	.code	16
	.thumb_func
smoltcp::wire::ip::checksum::data::hebb229fc732545ff:
.Lfunc_begin189:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r7, lr}
	push	{r4, r5, r7, lr}
	.cfi_def_cfa_offset 16
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r5, -12
	.cfi_offset r4, -16
	.setfp	r7, sp, #8
	add	r7, sp, #8
	.cfi_def_cfa r7, 8
	cmp	r1, #32
	mov.w	r5, #0
	blo.w	.LBB189_6
	sub.w	r12, r1, #32
	movs	r3, #1
	add.w	lr, r3, r12, lsr #5
	cmp.w	r5, r12, lsr #5
	and	r12, lr, #1
	beq.w	.LBB189_4
	bic	r3, lr, #1
	movs	r5, #0
.LBB189_3:
	ldrh	r2, [r0], #64
	subs	r3, #2
	ldrh	r4, [r0, #-62]
	sub.w	r1, r1, #64
	rev	r2, r2
	add.w	r2, r5, r2, lsr #16
	ldrh	r5, [r0, #-60]
	rev	r4, r4
	add.w	r2, r2, r4, lsr #16
	ldrh	r4, [r0, #-58]
	rev	r5, r5
	add.w	r2, r2, r5, lsr #16
	ldrh	r5, [r0, #-56]
	rev	r4, r4
	add.w	r2, r2, r4, lsr #16
	ldrh	r4, [r0, #-54]
	rev	r5, r5
	add.w	r2, r2, r5, lsr #16
	ldrh	r5, [r0, #-52]
	rev	r4, r4
	add.w	r2, r2, r4, lsr #16
	ldrh	r4, [r0, #-50]
	rev	r5, r5
	add.w	r2, r2, r5, lsr #16
	ldrh	r5, [r0, #-48]
	rev	r4, r4
	add.w	r2, r2, r4, lsr #16
	ldrh	r4, [r0, #-46]
	rev	r5, r5
	add.w	r2, r2, r5, lsr #16
	ldrh	r5, [r0, #-44]
	rev	r4, r4
	add.w	r2, r2, r4, lsr #16
	ldrh	r4, [r0, #-42]
	rev	r5, r5
	add.w	r2, r2, r5, lsr #16
	ldrh	r5, [r0, #-40]
	rev	r4, r4
	add.w	r2, r2, r4, lsr #16
	ldrh	r4, [r0, #-38]
	rev	r5, r5
	add.w	r2, r2, r5, lsr #16
	ldrh	r5, [r0, #-36]
	rev	r4, r4
	add.w	r2, r2, r4, lsr #16
	ldrh	r4, [r0, #-34]
	rev	r5, r5
	add.w	r2, r2, r5, lsr #16
	ldrh	r5, [r0, #-32]
	rev	r4, r4
	add.w	r2, r2, r4, lsr #16
	ldrh	r4, [r0, #-30]
	rev	r5, r5
	add.w	r2, r2, r5, lsr #16
	ldrh	r5, [r0, #-28]
	rev	r4, r4
	add.w	r2, r2, r4, lsr #16
	ldrh	r4, [r0, #-26]
	rev	r5, r5
	add.w	r2, r2, r5, lsr #16
	ldrh	r5, [r0, #-24]
	rev	r4, r4
	add.w	r2, r2, r4, lsr #16
	ldrh	r4, [r0, #-22]
	rev	r5, r5
	add.w	r2, r2, r5, lsr #16
	ldrh	r5, [r0, #-20]
	rev	r4, r4
	add.w	r2, r2, r4, lsr #16
	ldrh	r4, [r0, #-18]
	rev	r5, r5
	add.w	r2, r2, r5, lsr #16
	ldrh	r5, [r0, #-16]
	rev	r4, r4
	add.w	r2, r2, r4, lsr #16
	ldrh	r4, [r0, #-14]
	rev	r5, r5
	add.w	r2, r2, r5, lsr #16
	ldrh	r5, [r0, #-12]
	rev	r4, r4
	add.w	r2, r2, r4, lsr #16
	ldrh	r4, [r0, #-10]
	rev	r5, r5
	add.w	r2, r2, r5, lsr #16
	ldrh	r5, [r0, #-8]
	rev	r4, r4
	add.w	r2, r2, r4, lsr #16
	ldrh	r4, [r0, #-6]
	rev	r5, r5
	add.w	r2, r2, r5, lsr #16
	ldrh	r5, [r0, #-4]
	rev	r4, r4
	add.w	r2, r2, r4, lsr #16
	ldrh	r4, [r0, #-2]
	rev	r5, r5
	add.w	r2, r2, r5, lsr #16
	rev	r5, r4
	add.w	r5, r2, r5, lsr #16
	bne.w	.LBB189_3
.LBB189_4:
	cmp.w	r12, #0
	beq	.LBB189_6
	ldrh	r2, [r0], #32
	subs	r1, #32
	ldrh	r3, [r0, #-30]
	rev	r2, r2
	add.w	r2, r5, r2, lsr #16
	ldrh	r5, [r0, #-28]
	rev	r3, r3
	add.w	r2, r2, r3, lsr #16
	ldrh	r3, [r0, #-26]
	rev	r5, r5
	add.w	r2, r2, r5, lsr #16
	ldrh	r5, [r0, #-24]
	rev	r3, r3
	add.w	r2, r2, r3, lsr #16
	ldrh	r3, [r0, #-22]
	rev	r5, r5
	add.w	r2, r2, r5, lsr #16
	ldrh	r5, [r0, #-20]
	rev	r3, r3
	add.w	r2, r2, r3, lsr #16
	ldrh	r3, [r0, #-18]
	rev	r5, r5
	add.w	r2, r2, r5, lsr #16
	ldrh	r5, [r0, #-16]
	rev	r3, r3
	add.w	r2, r2, r3, lsr #16
	ldrh	r3, [r0, #-14]
	rev	r5, r5
	add.w	r2, r2, r5, lsr #16
	ldrh	r5, [r0, #-12]
	rev	r3, r3
	add.w	r2, r2, r3, lsr #16
	ldrh	r3, [r0, #-10]
	rev	r5, r5
	add.w	r2, r2, r5, lsr #16
	ldrh	r5, [r0, #-8]
	rev	r3, r3
	add.w	r2, r2, r3, lsr #16
	ldrh	r3, [r0, #-6]
	rev	r5, r5
	add.w	r2, r2, r5, lsr #16
	ldrh	r5, [r0, #-4]
	rev	r3, r3
	add.w	r2, r2, r3, lsr #16
	ldrh	r3, [r0, #-2]
	rev	r5, r5
	add.w	r2, r2, r5, lsr #16
	rev	r3, r3
	add.w	r5, r2, r3, lsr #16
.LBB189_6:
	cmp	r1, #2
	blo	.LBB189_15
	sub.w	r12, r1, #2
	movs	r2, #1
	add.w	r2, r2, r12, lsr #1
	ands	lr, r2, #3
	beq	.LBB189_10
	mov	r3, r0
	cmp.w	lr, #1
	ldrh	r2, [r3], #2
	rev	r2, r2
	add.w	r5, r5, r2, lsr #16
	bne	.LBB189_11
	mov	r1, r12
	mov	r0, r3
	cmp.w	r12, #6
	bhs	.LBB189_14
	b	.LBB189_16
.LBB189_10:
	cmp.w	r12, #6
	bhs	.LBB189_14
	b	.LBB189_16
.LBB189_11:
	ldrh	r2, [r0, #2]
	cmp.w	lr, #2
	rev	r2, r2
	add.w	r5, r5, r2, lsr #16
	bne	.LBB189_13
	adds	r3, r0, #4
	subs	r1, #4
	mov	r0, r3
	cmp.w	r12, #6
	bhs	.LBB189_14
	b	.LBB189_16
.LBB189_13:
	ldrh	r2, [r0, #4]
	adds	r3, r0, #6
	subs	r1, #6
	rev	r2, r2
	add.w	r5, r5, r2, lsr #16
	mov	r0, r3
	cmp.w	r12, #6
	blo	.LBB189_16
.LBB189_14:
	ldrh	r2, [r0], #8
	subs	r1, #8
	ldrh	r3, [r0, #-6]
	cmp	r1, #1
	rev	r2, r2
	add.w	r2, r5, r2, lsr #16
	ldrh	r5, [r0, #-4]
	rev	r3, r3
	add.w	r2, r2, r3, lsr #16
	ldrh	r3, [r0, #-2]
	rev	r5, r5
	add.w	r2, r2, r5, lsr #16
	rev	r3, r3
	add.w	r5, r2, r3, lsr #16
	bhi	.LBB189_14
.LBB189_15:
	mov	r3, r0
.LBB189_16:
	cmp	r1, #0
	itt	ne
	ldrbne	r0, [r3]
	addne.w	r5, r5, r0, lsl #8
	lsrs	r0, r5, #16
	uxtah	r0, r0, r5
	add.w	r0, r0, r0, lsr #16
	pop	{r4, r5, r7, pc}
.Lfunc_end189:
	.size	smoltcp::wire::ip::checksum::data::hebb229fc732545ff, .Lfunc_end189-smoltcp::wire::ip::checksum::data::hebb229fc732545ff
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp4wire4ipv64Repr4emit17ha6a20889af1b4d41E,"ax",%progbits
	.p2align	2
	.type	smoltcp::wire::ipv6::Repr::emit::ha6a20889af1b4d41,%function
	.code	16
	.thumb_func
smoltcp::wire::ipv6::Repr::emit::ha6a20889af1b4d41:
.Lfunc_begin190:
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	mov	r2, r1
	ldr	r1, [r1, #4]
	cmp	r1, #0
	beq.w	.LBB190_20
	ldr.w	lr, [r2]
	cmp	r1, #1
	mov.w	r3, #96
	strb.w	r3, [lr]
	beq.w	.LBB190_21
	mov	r3, lr
	cmp	r1, #3
	ldrb	r12, [r3, #1]!
	and	r2, r12, #15
	strb	r2, [r3]
	bls.w	.LBB190_23
	cmp	r1, #5
	mov.w	r2, #0
	strb	r2, [r3, #2]
	strh	r2, [r3]
	bls.w	.LBB190_24
	ldrh	r2, [r0]
	cmp	r1, #7
	rev	r2, r2
	lsr.w	r2, r2, #16
	strh.w	r2, [lr, #4]
	bls	.LBB190_22
	ldrb.w	r3, [r0, #36]
	mov.w	r12, #0
	ldrb.w	r2, [r0, #38]
	strb.w	r2, [lr, #7]
.LCPI190_0:
	tbb	[pc, r3]
.LJTI190_0:
	.byte	(.LBB190_17-(.LCPI190_0+4))/2
	.byte	(.LBB190_7-(.LCPI190_0+4))/2
	.byte	(.LBB190_8-(.LCPI190_0+4))/2
	.byte	(.LBB190_9-(.LCPI190_0+4))/2
	.byte	(.LBB190_10-(.LCPI190_0+4))/2
	.byte	(.LBB190_11-(.LCPI190_0+4))/2
	.byte	(.LBB190_12-(.LCPI190_0+4))/2
	.byte	(.LBB190_13-(.LCPI190_0+4))/2
	.byte	(.LBB190_14-(.LCPI190_0+4))/2
	.byte	(.LBB190_15-(.LCPI190_0+4))/2
	.byte	(.LBB190_16-(.LCPI190_0+4))/2
	.p2align	1
.LBB190_7:
	mov.w	r12, #1
	b	.LBB190_17
.LBB190_8:
	mov.w	r12, #2
	b	.LBB190_17
.LBB190_9:
	mov.w	r12, #6
	b	.LBB190_17
.LBB190_10:
	mov.w	r12, #17
	b	.LBB190_17
.LBB190_11:
	mov.w	r12, #43
	b	.LBB190_17
.LBB190_12:
	mov.w	r12, #44
	b	.LBB190_17
.LBB190_13:
	mov.w	r12, #58
	b	.LBB190_17
.LBB190_14:
	mov.w	r12, #59
	b	.LBB190_17
.LBB190_15:
	mov.w	r12, #60
	b	.LBB190_17
.LBB190_16:
	ldrb.w	r12, [r0, #37]
.LBB190_17:
	cmp	r1, #23
	strb.w	r12, [lr, #6]
	bls	.LBB190_25
	ldr	r2, [r0, #8]
	str.w	r2, [lr, #12]
	ldr	r3, [r0, #16]
	str.w	r3, [lr, #20]
	ldr	r3, [r0, #12]
	str.w	r3, [lr, #16]
	ldr	r2, [r0, #4]
	str.w	r2, [lr, #8]
	cmp	r1, #39
	itttt	hi
	ldrhi	r1, [r0, #32]
	strhi.w	r1, [lr, #36]
	ldrhi	r1, [r0, #28]
	strhi.w	r1, [lr, #32]
	itttt	hi
	ldrhi	r1, [r0, #24]
	strhi.w	r1, [lr, #28]
	ldrhi	r0, [r0, #20]
	strhi.w	r0, [lr, #24]
	it	hi
	pophi	{r7, pc}
.LBB190_19:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.455
	movs	r0, #40
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.455
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB190_20:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.449
	movs	r0, #0
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.449
	movs	r1, #0
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB190_21:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.450
	movs	r0, #1
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.450
	movs	r1, #1
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB190_22:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.453
	movs	r0, #7
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.453
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB190_23:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.451
	movs	r0, #4
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.451
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB190_24:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.452
	movs	r0, #6
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.452
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB190_25:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.454
	movs	r0, #24
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.454
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.Lfunc_end190:
	.size	smoltcp::wire::ipv6::Repr::emit::ha6a20889af1b4d41, .Lfunc_end190-smoltcp::wire::ipv6::Repr::emit::ha6a20889af1b4d41
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN7smoltcp4wire6icmpv615Packet$LT$T$GT$14clear_reserved17heeabc31498d221e9E","ax",%progbits
	.p2align	2
	.type	smoltcp::wire::icmpv6::Packet<T>::clear_reserved::heeabc31498d221e9,%function
	.code	16
	.thumb_func
smoltcp::wire::icmpv6::Packet<T>::clear_reserved::heeabc31498d221e9:
.Lfunc_begin191:
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	.pad	#40
	sub	sp, #40
	ldr	r1, [r0, #4]
	cmp	r1, #0
	beq	.LBB191_11
	ldr	r3, [r0]
	mov.w	r12, #13
	ldrb.w	lr, [r3]
	sub.w	r2, lr, #128
	cmp	r2, #15
	bhi	.LBB191_12
.LCPI191_0:
	tbb	[pc, r2]
.LJTI191_1:
	.byte	(.LBB191_16-(.LCPI191_0+4))/2
	.byte	(.LBB191_17-(.LCPI191_0+4))/2
	.byte	(.LBB191_6-(.LCPI191_0+4))/2
	.byte	(.LBB191_23-(.LCPI191_0+4))/2
	.byte	(.LBB191_23-(.LCPI191_0+4))/2
	.byte	(.LBB191_4-(.LCPI191_0+4))/2
	.byte	(.LBB191_18-(.LCPI191_0+4))/2
	.byte	(.LBB191_4-(.LCPI191_0+4))/2
	.byte	(.LBB191_4-(.LCPI191_0+4))/2
	.byte	(.LBB191_4-(.LCPI191_0+4))/2
	.byte	(.LBB191_23-(.LCPI191_0+4))/2
	.byte	(.LBB191_23-(.LCPI191_0+4))/2
	.byte	(.LBB191_23-(.LCPI191_0+4))/2
	.byte	(.LBB191_23-(.LCPI191_0+4))/2
	.byte	(.LBB191_23-(.LCPI191_0+4))/2
	.byte	(.LBB191_9-(.LCPI191_0+4))/2
	.p2align	1
.LBB191_4:
	cmp	r1, #7
	itttt	hi
	movhi	r0, #0
	strhi	r0, [r3, #4]
	addhi	sp, #40
	pophi	{r7, pc}
.LBB191_5:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.354
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.354
	movs	r0, #8
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB191_6:
	cmp	r1, #7
	bls	.LBB191_19
	cmp	r1, #24
	mov.w	r0, #0
	strh	r0, [r3, #6]
	itttt	hi
	ldrbhi	r0, [r3, #24]
	andhi	r0, r0, #15
	strbhi	r0, [r3, #24]
	addhi	sp, #40
	it	hi
	pophi	{r7, pc}
.LBB191_8:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.356
	movs	r0, #24
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.356
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB191_9:
	cmp	r1, #5
	itttt	hi
	movhi	r0, #0
	strhhi	r0, [r3, #4]
	addhi	sp, #40
	pophi	{r7, pc}
.LBB191_10:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.353
	movs	r0, #6
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.353
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB191_11:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.345
	movs	r0, #0
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.345
	movs	r1, #0
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB191_12:
	sub.w	r1, lr, #1
	cmp	r1, #3
	bhi	.LBB191_23
.LCPI191_1:
	tbb	[pc, r1]
.LJTI191_0:
	.byte	(.LBB191_15-(.LCPI191_1+4))/2
	.byte	(.LBB191_20-(.LCPI191_1+4))/2
	.byte	(.LBB191_21-(.LCPI191_1+4))/2
	.byte	(.LBB191_22-(.LCPI191_1+4))/2
	.p2align	1
.LBB191_15:
	mov.w	r12, #0
	b	.LBB191_23
.LBB191_16:
	mov.w	r12, #4
	b	.LBB191_23
.LBB191_17:
	mov.w	r12, #5
	b	.LBB191_23
.LBB191_18:
	mov.w	r12, #8
	b	.LBB191_23
.LBB191_19:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.355
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.355
	movs	r0, #8
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB191_20:
	mov.w	r12, #1
	b	.LBB191_23
.LBB191_21:
	mov.w	r12, #2
	b	.LBB191_23
.LBB191_22:
	mov.w	r12, #3
.LBB191_23:
	add	r0, sp, #4
	str	r0, [sp, #32]
	movw	r0, :lower16:<smoltcp::wire::icmpv6::Message as core::fmt::Display>::fmt::hef9d08a4466eb1d8
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.352
	movt	r0, :upper16:<smoltcp::wire::icmpv6::Message as core::fmt::Display>::fmt::hef9d08a4466eb1d8
	str	r0, [sp, #36]
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.351
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.352
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.351
	str	r0, [sp, #8]
	movs	r0, #2
	str	r0, [sp, #12]
	movs	r0, #0
	strb.w	r12, [sp, #4]
	strd	r0, r0, [sp, #16]
	add	r0, sp, #32
	str	r0, [sp, #24]
	movs	r0, #1
	str	r0, [sp, #28]
	add	r0, sp, #8
	strb.w	lr, [sp, #5]
	bl	core::panicking::panic_fmt::h679f68291595c801
	.inst.n	0xdefe
.Lfunc_end191:
	.size	smoltcp::wire::icmpv6::Packet<T>::clear_reserved::heeabc31498d221e9, .Lfunc_end191-smoltcp::wire::icmpv6::Packet<T>::clear_reserved::heeabc31498d221e9
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp4wire11ndiscoption4Repr4emit17h27a83c9e81ae302dE,"ax",%progbits
	.p2align	2
	.type	smoltcp::wire::ndiscoption::Repr::emit::h27a83c9e81ae302d,%function
	.code	16
	.thumb_func
smoltcp::wire::ndiscoption::Repr::emit::h27a83c9e81ae302d:
.Lfunc_begin192:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#52
	sub	sp, #52
	mov	r11, r0
	ldrb	r0, [r0]
.LCPI192_0:
	tbb	[pc, r0]
.LJTI192_0:
	.byte	(.LBB192_2-(.LCPI192_0+4))/2
	.byte	(.LBB192_4-(.LCPI192_0+4))/2
	.byte	(.LBB192_10-(.LCPI192_0+4))/2
	.byte	(.LBB192_13-(.LCPI192_0+4))/2
	.byte	(.LBB192_20-(.LCPI192_0+4))/2
	.byte	(.LBB192_24-(.LCPI192_0+4))/2
	.p2align	1
.LBB192_2:
	ldr	r3, [r1, #4]
	cmp	r3, #0
	beq.w	.LBB192_30
	ldrb.w	r2, [r11, #1]
	ldr	r1, [r1]
	ldrh.w	r6, [r11, #6]
	cmp	r3, #1
	ldr.w	r5, [r11, #2]
	mov.w	r0, #1
	b	.LBB192_6
.LBB192_4:
	ldr	r3, [r1, #4]
	cmp	r3, #0
	beq.w	.LBB192_30
	ldrb.w	r2, [r11, #1]
	ldr	r1, [r1]
	ldrh.w	r6, [r11, #6]
	cmp	r3, #1
	ldr.w	r5, [r11, #2]
	mov.w	r0, #2
.LBB192_6:
	strb	r0, [r1]
	beq.w	.LBB192_31
	add.w	r0, r2, #9
	strh.w	r6, [sp, #4]
	lsrs	r0, r0, #3
	strb	r0, [r1, #1]
	adds	r0, r2, #2
	str	r5, [sp]
	cmp	r0, r3
	bhi.w	.LBB192_32
	cmp	r2, #7
	bhs.w	.LBB192_35
	adds	r0, r1, #2
	mov	r1, sp
	bl	__aeabi_memcpy
	add	sp, #52
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB192_10:
	ldr.w	r8, [r1, #4]
	cmp.w	r8, #15
	bls.w	.LBB192_36
	ldr	r6, [r1]
	movw	r9, #16960
	ldrb.w	r2, [r11, #24]
	movs	r5, #0
	ldrb.w	r3, [r11, #25]
	movt	r9, #15
	ldrd	r0, r1, [r11, #8]
	str	r5, [r6, #12]
	movw	r5, #1027
	strb	r2, [r6, #2]
	mov	r2, r9
	strb	r3, [r6, #3]
	movs	r3, #0
	strh	r5, [r6]
	ldr.w	r10, [r11, #16]
	ldr.w	r5, [r11, #20]
	bl	__aeabi_uldivmod
	rev	r0, r0
	str	r0, [r6, #4]
	movs	r3, #0
	mov	r0, r10
	mov	r1, r5
	mov	r2, r9
	bl	__aeabi_uldivmod
	cmp.w	r8, #31
	rev	r0, r0
	str	r0, [r6, #8]
	bls.w	.LBB192_37
	add.w	r0, r11, #26
	ldr	r1, [r0, #12]
	str	r1, [r6, #28]
	ldr	r1, [r0, #8]
	str	r1, [r6, #24]
	ldr	r1, [r0, #4]
	str	r1, [r6, #20]
	ldr	r0, [r0]
	str	r0, [r6, #16]
	add	sp, #52
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB192_13:
	add.w	r12, r11, #4
	mov	r2, sp
	ldm.w	r12!, {r0, r3, r4, r5, r6}
	stm	r2!, {r0, r3, r4, r5, r6}
	ldm.w	r12, {r0, r3, r4, r5, r6}
	stm	r2!, {r0, r3, r4, r5, r6}
	ldr	r3, [r1, #4]
	cmp	r3, #7
	bls.w	.LBB192_39
	ldr.w	r0, [r11, #48]
	ldr	r5, [r1]
	lsr.w	r9, r0, #3
	movs	r0, #0
	str	r0, [r5, #4]
	movs	r0, #4
	strb	r0, [r5]
	add.w	r0, r9, #41
	uxtb	r1, r0
	ldr.w	r8, [r11, #44]
	cmp	r1, #0
	lsl.w	r6, r1, #3
	strb	r0, [r5, #1]
	beq	.LBB192_33
	cmp	r6, r3
	bhi	.LBB192_34
	subs	r1, r6, #2
	cmp	r1, #7
	bls.w	.LBB192_40
	add.w	r0, r5, #10
	str	r0, [sp, #44]
	mov	r0, sp
	add	r1, sp, #44
	sub.w	r4, r6, #10
	str	r4, [sp, #48]
	bl	smoltcp::wire::ipv6::Repr::emit::ha6a20889af1b4d41
	cmp	r4, #39
	bls.w	.LBB192_41
	sub.w	r0, r6, #50
	cmp	r0, r9
	bne.w	.LBB192_42
	add.w	r0, r5, #50
	mov	r1, r8
	mov	r2, r9
	bl	__aeabi_memcpy
	add	sp, #52
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB192_20:
	ldr	r3, [r1, #4]
	cbz	r3, .LBB192_30
	ldr	r0, [r1]
	ldr.w	r1, [r11, #4]
	cmp	r3, #1
	mov.w	r2, #5
	strb	r2, [r0]
	beq	.LBB192_31
	cmp	r3, #7
	mov.w	r2, #1
	strb	r2, [r0, #1]
	bls.w	.LBB192_43
	rev	r1, r1
	str	r1, [r0, #4]
	add	sp, #52
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB192_24:
	ldr	r3, [r1, #4]
	cbz	r3, .LBB192_30
	ldrb.w	r0, [r11, #2]
	ldr	r5, [r1]
	ldrb.w	r6, [r11, #1]
	ldr.w	r1, [r11, #4]
	cmp	r3, #1
	ldr.w	r2, [r11, #8]
	strb	r6, [r5]
	beq	.LBB192_31
	lsl.w	r6, r0, #3
	strb	r0, [r5, #1]
	cbz	r0, .LBB192_33
	cmp	r6, r3
	bhi	.LBB192_34
	subs	r0, r6, #2
	cmp	r0, r2
	itttt	eq
	addeq	r0, r5, #2
	addeq	sp, #52
	popeq.w	{r8, r9, r10, r11}
	popeq.w	{r4, r5, r6, r7, lr}
	it	eq
	beq	__aeabi_memcpy
.LBB192_29:
	movw	r3, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.575
	mov	r1, r2
	movt	r3, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.575
	mov	r2, r3
	bl	core::slice::<impl [T]>::copy_from_slice::len_mismatch_fail::h7bf74017f2463c91
	.inst.n	0xdefe
.LBB192_30:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.566
	movs	r0, #0
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.566
	movs	r1, #0
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB192_31:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.567
	movs	r0, #1
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.567
	movs	r1, #1
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB192_32:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.568
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.568
	b	.LBB192_44
.LBB192_33:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.573
	movs	r0, #2
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.573
	mov	r1, r6
	bl	core::slice::index::slice_index_order_fail::h8a53f055fb6ee074
	.inst.n	0xdefe
.LBB192_34:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.573
	mov	r0, r6
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.573
	b	.LBB192_44
.LBB192_35:
	movw	r3, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.685
	movs	r1, #6
	movt	r3, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.685
	mov	r0, r2
	mov	r2, r3
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB192_36:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.570
	movs	r0, #16
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.570
	b	.LBB192_38
.LBB192_37:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.571
	movs	r0, #32
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.571
.LBB192_38:
	mov	r1, r8
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB192_39:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.572
	movs	r0, #8
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.572
	b	.LBB192_44
.LBB192_40:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.576
	movs	r0, #8
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.576
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB192_41:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.577
	movs	r0, #40
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.577
	mov	r1, r4
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB192_42:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.578
	mov	r1, r9
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.578
	bl	core::slice::<impl [T]>::copy_from_slice::len_mismatch_fail::h7bf74017f2463c91
	.inst.n	0xdefe
.LBB192_43:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.569
	movs	r0, #8
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.569
.LBB192_44:
	mov	r1, r3
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.Lfunc_end192:
	.size	smoltcp::wire::ndiscoption::Repr::emit::h27a83c9e81ae302d, .Lfunc_end192-smoltcp::wire::ndiscoption::Repr::emit::h27a83c9e81ae302d
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp4wire2ip8checksum13pseudo_header17ha771da54de6c08b8E,"ax",%progbits
	.p2align	1
	.type	smoltcp::wire::ip::checksum::pseudo_header::ha771da54de6c08b8,%function
	.code	16
	.thumb_func
smoltcp::wire::ip::checksum::pseudo_header::ha771da54de6c08b8:
.Lfunc_begin193:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r7, lr}
	push	{r4, r5, r7, lr}
	.cfi_def_cfa_offset 16
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r5, -12
	.cfi_offset r4, -16
	.setfp	r7, sp, #8
	add	r7, sp, #8
	.cfi_def_cfa r7, 8
	.pad	#48
	sub	sp, #48
	ldrb.w	r12, [r0]
	ldrb.w	lr, [r1]
	str	r0, [sp]
	cmp	r12, lr
	str	r1, [sp, #4]
	bne.w	.LBB193_6
	cmp.w	r12, #1
	beq.w	.LBB193_4
	cmp.w	r12, #2
	bne.w	.LBB193_6
	ldrh.w	lr, [r0, #1]
	movs	r4, #0
	ldrh.w	r12, [r0, #3]
	str	r4, [sp, #12]
	subs	r2, #3
	rev.w	r4, lr
	ldrh.w	lr, [r0, #5]
	lsrs	r5, r4, #16
	rev.w	r4, r12
	ldrh.w	r12, [r0, #7]
	add.w	r5, r5, r4, lsr #16
	rev.w	r4, lr
	ldrh.w	lr, [r0, #9]
	add.w	r5, r5, r4, lsr #16
	rev.w	r4, r12
	ldrh.w	r12, [r0, #11]
	add.w	r5, r5, r4, lsr #16
	rev.w	r4, lr
	ldrh.w	lr, [r0, #13]
	ldrh.w	r0, [r0, #15]
	add.w	r5, r5, r4, lsr #16
	rev.w	r4, r12
	ldrh.w	r12, [r1, #1]
	add.w	r5, r5, r4, lsr #16
	rev.w	r4, lr
	add.w	r5, r5, r4, lsr #16
	ldrh.w	r4, [r1, #3]
	rev	r0, r0
	add.w	r0, r5, r0, lsr #16
	movw	r5, :lower16:.Lswitch.table._ZN7smoltcp4wire2ip8checksum13pseudo_header17ha771da54de6c08b8E.1534
	sxtb	r2, r2
	movt	r5, :upper16:.Lswitch.table._ZN7smoltcp4wire2ip8checksum13pseudo_header17ha771da54de6c08b8E.1534
	rev	r4, r4
	ldrb	r2, [r5, r2]
	lsrs	r5, r0, #16
	uxtah	lr, r5, r0
	ldrh.w	r0, [r1, #5]
	rev.w	r5, r12
	strb.w	r2, [sp, #15]
	lsrs	r5, r5, #16
	add.w	r5, r5, r4, lsr #16
	ldrh.w	r4, [r1, #7]
	rev	r0, r0
	add.w	r0, r5, r0, lsr #16
	ldrh.w	r5, [r1, #9]
	rev	r4, r4
	add.w	r0, r0, r4, lsr #16
	ldrh.w	r4, [r1, #11]
	rev	r5, r5
	add.w	r0, r0, r5, lsr #16
	ldrh.w	r5, [r1, #13]
	ldrh.w	r1, [r1, #15]
	rev	r4, r4
	add.w	r0, r0, r4, lsr #16
	rev	r5, r5
	rev	r2, r3
	str	r2, [sp, #8]
	add.w	r0, r0, r5, lsr #16
	ldrh.w	r2, [sp, #10]
	rev	r1, r1
	add.w	r0, r0, r1, lsr #16
	lsrs	r1, r0, #16
	uxtah	r0, r1, r0
	lsrs	r1, r3, #16
	ldrh.w	r3, [sp, #12]
	rev	r2, r2
	add.w	r1, r1, r2, lsr #16
	ldrh.w	r2, [sp, #14]
	rev	r3, r3
	add.w	r1, r1, r3, lsr #16
	rev	r2, r2
	add.w	r1, r1, r2, lsr #16
	lsrs	r2, r1, #16
	uxtah	r1, r2, r1
	add.w	r2, lr, lr, lsr #16
	add.w	r0, r0, r0, lsr #16
	add.w	r1, r1, r1, lsr #16
	uxth	r2, r2
	uxtah	r0, r2, r0
	uxtah	r0, r0, r1
	b	.LBB193_5
.LBB193_4:
	ldr.w	r0, [r0, #1]
	movs	r4, #0
	lsr.w	r12, r0, #16
	str	r4, [sp, #8]
	subs	r2, #3
	ldr.w	r1, [r1, #1]
	rev.w	r4, r12
	movw	r12, :lower16:.Lswitch.table._ZN7smoltcp4wire2ip8checksum13pseudo_header17ha771da54de6c08b8E
	sxtb	r2, r2
	movt	r12, :upper16:.Lswitch.table._ZN7smoltcp4wire2ip8checksum13pseudo_header17ha771da54de6c08b8E
	lsr.w	lr, r1, #16
	ldrb.w	r2, [r12, r2]
	rev	r1, r1
	strb.w	r2, [sp, #9]
	lsrs	r1, r1, #16
	rev.w	r2, lr
	add.w	r1, r1, r2, lsr #16
	ldrh.w	r2, [sp, #8]
	rev	r0, r0
	lsrs	r0, r0, #16
	add.w	r0, r0, r4, lsr #16
	rev	r2, r2
	lsrs	r4, r0, #16
	lsrs	r2, r2, #16
	uxtah	r0, r4, r0
	lsrs	r4, r1, #16
	uxtah	r2, r2, r3
	uxtah	r1, r4, r1
	lsrs	r3, r2, #16
	uxtah	r2, r3, r2
	add.w	r0, r0, r0, lsr #16
	add.w	r1, r1, r1, lsr #16
	add.w	r2, r2, r2, lsr #16
	uxth	r0, r0
	uxtah	r0, r0, r1
	uxtah	r0, r0, r2
.LBB193_5:
	lsrs	r1, r0, #16
	uxtah	r0, r1, r0
	add.w	r0, r0, r0, lsr #16
	add	sp, #48
	pop	{r4, r5, r7, pc}
.LBB193_6:
	mov	r0, sp
	str	r0, [sp, #32]
	movw	r0, :lower16:<&T as core::fmt::Display>::fmt::h7b2dfc9ab7f986d2
	add	r1, sp, #4
	movt	r0, :upper16:<&T as core::fmt::Display>::fmt::h7b2dfc9ab7f986d2
	str	r0, [sp, #36]
	strd	r1, r0, [sp, #40]
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.405
	movs	r1, #0
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.405
	str	r0, [sp, #8]
	strd	r1, r1, [sp, #16]
	add	r1, sp, #32
	movs	r0, #2
	strd	r1, r0, [sp, #24]
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.406
	str	r0, [sp, #12]
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.406
	add	r0, sp, #8
	bl	core::panicking::panic_fmt::h679f68291595c801
	.inst.n	0xdefe
.Lfunc_end193:
	.size	smoltcp::wire::ip::checksum::pseudo_header::ha771da54de6c08b8, .Lfunc_end193-smoltcp::wire::ip::checksum::pseudo_header::ha771da54de6c08b8
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN7smoltcp4wire3udp15Packet$LT$T$GT$13fill_checksum17h2376b94bafc59b55E","ax",%progbits
	.p2align	1
	.type	smoltcp::wire::udp::Packet<T>::fill_checksum::h2376b94bafc59b55,%function
	.code	16
	.thumb_func
smoltcp::wire::udp::Packet<T>::fill_checksum::h2376b94bafc59b55:
.Lfunc_begin194:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r11}
	str	r11, [sp, #-4]!
	.cfi_offset r11, -24
	ldr	r5, [r0, #4]
	cmp	r5, #7
	bls	.LBB194_3
	ldr	r4, [r0]
	mov	r6, r2
	movs	r2, #0
	ldrh	r0, [r4, #4]
	strh	r2, [r4, #6]
	movs	r2, #4
	rev	r0, r0
	lsrs	r3, r0, #16
	mov	r0, r1
	mov	r1, r6
	bl	smoltcp::wire::ip::checksum::pseudo_header::ha771da54de6c08b8
	ldrh	r1, [r4, #4]
	rev	r1, r1
	cmp.w	r5, r1, lsr #16
	lsr.w	r1, r1, #16
	blo	.LBB194_4
	mov	r6, r0
	mov	r0, r4
	bl	smoltcp::wire::ip::checksum::data::hebb229fc732545ff
	uxth	r1, r6
	movw	r2, #65535
	uxtah	r0, r1, r0
	lsrs	r1, r0, #16
	uxtah	r0, r1, r0
	add.w	r0, r0, r0, lsr #16
	uxth	r1, r0
	mvns	r0, r0
	cmp	r1, r2
	it	eq
	moveq.w	r0, #-1
	rev	r0, r0
	lsrs	r0, r0, #16
	strh	r0, [r4, #6]
	ldr	r11, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.LBB194_3:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.677
	movs	r0, #8
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.677
	b	.LBB194_5
.LBB194_4:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.678
	mov	r0, r1
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.678
.LBB194_5:
	mov	r1, r5
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.Lfunc_end194:
	.size	smoltcp::wire::udp::Packet<T>::fill_checksum::h2376b94bafc59b55, .Lfunc_end194-smoltcp::wire::udp::Packet<T>::fill_checksum::h2376b94bafc59b55
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp4wire6dhcpv410DhcpOption4emit17h2dfd0c6515dfb1fcE,"ax",%progbits
	.p2align	2
	.type	smoltcp::wire::dhcpv4::DhcpOption::emit::h2dfd0c6515dfb1fc,%function
	.code	16
	.thumb_func
smoltcp::wire::dhcpv4::DhcpOption::emit::h2dfd0c6515dfb1fc:
.Lfunc_begin195:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8}
	str	r8, [sp, #-4]!
	.cfi_offset r8, -24
	ldrb	r4, [r0]
	mov	r5, r1
	movs	r6, #3
	mov	r8, r2
.LCPI195_0:
	tbb	[pc, r4]
.LJTI195_0:
	.byte	(.LBB195_9-(.LCPI195_0+4))/2
	.byte	(.LBB195_11-(.LCPI195_0+4))/2
	.byte	(.LBB195_3-(.LCPI195_0+4))/2
	.byte	(.LBB195_2-(.LCPI195_0+4))/2
	.byte	(.LBB195_14-(.LCPI195_0+4))/2
	.byte	(.LBB195_2-(.LCPI195_0+4))/2
	.byte	(.LBB195_2-(.LCPI195_0+4))/2
	.byte	(.LBB195_2-(.LCPI195_0+4))/2
	.byte	(.LBB195_2-(.LCPI195_0+4))/2
	.byte	(.LBB195_15-(.LCPI195_0+4))/2
	.byte	(.LBB195_16-(.LCPI195_0+4))/2
	.p2align	1
.LBB195_2:
	movs	r6, #6
.LBB195_3:
	cmp.w	r8, #1
	bls.w	.LBB195_47
	subs	r1, r4, #2
	subs	r3, r6, #2
	strb	r3, [r5, #1]
.LCPI195_1:
	tbb	[pc, r1]
.LJTI195_1:
	.byte	(.LBB195_6-(.LCPI195_1+4))/2
	.byte	(.LBB195_17-(.LCPI195_1+4))/2
	.byte	(.LBB195_19-(.LCPI195_1+4))/2
	.byte	(.LBB195_22-(.LCPI195_1+4))/2
	.byte	(.LBB195_24-(.LCPI195_1+4))/2
	.byte	(.LBB195_26-(.LCPI195_1+4))/2
	.byte	(.LBB195_28-(.LCPI195_1+4))/2
	.byte	(.LBB195_30-(.LCPI195_1+4))/2
	.byte	(.LBB195_32-(.LCPI195_1+4))/2
	.p2align	1
.LBB195_6:
	ldrb	r2, [r0, #1]
	ldrb	r1, [r0, #2]
	movs	r0, #53
	strb	r0, [r5]
	movs	r0, #1
.LCPI195_2:
	tbb	[pc, r2]
.LJTI195_2:
	.byte	(.LBB195_43-(.LCPI195_2+4))/2
	.byte	(.LBB195_8-(.LCPI195_2+4))/2
	.byte	(.LBB195_36-(.LCPI195_2+4))/2
	.byte	(.LBB195_37-(.LCPI195_2+4))/2
	.byte	(.LBB195_38-(.LCPI195_2+4))/2
	.byte	(.LBB195_39-(.LCPI195_2+4))/2
	.byte	(.LBB195_40-(.LCPI195_2+4))/2
	.byte	(.LBB195_41-(.LCPI195_2+4))/2
	.byte	(.LBB195_42-(.LCPI195_2+4))/2
	.p2align	1
.LBB195_8:
	movs	r0, #2
	b	.LBB195_43
.LBB195_9:
	cmp.w	r8, #0
	beq.w	.LBB195_48
	movs	r0, #255
	b	.LBB195_13
.LBB195_11:
	cmp.w	r8, #0
	beq.w	.LBB195_49
	movs	r0, #0
.LBB195_13:
	movs	r6, #1
	strb	r0, [r5]
	b	.LBB195_46
.LBB195_14:
	movs	r6, #9
	b	.LBB195_3
.LBB195_15:
	movs	r6, #4
	b	.LBB195_3
.LBB195_16:
	ldr	r1, [r0, #8]
	adds	r6, r1, #2
	b	.LBB195_3
.LBB195_17:
	ldr.w	r0, [r0, #1]
	cmp.w	r8, #5
	mov.w	r1, #50
	strb	r1, [r5]
	bhi	.LBB195_29
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.198
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.198
	movs	r0, #6
	mov	r1, r8
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB195_19:
	cmp.w	r8, #2
	mov.w	r1, #61
	strb	r1, [r5]
	bls.w	.LBB195_51
	cmp.w	r8, #8
	mov.w	r1, #1
	strb	r1, [r5, #2]
	bls.w	.LBB195_55
	adds	r0, #1
	ldrh	r1, [r0, #4]
	strh.w	r1, [r5, #7]
	ldr	r0, [r0]
	str.w	r0, [r5, #3]
	b	.LBB195_45
.LBB195_22:
	ldr.w	r0, [r0, #1]
	cmp.w	r8, #5
	mov.w	r1, #54
	strb	r1, [r5]
	bhi	.LBB195_29
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.195
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.195
	movs	r0, #6
	mov	r1, r8
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB195_24:
	ldr	r0, [r0, #4]
	cmp.w	r8, #5
	mov.w	r1, #51
	strb	r1, [r5]
	bls.w	.LBB195_56
	rev	r0, r0
	str.w	r0, [r5, #2]
	b	.LBB195_45
.LBB195_26:
	ldr.w	r0, [r0, #1]
	cmp.w	r8, #5
	mov.w	r1, #3
	strb	r1, [r5]
	bhi	.LBB195_29
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.193
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.193
	movs	r0, #6
	mov	r1, r8
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB195_28:
	ldr.w	r0, [r0, #1]
	cmp.w	r8, #5
	mov.w	r1, #1
	strb	r1, [r5]
	bls	.LBB195_57
.LBB195_29:
	str.w	r0, [r5, #2]
	b	.LBB195_45
.LBB195_30:
	ldrh	r0, [r0, #2]
	cmp.w	r8, #3
	mov.w	r1, #57
	strb	r1, [r5]
	bls	.LBB195_58
	rev16	r0, r0
	strh	r0, [r5, #2]
	b	.LBB195_45
.LBB195_32:
	ldr	r1, [r0, #4]
	ldrb	r4, [r0, #1]
	cmp	r6, #2
	ldr	r2, [r0, #8]
	strb	r4, [r5]
	blo	.LBB195_59
	cmp	r6, r8
	bhi	.LBB195_60
	cmp	r3, r2
	bne.w	.LBB195_61
	adds	r0, r5, #2
	bl	__aeabi_memcpy
	b	.LBB195_45
.LBB195_36:
	movs	r0, #3
	b	.LBB195_43
.LBB195_37:
	movs	r0, #4
	b	.LBB195_43
.LBB195_38:
	movs	r0, #5
	b	.LBB195_43
.LBB195_39:
	movs	r0, #6
	b	.LBB195_43
.LBB195_40:
	movs	r0, #7
	b	.LBB195_43
.LBB195_41:
	movs	r0, #8
	b	.LBB195_43
.LBB195_42:
	mov	r0, r1
.LBB195_43:
	cmp.w	r8, #3
	blo	.LBB195_52
	strb	r0, [r5, #2]
.LBB195_45:
	cmp	r6, r8
	bhi	.LBB195_54
.LBB195_46:
	adds	r0, r5, r6
	sub.w	r1, r8, r6
	ldr	r8, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.LBB195_47:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.188
	movs	r0, #1
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.188
	mov	r1, r8
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB195_48:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.201
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.201
	b	.LBB195_50
.LBB195_49:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.200
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.200
.LBB195_50:
	movs	r0, #0
	movs	r1, #0
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB195_51:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.196
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.196
	b	.LBB195_53
.LBB195_52:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.199
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.199
.LBB195_53:
	movs	r0, #2
	movs	r1, #2
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB195_54:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.202
	mov	r0, r6
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.202
	mov	r1, r8
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB195_55:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.197
	movs	r0, #9
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.197
	mov	r1, r8
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB195_56:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.194
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.194
	movs	r0, #6
	mov	r1, r8
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB195_57:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.192
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.192
	movs	r0, #6
	mov	r1, r8
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB195_58:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.191
	movs	r0, #4
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.191
	mov	r1, r8
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB195_59:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.189
	movs	r0, #2
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.189
	mov	r1, r6
	bl	core::slice::index::slice_index_order_fail::h8a53f055fb6ee074
	.inst.n	0xdefe
.LBB195_60:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.189
	mov	r0, r6
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.189
	mov	r1, r8
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB195_61:
	movw	r6, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.190
	mov	r0, r3
	movt	r6, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.190
	mov	r1, r2
	mov	r2, r6
	bl	core::slice::<impl [T]>::copy_from_slice::len_mismatch_fail::h7bf74017f2463c91
	.inst.n	0xdefe
.Lfunc_end195:
	.size	smoltcp::wire::dhcpv4::DhcpOption::emit::h2dfd0c6515dfb1fc, .Lfunc_end195-smoltcp::wire::dhcpv4::DhcpOption::emit::h2dfd0c6515dfb1fc
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp4wire3tcp9TcpOption4emit17haa9fd5de668a2388E,"ax",%progbits
	.p2align	2
	.type	smoltcp::wire::tcp::TcpOption::emit::haa9fd5de668a2388,%function
	.code	16
	.thumb_func
smoltcp::wire::tcp::TcpOption::emit::haa9fd5de668a2388:
.Lfunc_begin196:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#4
	sub	sp, #4
	ldrb	r3, [r0]
	mov	r5, r1
	movs	r6, #4
	mov	r4, r2
.LCPI196_0:
	tbb	[pc, r3]
.LJTI196_0:
	.byte	(.LBB196_2-(.LCPI196_0+4))/2
	.byte	(.LBB196_5-(.LCPI196_0+4))/2
	.byte	(.LBB196_12-(.LCPI196_0+4))/2
	.byte	(.LBB196_7-(.LCPI196_0+4))/2
	.byte	(.LBB196_8-(.LCPI196_0+4))/2
	.byte	(.LBB196_9-(.LCPI196_0+4))/2
	.byte	(.LBB196_10-(.LCPI196_0+4))/2
	.p2align	1
.LBB196_2:
	cbz	r4, .LBB196_4
	mov	r0, r5
	mov	r1, r4
	bl	__aeabi_memclr
.LBB196_4:
	movs	r6, #1
	b	.LBB196_38
.LBB196_5:
	cmp	r4, #0
	beq.w	.LBB196_41
	movs	r6, #1
	strb	r6, [r5]
	b	.LBB196_39
.LBB196_7:
	movs	r6, #3
	b	.LBB196_12
.LBB196_8:
	movs	r6, #2
	b	.LBB196_12
.LBB196_9:
	ldr	r1, [r0, #4]
	ldr	r2, [r0, #16]
	subs	r1, #1
	ldr	r6, [r0, #28]
	clz	r1, r1
	cmp	r2, #1
	lsr.w	r1, r1, #5
	it	eq
	addeq	r1, #1
	cmp	r6, #1
	it	eq
	addeq	r1, #1
	lsls	r1, r1, #3
	b	.LBB196_11
.LBB196_10:
	ldr	r1, [r0, #8]
.LBB196_11:
	adds	r6, r1, #2
.LBB196_12:
	cmp	r4, #1
	bls.w	.LBB196_40
	subs	r1, r3, #2
	strb	r6, [r5, #1]
.LCPI196_1:
	tbb	[pc, r1]
.LJTI196_1:
	.byte	(.LBB196_15-(.LCPI196_1+4))/2
	.byte	(.LBB196_25-(.LCPI196_1+4))/2
	.byte	(.LBB196_17-(.LCPI196_1+4))/2
	.byte	(.LBB196_18-(.LCPI196_1+4))/2
	.byte	(.LBB196_23-(.LCPI196_1+4))/2
	.p2align	1
.LBB196_15:
	bic	r1, r4, #1
	ldrh	r0, [r0, #2]
	cmp	r1, #2
	mov.w	r1, #2
	strb	r1, [r5]
	beq.w	.LBB196_45
	rev16	r0, r0
	strh	r0, [r5, #2]
	b	.LBB196_38
.LBB196_17:
	movs	r0, #4
	strb	r0, [r5]
	b	.LBB196_38
.LBB196_18:
	ldrd	r3, r2, [r0, #4]
	ldrd	r11, r1, [r0, #12]
	ldrd	r9, r8, [r0, #20]
	ldrd	r10, lr, [r0, #28]
	ldr.w	r12, [r0, #36]
	cmp	r3, #1
	mov.w	r0, #5
	strb	r0, [r5]
	bne	.LBB196_27
	subs	r0, r4, #2
	cmp	r0, #3
	bls.w	.LBB196_44
	subs	r0, r4, #6
	cmp	r0, #3
	rev	r0, r2
	str.w	r0, [r5, #2]
	bls	.LBB196_44
	movs	r3, #1
	rev.w	r0, r11
	str.w	r0, [r5, #6]
	cmp	r1, #1
	beq	.LBB196_28
.LBB196_22:
	cmp.w	r10, #1
	beq	.LBB196_33
	b	.LBB196_38
.LBB196_23:
	ldr	r1, [r0, #8]
	subs	r2, r4, #2
	ldrb	r3, [r0, #1]
	cmp	r2, r1
	ldr.w	r12, [r0, #4]
	strb	r3, [r5]
	bne	.LBB196_47
	adds	r0, r5, #2
	mov	r1, r12
	bl	__aeabi_memcpy
	b	.LBB196_38
.LBB196_25:
	ldrb	r0, [r0, #1]
	cmp	r4, #3
	mov.w	r1, #3
	strb	r1, [r5]
	blo	.LBB196_42
	strb	r0, [r5, #2]
	b	.LBB196_38
.LBB196_27:
	movs	r3, #0
	cmp	r1, #1
	bne	.LBB196_22
.LBB196_28:
	lsls	r1, r3, #3
	adds	r0, r1, #2
	cmp	r0, r4
	bhi	.LBB196_48
	subs	r2, r4, r0
	cmp	r2, #4
	blo	.LBB196_44
	orr	r1, r1, #6
	cmp	r1, r4
	rev.w	r2, r9
	str	r2, [r5, r0]
	bhi	.LBB196_49
	subs	r0, r4, r1
	cmp	r0, #4
	blo	.LBB196_44
	adds	r3, #1
	rev.w	r0, r8
	str	r0, [r5, r1]
	cmp.w	r10, #1
	bne	.LBB196_38
.LBB196_33:
	lsls	r1, r3, #3
	adds	r0, r1, #2
	cmp	r0, r4
	bhi	.LBB196_48
	subs	r2, r4, r0
	cmp	r2, #4
	blo	.LBB196_44
	orr	r1, r1, #6
	cmp	r1, r4
	rev.w	r2, lr
	str	r2, [r5, r0]
	bhi	.LBB196_49
	subs	r0, r4, r1
	cmp	r0, #4
	blo	.LBB196_44
	rev.w	r0, r12
	str	r0, [r5, r1]
.LBB196_38:
	cmp	r6, r4
	bhi	.LBB196_43
.LBB196_39:
	adds	r0, r5, r6
	subs	r1, r4, r6
	add	sp, #4
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB196_40:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.622
	movs	r0, #1
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.622
	mov	r1, r4
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB196_41:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.625
	movs	r0, #0
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.625
	movs	r1, #0
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB196_42:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.624
	movs	r0, #2
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.624
	mov	r1, r4
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB196_43:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.626
	mov	r0, r6
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.626
	mov	r1, r4
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB196_44:
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.15
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.16
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.15
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.16
	b	.LBB196_46
.LBB196_45:
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.13
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.14
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.13
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.14
.LBB196_46:
	movs	r1, #32
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB196_47:
	movw	r3, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.623
	mov	r0, r2
	movt	r3, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.623
	mov	r2, r3
	bl	core::slice::<impl [T]>::copy_from_slice::len_mismatch_fail::h7bf74017f2463c91
	.inst.n	0xdefe
.LBB196_48:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.627
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.627
	mov	r1, r4
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB196_49:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.628
	mov	r0, r1
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.628
	mov	r1, r4
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.Lfunc_end196:
	.size	smoltcp::wire::tcp::TcpOption::emit::haa9fd5de668a2388, .Lfunc_end196-smoltcp::wire::tcp::TcpOption::emit::haa9fd5de668a2388
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h7b2dfc9ab7f986d2E","ax",%progbits
	.p2align	1
	.type	<&T as core::fmt::Display>::fmt::h7b2dfc9ab7f986d2,%function
	.code	16
	.thumb_func
<&T as core::fmt::Display>::fmt::h7b2dfc9ab7f986d2:
.Lfunc_begin197:
	.fnstart
	.cfi_startproc
	ldr	r0, [r0]
	b	<smoltcp::wire::ip::Address as core::fmt::Display>::fmt::h57bdc56bfd29d3c6
.Lfunc_end197:
	.size	<&T as core::fmt::Display>::fmt::h7b2dfc9ab7f986d2, .Lfunc_end197-<&T as core::fmt::Display>::fmt::h7b2dfc9ab7f986d2
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN65_$LT$smoltcp..wire..ip..Address$u20$as$u20$core..fmt..Display$GT$3fmt17h57bdc56bfd29d3c6E","ax",%progbits
	.p2align	1
	.type	<smoltcp::wire::ip::Address as core::fmt::Display>::fmt::h57bdc56bfd29d3c6,%function
	.code	16
	.thumb_func
<smoltcp::wire::ip::Address as core::fmt::Display>::fmt::h57bdc56bfd29d3c6:
.Lfunc_begin198:
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	.pad	#48
	sub	sp, #48
	ldrb	r3, [r0]
	mov	r2, r0
	mov	r0, r1
	cbz	r3, .LBB198_3
	cmp	r3, #1
	bne	.LBB198_4
	ldr.w	r1, [r2, #1]
	str	r1, [sp, #40]
	add	r1, sp, #40
	str	r1, [sp]
	movw	r1, :lower16:<smoltcp::wire::ipv4::Address as core::fmt::Display>::fmt::h78c694d696c6c50e
	movs	r2, #0
	movt	r1, :upper16:<smoltcp::wire::ipv4::Address as core::fmt::Display>::fmt::h78c694d696c6c50e
	str	r1, [sp, #4]
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.114
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.114
	str	r1, [sp, #16]
	movs	r1, #1
	str	r1, [sp, #20]
	strd	r2, r2, [sp, #24]
	mov	r2, sp
	b	.LBB198_5
.LBB198_3:
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.394
	movw	r2, :lower16:CORE_PERIPHERALS
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.394
	str	r1, [sp, #16]
	movs	r1, #1
	str	r1, [sp, #20]
	movs	r1, #0
	movt	r2, :upper16:CORE_PERIPHERALS
	strd	r1, r1, [sp, #24]
	b	.LBB198_5
.LBB198_4:
	ldr.w	r1, [r2, #1]
	ldr.w	r3, [r2, #13]
	str	r3, [sp, #12]
	ldr.w	r3, [r2, #9]
	str	r3, [sp, #8]
	ldr.w	r2, [r2, #5]
	strd	r1, r2, [sp]
	mov	r1, sp
	str	r1, [sp, #40]
	movw	r1, :lower16:<smoltcp::wire::ipv6::Address as core::fmt::Display>::fmt::h2e9e5b81af9712a5
	movs	r2, #0
	movt	r1, :upper16:<smoltcp::wire::ipv6::Address as core::fmt::Display>::fmt::h2e9e5b81af9712a5
	str	r1, [sp, #44]
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.114
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.114
	str	r1, [sp, #16]
	movs	r1, #1
	str	r1, [sp, #20]
	strd	r2, r2, [sp, #24]
	add	r2, sp, #40
.LBB198_5:
	str	r1, [sp, #36]
	add	r1, sp, #16
	str	r2, [sp, #32]
	bl	core::fmt::Formatter::write_fmt::hd37bb40752075c70
	add	sp, #48
	pop	{r7, pc}
.Lfunc_end198:
	.size	<smoltcp::wire::ip::Address as core::fmt::Display>::fmt::h57bdc56bfd29d3c6, .Lfunc_end198-<smoltcp::wire::ip::Address as core::fmt::Display>::fmt::h57bdc56bfd29d3c6
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN67_$LT$smoltcp..wire..ipv4..Address$u20$as$u20$core..fmt..Display$GT$3fmt17h78c694d696c6c50eE","ax",%progbits
	.p2align	1
	.type	<smoltcp::wire::ipv4::Address as core::fmt::Display>::fmt::h78c694d696c6c50e,%function
	.code	16
	.thumb_func
<smoltcp::wire::ipv4::Address as core::fmt::Display>::fmt::h78c694d696c6c50e:
.Lfunc_begin199:
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	.pad	#64
	sub	sp, #64
	ldr	r0, [r0]
	str	r0, [sp, #4]
	add	r0, sp, #4
	movw	r2, :lower16:core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt::ha0378c4201814c21
	adds	r3, r0, #1
	str	r0, [sp, #32]
	movt	r2, :upper16:core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt::ha0378c4201814c21
	str	r2, [sp, #36]
	strd	r3, r2, [sp, #40]
	adds	r3, r0, #2
	adds	r0, #3
	strd	r0, r2, [sp, #56]
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.414
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.414
	str	r0, [sp, #8]
	movs	r0, #0
	strd	r0, r0, [sp, #16]
	add	r0, sp, #32
	str	r0, [sp, #24]
	mov	r0, r1
	add	r1, sp, #8
	strd	r3, r2, [sp, #48]
	movs	r2, #4
	str	r2, [sp, #12]
	str	r2, [sp, #28]
	bl	core::fmt::Formatter::write_fmt::hd37bb40752075c70
	add	sp, #64
	pop	{r7, pc}
.Lfunc_end199:
	.size	<smoltcp::wire::ipv4::Address as core::fmt::Display>::fmt::h78c694d696c6c50e, .Lfunc_end199-<smoltcp::wire::ipv4::Address as core::fmt::Display>::fmt::h78c694d696c6c50e
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN67_$LT$smoltcp..wire..ipv6..Address$u20$as$u20$core..fmt..Display$GT$3fmt17h2e9e5b81af9712a5E","ax",%progbits
	.p2align	2
	.type	<smoltcp::wire::ipv6::Address as core::fmt::Display>::fmt::h2e9e5b81af9712a5,%function
	.code	16
	.thumb_func
<smoltcp::wire::ipv6::Address as core::fmt::Display>::fmt::h2e9e5b81af9712a5:
.Lfunc_begin200:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#68
	sub	sp, #68
	mov	r4, r1
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.6
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.6
	movs	r2, #12
	mov	r5, r0
	bl	memcmp
	cmp	r0, #0
	beq.w	.LBB200_17
	ldrh	r1, [r5, #2]
	ldrh	r2, [r5, #4]
	ldrh	r3, [r5, #8]
	movs	r6, #0
	ldrh	r0, [r5]
	mov	r10, sp
	rev	r1, r1
	mov.w	r11, #0
	lsrs	r1, r1, #16
	strh.w	r1, [sp, #2]
	ldrh	r1, [r5, #6]
	mov.w	r8, #0
	rev	r2, r2
	lsrs	r2, r2, #16
	strh.w	r2, [sp, #4]
	rev	r1, r1
	lsrs	r1, r1, #16
	strh.w	r1, [sp, #6]
	rev	r2, r3
	ldrh	r3, [r5, #10]
	lsrs	r1, r2, #16
	strh.w	r1, [sp, #8]
	ldrh	r1, [r5, #12]
	rev	r2, r3
	ldrh	r3, [r5, #14]
	rev	r0, r0
	movs	r5, #1
	rev	r1, r1
	lsrs	r0, r0, #16
	strh.w	r0, [sp]
	lsrs	r2, r2, #16
	strh.w	r2, [sp, #10]
	lsrs	r1, r1, #16
	strh.w	r1, [sp, #12]
	rev	r2, r3
	lsrs	r1, r2, #16
	strh.w	r1, [sp, #14]
.LBB200_2:
	lsls	r0, r0, #16
	add.w	r9, r10, r11
	uxtb.w	r0, r8
	str.w	r9, [sp, #56]
	beq	.LBB200_6
.LCPI200_0:
	tbb	[pc, r0]
.LJTI200_0:
	.byte	(.LBB200_5-(.LCPI200_0+4))/2
	.byte	(.LBB200_10-(.LCPI200_0+4))/2
	.byte	(.LBB200_14-(.LCPI200_0+4))/2
	.byte	(.LBB200_10-(.LCPI200_0+4))/2
	.p2align	1
.LBB200_5:
	add	r0, sp, #56
	str	r0, [sp, #60]
	movw	r0, :lower16:<&T as core::fmt::LowerHex>::fmt::h2da8ba8b5de0bcbd
	mov.w	r8, #1
	movt	r0, :upper16:<&T as core::fmt::LowerHex>::fmt::h2da8ba8b5de0bcbd
	str	r0, [sp, #64]
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.114
	str	r6, [sp, #36]
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.114
	str	r0, [sp, #24]
	strd	r8, r6, [sp, #28]
	add	r0, sp, #60
	strd	r0, r8, [sp, #40]
	b	.LBB200_11
.LBB200_6:
	cmp	r0, #2
	bhs	.LBB200_9
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.445
	add	r1, sp, #24
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.445
	str	r6, [sp, #36]
	stm	r1!, {r0, r5, r6}
	movw	r0, :lower16:CORE_PERIPHERALS
	add	r1, sp, #24
	movt	r0, :upper16:CORE_PERIPHERALS
	strd	r0, r6, [sp, #40]
	mov	r0, r4
	bl	core::fmt::Formatter::write_fmt::hd37bb40752075c70
	cmp	r0, #0
	bne	.LBB200_18
	mov.w	r8, #2
	cmp.w	r11, #14
	bne	.LBB200_13
	b	.LBB200_16
.LBB200_9:
	beq	.LBB200_12
.LBB200_10:
	add	r0, sp, #56
	str	r0, [sp, #60]
	movw	r0, :lower16:<&T as core::fmt::LowerHex>::fmt::h2da8ba8b5de0bcbd
	add	r1, sp, #24
	movt	r0, :upper16:<&T as core::fmt::LowerHex>::fmt::h2da8ba8b5de0bcbd
	str	r0, [sp, #64]
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.444
	str	r6, [sp, #36]
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.444
	stm	r1!, {r0, r5, r6}
	add	r0, sp, #60
	strd	r0, r5, [sp, #40]
.LBB200_11:
	mov	r0, r4
	add	r1, sp, #24
	bl	core::fmt::Formatter::write_fmt::hd37bb40752075c70
	cmp	r0, #0
	bne	.LBB200_18
.LBB200_12:
	cmp.w	r11, #14
	beq	.LBB200_16
.LBB200_13:
	ldrh.w	r0, [r9, #2]
	add.w	r11, r11, #2
	b	.LBB200_2
.LBB200_14:
	add	r0, sp, #56
	str	r0, [sp, #60]
	movw	r0, :lower16:<&T as core::fmt::LowerHex>::fmt::h2da8ba8b5de0bcbd
	add	r1, sp, #24
	movt	r0, :upper16:<&T as core::fmt::LowerHex>::fmt::h2da8ba8b5de0bcbd
	str	r0, [sp, #64]
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.114
	str	r6, [sp, #36]
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.114
	stm	r1!, {r0, r5, r6}
	add	r0, sp, #60
	add	r1, sp, #24
	strd	r0, r5, [sp, #40]
	mov	r0, r4
	bl	core::fmt::Formatter::write_fmt::hd37bb40752075c70
	cbnz	r0, .LBB200_18
	mov.w	r8, #3
	cmp.w	r11, #14
	bne	.LBB200_13
.LBB200_16:
	movs	r0, #0
	add	sp, #68
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB200_17:
	add.w	r0, r5, #12
	str	r0, [sp, #24]
	movw	r0, :lower16:core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt::ha0378c4201814c21
	add.w	r1, r5, #13
	movt	r0, :upper16:core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt::ha0378c4201814c21
	str	r0, [sp, #28]
	strd	r1, r0, [sp, #32]
	add.w	r1, r5, #14
	strd	r1, r0, [sp, #40]
	add.w	r1, r5, #15
	strd	r1, r0, [sp, #48]
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.443
	movs	r1, #0
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.443
	str	r0, [sp]
	movs	r0, #4
	str	r0, [sp, #4]
	strd	r1, r1, [sp, #8]
	add	r1, sp, #24
	strd	r1, r0, [sp, #16]
	mov	r1, sp
	mov	r0, r4
	bl	core::fmt::Formatter::write_fmt::hd37bb40752075c70
	add	sp, #68
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB200_18:
	movs	r0, #1
	add	sp, #68
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.Lfunc_end200:
	.size	<smoltcp::wire::ipv6::Address as core::fmt::Display>::fmt::h2e9e5b81af9712a5, .Lfunc_end200-<smoltcp::wire::ipv6::Address as core::fmt::Display>::fmt::h2e9e5b81af9712a5
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN45_$LT$$RF$T$u20$as$u20$core..fmt..LowerHex$GT$3fmt17h2da8ba8b5de0bcbdE","ax",%progbits
	.p2align	1
	.type	<&T as core::fmt::LowerHex>::fmt::h2da8ba8b5de0bcbd,%function
	.code	16
	.thumb_func
<&T as core::fmt::LowerHex>::fmt::h2da8ba8b5de0bcbd:
.Lfunc_begin201:
	.fnstart
	.cfi_startproc
	ldr	r0, [r0]
	b	core::fmt::num::<impl core::fmt::LowerHex for i16>::fmt::hdad8d5f225e025a6
.Lfunc_end201:
	.size	<&T as core::fmt::LowerHex>::fmt::h2da8ba8b5de0bcbd, .Lfunc_end201-<&T as core::fmt::LowerHex>::fmt::h2da8ba8b5de0bcbd
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN69_$LT$smoltcp..wire..icmpv6..Message$u20$as$u20$core..fmt..Display$GT$3fmt17hef9d08a4466eb1d8E","ax",%progbits
	.p2align	2
	.type	<smoltcp::wire::icmpv6::Message as core::fmt::Display>::fmt::hef9d08a4466eb1d8,%function
	.code	16
	.thumb_func
<smoltcp::wire::icmpv6::Message as core::fmt::Display>::fmt::hef9d08a4466eb1d8:
.Lfunc_begin202:
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	.pad	#40
	sub	sp, #40
	ldrb	r3, [r0]
	mov	r2, r0
	mov	r0, r1
.LCPI202_0:
	tbb	[pc, r3]
.LJTI202_0:
	.byte	(.LBB202_2-(.LCPI202_0+4))/2
	.byte	(.LBB202_3-(.LCPI202_0+4))/2
	.byte	(.LBB202_4-(.LCPI202_0+4))/2
	.byte	(.LBB202_5-(.LCPI202_0+4))/2
	.byte	(.LBB202_6-(.LCPI202_0+4))/2
	.byte	(.LBB202_7-(.LCPI202_0+4))/2
	.byte	(.LBB202_8-(.LCPI202_0+4))/2
	.byte	(.LBB202_9-(.LCPI202_0+4))/2
	.byte	(.LBB202_10-(.LCPI202_0+4))/2
	.byte	(.LBB202_11-(.LCPI202_0+4))/2
	.byte	(.LBB202_12-(.LCPI202_0+4))/2
	.byte	(.LBB202_13-(.LCPI202_0+4))/2
	.byte	(.LBB202_14-(.LCPI202_0+4))/2
	.byte	(.LBB202_17-(.LCPI202_0+4))/2
	.p2align	1
.LBB202_2:
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.247
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.247
	b	.LBB202_15
.LBB202_3:
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.319
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.319
	b	.LBB202_15
.LBB202_4:
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.237
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.237
	b	.LBB202_15
.LBB202_5:
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.235
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.235
	b	.LBB202_15
.LBB202_6:
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.243
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.243
	b	.LBB202_15
.LBB202_7:
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.249
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.249
	b	.LBB202_15
.LBB202_8:
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.317
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.317
	b	.LBB202_15
.LBB202_9:
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.239
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.239
	b	.LBB202_15
.LBB202_10:
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.241
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.241
	b	.LBB202_15
.LBB202_11:
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.315
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.315
	b	.LBB202_15
.LBB202_12:
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.313
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.313
	b	.LBB202_15
.LBB202_13:
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.311
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.311
	b	.LBB202_15
.LBB202_14:
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.309
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.309
.LBB202_15:
	str	r1, [sp, #8]
	movs	r1, #1
	movw	r2, :lower16:CORE_PERIPHERALS
	str	r1, [sp, #12]
	movs	r1, #0
	str	r1, [sp, #16]
	str	r1, [sp, #20]
	movt	r2, :upper16:CORE_PERIPHERALS
.LBB202_16:
	str	r2, [sp, #24]
	str	r1, [sp, #28]
	add	r1, sp, #8
	bl	core::fmt::Formatter::write_fmt::hd37bb40752075c70
	add	sp, #40
	pop	{r7, pc}
.LBB202_17:
	ldrb	r1, [r2, #1]
	movs	r2, #0
	strb	r1, [r7, #-33]
	sub.w	r1, r7, #33
	str	r1, [sp, #32]
	movw	r1, :lower16:core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt::ha0378c4201814c21
	movt	r1, :upper16:core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt::ha0378c4201814c21
	str	r1, [sp, #36]
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.114
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.114
	str	r1, [sp, #8]
	movs	r1, #1
	str	r1, [sp, #12]
	strd	r2, r2, [sp, #16]
	add	r2, sp, #32
	b	.LBB202_16
.Lfunc_end202:
	.size	<smoltcp::wire::icmpv6::Message as core::fmt::Display>::fmt::hef9d08a4466eb1d8, .Lfunc_end202-<smoltcp::wire::icmpv6::Message as core::fmt::Display>::fmt::hef9d08a4466eb1d8
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp5iface9interface14InterfaceInner14check_ip_addrs17h8be6ea0748102f65E,"ax",%progbits
	.p2align	1
	.type	smoltcp::iface::interface::InterfaceInner::check_ip_addrs::h8be6ea0748102f65,%function
	.code	16
	.thumb_func
smoltcp::iface::interface::InterfaceInner::check_ip_addrs::h8be6ea0748102f65:
.Lfunc_begin203:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#52
	sub	sp, #52
	cmp	r1, #0
	beq	.LBB203_9
	add.w	r1, r1, r1, lsl #3
	mov	r8, sp
	movw	r9, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.7
	add.w	r11, r8, #4
	add.w	r10, r0, r1, lsl #1
	adds	r6, r0, #5
	movt	r9, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.7
	b	.LBB203_4
.LBB203_2:
	ldr	r0, [r6]
	str.w	r0, [r11]
	ldr	r0, [r6, #4]
	str.w	r0, [r11, #4]
	ldr	r0, [r6, #8]
	str.w	r0, [r11, #8]
	movs	r2, #16
	mov	r0, r8
	mov	r1, r9
	str	r5, [sp]
	bl	memcmp
	cbnz	r0, .LBB203_10
.LBB203_3:
	add.w	r0, r4, #18
	adds	r6, #18
	cmp	r0, r10
	beq	.LBB203_9
.LBB203_4:
	mov	r4, r6
	ldrb	r0, [r4, #-5]!
	ldr.w	r5, [r4, #1]
	cbz	r0, .LBB203_7
	ldr	r0, [r6]
	str.w	r0, [r11]
	uxtb	r0, r5
	str	r5, [sp]
	cmp	r0, #255
	ldr	r1, [r6, #4]
	str.w	r1, [r11, #4]
	ldr	r0, [r6, #8]
	str.w	r0, [r11, #8]
	beq	.LBB203_2
	movs	r2, #16
	mov	r0, r8
	mov	r1, r9
	bl	memcmp
	cmp	r0, #0
	bne	.LBB203_3
	b	.LBB203_2
.LBB203_7:
	adds	r0, r5, #1
	beq	.LBB203_11
	and	r0, r5, #240
	cmp	r0, #224
	bne	.LBB203_3
	b	.LBB203_12
.LBB203_9:
	add	sp, #52
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB203_10:
	ldr	r0, [r6, #8]
	str.w	r0, [sp, #45]
	ldr	r0, [r6, #4]
	str.w	r0, [sp, #41]
	ldr	r0, [r6]
	str.w	r0, [sp, #37]
	ldr	r0, [r6, #-4]
	str.w	r0, [sp, #33]
	movs	r0, #2
	b	.LBB203_13
.LBB203_11:
	mov.w	r5, #-1
.LBB203_12:
	str.w	r5, [sp, #33]
	movs	r0, #1
.LBB203_13:
	strb.w	r0, [sp, #32]
	add	r0, sp, #32
	str	r0, [sp, #24]
	movw	r0, :lower16:<smoltcp::wire::ip::Address as core::fmt::Display>::fmt::h57bdc56bfd29d3c6
	movt	r0, :upper16:<smoltcp::wire::ip::Address as core::fmt::Display>::fmt::h57bdc56bfd29d3c6
	str	r0, [sp, #28]
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.40
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.41
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.40
	str	r0, [sp]
	movs	r0, #2
	str	r0, [sp, #4]
	movs	r0, #0
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.41
	strd	r0, r0, [sp, #8]
	add	r0, sp, #24
	str	r0, [sp, #16]
	movs	r0, #1
	str	r0, [sp, #20]
	mov	r0, sp
	bl	core::panicking::panic_fmt::h679f68291595c801
	.inst.n	0xdefe
.Lfunc_end203:
	.size	smoltcp::iface::interface::InterfaceInner::check_ip_addrs::h8be6ea0748102f65, .Lfunc_end203-smoltcp::iface::interface::InterfaceInner::check_ip_addrs::h8be6ea0748102f65
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp5iface9interface14InterfaceInner17raw_socket_filter17h93e48f516552e689E,"ax",%progbits
	.p2align	1
	.type	smoltcp::iface::interface::InterfaceInner::raw_socket_filter::h93e48f516552e689,%function
	.code	16
	.thumb_func
smoltcp::iface::interface::InterfaceInner::raw_socket_filter::h93e48f516552e689:
.Lfunc_begin204:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#84
	sub	sp, #84
	mov	r9, r2
	ldr	r5, [r1, #4]
	mov.w	r2, #392
	ldr.w	r10, [r1]
	add.w	r1, r9, #16
	mla	r11, r5, r2, r10
	str	r1, [sp, #28]
	add.w	r1, r9, #17
	add.w	r12, r9, #40
	add.w	lr, r9, #41
	str	r1, [sp, #24]
	add.w	r4, r9, #35
	add.w	r1, r9, #36
	movs	r6, #0
	str	r1, [sp, #32]
	add.w	r1, r9, #4
	str	r1, [sp, #20]
.LBB204_1:
	ldrb.w	r8, [r9]
.LBB204_2:
	mov	r5, r10
.LBB204_3:
	cmp	r5, r11
	beq.w	.LBB204_33
	ldr	r1, [r5, #40]
	cmp	r1, #0
	add.w	r1, r5, #392
	beq	.LBB204_14
	cmp	r1, r11
	beq.w	.LBB204_33
	ldr.w	r2, [r5, #432]
	add.w	r10, r5, #784
	cbz	r2, .LBB204_12
	cmp	r10, r11
	beq.w	.LBB204_33
	ldr.w	r1, [r5, #824]
	cmp	r1, #0
	add.w	r1, r5, #1176
	beq	.LBB204_13
	cmp	r1, r11
	beq.w	.LBB204_33
	ldr.w	r1, [r5, #1216]
	add.w	r10, r5, #1568
	cmp	r1, #0
	mov	r5, r10
	bne	.LBB204_3
	sub.w	r5, r10, #392
	b	.LBB204_15
.LBB204_12:
	mov	r5, r1
	b	.LBB204_15
.LBB204_13:
	mov	r5, r10
.LBB204_14:
	mov	r10, r1
.LBB204_15:
	ldrb.w	r1, [r5, #108]
	cmp	r8, r1
	bne	.LBB204_2
	cmp.w	r8, #0
	ldr	r2, [sp, #32]
	str	r4, [sp, #16]
	beq	.LBB204_18
	ldrd	r2, r4, [sp, #24]
	cmp.w	r8, #1
	itt	ne
	movne	r2, lr
	movne	r4, r12
.LBB204_18:
	add.w	r1, r5, #44
	ldrb	r5, [r4]
	ldrb.w	r4, [r1, #65]
	cmp	r5, r4
	ldr	r4, [sp, #16]
	bne	.LBB204_2
	cmp	r5, #10
	bne	.LBB204_21
	ldrb.w	r5, [r1, #66]
	ldrb	r2, [r2]
	cmp	r2, r5
	bne	.LBB204_2
.LBB204_21:
	cmp.w	r8, #1
	strd	r3, r0, [sp, #8]
	strd	lr, r12, [sp]
	beq	.LBB204_24
	cmp.w	r8, #2
	ldr	r2, [r7, #8]
	bne	.LBB204_34
	movs	r5, #40
	b	.LBB204_25
.LBB204_24:
	movs	r5, #20
	ldr	r2, [r7, #8]
.LBB204_25:
	add	r2, r5
	add	r0, sp, #36
	bl	smoltcp::storage::packet_buffer::PacketBuffer<H>::enqueue::h267900eeb348d303
	ldrb.w	r0, [sp, #36]
	cbz	r0, .LBB204_27
	ldrb.w	r0, [sp, #37]
	ldrd	lr, r12, [sp]
	orr	r0, r0, #4
	cmp	r0, #4
	ldrd	r3, r0, [sp, #8]
	beq	.LBB204_1
	b	.LBB204_35
.LBB204_27:
	ldr	r4, [sp, #44]
	cmp	r4, r5
	blo	.LBB204_36
	cmp.w	r8, #2
	ldr.w	r8, [sp, #40]
	bne	.LBB204_30
	ldr.w	r12, [sp, #20]
	add	r1, sp, #36
	mov	lr, r5
	mov	r0, r4
	ldm.w	r12!, {r2, r3, r4, r5, r6}
	stm	r1!, {r2, r3, r4, r5, r6}
	ldm.w	r12, {r2, r3, r4, r5, r6}
	stm	r1!, {r2, r3, r4, r5, r6}
	mov	r4, r0
	add	r0, sp, #36
	add	r1, sp, #76
	mov	r5, lr
	strd	r8, lr, [sp, #76]
	bl	smoltcp::wire::ipv6::Repr::emit::ha6a20889af1b4d41
	b	.LBB204_31
.LBB204_30:
	ldr	r1, [sp, #20]
	ldr	r2, [sp, #12]
	ldr	r0, [r1, #12]
	str	r0, [sp, #48]
	ldr	r0, [r1, #8]
	str	r0, [sp, #44]
	ldr	r0, [r1, #4]
	str	r0, [sp, #40]
	ldr	r0, [r1]
	str	r0, [sp, #36]
	add	r0, sp, #36
	add	r1, sp, #76
	strd	r8, r5, [sp, #76]
	bl	smoltcp::wire::ipv4::Repr::emit::h67afef602fc405e1
.LBB204_31:
	subs	r0, r4, r5
	ldr	r4, [r7, #8]
	cmp	r0, r4
	ldr	r1, [sp, #8]
	bne	.LBB204_37
	add.w	r0, r8, r5
	mov	r2, r4
	mov	r4, r1
	bl	__aeabi_memcpy
	mov	r3, r4
	movs	r6, #1
	ldrd	lr, r12, [sp]
	ldrd	r0, r4, [sp, #12]
	b	.LBB204_1
.LBB204_33:
	and	r0, r6, #1
	add	sp, #84
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB204_34:
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.401
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.402
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.401
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.402
	movs	r1, #29
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB204_35:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.5
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.43
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.5
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.43
	movs	r1, #40
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB204_36:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.74
	mov	r0, r5
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.74
	mov	r1, r4
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB204_37:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.75
	mov	r1, r4
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.75
	bl	core::slice::<impl [T]>::copy_from_slice::len_mismatch_fail::h7bf74017f2463c91
	.inst.n	0xdefe
.Lfunc_end204:
	.size	smoltcp::iface::interface::InterfaceInner::raw_socket_filter::h93e48f516552e689, .Lfunc_end204-smoltcp::iface::interface::InterfaceInner::raw_socket_filter::h93e48f516552e689
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN7smoltcp7storage13packet_buffer21PacketBuffer$LT$H$GT$7enqueue17h267900eeb348d303E","ax",%progbits
	.p2align	1
	.type	smoltcp::storage::packet_buffer::PacketBuffer<H>::enqueue::h267900eeb348d303,%function
	.code	16
	.thumb_func
smoltcp::storage::packet_buffer::PacketBuffer<H>::enqueue::h267900eeb348d303:
.Lfunc_begin205:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10}
	push.w	{r8, r9, r10}
	.cfi_offset r10, -24
	.cfi_offset r9, -28
	.cfi_offset r8, -32
	ldr	r3, [r1, #20]
	cmp	r3, r2
	bhs	.LBB205_2
	movs	r1, #4
	b	.LBB205_21
.LBB205_2:
	ldr.w	r10, [r1, #4]
	ldr.w	r9, [r1, #12]
	cmp	r10, r9
	beq	.LBB205_20
	ldr.w	r8, [r1, #28]
	sub.w	r4, r3, r8
	cbz	r3, .LBB205_5
	ldr	r6, [r1, #24]
	add	r6, r8
	udiv	r5, r6, r3
	mls	r6, r5, r3, r6
	b	.LBB205_6
.LBB205_5:
	movs	r6, #0
.LBB205_6:
	subs	r6, r3, r6
	cmp	r4, r6
	it	ls
	movls	r6, r4
	cmp	r4, r2
	blo	.LBB205_20
	cmp	r6, r2
	bhs	.LBB205_19
	subs	r5, r4, r6
	cmp	r5, r2
	blo	.LBB205_20
	cmp.w	r10, #0
	beq.w	.LBB205_31
	ldr	r5, [r1, #8]
	cmp.w	r8, #0
	add.w	r12, r5, r9
	add.w	r9, r9, #1
	udiv	r5, r12, r10
	mls	r12, r5, r10, r12
	ldr	r5, [r1]
	str.w	r9, [r1, #12]
	add.w	lr, r5, r12, lsl #3
	str.w	r6, [r5, r12, lsl #3]
	mov.w	r12, #0
	strb.w	r12, [lr, #4]
	beq	.LBB205_12
	ldr.w	r12, [r1, #24]
	b	.LBB205_13
.LBB205_12:
	str.w	r12, [r1, #24]
.LBB205_13:
	cbz	r3, .LBB205_17
	add	r12, r8
	udiv	r5, r12, r3
	mls	lr, r5, r3, r12
	sub.w	r5, r3, lr
	cmp	r4, r5
	it	hi
	movhi	r4, r5
	adds.w	r12, r4, lr
	bhs	.LBB205_35
	cmp	r12, r3
	bls	.LBB205_18
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.128
	mov	r0, r12
	b	.LBB205_34
.LBB205_17:
	movs	r4, #0
.LBB205_18:
	cmp	r4, r6
	it	lo
	movlo	r6, r4
	add	r8, r6
	str.w	r8, [r1, #28]
.LBB205_19:
	cmp	r10, r9
	bne	.LBB205_22
.LBB205_20:
	movs	r1, #0
.LBB205_21:
	strb	r1, [r0, #1]
	movs	r1, #1
	strb	r1, [r0]
	pop.w	{r8, r9, r10}
	pop	{r4, r5, r6, r7, pc}
.LBB205_22:
	cmp.w	r10, #0
	beq	.LBB205_31
	ldr	r6, [r1, #8]
	add.w	r4, r9, #1
	add	r6, r9
	str	r4, [r1, #12]
	udiv	r5, r6, r10
	mls	r6, r5, r10, r6
	ldr	r5, [r1]
	cmp.w	r8, #0
	add.w	r4, r5, r6, lsl #3
	str.w	r2, [r5, r6, lsl #3]
	mov.w	r6, #1
	strb	r6, [r4, #4]
	beq	.LBB205_26
	ldr	r6, [r1, #24]
	cbz	r3, .LBB205_27
.LBB205_25:
	add	r6, r8
	udiv	r5, r6, r3
	mls	r12, r5, r3, r6
	b	.LBB205_28
.LBB205_26:
	movs	r6, #0
	str	r6, [r1, #24]
	cmp	r3, #0
	bne	.LBB205_25
.LBB205_27:
	mov.w	r12, #0
.LBB205_28:
	sub.w	r4, r3, r8
	sub.w	r6, r3, r12
	cmp	r4, r6
	it	hi
	movhi	r4, r6
	adds.w	lr, r4, r12
	bhs	.LBB205_32
	cmp	lr, r3
	bhi	.LBB205_33
	ldr	r3, [r1, #16]
	cmp	r4, r2
	it	lo
	movlo	r2, r4
	add.w	r6, r2, r8
	str	r6, [r1, #28]
	add.w	r1, r3, r12
	strd	r1, r2, [r0, #4]
	movs	r1, #0
	strb	r1, [r0]
	pop.w	{r8, r9, r10}
	pop	{r4, r5, r6, r7, pc}
.LBB205_31:
	movw	r0, :lower16:str.0.1011
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.126
	movt	r0, :upper16:str.0.1011
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.126
	movs	r1, #57
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB205_32:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.128
	mov	r0, r12
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.128
	mov	r1, lr
	bl	core::slice::index::slice_index_order_fail::h8a53f055fb6ee074
	.inst.n	0xdefe
.LBB205_33:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.128
	mov	r0, lr
.LBB205_34:
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.128
	mov	r1, r3
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB205_35:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.128
	mov	r0, lr
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.128
	mov	r1, r12
	bl	core::slice::index::slice_index_order_fail::h8a53f055fb6ee074
	.inst.n	0xdefe
.Lfunc_end205:
	.size	smoltcp::storage::packet_buffer::PacketBuffer<H>::enqueue::h267900eeb348d303, .Lfunc_end205-smoltcp::storage::packet_buffer::PacketBuffer<H>::enqueue::h267900eeb348d303
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp5iface9interface14InterfaceInner15process_nxt_hdr17ha5140fab79ee143bE,"ax",%progbits
	.p2align	2
	.type	smoltcp::iface::interface::InterfaceInner::process_nxt_hdr::ha5140fab79ee143b,%function
	.code	16
	.thumb_func
smoltcp::iface::interface::InterfaceInner::process_nxt_hdr::ha5140fab79ee143b:
.Lfunc_begin206:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#532
	sub.w	sp, sp, #532
	ldrb	r6, [r7, #8]
	mov	r10, r3
	mov	r8, r1
	mov	r9, r0
	ldrd	lr, r4, [r7, #16]
	cmp	r6, #7
	ldr	r1, [r7, #12]
	add	r3, sp, #224
	bhi.w	.LBB206_11
	mov	r11, r2
.LCPI206_0:
	tbb	[pc, r6]
.LJTI206_0:
	.byte	(.LBB206_3-(.LCPI206_0+4))/2
	.byte	(.LBB206_11-(.LCPI206_0+4))/2
	.byte	(.LBB206_11-(.LCPI206_0+4))/2
	.byte	(.LBB206_8-(.LCPI206_0+4))/2
	.byte	(.LBB206_7-(.LCPI206_0+4))/2
	.byte	(.LBB206_11-(.LCPI206_0+4))/2
	.byte	(.LBB206_11-(.LCPI206_0+4))/2
	.byte	(.LBB206_9-(.LCPI206_0+4))/2
	.p2align	1
.LBB206_3:
	cmp	r4, #8
	blo	.LBB206_10
	ldrb.w	r0, [lr, #1]
	movs	r1, #8
	add.w	r0, r1, r0, lsl #3
	uxtb	r5, r0
	cmp	r5, r4
	bhi	.LBB206_10
	lsls	r0, r0, #24
	str.w	r9, [sp, #168]
	beq.w	.LBB206_195
	mov	r9, lr
	mov	r4, r3
	ldrb	r0, [r9], #2
	bl	<smoltcp::wire::ip::Protocol as core::convert::From<u8>>::from::h32c43f1d7a16fe9c
	subs	r1, r5, #2
	movs	r2, #0
	mov.w	r12, #2
	str	r5, [sp, #164]
	b	.LBB206_15
.LBB206_7:
	adds	r0, r3, #4
	ldm.w	r10!, {r1, r2, r5, r6, r12}
	stm.w	r0!, {r1, r2, r5, r6, r12}
	ldm.w	r10, {r1, r2, r5, r6, r12}
	stm.w	r0, {r1, r2, r5, r6, r12}
	movs	r0, #2
	strb.w	r0, [sp, #224]
	ldr	r0, [r7, #12]
	mov	r1, r8
	strd	r0, lr, [sp]
	mov	r0, r9
	mov	r2, r11
	str	r4, [sp, #8]
	bl	smoltcp::iface::interface::InterfaceInner::process_udp::h5cead8c80c35e914
	add.w	sp, sp, #532
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB206_8:
	adds	r0, r3, #4
	ldm.w	r10!, {r1, r2, r5, r6, r12}
	stm.w	r0!, {r1, r2, r5, r6, r12}
	ldm.w	r10, {r1, r2, r5, r6, r12}
	stm.w	r0, {r1, r2, r5, r6, r12}
	movs	r0, #2
	strb.w	r0, [sp, #224]
	mov	r0, r9
	mov	r1, r8
	mov	r2, r11
	strd	lr, r4, [sp]
	bl	smoltcp::iface::interface::InterfaceInner::process_tcp::h5ff6fe940e837b1a
	add.w	sp, sp, #532
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB206_9:
	ldr.w	r0, [r10]
	str	r0, [sp, #156]
	ldr.w	r0, [r10, #4]
	str	r0, [sp, #164]
	ldrh.w	r0, [r10, #12]
	add.w	r6, r10, #15
	str	r0, [sp, #168]
	ldr.w	r0, [r10, #8]
	ldrb.w	r5, [r10, #14]
	str	r0, [sp, #160]
	add	r0, sp, #172
	movs	r2, #18
	mov	r1, r6
	bl	__aeabi_memcpy
	ldr.w	lr, [r7, #16]
	cmp	r4, #8
	bhs	.LBB206_23
.LBB206_10:
	movw	r0, #1025
	strh.w	r0, [r9]
	add.w	sp, sp, #532
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB206_11:
	cmp	r1, #0
	beq.w	.LBB206_29
	add.w	r0, r9, #12
	movs	r1, #148
	bl	__aeabi_memclr4
	movs	r0, #6
	str.w	r0, [r9, #8]
	movs	r0, #0
	strb.w	r0, [r9]
	add.w	sp, sp, #532
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB206_13:
	movs	r3, #1
.LBB206_14:
	add	r2, r3
	cmp	r1, r2
	bls.w	.LBB206_47
.LBB206_15:
	subs	r6, r1, r2
	beq.w	.LBB206_34
	add.w	r3, r9, r2
	ldrb	r5, [r3]
	cmp	r5, #0
	beq	.LBB206_13
	cmp	r6, #1
	beq.w	.LBB206_34
	ldrb	r3, [r3, #1]
	adds	r3, #2
	cmp	r3, r6
	bhi.w	.LBB206_34
	cmp	r5, #1
	beq	.LBB206_14
	eor.w	r6, r12, r5, lsr #6
	cmp	r6, #2
	beq	.LBB206_14
	bhs.w	.LBB206_87
	movw	r0, #1537
	b	.LBB206_35
.LBB206_23:
	ldrb.w	r0, [lr]
	ldrb.w	r11, [r10, #33]
	str	r0, [sp, #152]
	ldrb.w	r12, [r10, #38]
	adds	r0, #126
	ldrb.w	r3, [r10, #39]
	uxtb	r1, r0
	ldr.w	r10, [r10, #34]
	cmp	r1, #7
	bhi	.LBB206_26
	movs	r2, #241
	lsr.w	r1, r2, r1
	lsls	r1, r1, #31
	beq	.LBB206_26
	movw	r1, :lower16:.Lswitch.table._ZN7smoltcp5iface9interface14InterfaceInner15process_nxt_hdr17ha5140fab79ee143bE
	sxtb	r0, r0
	movt	r1, :upper16:.Lswitch.table._ZN7smoltcp5iface9interface14InterfaceInner15process_nxt_hdr17ha5140fab79ee143bE
	ldr.w	r0, [r1, r0, lsl #2]
	ldr	r1, [r7, #20]
	cmp	r0, r1
	bhi	.LBB206_10
.LBB206_26:
	ldr	r0, [r7, #20]
	str	r0, [sp, #196]
	ldr	r0, [sp, #164]
	str.w	r0, [sp, #353]
	ldr	r0, [sp, #160]
	str.w	r0, [sp, #357]
	ldr	r0, [sp, #168]
	strh.w	r0, [sp, #361]
	ldr	r0, [r6]
	str	r0, [sp, #364]
	ldrb	r0, [r6, #4]
	movs	r2, #18
	strb.w	r0, [sp, #368]
	add	r0, sp, #224
	mov	r1, r6
	str.w	r12, [sp, #144]
	str	r3, [sp, #136]
	movs	r4, #2
	str.w	lr, [sp, #192]
	mov	r6, lr
	str	r5, [sp, #148]
	strb.w	r5, [sp, #363]
	strb.w	r4, [sp, #352]
	bl	__aeabi_memcpy
	ldr.w	r0, [sp, #229]
	str.w	r0, [sp, #393]
	ldr.w	r0, [sp, #237]
	str.w	r0, [sp, #401]
	ldrb.w	r0, [sp, #241]
	str.w	r8, [sp, #140]
	strb.w	r0, [sp, #405]
	ldrb.w	r0, [r8, #48]
	mov	r8, r11
	ldr.w	r1, [sp, #233]
	cmp	r0, #1
	str.w	r1, [sp, #397]
	strb.w	r11, [sp, #406]
	strh.w	r10, [sp, #407]
	strb.w	r4, [sp, #392]
	bhi.w	.LBB206_37
	ldr	r5, [r7, #20]
	add	r0, sp, #352
	add	r1, sp, #392
	movs	r2, #7
	mov	r3, r5
	bl	smoltcp::wire::ip::checksum::pseudo_header::ha771da54de6c08b8
	mov	r4, r0
	mov	r0, r6
	mov	r1, r5
	bl	smoltcp::wire::ip::checksum::data::hebb229fc732545ff
	uxth	r0, r0
	uxtah	r0, r0, r4
	lsrs	r1, r0, #16
	uxtah	r0, r1, r0
	movw	r1, #65535
	add.w	r0, r0, r0, lsr #16
	uxth	r0, r0
	cmp	r0, r1
	beq.w	.LBB206_36
	mov	r10, r9
	movs	r1, #5
	b.w	.LBB206_174
.LBB206_29:
	add.w	r12, sp, #352
	mov	r1, r10
	mov	r2, r12
	mov	r11, r3
	mov	r8, r4
	ldm	r1!, {r0, r3, r4, r5, r6}
	stm	r2!, {r0, r3, r4, r5, r6}
	ldm.w	r1, {r0, r3, r4, r5, r6}
	stm	r2!, {r0, r3, r4, r5, r6}
	movw	r0, #259
	strh.w	r0, [sp, #392]
	movs	r0, #40
	add	r1, sp, #392
	str	r0, [sp, #396]
	add.w	r0, r1, #8
	ldm.w	r10!, {r1, r2, r3, r5, r6}
	stm	r0!, {r1, r2, r3, r5, r6}
	ldm.w	r10, {r1, r2, r3, r5, r6}
	stm	r0!, {r1, r2, r3, r5, r6}
	ldrb.w	r0, [sp, #372]
	cmp.w	r8, #1192
	it	hs
	movhs.w	r8, #1192
	cmp	r0, #255
	str.w	lr, [sp, #440]
	str.w	r8, [sp, #444]
	beq	.LBB206_32
	add.w	r5, r12, #20
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.7
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.7
	movs	r2, #16
	mov	r0, r5
	bl	memcmp
	cbz	r0, .LBB206_32
	add	r6, sp, #392
	mov	r0, r6
	bl	smoltcp::wire::icmpv6::Repr::buffer_len::h7ea189855c9c3b5a
	mov	r4, r0
	movs	r2, #104
	ldrd	r0, r1, [r5]
	str	r0, [sp, #172]
	ldr	r0, [r5, #8]
	str	r1, [sp, #176]
	ldr	r1, [r5, #12]
	strd	r0, r1, [sp, #180]
	ldrd	r0, r1, [sp, #356]
	str	r0, [sp, #504]
	ldr	r0, [sp, #364]
	str	r1, [sp, #508]
	ldr	r1, [sp, #368]
	strd	r0, r1, [sp, #512]
	add.w	r0, r11, #1
	mov	r1, r6
	bl	__aeabi_memcpy
	movs	r0, #64
	movs	r1, #7
	movs	r2, #1
	b	.LBB206_33
.LBB206_32:
	add	r0, sp, #224
	movs	r1, #105
	movs	r4, #0
	strd	r4, r4, [sp, #180]
	strd	r4, r4, [sp, #172]
	strd	r4, r4, [sp, #504]
	strd	r4, r4, [sp, #512]
	bl	__aeabi_memclr4
	movs	r2, #6
	movs	r1, #0
	movs	r0, #0
.LBB206_33:
	str.w	r2, [r9, #8]
	ldr	r2, [sp, #172]
	str.w	r2, [r9, #20]
	ldr	r2, [sp, #176]
	str.w	r2, [r9, #24]
	ldr	r2, [sp, #180]
	str.w	r2, [r9, #28]
	ldr	r2, [sp, #184]
	str.w	r2, [r9, #32]
	ldr	r2, [sp, #504]
	str.w	r2, [r9, #36]
	ldr	r2, [sp, #508]
	str.w	r2, [r9, #40]
	ldr	r2, [sp, #512]
	str.w	r2, [r9, #44]
	ldr	r2, [sp, #516]
	str.w	r2, [r9, #48]
	movs	r2, #105
	strb.w	r1, [r9, #52]
	add	r1, sp, #224
	strb.w	r0, [r9, #54]
	add.w	r0, r9, #55
	movs	r5, #0
	strb.w	r5, [r9, #53]
	strd	r5, r4, [r9, #12]
	bl	__aeabi_memcpy
	strb.w	r5, [r9]
	add.w	sp, sp, #532
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB206_34:
	movw	r0, #1025
.LBB206_35:
	ldr	r1, [sp, #168]
	strh	r0, [r1]
	add.w	sp, sp, #532
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB206_36:
	ldrb	r0, [r6]
	str	r0, [sp, #152]
.LBB206_37:
	ldr	r5, [sp, #152]
	movs	r0, #13
	sub.w	r3, r5, #128
	str.w	r10, [sp, #132]
	cmp	r3, #15
	bhi	.LBB206_42
	add	r6, sp, #224
	ldrd	r4, r1, [r7, #16]
.LCPI206_1:
	tbb	[pc, r3]
.LJTI206_2:
	.byte	(.LBB206_40-(.LCPI206_1+4))/2
	.byte	(.LBB206_52-(.LCPI206_1+4))/2
	.byte	(.LBB206_51-(.LCPI206_1+4))/2
	.byte	(.LBB206_58-(.LCPI206_1+4))/2
	.byte	(.LBB206_58-(.LCPI206_1+4))/2
	.byte	(.LBB206_50-(.LCPI206_1+4))/2
	.byte	(.LBB206_48-(.LCPI206_1+4))/2
	.byte	(.LBB206_49-(.LCPI206_1+4))/2
	.byte	(.LBB206_55-(.LCPI206_1+4))/2
	.byte	(.LBB206_56-(.LCPI206_1+4))/2
	.byte	(.LBB206_58-(.LCPI206_1+4))/2
	.byte	(.LBB206_58-(.LCPI206_1+4))/2
	.byte	(.LBB206_58-(.LCPI206_1+4))/2
	.byte	(.LBB206_58-(.LCPI206_1+4))/2
	.byte	(.LBB206_58-(.LCPI206_1+4))/2
	.byte	(.LBB206_57-(.LCPI206_1+4))/2
	.p2align	1
.LBB206_40:
	ldrb	r0, [r4, #1]
	mov	r10, r9
	cmp	r0, #0
	bne.w	.LBB206_59
	ldrh	r0, [r4, #4]
	subs	r1, #8
	ldrh	r3, [r4, #6]
	str.w	r8, [sp, #128]
	str	r1, [sp, #152]
	mov.w	r8, #4
	b	.LBB206_54
.LBB206_42:
	subs	r2, r5, #1
	add	r6, sp, #224
	cmp	r2, #3
	ldrd	r4, r1, [r7, #16]
	bhi.w	.LBB206_58
	mov	r10, r9
.LCPI206_2:
	tbh	[pc, r2, lsl #1]
.LJTI206_1:
	.short	(.LBB206_45-(.LCPI206_2+4))/2
	.short	(.LBB206_84-(.LCPI206_2+4))/2
	.short	(.LBB206_79-(.LCPI206_2+4))/2
	.short	(.LBB206_82-(.LCPI206_2+4))/2
	.p2align	1
.LBB206_45:
	ldrb.w	r11, [r4, #1]
	add	r0, sp, #224
	add	r1, sp, #192
	bl	smoltcp::wire::icmpv6::Repr::parse::create_packet_from_payload::h341590bec797a4b5
	ldrb.w	r0, [sp, #224]
	cmp	r0, #0
	bne.w	.LBB206_86
	ldr	r1, [sp, #244]
	str	r1, [sp, #152]
	ldrh.w	r1, [sp, #248]
	ldr	r0, [sp, #228]
	strh.w	r1, [sp, #220]
	ldrb.w	r1, [sp, #250]
	strb.w	r1, [sp, #222]
	ldrb.w	r1, [sp, #251]
	str	r1, [sp, #100]
	ldrh.w	r1, [sp, #256]
	str	r1, [sp, #108]
	ldrh.w	r1, [sp, #258]
	str	r1, [sp, #112]
	ldr	r1, [sp, #260]
	str	r1, [sp, #104]
	ldr	r1, [sp, #264]
	str	r0, [sp, #88]
	ldr	r0, [sp, #232]
	ldr.w	r9, [sp, #252]
	str	r1, [sp, #116]
	ldr	r1, [sp, #272]
	str	r0, [sp, #92]
	ldrd	lr, r0, [sp, #236]
	str	r1, [sp, #96]
	lsr.w	r1, r9, #8
	str.w	r8, [sp, #128]
	lsr.w	r2, lr, #8
	str	r1, [sp, #120]
	ldr.w	r12, [sp, #268]
	lsr.w	r1, r9, #16
	str	r1, [sp, #124]
	lsr.w	r5, r9, #24
	mov.w	r8, #0
	b	.LBB206_81
.LBB206_47:
	mov	r12, r4
	mov	r3, r4
	ldm.w	r10!, {r2, r4, r5, r6, lr}
	stm.w	r12!, {r2, r4, r5, r6, lr}
	ldm.w	r10, {r2, r4, r5, r6, lr}
	stm.w	r12, {r2, r4, r5, r6, lr}
	mov	r1, r8
	mov	r8, r0
	ldr	r2, [r7, #16]
	ldr	r0, [sp, #164]
	adds	r6, r2, r0
	ldr	r2, [r7, #20]
	subs	r2, r2, r0
	ldr	r0, [r7, #12]
	strd	r0, r6, [sp, #4]
	str	r2, [sp, #12]
	ldr	r0, [sp, #168]
	mov	r2, r11
	str.w	r8, [sp]
	bl	smoltcp::iface::interface::InterfaceInner::process_nxt_hdr::ha5140fab79ee143b
	add.w	sp, sp, #532
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB206_48:
	movs	r0, #8
	b	.LBB206_58
.LBB206_49:
	movs	r0, #9
	b	.LBB206_58
.LBB206_50:
	movs	r0, #7
	b	.LBB206_58
.LBB206_51:
	movs	r0, #6
	b	.LBB206_58
.LBB206_52:
	ldrb	r0, [r4, #1]
	mov	r10, r9
	cbnz	r0, .LBB206_59
	ldrh	r0, [r4, #4]
	subs	r1, #8
	ldrh	r3, [r4, #6]
	str.w	r8, [sp, #128]
	str	r1, [sp, #152]
	mov.w	r8, #5
.LBB206_54:
	rev	r2, r0
	add.w	r0, r4, #8
	lsr.w	r11, r2, #16
	rev	r3, r3
	lsr.w	lr, r3, #16
	lsrs	r1, r2, #24
	lsrs	r2, r3, #24
	b	.LBB206_142
.LBB206_55:
	movs	r0, #10
	b	.LBB206_58
.LBB206_56:
	movs	r0, #11
	b	.LBB206_58
.LBB206_57:
	movs	r0, #12
.LBB206_58:
	ldrb	r2, [r4, #1]
	mov	r10, r9
	cbz	r2, .LBB206_60
.LBB206_59:
	movs	r1, #6
	b.w	.LBB206_174
.LBB206_60:
	subs	r2, r0, #7
	cmp	r2, #5
	bhs	.LBB206_71
	sub.w	r0, r5, #133
	str.w	r8, [sp, #128]
	cmp	r0, #4
	bhi.w	.LBB206_160
	adds	r5, r6, #2
.LCPI206_3:
	tbh	[pc, r0, lsl #1]
.LJTI206_3:
	.short	(.LBB206_64-(.LCPI206_3+4))/2
	.short	(.LBB206_122-(.LCPI206_3+4))/2
	.short	(.LBB206_107-(.LCPI206_3+4))/2
	.short	(.LBB206_114-(.LCPI206_3+4))/2
	.short	(.LBB206_92-(.LCPI206_3+4))/2
	.p2align	1
.LBB206_64:
	subs.w	r0, r1, #8
	beq.w	.LBB206_143
	cmp	r0, #8
	blo.w	.LBB206_161
	ldrb	r1, [r4, #9]
	cmp.w	r0, r1, lsl #3
	blo.w	.LBB206_161
	add.w	r2, r4, #8
	ldrb	r3, [r2]
	cmp	r3, #4
	beq.w	.LBB206_155
	cmp	r3, #3
	beq.w	.LBB206_113
	cmp	r3, #1
	str	r2, [sp, #504]
	str	r0, [sp, #508]
	bne.w	.LBB206_160
	add	r0, sp, #504
	bl	smoltcp::wire::ndiscoption::NdiscOption<T>::link_layer_addr::hf7d071f40c3a5104
	movs	r3, #1
	b	.LBB206_144
.LBB206_71:
	cmp	r0, #6
	it	ne
	cmpne	r0, #12
	bne	.LBB206_59
	cmp	r5, #143
	str.w	r8, [sp, #128]
	beq.w	.LBB206_88
	cmp	r5, #130
	bne.w	.LBB206_90
	cmp	r1, #23
	bls.w	.LBB206_197
	cmp	r1, #24
	beq.w	.LBB206_190
	cmp	r1, #25
	bls.w	.LBB206_191
	cmp	r1, #27
	bls.w	.LBB206_198
	ldrh	r0, [r4, #4]
	ldrb	r5, [r4, #24]
	ldrh	r2, [r4, #26]
	ldrb.w	r9, [r4, #23]
	ldrh.w	r3, [r4, #19]
	ldr.w	r6, [r4, #15]
	rev	r0, r0
	strh.w	r3, [sp, #224]
	lsrs	r0, r0, #16
	str	r0, [sp, #108]
	and	r0, r5, #7
	str	r0, [sp, #124]
	rev	r0, r2
	ldrb	r3, [r4, #21]
	lsrs	r0, r0, #16
	str	r0, [sp, #112]
	add.w	r0, r4, #28
	ldrb.w	r11, [r4, #25]
	str	r0, [sp, #104]
	sub.w	r0, r1, #28
	ldrb	r2, [r4, #8]
	strb.w	r3, [sp, #226]
	ldrb	r3, [r4, #22]
	str	r0, [sp, #116]
	ldr.w	r0, [r4, #11]
	str	r6, [sp, #152]
	str	r3, [sp, #100]
	mov.w	lr, #0
	ubfx	r1, r5, #3, #1
	str	r1, [sp, #120]
	b	.LBB206_89
.LBB206_79:
	ldrb.w	r11, [r4, #1]
	add	r0, sp, #224
	add	r1, sp, #192
	bl	smoltcp::wire::icmpv6::Repr::parse::create_packet_from_payload::h341590bec797a4b5
	ldrb.w	r0, [sp, #224]
	cmp	r0, #0
	bne	.LBB206_86
	ldr	r1, [sp, #244]
	str	r1, [sp, #152]
	ldrh.w	r1, [sp, #248]
	ldr	r0, [sp, #228]
	strh.w	r1, [sp, #220]
	ldrb.w	r1, [sp, #250]
	strb.w	r1, [sp, #222]
	ldrb.w	r1, [sp, #251]
	str	r1, [sp, #100]
	ldrh.w	r1, [sp, #256]
	str	r1, [sp, #108]
	ldrh.w	r1, [sp, #258]
	str	r1, [sp, #112]
	ldr	r1, [sp, #260]
	str	r0, [sp, #88]
	ldr	r0, [sp, #232]
	str	r1, [sp, #104]
	ldr	r1, [sp, #264]
	str	r0, [sp, #92]
	ldr.w	r9, [sp, #252]
	ldrd	lr, r0, [sp, #236]
	str	r1, [sp, #116]
	ldr	r1, [sp, #272]
	str.w	r8, [sp, #128]
	lsr.w	r2, lr, #8
	str	r1, [sp, #96]
	lsr.w	r1, r9, #8
	ldr.w	r12, [sp, #268]
	lsr.w	r5, r9, #24
	mov.w	r8, #2
	str	r1, [sp, #120]
	lsr.w	r1, r9, #16
	str	r1, [sp, #124]
.LBB206_81:
	b	.LBB206_141
.LBB206_82:
	ldrb.w	r11, [r4, #1]
	add	r0, sp, #224
	add	r1, sp, #192
	bl	smoltcp::wire::icmpv6::Repr::parse::create_packet_from_payload::h341590bec797a4b5
	ldrb.w	r0, [sp, #224]
	cmp	r0, #0
	bne	.LBB206_86
	ldr	r0, [sp, #228]
	str	r0, [sp, #92]
	ldr	r0, [sp, #232]
	str	r0, [sp, #48]
	ldrd	r0, r1, [sp, #236]
	str	r1, [sp, #152]
	ldrh.w	r1, [sp, #244]
	strh.w	r1, [sp, #220]
	ldrb.w	r1, [sp, #246]
	strb.w	r1, [sp, #222]
	ldrb.w	r1, [sp, #247]
	str	r1, [sp, #100]
	ldrh.w	r1, [sp, #252]
	str	r1, [sp, #108]
	ldrh.w	r1, [sp, #254]
	str	r1, [sp, #112]
	ldr	r1, [r4, #4]
	ldr.w	r9, [sp, #248]
	str.w	r8, [sp, #128]
	ldr	r2, [sp, #256]
	str	r2, [sp, #104]
	rev.w	lr, r1
	ldr	r1, [sp, #268]
	ldr	r2, [sp, #260]
	str	r1, [sp, #96]
	lsr.w	r1, r9, #8
	str	r2, [sp, #116]
	str	r1, [sp, #120]
	ldr.w	r12, [sp, #264]
	lsr.w	r1, r9, #16
	mov.w	r8, #3
	lsr.w	r5, r9, #24
	str	r1, [sp, #124]
	lsr.w	r2, lr, #8
	ldr	r1, [sp, #272]
	str	r1, [sp, #88]
	b	.LBB206_141
.LBB206_84:
	ldrb	r0, [r4, #1]
	cmp	r0, #0
	bne.w	.LBB206_59
	add	r0, sp, #224
	add	r1, sp, #192
	bl	smoltcp::wire::icmpv6::Repr::parse::create_packet_from_payload::h341590bec797a4b5
	ldrb.w	r0, [sp, #224]
	cmp	r0, #0
	beq.w	.LBB206_140
.LBB206_86:
	ldrb.w	r1, [sp, #225]
	b	.LBB206_174
.LBB206_87:
	ldr	r4, [sp, #168]
	movs	r1, #148
	add.w	r0, r4, #12
	bl	__aeabi_memclr4
	movs	r0, #6
	str	r0, [r4, #8]
	movs	r0, #0
	strb	r0, [r4]
	add.w	sp, sp, #532
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB206_88:
	subs	r1, #8
	str	r1, [sp, #152]
	add.w	r0, r4, #8
	mov.w	lr, #1
.LBB206_89:
	ldrb.w	r1, [sp, #226]
	lsrs	r3, r0, #8
	strb.w	r1, [sp, #222]
	ldrh.w	r1, [sp, #224]
	lsrs	r4, r0, #16
	mov.w	r12, #0
	strh.w	r1, [sp, #220]
	b	.LBB206_91
.LBB206_90:
	mov.w	r12, #1
	movs	r0, #0
.LBB206_91:
	movs	r1, #6
	mov.w	r8, #7
	mov	r5, r11
	b	.LBB206_173
.LBB206_92:
	subs.w	r8, r1, #40
	mov.w	r0, #0
	strh.w	r0, [sp, #528]
	str	r0, [sp, #524]
	blo.w	.LBB206_200
	cmp.w	r8, #0
	beq.w	.LBB206_145
	movs	r1, #0
	str	r1, [sp, #76]
	movs	r1, #0
	str	r1, [sp, #72]
	movs	r1, #0
	str	r1, [sp, #68]
	movs	r1, #0
	str	r1, [sp, #64]
	movs	r1, #0
	str	r1, [sp, #60]
	movs	r1, #0
	movs	r2, #0
	add.w	r0, r4, #40
	str	r1, [sp, #56]
	movs	r1, #0
	str	r2, [sp, #80]
	movs	r2, #0
	str	r0, [sp, #152]
	mov.w	r9, #0
	movs	r0, #11
	str	r1, [sp, #52]
	movs	r1, #0
	mov.w	r12, #0
	movs	r5, #0
	str	r2, [sp, #124]
	mov.w	lr, #0
	mov.w	r11, #0
.LBB206_95:
	cmp	r8, r5
	blo.w	.LBB206_202
	sub.w	r2, r8, r5
	cmp	r2, #8
	itttt	hs
	ldrhs	r3, [sp, #152]
	addhs	r6, r3, r5
	ldrbhs	r3, [r6, #1]
	cmphs.w	r2, r3, lsl #3
	blo.w	.LBB206_169
	ldrb	r2, [r6]
	cmp	r2, #1
	beq	.LBB206_105
	cmp	r2, #4
	bne.w	.LBB206_162
	cmp	r3, #5
	bls.w	.LBB206_169
	lsls	r0, r3, #3
	sub.w	r11, r0, #2
	add.w	r0, r5, #8
	cmp	r11, r0
	blo.w	.LBB206_203
	sub.w	r2, r11, r0
	cmp	r2, #40
	itttt	hs
	addhs.w	r9, r6, #2
	addhs.w	r6, r9, r0
	ldrhhs	r0, [r6, #4]
	revhs	r4, r0
	ittt	hs
	movhs	r0, #40
	addhs.w	r0, r0, r4, lsr #16
	cmphs	r2, r0
	blo.w	.LBB206_169
	ldrb	r0, [r6]
	and	r0, r0, #240
	cmp	r0, #96
	bne.w	.LBB206_165
	ldrb	r0, [r6, #6]
	bl	<smoltcp::wire::ip::Protocol as core::convert::From<u8>>::from::h32c43f1d7a16fe9c
	add.w	r3, r5, #48
	cmp	r11, r3
	blo.w	.LBB206_207
	ldrb	r2, [r6, #7]
	add.w	lr, r9, r3
	str	r2, [sp, #80]
	ldr	r2, [r6, #12]
	str	r2, [sp, #52]
	ldr	r2, [r6, #8]
	str	r2, [sp, #56]
	ldr	r2, [r6, #20]
	str	r2, [sp, #60]
	ldr	r2, [r6, #16]
	str	r2, [sp, #64]
	ldr	r2, [r6, #28]
	str	r2, [sp, #68]
	ldr	r2, [r6, #24]
	str	r2, [sp, #72]
	ldrb.w	r2, [r6, #32]
	str	r2, [sp, #76]
	ldr.w	r2, [r6, #34]
	sub.w	r3, r11, r3
	ldrb.w	r9, [r6, #33]
	str	r2, [sp, #524]
	ldrh	r2, [r6, #38]
	lsr.w	r12, r4, #16
	strh.w	r2, [sp, #528]
	mov	r11, r3
	add.w	r2, r3, #48
	ldr	r4, [r7, #16]
	b	.LBB206_106
.LBB206_105:
	ldrh	r2, [r6, #6]
	ldr.w	r6, [r6, #2]
	lsls	r3, r2, #8
	lsls	r2, r6, #8
	adds	r2, #6
	str	r2, [sp, #120]
	movs	r2, #1
	orr.w	r3, r3, r6, lsr #24
	str	r3, [sp, #116]
	str	r2, [sp, #124]
	movs	r2, #8
.LBB206_106:
	add	r5, r2
	cmp	r8, r5
	bne	.LBB206_95
	b	.LBB206_146
.LBB206_107:
	cmp	r1, #23
	bls.w	.LBB206_196
	subs.w	r0, r1, #24
	beq.w	.LBB206_147
	cmp	r0, #8
	blo.w	.LBB206_161
	ldrb	r1, [r4, #25]
	cmp.w	r0, r1, lsl #3
	blo.w	.LBB206_161
	add.w	r2, r4, #24
	ldrb	r3, [r2]
	cmp	r3, #4
	beq.w	.LBB206_155
	cmp	r3, #3
	bne.w	.LBB206_156
.LBB206_113:
	cmp	r1, #4
	bhs.w	.LBB206_160
	b	.LBB206_161
.LBB206_114:
	cmp	r1, #23
	bls.w	.LBB206_196
	subs	r1, #24
	beq.w	.LBB206_149
	cmp	r1, #8
	blo.w	.LBB206_161
	ldrb	r0, [r4, #25]
	cmp.w	r1, r0, lsl #3
	blo.w	.LBB206_161
	ldrb	r1, [r4, #24]
	cmp	r1, #2
	beq.w	.LBB206_158
	cmp	r1, #4
	beq.w	.LBB206_159
	cmp	r1, #3
	bne.w	.LBB206_160
	cmp	r0, #4
	bhs.w	.LBB206_160
	b	.LBB206_161
.LBB206_122:
	subs.w	lr, r1, #16
	blo.w	.LBB206_201
	cmp.w	lr, #0
	beq.w	.LBB206_152
	ldr	r0, [r7, #16]
	mov.w	r11, #0
	adds	r0, #16
	str	r0, [sp, #152]
	mov.w	r12, #0
	mov.w	r9, #0
	movs	r0, #0
	str	r0, [sp, #124]
	movs	r0, #0
.LBB206_125:
	cmp	lr, r0
	blo.w	.LBB206_199
	sub.w	r6, lr, r0
	cmp	r6, #8
	itttt	hs
	ldrhs	r3, [sp, #152]
	addhs	r5, r3, r0
	ldrbhs	r4, [r5, #1]
	cmphs.w	r6, r4, lsl #3
	blo.w	.LBB206_169
	ldrb	r2, [r5]
	lsls	r1, r4, #3
	subs	r2, #1
	cmp	r2, #4
	bhi.w	.LBB206_188
.LCPI206_4:
	tbh	[pc, r2, lsl #1]
.LJTI206_4:
	.short	(.LBB206_130-(.LCPI206_4+4))/2
	.short	(.LBB206_164-(.LCPI206_4+4))/2
	.short	(.LBB206_132-(.LCPI206_4+4))/2
	.short	(.LBB206_166-(.LCPI206_4+4))/2
	.short	(.LBB206_137-(.LCPI206_4+4))/2
	.p2align	1
.LBB206_130:
	cmp	r4, #1
	bne.w	.LBB206_165
	ldrh	r1, [r5, #6]
	ldr.w	r3, [r5, #2]
	lsrs	r2, r3, #8
	orr.w	r2, r2, r1, lsl #24
	strd	r2, r3, [sp, #112]
	lsrs	r2, r3, #16
	movs	r3, #8
	orr.w	r1, r2, r1, lsl #16
	str	r1, [sp, #108]
	movs	r1, #1
	str	r1, [sp, #124]
	b	.LBB206_139
.LBB206_132:
	cmp	r4, #4
	blo.w	.LBB206_169
	bne.w	.LBB206_165
	cmp	r6, #11
	bls.w	.LBB206_204
	cmp	r6, #31
	bls.w	.LBB206_205
	ldrb	r1, [r5, #3]
	ldr	r2, [r5, #4]
	movw	r6, #16960
	ldrb	r3, [r5, #2]
	bic	r1, r1, #63
	str	r1, [sp, #28]
	rev	r1, r2
	movt	r6, #15
	str	r3, [sp, #76]
	umull	r1, r3, r1, r6
	ldr	r2, [r5, #8]
	mov.w	r12, #0
	strd	r3, r1, [sp, #60]
	ldr	r1, [r5, #16]
	str	r1, [sp, #524]
	ldrh	r1, [r5, #20]
	mov.w	r11, #1
	rev	r2, r2
	strh.w	r1, [sp, #528]
	ldrb	r1, [r5, #22]
	umull	r2, r3, r2, r6
	str	r1, [sp, #36]
	ldrb	r1, [r5, #23]
	strd	r3, r2, [sp, #68]
	ldrb	r2, [r5, #30]
	str	r1, [sp, #32]
	ldrb	r1, [r5, #24]
	str	r2, [sp, #44]
	ldrb	r2, [r5, #31]
	str	r1, [sp, #80]
	ldrb	r1, [r5, #25]
	str	r2, [sp, #20]
	str	r1, [sp, #24]
	ldr.w	r1, [r5, #26]
	str	r1, [sp, #40]
	movs	r3, #32
	b	.LBB206_139
.LBB206_137:
	cmp	r4, #1
	bne.w	.LBB206_165
	ldr	r1, [r5, #4]
	movs	r3, #8
	mov.w	r9, #1
	rev	r1, r1
	str	r1, [sp, #120]
.LBB206_139:
	add	r0, r3
	cmp	lr, r0
	bne.w	.LBB206_125
	b	.LBB206_153
.LBB206_140:
	ldr	r0, [sp, #228]
	str	r0, [sp, #92]
	ldr	r0, [sp, #232]
	str	r0, [sp, #48]
	ldrd	r0, r1, [sp, #236]
	str	r1, [sp, #152]
	ldrh.w	r1, [sp, #244]
	strh.w	r1, [sp, #220]
	ldrb.w	r1, [sp, #246]
	strb.w	r1, [sp, #222]
	ldrb.w	r1, [sp, #247]
	str	r1, [sp, #100]
	ldrh.w	r1, [sp, #252]
	str	r1, [sp, #108]
	ldrh.w	r1, [sp, #254]
	str	r1, [sp, #112]
	ldr	r1, [r7, #16]
	ldr.w	r9, [sp, #248]
	str.w	r8, [sp, #128]
	ldr	r1, [r1, #4]
	ldr	r2, [sp, #256]
	str	r2, [sp, #104]
	ldr	r2, [sp, #260]
	rev.w	lr, r1
	ldr	r1, [sp, #268]
	str	r1, [sp, #96]
	lsr.w	r1, r9, #8
	str	r1, [sp, #120]
	lsr.w	r1, r9, #16
	str	r2, [sp, #116]
	ldr.w	r12, [sp, #264]
	str	r1, [sp, #124]
	ldr	r1, [sp, #272]
	str	r1, [sp, #88]
	lsr.w	r5, r9, #24
	lsr.w	r2, lr, #8
	mov.w	r8, #1
.LBB206_141:
.LBB206_142:
	lsrs	r4, r0, #16
	lsrs	r3, r0, #8
	b	.LBB206_176
.LBB206_143:
	movs	r3, #0
.LBB206_144:
	str	r0, [sp, #336]
	lsrs	r0, r1, #16
	strb.w	r0, [sp, #342]
	strh.w	r1, [sp, #340]
	movs	r1, #0
	movs	r0, #0
	b	.LBB206_154
.LBB206_145:
	movs	r2, #0
	str	r2, [sp, #56]
	movs	r2, #0
	str	r2, [sp, #52]
	movs	r2, #0
	movs	r1, #0
	str	r2, [sp, #64]
	movs	r2, #0
	str	r1, [sp, #124]
	movs	r1, #0
	str	r2, [sp, #60]
	movs	r2, #0
	mov.w	r11, #0
	movs	r0, #11
	mov.w	lr, #0
	mov.w	r12, #0
	str	r1, [sp, #80]
	movs	r1, #0
	str	r2, [sp, #72]
	movs	r2, #0
	mov.w	r9, #0
	str	r2, [sp, #68]
	movs	r2, #0
	str	r2, [sp, #76]
.LBB206_146:
	strd	r0, lr, [sp, #36]
	ldr.w	r0, [r4, #9]
	str	r0, [sp, #336]
	ldr.w	r0, [r4, #13]
	str	r0, [sp, #340]
	ldrb	r0, [r4, #17]
	ldr	r6, [sp, #116]
	strb.w	r0, [sp, #344]
	ldrb	r0, [r4, #23]
	strb.w	r0, [sp, #224]
	ldr	r0, [sp, #124]
	strd	r9, r1, [sp, #28]
	ldr	r1, [r4, #24]
	strb.w	r0, [sp, #505]
	lsrs	r0, r6, #16
	str.w	r1, [sp, #225]
	ldr	r1, [r4, #28]
	strb.w	r0, [sp, #512]
	ldrb	r0, [r4, #18]
	str.w	r1, [sp, #229]
	ldr	r1, [r4, #32]
	str	r0, [sp, #100]
	ldr	r0, [sp, #524]
	str.w	r1, [sp, #233]
	ldr.w	r1, [r4, #35]
	str	r0, [sp, #496]
	ldrh.w	r0, [sp, #528]
	str	r1, [sp, #236]
	ldrb.w	r1, [r4, #39]
	strh.w	r0, [sp, #500]
	movw	r0, #65535
	strb.w	r1, [sp, #504]
	bic.w	r1, r11, r0
	ldr	r0, [sp, #228]
	strh.w	r6, [sp, #510]
	ldr	r2, [sp, #120]
	str.w	r2, [sp, #506]
	ldrb	r3, [r4, #8]
	str	r0, [sp, #104]
	ldr	r0, [sp, #236]
	str	r0, [sp, #84]
	ldr	r0, [sp, #504]
	str	r0, [sp, #96]
	lsrs	r0, r2, #16
	orr.w	r0, r0, r6, lsl #16
	movs	r2, #0
	ldr.w	r9, [r4, #19]
	str.w	r12, [sp, #48]
	str.w	r12, [sp, #516]
	lsr.w	r5, r11, #8
	str	r0, [sp, #88]
	movs	r0, #4
	str	r2, [sp, #24]
	ldr	r2, [sp, #512]
	str	r2, [sp, #92]
	b	.LBB206_154
.LBB206_147:
	mov.w	r12, #0
.LBB206_148:
	ldr.w	r2, [r4, #9]
	str	r2, [sp, #336]
	ldr.w	r2, [r4, #13]
	str	r0, [r5]
	lsrs	r0, r0, #16
	ldrb	r3, [r4, #8]
	str	r2, [sp, #340]
	ldrb	r2, [r4, #17]
	orr.w	r0, r0, r1, lsl #16
	strb.w	r2, [sp, #344]
	ldrb	r2, [r4, #23]
	ldrb	r6, [r4, #18]
	ldr.w	r9, [r4, #19]
	str	r0, [sp, #104]
	movs	r0, #2
	str	r6, [sp, #100]
	strb.w	r2, [sp, #224]
	lsrs	r2, r1, #16
	strb.w	r12, [sp, #225]
	strh	r1, [r5, #4]
	strb	r2, [r5, #6]
	b	.LBB206_151
.LBB206_149:
	movs	r6, #0
.LBB206_150:
	ldrb	r2, [r4, #4]
	ldrb	r1, [r4, #17]
	str	r1, [sp, #100]
	lsr.w	r1, r12, #8
	bic	r3, r2, #31
	ldr	r2, [r4, #8]
	str	r2, [sp, #336]
	ldr	r2, [r4, #12]
	str	r2, [sp, #340]
	ldrb	r2, [r4, #16]
	strb.w	r2, [sp, #344]
	ldrh	r2, [r4, #22]
	strh.w	r2, [sp, #224]
	lsrs	r2, r0, #16
	strh.w	r0, [r5, #5]
	orr.w	r0, r1, r0, lsl #24
	ldr.w	r9, [r4, #18]
	strb.w	r6, [sp, #226]
	str.w	r12, [r5, #1]
	strb	r2, [r5, #7]
	str	r0, [sp, #104]
	movs	r0, #3
.LBB206_151:
	movs	r1, #0
	b	.LBB206_154
.LBB206_152:
	mov.w	r9, #0
	mov.w	r11, #0
	movs	r0, #0
	str	r0, [sp, #124]
	mov.w	r12, #0
.LBB206_153:
	ldr	r6, [r7, #16]
	ldr	r2, [sp, #524]
	str	r2, [sp, #496]
	ldrh.w	r2, [sp, #528]
	ldrh	r1, [r6, #6]
	strh.w	r2, [sp, #500]
	ldrb	r0, [r6, #5]
	ldr	r2, [sp, #116]
	strb.w	r2, [sp, #339]
	movw	r2, #16960
	and	r0, r0, #192
	strb.w	r0, [sp, #336]
	rev	r1, r1
	movt	r2, #15
	lsrs	r0, r1, #16
	ldr	r1, [sp, #124]
	strb.w	r1, [sp, #337]
	movs	r1, #6
	ldr	r3, [sp, #120]
	strb.w	r1, [sp, #338]
	ldr	r1, [r6, #8]
	umull	r0, r5, r0, r2
	ldr	r2, [sp, #112]
	str	r3, [sp, #224]
	ldr	r3, [r6, #12]
	strb.w	r2, [sp, #340]
	ldr	r2, [sp, #108]
	str.w	r2, [sp, #341]
	rev	r1, r1
	mov.w	r2, #1000
	str	r0, [sp, #232]
	rev	r0, r3
	str	r5, [sp, #84]
	str	r5, [sp, #236]
	umull	r1, r5, r1, r2
	umull	r2, r0, r0, r2
	ldrb	r3, [r6, #4]
	str	r2, [sp, #92]
	str	r2, [sp, #512]
	strd	r12, r11, [sp, #52]
	str	r5, [sp, #88]
	ldr.w	r11, [sp, #44]
	str	r5, [sp, #508]
	ldr	r5, [sp, #20]
	str	r1, [sp, #96]
	str	r1, [sp, #504]
	movs	r1, #0
	str	r0, [sp, #48]
	str	r0, [sp, #516]
	movs	r0, #1
.LBB206_154:
	ldrh.w	r2, [sp, #342]
	ldr.w	r6, [sp, #338]
	strh.w	r2, [sp, #220]
	ldrb.w	r2, [sp, #344]
	strb.w	r2, [sp, #222]
	ldrh.w	r2, [sp, #224]
	str	r2, [sp, #108]
	ldrh.w	r2, [sp, #226]
	str	r2, [sp, #112]
	ldr	r2, [sp, #232]
	str	r6, [sp, #152]
	ldrh.w	r4, [sp, #336]
	str	r2, [sp, #116]
	ldr	r2, [sp, #496]
	uxtb	r6, r5
	str	r2, [sp, #212]
	ldrh.w	r2, [sp, #500]
	lsr.w	r5, r9, #24
	strh.w	r2, [sp, #216]
	orr.w	r1, r1, r6, lsl #8
	uxtb.w	r2, r11
	mov.w	r12, #0
	orrs	r1, r2
	str	r1, [sp, #44]
	lsr.w	r1, r9, #16
	str	r1, [sp, #124]
	lsr.w	r6, r9, #8
	str	r6, [sp, #120]
	b	.LBB206_172
.LBB206_155:
	cmp	r1, #5
	bhi	.LBB206_160
	b	.LBB206_161
.LBB206_156:
	cmp	r3, #1
	str	r2, [sp, #504]
	str	r0, [sp, #508]
	bne	.LBB206_160
	add	r0, sp, #504
	bl	smoltcp::wire::ndiscoption::NdiscOption<T>::link_layer_addr::hf7d071f40c3a5104
	ldr	r4, [r7, #16]
	mov.w	r12, #1
	b	.LBB206_148
.LBB206_158:
	ldrh	r0, [r4, #30]
	movs	r6, #1
	ldr.w	r1, [r4, #26]
	lsls	r0, r0, #8
	orr.w	r0, r0, r1, lsr #24
	lsls	r1, r1, #8
	add.w	r12, r1, #6
	b	.LBB206_150
.LBB206_159:
	cmp	r0, #5
	bls	.LBB206_161
.LBB206_160:
	mov.w	r12, #1
	movs	r1, #6
	b	.LBB206_171
.LBB206_161:
	mov.w	r12, #1
	movs	r1, #4
	b	.LBB206_171
.LBB206_162:
	cmp	r2, #3
	bne.w	.LBB206_189
	cmp	r3, #4
	blo	.LBB206_169
	b	.LBB206_189
.LBB206_164:
	cmp	r4, #1
	beq.w	.LBB206_189
.LBB206_165:
	movs	r1, #8
	b	.LBB206_170
.LBB206_166:
	cmp	r4, #6
	blo	.LBB206_169
	sub.w	r0, r1, #10
	cmp	r0, #40
	blo	.LBB206_169
	ldrh	r2, [r5, #14]
	movs	r3, #40
	rev	r2, r2
	add.w	r2, r3, r2, lsr #16
	cmp	r0, r2
	bhs.w	.LBB206_192
.LBB206_169:
	movs	r1, #4
.LBB206_170:
	mov.w	r12, #1
.LBB206_171:
	movs	r0, #0
.LBB206_172:
	mov.w	r8, #6
.LBB206_173:
	cmp.w	r12, #0
	beq	.LBB206_175
.LBB206_174:
	strb.w	r1, [r10, #1]
	movs	r0, #1
	strb.w	r0, [r10]
	add.w	sp, sp, #532
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB206_175:
	ldr.w	r12, [sp, #84]
.LBB206_176:
	uxtb	r3, r3
	ldrb.w	r6, [sp, #222]
	lsls	r3, r3, #8
	strb.w	r6, [sp, #210]
	ldrh.w	r6, [sp, #220]
	orr.w	r3, r3, r4, lsl #16
	uxtb	r0, r0
	strh.w	r6, [sp, #208]
	ldr	r6, [sp, #212]
	str	r6, [sp, #200]
	ldrh.w	r4, [sp, #216]
	cmp.w	r8, #4
	add.w	r6, r3, r0
	strh.w	r4, [sp, #204]
	beq	.LBB206_182
	cmp.w	r8, #5
	beq	.LBB206_181
	cmp.w	r8, #6
	bne	.LBB206_180
	ldr	r0, [sp, #144]
	cmp	r0, #255
	beq.w	.LBB206_187
.LBB206_180:
	movw	r0, #1537
	strh.w	r0, [r10]
	add.w	sp, sp, #532
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB206_181:
	add.w	r0, r10, #12
	movs	r1, #148
	bl	__aeabi_memclr4
	movs	r0, #6
	str.w	r0, [r10, #8]
	movs	r0, #0
	strb.w	r0, [r10]
	add.w	sp, sp, #532
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB206_182:
	uxtb.w	r0, lr
	add.w	r8, sp, #352
	orr.w	r5, r0, r2, lsl #8
	ldr	r0, [sp, #156]
	str	r0, [sp, #352]
	ldr	r2, [sp, #164]
	uxtb.w	r0, r11
	str	r2, [sp, #356]
	orr.w	r4, r0, r1, lsl #8
	ldr	r0, [sp, #160]
	str	r0, [sp, #360]
	ldr	r0, [sp, #168]
	strh.w	r0, [sp, #364]
	ldr	r0, [sp, #148]
	strb.w	r0, [sp, #366]
	add.w	r0, r8, #15
	add	r1, sp, #172
	movs	r2, #18
	bl	__aeabi_memcpy
	ldr	r0, [sp, #128]
	strb.w	r0, [sp, #385]
	ldr	r0, [sp, #132]
	str.w	r0, [sp, #386]
	movs	r0, #5
	strb.w	r0, [sp, #392]
	ldrb.w	r0, [sp, #372]
	strh.w	r4, [sp, #394]
	strh.w	r5, [sp, #396]
	cmp	r0, #255
	str	r6, [sp, #400]
	ldr	r0, [sp, #152]
	str	r0, [sp, #404]
	beq	.LBB206_185
	add.w	r5, r8, #20
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.7
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.7
	movs	r2, #16
	mov	r0, r5
	bl	memcmp
	cbz	r0, .LBB206_185
	add	r6, sp, #392
	mov	r0, r6
	bl	smoltcp::wire::icmpv6::Repr::buffer_len::h7ea189855c9c3b5a
	mov	r4, r0
	movs	r2, #104
	ldrd	r0, r1, [r5]
	str	r0, [sp, #504]
	ldr	r0, [r5, #8]
	str	r1, [sp, #508]
	ldr	r1, [r5, #12]
	strd	r0, r1, [sp, #512]
	ldrd	r0, r1, [sp, #356]
	str	r0, [sp, #336]
	ldr	r0, [sp, #364]
	str	r1, [sp, #340]
	ldr	r1, [sp, #368]
	strd	r0, r1, [sp, #344]
	add	r0, sp, #224
	mov	r1, r6
	adds	r0, #1
	bl	__aeabi_memcpy
	movs	r1, #1
	movs	r0, #7
	movs	r5, #64
	b	.LBB206_186
.LBB206_185:
	add	r0, sp, #224
	movs	r1, #105
	movs	r5, #0
	strd	r5, r5, [sp, #512]
	strd	r5, r5, [sp, #504]
	strd	r5, r5, [sp, #336]
	strd	r5, r5, [sp, #344]
	bl	__aeabi_memclr4
	movs	r1, #6
	movs	r0, #0
	movs	r4, #0
.LBB206_186:
	str.w	r1, [r10, #8]
	ldr	r1, [sp, #504]
	str.w	r1, [r10, #20]
	ldr	r1, [sp, #508]
	str.w	r1, [r10, #24]
	ldr	r1, [sp, #512]
	str.w	r1, [r10, #28]
	ldr	r1, [sp, #516]
	str.w	r1, [r10, #32]
	ldr	r1, [sp, #336]
	str.w	r1, [r10, #36]
	ldr	r1, [sp, #340]
	str.w	r1, [r10, #40]
	ldr	r1, [sp, #344]
	str.w	r1, [r10, #44]
	ldr	r1, [sp, #348]
	str.w	r1, [r10, #48]
	add	r1, sp, #224
	strb.w	r0, [r10, #52]
	add.w	r0, r10, #55
	movs	r2, #105
	movs	r6, #0
	strd	r6, r4, [r10, #12]
	strb.w	r6, [r10, #53]
	strb.w	r5, [r10, #54]
	bl	__aeabi_memcpy
	strb.w	r6, [r10]
	add.w	sp, sp, #532
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB206_187:
	ldr	r1, [sp, #124]
	ldr	r2, [sp, #120]
	uxtb	r1, r1
	lsls	r0, r5, #24
	uxtb	r2, r2
	add.w	r8, sp, #392
	orr.w	r0, r0, r1, lsl #16
	ldr	r1, [sp, #156]
	orr.w	r0, r0, r2, lsl #8
	str	r1, [sp, #392]
	uxtb.w	r1, r9
	ldr	r2, [sp, #164]
	adds	r5, r0, r1
	ldr	r0, [sp, #160]
	str	r0, [sp, #400]
	ldr	r0, [sp, #168]
	strh.w	r0, [sp, #404]
	ldr	r0, [sp, #148]
	str	r2, [sp, #396]
	add	r1, sp, #172
	strb.w	r0, [sp, #406]
	add.w	r0, r8, #15
	movs	r2, #18
	mov	r4, r12
	bl	__aeabi_memcpy
	ldr	r0, [sp, #128]
	strb.w	r0, [sp, #425]
	ldr	r0, [sp, #132]
	str.w	r0, [sp, #426]
	movs	r0, #255
	strb.w	r0, [sp, #430]
	ldr	r0, [sp, #136]
	strb.w	r0, [sp, #431]
	ldr	r0, [sp, #152]
	str	r0, [sp, #228]
	ldrh.w	r0, [sp, #208]
	add	r3, sp, #224
	strh.w	r0, [sp, #232]
	ldrb.w	r0, [sp, #210]
	strb.w	r0, [sp, #234]
	ldr	r0, [sp, #100]
	strb.w	r0, [sp, #235]
	ldr	r0, [sp, #108]
	strh.w	r0, [sp, #240]
	ldr	r0, [sp, #112]
	strh.w	r0, [sp, #242]
	ldr	r0, [sp, #104]
	str	r0, [sp, #244]
	ldr	r0, [sp, #116]
	str	r0, [sp, #248]
	ldr	r0, [sp, #96]
	strd	r4, r0, [sp, #252]
	ldr	r0, [sp, #88]
	str	r0, [sp, #260]
	ldr	r0, [sp, #92]
	str	r0, [sp, #264]
	ldr	r0, [sp, #48]
	str	r0, [sp, #268]
	ldr	r0, [sp, #52]
	str	r0, [sp, #276]
	ldr	r0, [sp, #56]
	str	r0, [sp, #272]
	ldr	r0, [sp, #60]
	str	r0, [sp, #284]
	ldr	r0, [sp, #64]
	str	r0, [sp, #280]
	ldr	r0, [sp, #68]
	str	r0, [sp, #292]
	ldr	r0, [sp, #72]
	str	r0, [sp, #288]
	ldr	r0, [sp, #76]
	strb.w	r0, [sp, #296]
	ldr	r0, [sp, #28]
	strb.w	r0, [sp, #297]
	ldrh.w	r0, [sp, #204]
	mov	r2, r8
	strh.w	r0, [sp, #302]
	ldr	r0, [sp, #200]
	str.w	r0, [sp, #298]
	ldr	r0, [sp, #36]
	strb.w	r0, [sp, #304]
	ldr	r0, [sp, #32]
	strb.w	r0, [sp, #305]
	ldr	r0, [sp, #80]
	strb.w	r0, [sp, #306]
	ldr	r0, [sp, #24]
	strb.w	r0, [sp, #307]
	ldr	r0, [sp, #40]
	str	r0, [sp, #308]
	ldr	r0, [sp, #44]
	str	r0, [sp, #312]
	mov	r0, r10
	ldr	r1, [sp, #140]
	str	r6, [sp, #224]
	str	r5, [sp, #236]
	bl	smoltcp::iface::interface::InterfaceInner::process_ndisc::hc601fe30e414ee86
	add.w	sp, sp, #532
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB206_188:
	cmp	r4, #0
	beq.w	.LBB206_209
.LBB206_189:
	movs	r1, #6
	b	.LBB206_170
.LBB206_190:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.520
	movs	r0, #24
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.520
	movs	r1, #24
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB206_191:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.521
	movs	r0, #25
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.521
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB206_192:
	ldrb	r0, [r5, #10]
	and	r0, r0, #240
	cmp	r0, #96
	bne.w	.LBB206_165
	subs	r1, #2
	cmp	r1, #47
	bhi	.LBB206_189
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.574
	movs	r0, #48
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.574
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB206_195:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.466
	movs	r0, #2
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.466
	mov	r1, r5
	bl	core::slice::index::slice_index_order_fail::h8a53f055fb6ee074
	.inst.n	0xdefe
.LBB206_196:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.346
	movs	r0, #24
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.346
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB206_197:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.519
	movs	r0, #24
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.519
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB206_198:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.522
	movs	r0, #28
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.522
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB206_199:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.546
	mov	r1, lr
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.546
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB206_200:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.346
	movs	r0, #40
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.346
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB206_201:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.346
	movs	r0, #16
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.346
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB206_202:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.543
	mov	r0, r5
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.543
	mov	r1, r8
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB206_203:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.544
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.544
	b	.LBB206_208
.LBB206_204:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.563
	movs	r0, #12
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.563
	b	.LBB206_206
.LBB206_205:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.564
	movs	r0, #32
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.564
.LBB206_206:
	mov	r1, r6
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB206_207:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.545
	mov	r0, r3
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.545
.LBB206_208:
	mov	r1, r11
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB206_209:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.565
	movs	r0, #2
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.565
	bl	core::slice::index::slice_index_order_fail::h8a53f055fb6ee074
	.inst.n	0xdefe
.Lfunc_end206:
	.size	smoltcp::iface::interface::InterfaceInner::process_nxt_hdr::ha5140fab79ee143b, .Lfunc_end206-smoltcp::iface::interface::InterfaceInner::process_nxt_hdr::ha5140fab79ee143b
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN77_$LT$smoltcp..wire..ip..Protocol$u20$as$u20$core..convert..From$LT$u8$GT$$GT$4from17h32c43f1d7a16fe9cE","ax",%progbits
	.p2align	2
	.type	<smoltcp::wire::ip::Protocol as core::convert::From<u8>>::from::h32c43f1d7a16fe9c,%function
	.code	16
	.thumb_func
<smoltcp::wire::ip::Protocol as core::convert::From<u8>>::from::h32c43f1d7a16fe9c:
.Lfunc_begin207:
	.fnstart
	.cfi_startproc
	uxtb	r2, r0
	mov	r1, r0
	cmp	r2, #60
	mov.w	r0, #10
	bhi.w	.LBB207_11
.LCPI207_0:
	tbb	[pc, r2]
.LJTI207_0:
	.byte	(.LBB207_3-(.LCPI207_0+4))/2
	.byte	(.LBB207_3-(.LCPI207_0+4))/2
	.byte	(.LBB207_3-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_4-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_5-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_6-(.LCPI207_0+4))/2
	.byte	(.LBB207_7-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_11-(.LCPI207_0+4))/2
	.byte	(.LBB207_8-(.LCPI207_0+4))/2
	.byte	(.LBB207_9-(.LCPI207_0+4))/2
	.byte	(.LBB207_10-(.LCPI207_0+4))/2
	.p2align	1
.LBB207_3:
	mov	r0, r1
	bx	lr
.LBB207_4:
	movs	r0, #3
	bx	lr
.LBB207_5:
	movs	r0, #4
	bx	lr
.LBB207_6:
	movs	r0, #5
	bx	lr
.LBB207_7:
	movs	r0, #6
	bx	lr
.LBB207_8:
	movs	r0, #7
	bx	lr
.LBB207_9:
	movs	r0, #8
	bx	lr
.LBB207_10:
	movs	r0, #9
.LBB207_11:
	bx	lr
.Lfunc_end207:
	.size	<smoltcp::wire::ip::Protocol as core::convert::From<u8>>::from::h32c43f1d7a16fe9c, .Lfunc_end207-<smoltcp::wire::ip::Protocol as core::convert::From<u8>>::from::h32c43f1d7a16fe9c
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp5iface9interface14InterfaceInner11process_tcp17h5ff6fe940e837b1aE,"ax",%progbits
	.p2align	2
	.type	smoltcp::iface::interface::InterfaceInner::process_tcp::h5ff6fe940e837b1a,%function
	.code	16
	.thumb_func
smoltcp::iface::interface::InterfaceInner::process_tcp::h5ff6fe940e837b1a:
.Lfunc_begin208:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#548
	sub.w	sp, sp, #548
	mov	r10, r3
	ldrb	r3, [r3]
	mov	lr, r2
	mov	r9, r1
	mov	r8, r0
	ldr.w	r11, [r7, #12]
	cbz	r3, .LBB208_3
	cmp	r3, #1
	bne	.LBB208_4
	ldrd	r12, r1, [r10, #8]
	movs	r2, #1
	movs	r3, #1
	b	.LBB208_5
.LBB208_3:
	ldr.w	r1, [r10, #6]
	str	r1, [sp, #164]
	ldr.w	r1, [r10, #10]
	ldrb.w	r2, [r10, #1]
	ldr.w	r4, [r10, #23]
	str	r1, [sp, #168]
	ldr.w	r1, [r10, #14]
	ldrb.w	r3, [r10, #18]
	str	r4, [sp, #432]
	ldr.w	r4, [r10, #27]
	ldr.w	r12, [r10, #2]
	str	r1, [sp, #172]
	ldr.w	r1, [r10, #19]
	str	r4, [sp, #436]
	ldr.w	r4, [r10, #31]
	str	r4, [sp, #440]
	b	.LBB208_5
.LBB208_4:
	ldr.w	r2, [r10, #16]
	str	r2, [sp, #168]
	ldr.w	r2, [r10, #28]
	str	r2, [sp, #432]
	ldr.w	r2, [r10, #32]
	str	r2, [sp, #436]
	ldrd	r12, r1, [r10, #8]
	ldr.w	r3, [r10, #20]
	str	r1, [sp, #164]
	ldr.w	r2, [r10, #36]
	ldr.w	r1, [r10, #24]
	str	r3, [sp, #172]
	movs	r3, #2
	str	r2, [sp, #440]
	movs	r2, #2
.LBB208_5:
	ldr	r0, [sp, #432]
	str	r0, [sp, #300]
	ldr	r0, [sp, #436]
	str	r0, [sp, #304]
	ldr	r0, [sp, #440]
	str	r0, [sp, #308]
	str.w	r1, [sp, #145]
	cmp.w	r11, #20
	ldrd	r0, r1, [sp, #300]
	ldr	r4, [sp, #172]
	str	r4, [sp, #244]
	ldr	r6, [sp, #168]
	str	r6, [sp, #240]
	ldr	r5, [sp, #164]
	str	r5, [sp, #236]
	strb.w	r2, [sp, #124]
	str.w	r12, [sp, #125]
	str.w	r5, [sp, #129]
	str.w	r6, [sp, #133]
	str.w	r4, [sp, #137]
	strb.w	r3, [sp, #144]
	str.w	r0, [sp, #149]
	ldr	r0, [sp, #308]
	str.w	r1, [sp, #153]
	str.w	r0, [sp, #157]
	blo	.LBB208_7
	ldr	r6, [r7, #8]
	movs	r1, #60
	ldrb	r0, [r6, #12]
	and.w	r0, r1, r0, lsr #2
	cmp	r0, r11
	bls	.LBB208_8
.LBB208_7:
	movs	r0, #4
	b	.LBB208_25
.LBB208_8:
	cmp	r0, #20
	blo	.LBB208_24
	ldrh	r0, [r6]
	cmp	r0, #0
	beq	.LBB208_24
	ldrh	r0, [r6, #2]
	cbz	r0, .LBB208_24
	ldrb.w	r0, [r9, #46]
	cmp	r0, #1
	bhi	.LBB208_14
	add	r0, sp, #124
	add	r1, sp, #144
	movs	r2, #3
	mov	r3, r11
	mov	r5, lr
	bl	smoltcp::wire::ip::checksum::pseudo_header::ha771da54de6c08b8
	mov	r4, r0
	mov	r0, r6
	mov	r1, r11
	bl	smoltcp::wire::ip::checksum::data::hebb229fc732545ff
	uxth	r0, r0
	mov	lr, r5
	uxtah	r0, r0, r4
	lsrs	r1, r0, #16
	uxtah	r0, r1, r0
	movw	r1, #65535
	add.w	r0, r0, r0, lsr #16
	uxth	r0, r0
	cmp	r0, r1
	beq	.LBB208_14
	movs	r0, #5
	b	.LBB208_25
.LBB208_14:
	ldrh	r0, [r6, #12]
	lsls	r1, r0, #22
	bmi	.LBB208_17
	lsls	r1, r0, #23
	and	r1, r0, #1024
	bmi	.LBB208_19
	movs	r2, #4
	cmp	r1, #0
	it	eq
	ubfxeq	r2, r0, #11, #1
	str	r2, [sp, #96]
	b	.LBB208_22
.LBB208_17:
	tst.w	r0, #1280
	bne	.LBB208_24
	movs	r1, #2
	b	.LBB208_21
.LBB208_19:
	cbnz	r1, .LBB208_24
	movs	r1, #3
.LBB208_21:
	str	r1, [sp, #96]
.LBB208_22:
	ands	r5, r0, #4096
	bne	.LBB208_26
	movs	r1, #0
	str	r1, [sp, #88]
	movs	r3, #0
	b	.LBB208_27
.LBB208_24:
	movs	r0, #8
.LBB208_25:
	strb.w	r0, [r8, #1]
	movs	r0, #1
	strb.w	r0, [r8]
	add.w	sp, sp, #548
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB208_26:
	ldr	r1, [r6, #8]
	movs	r3, #1
	rev	r1, r1
	str	r1, [sp, #88]
.LBB208_27:
	movs	r1, #60
	cmp	r5, #0
	mov	r2, r5
	and.w	r1, r1, r0, lsr #2
	it	ne
	movne	r2, #1
	cmp	r1, #20
	blo.w	.LBB208_315
	cmp	r1, r11
	bhi.w	.LBB208_316
	subs.w	r4, r1, #20
	str.w	r8, [sp, #92]
	strd	r5, r3, [sp, #16]
	strd	r2, r9, [sp, #4]
	beq.w	.LBB208_66
	add	r0, sp, #432
	add.w	r8, r6, #20
	adds	r0, #36
	str	r0, [sp, #12]
	movs	r0, #0
	str	r0, [sp, #108]
	movs	r0, #0
	str	r0, [sp, #100]
	movs	r0, #0
	str	r0, [sp, #120]
	movs	r0, #0
	str	r0, [sp, #116]
	movs	r0, #0
	str	r0, [sp, #112]
	movs	r0, #0
	str	r0, [sp, #104]
	b	.LBB208_32
.LBB208_31:
	subs.w	r4, r4, r9
	add	r8, r9
	beq.w	.LBB208_67
.LBB208_32:
	cmp	r4, #0
	beq.w	.LBB208_124
	ldrb.w	r3, [r8]
	cbz	r3, .LBB208_36
	cmp	r3, #1
	bne	.LBB208_37
	movs	r3, #1
.LBB208_36:
	mov.w	r9, #1
	cmp	r4, r9
	bhs.w	.LBB208_58
	b.w	.LBB208_237
.LBB208_37:
	cmp	r4, #2
	blo.w	.LBB208_124
	ldrb.w	r9, [r8, #1]
	movs	r0, #0
	movs	r1, #0
	cmp.w	r9, #2
	sub.w	r2, r9, #2
	it	lo
	movlo	r0, #1
	cmp	r4, r9
	it	lo
	movlo	r1, #1
	orrs	r0, r1
	mov	r1, r2
	it	ne
	movne	r1, #0
	bne.w	.LBB208_124
	subs	r0, r3, #2
	add.w	r6, r8, #2
	cmp	r0, #3
	str	r6, [sp, #236]
	str	r1, [sp, #240]
	bhi	.LBB208_55
.LCPI208_0:
	tbb	[pc, r0]
.LJTI208_0:
	.byte	(.LBB208_42-(.LCPI208_0+4))/2
	.byte	(.LBB208_50-(.LCPI208_0+4))/2
	.byte	(.LBB208_45-(.LCPI208_0+4))/2
	.byte	(.LBB208_47-(.LCPI208_0+4))/2
	.p2align	1
.LBB208_42:
	cmp.w	r9, #4
	bne.w	.LBB208_137
	cmp	r1, #1
	bls.w	.LBB208_319
	ldrh	r0, [r6]
	mov	r5, lr
	mov.w	lr, #2
	rev	r0, r0
	lsrs	r0, r0, #16
	str	r0, [sp, #24]
	b	.LBB208_54
.LBB208_45:
	cmp.w	r9, #2
	bne.w	.LBB208_137
	mov	r5, lr
	mov.w	lr, #4
	b	.LBB208_53
.LBB208_47:
	cmp.w	r9, #10
	blo.w	.LBB208_137
	add.w	r0, r9, #6
	ands	r0, r0, #7
	bne.w	.LBB208_137
	movs	r0, #0
	str	r0, [sp, #432]
	str	r0, [sp, #444]
	movs	r2, #0
	str	r0, [sp, #456]
	add	r0, sp, #432
	ldr	r1, [sp, #12]
	add	r3, sp, #236
	mov	r5, lr
	bl	core::iter::traits::iterator::Iterator::for_each::he2535e1bc93cc462
	ldr	r0, [sp, #440]
	str	r0, [sp, #52]
	ldr	r0, [sp, #444]
	str	r0, [sp, #48]
	ldr	r0, [sp, #452]
	str	r0, [sp, #40]
	ldr	r0, [sp, #448]
	str	r0, [sp, #44]
	ldr	r0, [sp, #456]
	str	r0, [sp, #36]
	ldr	r0, [sp, #464]
	str	r0, [sp, #28]
	ldrd	r6, r2, [sp, #432]
	ldr	r0, [sp, #460]
	str	r0, [sp, #32]
	mov.w	lr, #5
	b	.LBB208_56
.LBB208_50:
	cmp.w	r9, #3
	bne.w	.LBB208_137
	cmp	r1, #0
	beq.w	.LBB208_183
	ldrb	r3, [r6]
	mov	r5, lr
	mov.w	lr, #3
.LBB208_53:
.LBB208_54:
	b	.LBB208_57
.LBB208_55:
	mov	r5, lr
	mov.w	lr, #6
.LBB208_56:
.LBB208_57:
	mov	r12, r3
	mov	r3, lr
	mov	lr, r5
	cmp	r4, r9
	blo.w	.LBB208_237
.LBB208_58:
	cmp	r3, #5
	bhi.w	.LBB208_31
.LCPI208_1:
	tbb	[pc, r3]
.LJTI208_1:
	.byte	(.LBB208_67-(.LCPI208_1+4))/2
	.byte	(.LBB208_62-(.LCPI208_1+4))/2
	.byte	(.LBB208_63-(.LCPI208_1+4))/2
	.byte	(.LBB208_61-(.LCPI208_1+4))/2
	.byte	(.LBB208_65-(.LCPI208_1+4))/2
	.byte	(.LBB208_64-(.LCPI208_1+4))/2
	.p2align	1
.LBB208_61:
	cmp.w	r12, #14
	mov.w	r0, #1
	it	hs
	movhs.w	r12, #14
	str	r0, [sp, #116]
	str.w	r12, [sp, #84]
	b	.LBB208_31
.LBB208_62:
	b	.LBB208_31
.LBB208_63:
	movs	r0, #1
	str	r0, [sp, #120]
	ldr	r0, [sp, #24]
	str	r0, [sp, #80]
	b	.LBB208_31
.LBB208_64:
	ldr	r0, [sp, #52]
	str	r0, [sp, #56]
	ldr	r0, [sp, #44]
	str	r0, [sp, #72]
	ldr	r0, [sp, #40]
	str	r0, [sp, #60]
	ldr	r0, [sp, #32]
	str	r0, [sp, #76]
	ldr	r0, [sp, #28]
	str	r0, [sp, #64]
	ldr	r0, [sp, #48]
	str	r2, [sp, #68]
	str	r6, [sp, #104]
	str	r0, [sp, #100]
	ldr	r0, [sp, #36]
	str	r0, [sp, #108]
	b	.LBB208_31
.LBB208_65:
	movs	r0, #1
	str	r0, [sp, #112]
	b	.LBB208_31
.LBB208_66:
	movs	r0, #0
	str	r0, [sp, #104]
	movs	r0, #0
	str	r0, [sp, #112]
	movs	r0, #0
	str	r0, [sp, #116]
	movs	r0, #0
	str	r0, [sp, #120]
	movs	r0, #0
	str	r0, [sp, #100]
	movs	r0, #0
	str	r0, [sp, #108]
.LBB208_67:
	cmp.w	r11, #15
	bls.w	.LBB208_317
	ldr	r3, [r7, #8]
	movs	r1, #60
	mov	r9, lr
	ldrh	r0, [r3, #12]
	ldrd	r6, r12, [sp, #72]
	and.w	r0, r1, r0, lsr #2
	cmp	r0, r11
	ldrd	lr, r2, [sp, #64]
	ldrd	r5, r4, [sp, #56]
	bhi.w	.LBB208_318
	ldr	r1, [sp, #20]
	str	r1, [sp, #168]
	ldr	r1, [r3, #4]
	str	r2, [sp, #180]
	ldr	r2, [sp, #100]
	str	r2, [sp, #188]
	rev	r1, r1
	str	r1, [sp, #52]
	str	r1, [sp, #164]
	ldr	r1, [sp, #88]
	str	r1, [sp, #172]
	ldrh	r1, [r3]
	ldrh	r2, [r3, #2]
	str	r4, [sp, #196]
	str.w	lr, [sp, #208]
	ldr.w	r8, [sp, #104]
	rev	r1, r1
	str.w	r8, [sp, #176]
	lsrs	r4, r1, #16
	ldr	r1, [sp, #108]
	str	r1, [sp, #200]
	ldr.w	r8, [r9]
	rev	r1, r2
	ldrh	r2, [r3, #14]
	add	r3, r0
	sub.w	r0, r11, r0
	str	r0, [sp, #108]
	add.w	r11, sp, #236
	str	r0, [sp, #216]
	rev	r0, r2
	str	r3, [sp, #212]
	lsrs	r2, r0, #16
	ldr	r0, [sp, #120]
	strh.w	r0, [sp, #226]
	ldr	r0, [sp, #80]
	strh.w	r0, [sp, #228]
	ldr	r0, [sp, #96]
	strb.w	r0, [sp, #230]
	ldr	r0, [sp, #116]
	and	lr, r0, #1
	ldr	r0, [sp, #84]
	strb.w	r0, [sp, #232]
	ldr	r0, [sp, #112]
	and	r0, r0, #1
	lsrs	r3, r1, #16
	str	r0, [sp, #60]
	mov.w	r1, #392
	strb.w	r0, [sp, #233]
	ldr.w	r0, [r9, #4]
	str	r4, [sp, #104]
	strh.w	r4, [sp, #220]
	mov	r4, r9
	mla	r9, r0, r1, r8
	add.w	r0, r10, #4
	str	r5, [sp, #184]
	add	r5, sp, #432
	str	r0, [sp, #76]
	add.w	r0, r10, #1
	str	r0, [sp, #68]
	add.w	r0, r5, #20
	str	r0, [sp, #72]
	add.w	r0, r11, #1
	str.w	r12, [sp, #204]
	add.w	r12, r10, #18
	str	r0, [sp, #100]
	add.w	r0, r10, #12
	str	r6, [sp, #192]
	strh.w	r3, [sp, #222]
	strh.w	r2, [sp, #224]
	strb.w	lr, [sp, #231]
	str	r0, [sp, #112]
	adds	r0, r5, #4
	str	r0, [sp, #64]
.LBB208_70:
	mov	r4, r8
.LBB208_71:
	cmp	r4, r9
	beq.w	.LBB208_122
	ldr	r0, [r4, #40]
	cmp	r0, #2
	add.w	r0, r4, #392
	beq	.LBB208_82
	cmp	r0, r9
	beq.w	.LBB208_122
	ldr.w	r1, [r4, #432]
	add.w	r8, r4, #784
	cmp	r1, #2
	beq	.LBB208_80
	cmp	r8, r9
	beq.w	.LBB208_122
	ldr.w	r0, [r4, #824]
	cmp	r0, #2
	add.w	r0, r4, #1176
	beq	.LBB208_81
	cmp	r0, r9
	beq.w	.LBB208_122
	ldr.w	r0, [r4, #1216]
	add.w	r8, r4, #1568
	cmp	r0, #2
	mov	r4, r8
	bne	.LBB208_71
	sub.w	r4, r8, #392
	b	.LBB208_83
.LBB208_80:
	mov	r4, r0
	b	.LBB208_83
.LBB208_81:
	mov	r4, r8
.LBB208_82:
	mov	r8, r0
.LBB208_83:
	ldrb.w	r1, [r4, #358]
	cmp	r1, #0
	beq	.LBB208_70
	cmp	r1, #1
	bne	.LBB208_86
	ldr	r0, [sp, #16]
	cmp	r0, #0
	bne	.LBB208_70
.LBB208_86:
	ldrh.w	r0, [r4, #316]
	cmp	r0, r3
	bne	.LBB208_70
	add.w	r6, r4, #48
	str.w	r12, [sp, #56]
	strd	r6, r1, [sp, #36]
	ldrb.w	r0, [r6, #270]
	strd	lr, r2, [sp, #44]
	cmp	r0, #0
	beq.w	.LBB208_105
	cmp	r0, #1
	str	r0, [sp, #32]
	bne	.LBB208_90
	ldrb.w	r0, [r6, #271]
	b	.LBB208_91
.LBB208_90:
	ldr.w	r0, [r6, #283]
	str	r0, [sp, #444]
	ldr.w	r0, [r6, #279]
	str	r0, [sp, #440]
	ldr.w	r0, [r6, #275]
	str	r0, [sp, #436]
	ldr.w	r0, [r6, #271]
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.7
	str	r0, [sp, #432]
	movs	r2, #16
	mov	r0, r5
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.7
	mov	r11, r3
	bl	memcmp
	ldr.w	r12, [sp, #56]
	mov	r3, r11
	ldrd	r1, lr, [sp, #40]
	ldr	r2, [sp, #48]
	add.w	r11, sp, #236
	ldr	r6, [sp, #36]
.LBB208_91:
	cmp	r0, #0
	beq	.LBB208_105
	ldrb.w	r0, [r10]
	cbz	r0, .LBB208_95
	cmp	r0, #1
	bne	.LBB208_96
	ldr	r0, [sp, #112]
	ldr	r0, [r0]
	str.w	r0, [sp, #237]
	movs	r0, #1
	b	.LBB208_97
.LBB208_95:
	movs	r2, #17
	mov	r0, r11
	mov	r1, r12
	mov	r6, r3
	bl	__aeabi_memcpy
	ldrb.w	r0, [sp, #236]
	mov	r3, r6
	ldr.w	lr, [sp, #44]
	ldr	r2, [sp, #48]
	ldr	r6, [sp, #36]
	b	.LBB208_97
.LBB208_96:
	ldr	r1, [sp, #76]
	mov	r12, r5
	str	r3, [sp, #28]
	ldm	r1!, {r0, r2, r3, r5, r6}
	stm.w	r12!, {r0, r2, r3, r5, r6}
	ldm.w	r1, {r0, r2, r3, r5, r6}
	stm.w	r12, {r0, r2, r3, r5, r6}
	ldr	r0, [sp, #72]
	ldr.w	r12, [sp, #100]
	ldr	r6, [sp, #36]
	add	r5, sp, #432
	ldr	r1, [r0]
	str	r1, [sp, #24]
	ldr	r1, [r0, #12]
	str.w	r1, [r12, #12]
	ldr	r1, [r0, #8]
	str.w	r1, [r12, #8]
	ldr	r1, [r0, #4]
	ldr	r0, [sp, #24]
	ldrd	lr, r2, [sp, #44]
	ldr	r3, [sp, #28]
	str.w	r0, [r12]
	movs	r0, #2
	str.w	r1, [r12, #4]
.LBB208_97:
	ldr	r1, [sp, #32]
	cmp	r1, r0
	bne	.LBB208_101
	mov	r0, r1
	cmp	r1, #1
	ldr.w	r12, [sp, #56]
	beq	.LBB208_102
	cmp	r0, #2
	bne	.LBB208_104
	addw	r0, r6, #271
	movs	r2, #16
	ldr	r1, [sp, #100]
	mov	r11, r6
	mov	r6, r3
	bl	memcmp
	ldr.w	r12, [sp, #56]
	ldr.w	lr, [sp, #44]
	mov	r3, r6
	ldr	r2, [sp, #48]
	mov	r6, r11
	add.w	r11, sp, #236
	cmp	r0, #0
	b	.LBB208_103
.LBB208_101:
	ldr.w	r12, [sp, #56]
	b	.LBB208_70
.LBB208_102:
	ldr.w	r0, [r6, #271]
	ldr.w	r1, [sp, #237]
	cmp	r0, r1
.LBB208_103:
	ldr	r1, [sp, #40]
	bne.w	.LBB208_70
	b	.LBB208_105
.LBB208_104:
	ldr	r1, [sp, #40]
.LBB208_105:
	ldrh.w	r0, [r4, #336]
	cbz	r0, .LBB208_107
	mov	r11, r6
	mov	r6, r2
	mov	r2, lr
	mov	lr, r12
	ldr.w	r12, [sp, #104]
	cmp	r0, r12
	mov	r12, lr
	mov	lr, r2
	mov	r2, r6
	mov	r6, r11
	add.w	r11, sp, #236
	bne.w	.LBB208_70
.LBB208_107:
	ldrb.w	r0, [r6, #290]
	strd	r3, r0, [sp, #28]
	cmp	r0, #1
	beq	.LBB208_110
	cmp	r0, #2
	bne.w	.LBB208_139
	ldr.w	r0, [r6, #303]
	str	r0, [sp, #444]
	ldr.w	r0, [r6, #299]
	str	r0, [sp, #440]
	ldr.w	r0, [r6, #295]
	str	r0, [sp, #436]
	ldr.w	r0, [r6, #291]
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.7
	str	r0, [sp, #432]
	movs	r2, #16
	mov	r0, r5
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.7
	mov	r6, r3
	bl	memcmp
	ldr.w	r12, [sp, #56]
	mov	r3, r6
	ldrd	r1, lr, [sp, #40]
	ldr	r2, [sp, #48]
	add.w	r11, sp, #236
	ldr	r6, [sp, #36]
	b	.LBB208_111
.LBB208_110:
	ldrb.w	r0, [r6, #291]
.LBB208_111:
	cmp	r0, #0
	beq.w	.LBB208_139
	ldrb.w	r0, [r10]
	cbz	r0, .LBB208_115
	cmp	r0, #1
	bne	.LBB208_116
	ldr.w	r0, [r10, #8]
	str.w	r0, [sp, #237]
	movs	r0, #1
	b	.LBB208_117
.LBB208_115:
	movs	r2, #17
	mov	r0, r11
	ldr	r1, [sp, #68]
	bl	__aeabi_memcpy
	ldrb.w	r0, [sp, #236]
	ldr.w	r12, [sp, #56]
	ldr	r3, [sp, #28]
	ldrd	lr, r2, [sp, #44]
	b	.LBB208_117
.LBB208_116:
	ldr	r1, [sp, #76]
	mov	r12, r5
	ldm	r1!, {r0, r2, r3, r5, r6}
	stm.w	r12!, {r0, r2, r3, r5, r6}
	ldm.w	r1, {r0, r2, r3, r5, r6}
	stm.w	r12, {r0, r2, r3, r5, r6}
	ldr.w	r12, [sp, #64]
	ldr	r6, [sp, #36]
	ldrd	lr, r2, [sp, #44]
	ldr.w	r0, [r12]
	str	r0, [sp, #24]
	ldr	r0, [sp, #100]
	ldr.w	r1, [r12, #12]
	ldr	r3, [sp, #28]
	add	r5, sp, #432
	str	r1, [r0, #12]
	ldr.w	r1, [r12, #8]
	str	r1, [r0, #8]
	ldr.w	r1, [r12, #4]
	str	r1, [r0, #4]
	ldr	r1, [sp, #24]
	str	r1, [r0]
	ldr.w	r12, [sp, #56]
	movs	r0, #2
.LBB208_117:
	ldr	r1, [sp, #32]
	cmp	r1, r0
	bne.w	.LBB208_70
	mov	r0, r1
	cmp	r1, #1
	beq	.LBB208_121
	cmp	r0, #2
	bne.w	.LBB208_138
	addw	r0, r6, #291
	movs	r2, #16
	ldr	r1, [sp, #100]
	bl	memcmp
	cmp	r0, #0
	ldr	r2, [sp, #48]
	ldr	r3, [sp, #28]
	ldr.w	r12, [sp, #56]
	ldrd	r1, lr, [sp, #40]
	bne.w	.LBB208_70
	b	.LBB208_139
.LBB208_121:
	ldr.w	r0, [r6, #291]
	ldr.w	r1, [sp, #237]
	cmp	r0, r1
	ldr	r1, [sp, #40]
	bne.w	.LBB208_70
	b	.LBB208_139
.LBB208_122:
	ldr	r0, [sp, #96]
	cmp	r0, #4
	bne	.LBB208_125
	ldr	r5, [sp, #92]
	movs	r1, #148
	add.w	r0, r5, #12
	bl	__aeabi_memclr4
	movs	r0, #6
	str	r0, [r5, #8]
	b	.LBB208_136
.LBB208_124:
	movs	r0, #4
	ldr.w	r8, [sp, #92]
	b	.LBB208_25
.LBB208_125:
	ldrb.w	r0, [r10]
	ldr	r5, [sp, #92]
	mov	r11, r3
	cbz	r0, .LBB208_128
	ldr.w	r9, [sp, #104]
	cmp	r0, #1
	ldr.w	r8, [sp, #88]
	bne	.LBB208_129
	ldrd	r1, r12, [r10, #8]
	mov.w	lr, #1
	movs	r3, #1
	b	.LBB208_130
.LBB208_128:
	ldr.w	r1, [r10, #23]
	str	r1, [sp, #236]
	ldr.w	r1, [r10, #27]
	ldrb.w	lr, [r10, #18]
	ldr.w	r6, [r10, #6]
	str	r1, [sp, #240]
	ldr.w	r1, [r10, #31]
	ldrb.w	r3, [r10, #1]
	str	r6, [sp, #432]
	ldr.w	r6, [r10, #10]
	ldr.w	r9, [sp, #104]
	ldr.w	r12, [r10, #19]
	ldr.w	r8, [sp, #88]
	str	r1, [sp, #244]
	ldr.w	r1, [r10, #2]
	str	r6, [sp, #436]
	ldr.w	r6, [r10, #14]
	str	r6, [sp, #440]
	b	.LBB208_130
.LBB208_129:
	ldr	r0, [sp, #112]
	ldr.w	r2, [r10, #32]
	ldrd	r12, r1, [r10, #24]
	str	r1, [sp, #236]
	ldr.w	r1, [r10, #36]
	strd	r2, r1, [sp, #240]
	ldr	r2, [r0]
	ldr.w	r1, [r10, #8]
	str	r2, [sp, #432]
	ldr	r2, [r0, #4]
	mov.w	lr, #2
	movs	r3, #2
	str	r2, [sp, #436]
	ldr	r2, [r0, #8]
	str	r2, [sp, #440]
.LBB208_130:
	ldr	r0, [sp, #432]
	str	r0, [sp, #384]
	ldr	r0, [sp, #436]
	str	r0, [sp, #388]
	ldr	r6, [sp, #244]
	ldr	r0, [sp, #440]
	str	r6, [sp, #308]
	ldr	r2, [sp, #240]
	str	r0, [sp, #392]
	ldr	r4, [sp, #236]
	str	r6, [sp, #440]
	ldrd	r0, r6, [sp, #384]
	strd	r0, r6, [sp, #236]
	ldr	r0, [sp, #96]
	movs	r6, #0
	cmp	r0, #2
	str	r2, [sp, #304]
	str	r4, [sp, #300]
	strd	r4, r2, [sp, #432]
	ldr	r2, [sp, #392]
	str	r2, [sp, #244]
	bne	.LBB208_134
	ldr	r0, [sp, #16]
	movs	r4, #0
	cbnz	r0, .LBB208_135
	ldr	r0, [sp, #108]
	adds	r0, #1
	cmp.w	r0, #-1
	ble.w	.LBB208_151
	ldr	r2, [sp, #52]
	movs	r4, #1
	add	r2, r0
	b	.LBB208_135
.LBB208_134:
	movs	r4, #0
.LBB208_135:
	ldr	r0, [sp, #440]
	str.w	r0, [r5, #26]
	ldr	r0, [sp, #436]
	str.w	r0, [r5, #22]
	ldr	r0, [sp, #432]
	str.w	r1, [r5, #31]
	movs	r1, #3
	str.w	r0, [r5, #18]
	ldr	r0, [sp, #236]
	strb.w	r1, [r5, #47]
	movs	r1, #64
	str.w	r0, [r5, #35]
	ldr	r0, [sp, #240]
	strb.w	r1, [r5, #49]
	movs	r1, #20
	str.w	r0, [r5, #39]
	ldr	r0, [sp, #244]
	str.w	r0, [r5, #43]
	strd	r1, r8, [r5, #52]
	movw	r1, :lower16:CORE_PERIPHERALS
	movs	r0, #4
	str	r0, [r5, #8]
	movt	r1, :upper16:CORE_PERIPHERALS
	strb	r6, [r5, #12]
	strb.w	lr, [r5, #13]
	str.w	r12, [r5, #14]
	strb	r3, [r5, #30]
	strd	r4, r2, [r5, #60]
	str	r6, [r5, #68]
	str	r6, [r5, #80]
	str	r6, [r5, #92]
	strd	r1, r6, [r5, #104]
	strh.w	r11, [r5, #112]
	strh.w	r9, [r5, #114]
	str	r6, [r5, #116]
	strh.w	r0, [r5, #122]
	strb.w	r6, [r5, #125]
.LBB208_136:
	movs	r0, #0
	strb	r0, [r5]
	add.w	sp, sp, #548
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB208_137:
	movs	r0, #8
	ldr.w	r8, [sp, #92]
	b	.LBB208_25
.LBB208_138:
	ldr	r1, [sp, #40]
.LBB208_139:
	subs	r0, r1, #2
	movs	r2, #200
	uxtb	r0, r0
	movs	r3, #3
	movs	r6, #0
	cmp	r0, #8
	lsr.w	r2, r2, r0
	lsr.w	r0, r3, r0
	it	lo
	movlo	r6, #1
	ands	r0, r6
	cmp	r1, #2
	and.w	r12, r6, r2
	rsb.w	lr, r0, #0
	bne	.LBB208_144
	ldr	r1, [sp, #96]
	cmp	r1, #4
	bne	.LBB208_144
	ldr	r0, [sp, #16]
	cmp	r0, #0
	beq.w	.LBB208_267
	ldr.w	r0, [r4, #272]
	ldr	r1, [sp, #88]
	adds	r0, #1
	cmp	r1, r0
	bne.w	.LBB208_267
.LBB208_143:
	movs	r0, #2
	b	.LBB208_149
.LBB208_144:
	ldr	r1, [sp, #96]
	cmp	r1, #4
	bne	.LBB208_146
	ldr	r0, [sp, #40]
	b	.LBB208_149
.LBB208_146:
	ldr	r1, [sp, #40]
	cmp	r1, #1
	bne.w	.LBB208_169
	ldr	r0, [sp, #16]
	cmp	r0, #0
	bne.w	.LBB208_320
	movs	r0, #1
.LBB208_149:
	str	r0, [sp, #100]
.LBB208_150:
	ldr.w	r2, [r4, #252]
	cmp.w	r2, #-1
	itt	gt
	ldrgt.w	r3, [r4, #244]
	cmpgt.w	r3, #-1
	bgt	.LBB208_152
.LBB208_151:
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.593
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.595
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.593
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.595
	movs	r1, #56
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB208_152:
	ldr	r0, [sp, #96]
	and	r0, r0, #6
	cmp	r0, #2
	ldr	r0, [sp, #108]
	it	eq
	addeq	r0, #1
	cmp.w	r0, #-1
	ble	.LBB208_151
	ldr	r1, [sp, #40]
	ldr.w	r11, [r4, #276]
	subs	r1, #1
	add.w	r8, r2, r11
	cmp	r1, #2
	bhs	.LBB208_162
	movs	r0, #0
	str	r0, [sp, #72]
.LBB208_155:
	ldr	r0, [sp, #96]
	mov.w	r9, #0
	subs	r0, #4
	it	ne
	movne	r0, #1
	ldr	r1, [sp, #4]
	tst	r0, r1
	beq.w	.LBB208_174
	ldr	r1, [sp, #88]
	ldr.w	r0, [r4, #272]
	add	r1, lr
	movs	r6, #0
	subs	r0, r1, r0
	bic.w	r1, r0, r0, asr #31
	str	r1, [sp, #76]
	bmi	.LBB208_159
	eors	r1, r12, #1
	bne	.LBB208_159
	ldr.w	r1, [r4, #268]
	adds	r1, #1
	subs	r1, r1, r0
	clz	r1, r1
	it	eq
	subeq	r0, #1
	lsrs	r6, r1, #5
	str	r0, [sp, #76]
.LBB208_159:
	ldrd	r0, r1, [r4, #72]
	eor	r0, r0, #1
	orrs	r0, r1
	bne.w	.LBB208_175
	ldr	r0, [r4, #88]
	ldr	r1, [sp, #88]
	subs	r0, r1, r0
	bmi.w	.LBB208_175
	ldr	r0, [sp, #8]
	ldrd	r2, r3, [r4, #80]
	ldrd	r0, r1, [r0]
	subs	r0, r0, r2
	sbcs	r1, r3
	movs	r3, #0
	ldrd	r5, r2, [r4, #96]
	adds.w	r0, r0, r1, asr #31
	str	r2, [sp, #68]
	adc.w	r2, r1, r1, asr #31
	eor.w	r0, r0, r1, asr #31
	eor.w	r1, r2, r1, asr #31
	mov.w	r2, #1000
	bl	__aeabi_uldivmod
	rsb	r1, r5, r5, lsl #3
	add	r1, r0
	adds	r1, #7
	rsb	r0, r0, r1, lsr #3
	lsrs	r1, r1, #3
	cmp	r0, #0
	str	r1, [r4, #96]
	it	mi
	rsbmi	r0, r0, #0
	ldr	r1, [sp, #68]
	add.w	r1, r1, r1, lsl #1
	add	r0, r1
	adds	r0, #3
	lsrs	r0, r0, #2
	str	r0, [r4, #100]
	movs	r0, #0
	strb.w	r0, [r4, #112]
	strd	r0, r0, [r4, #72]
	b	.LBB208_175
.LBB208_162:
	ldr	r1, [sp, #52]
	sub.w	r6, r8, #1
	add	r1, r0
	eors	r6, r1
	orrs	r6, r0
	beq	.LBB208_165
	ldr	r5, [sp, #52]
	sub.w	r6, r8, r5
	cmp	r6, #0
	bgt	.LBB208_165
	add.w	r6, r3, r11
	ldr	r5, [sp, #52]
	subs	r5, r5, r6
	cmp	r5, #0
	itt	le
	suble.w	r5, r8, r1
	cmple	r5, #0
	ble.w	.LBB208_199
.LBB208_165:
	ldr	r0, [sp, #100]
	cmp	r0, #10
	ldr	r0, [sp, #8]
	ldrd	r1, r0, [r0]
	bne	.LBB208_167
	movw	r2, #38528
	movs	r3, #3
	movt	r2, #152
	str	r3, [r4, #48]
	adds	r2, r2, r1
	mov.w	r3, #0
	str	r3, [r4, #52]
	str	r2, [r4, #56]
	adc	r2, r0, #0
	str	r2, [r4, #60]
.LBB208_167:
	ldrd	r2, r3, [r4, #200]
	subs	r2, r1, r2
	sbcs.w	r2, r0, r3
	bge	.LBB208_181
	add	r0, sp, #432
	movs	r1, #116
	bl	__aeabi_memclr4
	mov.w	r8, #2
	b	.LBB208_182
.LBB208_169:
	ldr	r1, [sp, #16]
	cmp	r1, #0
	beq.w	.LBB208_267
	ldr	r1, [sp, #40]
	cmp	r1, #2
	bne.w	.LBB208_203
	ldr	r0, [sp, #96]
	cmp	r0, #2
	beq.w	.LBB208_211
	ldr	r0, [sp, #96]
	cmp	r0, #0
	bne.w	.LBB208_267
	ldr.w	r0, [r4, #272]
	ldr	r1, [sp, #88]
	adds	r0, #1
	cmp	r1, r0
	bne.w	.LBB208_212
	b	.LBB208_267
.LBB208_174:
	movs	r6, #0
	movs	r0, #0
	str	r0, [sp, #76]
.LBB208_175:
	ldr	r1, [sp, #96]
	subs	r0, r1, #1
	it	ne
	movne	r0, r1
	ldr	r1, [sp, #52]
	cmp	r8, r1
	it	eq
	moveq.w	r9, #3
	cmp	r0, #3
	it	ne
	movne	r9, r0
	ldr	r0, [sp, #100]
	cmp	r0, #1
	beq	.LBB208_184
	ldr	r0, [sp, #100]
	cmp	r0, #3
	bne	.LBB208_191
	uxtb.w	r0, r9
	cmp	r0, #0
	beq.w	.LBB208_249
	cmp	r0, #3
	beq.w	.LBB208_224
	cmp	r0, #4
	bne.w	.LBB208_267
	ldr	r1, [sp, #36]
	movs	r2, #17
	add.w	r0, r1, #270
	add.w	r1, r1, #314
	bl	__aeabi_memcpy
	movs	r0, #0
	strh.w	r0, [r4, #336]
	strb.w	r0, [r4, #338]
	movs	r0, #1
	strb.w	r0, [r4, #358]
	b.w	.LBB208_312
.LBB208_181:
	movw	r2, #16960
	ldr	r3, [sp, #104]
	movt	r2, #15
	adds	r1, r1, r2
	mov	r2, r10
	adc	r0, r0, #0
	strd	r1, r0, [r4, #200]
	ldr	r1, [sp, #28]
	add	r0, sp, #432
	str	r1, [sp]
	ldr	r1, [sp, #36]
	bl	smoltcp::socket::tcp::TcpSocket::ack_reply::h9a8329310b8a3a8e
	ldr.w	r8, [sp, #480]
.LBB208_182:
	add	r0, sp, #300
	add	r4, sp, #432
	adds	r0, #2
	movs	r2, #48
	mov	r1, r4
	bl	__aeabi_memcpy
	add.w	r12, r4, #52
	add	r1, sp, #236
	b.w	.LBB208_309
.LBB208_183:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.618
	movs	r0, #0
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.618
	movs	r1, #0
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB208_184:
	uxtb.w	r0, r9
	cmp	r0, #2
	bne.w	.LBB208_267
.LBB208_185:
	ldr	r0, [sp, #120]
	cmp	r0, #1
	bne	.LBB208_188
	ldr	r0, [sp, #80]
	lsls	r0, r0, #16
	beq.w	.LBB208_312
	ldr	r0, [sp, #80]
	uxth	r0, r0
	str.w	r0, [r4, #296]
.LBB208_188:
	ldrb.w	r0, [r10]
	cmp	r0, #0
	beq.w	.LBB208_226
	cmp	r0, #1
	bne.w	.LBB208_227
	ldr	r0, [sp, #28]
	ldr.w	r1, [r10, #12]
	strh.w	r0, [r4, #316]
	movs	r0, #1
	strb.w	r0, [r4, #318]
	str.w	r1, [r4, #319]
	ldr.w	r1, [r10, #8]
	b	.LBB208_229
.LBB208_191:
	uxtb.w	r0, r9
	cmp	r0, #4
	bhi.w	.LBB208_267
.LCPI208_2:
	tbh	[pc, r0, lsl #1]
.LJTI208_2:
	.short	(.LBB208_194-(.LCPI208_2+4))/2
	.short	(.LBB208_267-(.LCPI208_2+4))/2
	.short	(.LBB208_213-(.LCPI208_2+4))/2
	.short	(.LBB208_221-(.LCPI208_2+4))/2
	.short	(.LBB208_225-(.LCPI208_2+4))/2
	.p2align	1
.LBB208_194:
	ldr	r0, [sp, #100]
	subs	r0, #3
	cmp	r0, #6
	bhi.w	.LBB208_267
.LCPI208_3:
	tbh	[pc, r0, lsl #1]
.LJTI208_4:
	.short	(.LBB208_249-(.LCPI208_3+4))/2
	.short	(.LBB208_197-(.LCPI208_3+4))/2
	.short	(.LBB208_238-(.LCPI208_3+4))/2
	.short	(.LBB208_251-(.LCPI208_3+4))/2
	.short	(.LBB208_251-(.LCPI208_3+4))/2
	.short	(.LBB208_240-(.LCPI208_3+4))/2
	.short	(.LBB208_243-(.LCPI208_3+4))/2
	.p2align	1
.LBB208_197:
	ldr	r0, [sp, #36]
	ldr	r0, [r0]
	subs	r0, #3
	cmn.w	r0, #2
	blo.w	.LBB208_251
	ldr	r0, [sp, #76]
	cmp	r0, #0
	beq.w	.LBB208_252
	b	.LBB208_251
.LBB208_199:
	subs	r2, r2, r3
	cmp	r0, #0
	clz	r2, r2
	lsr.w	r2, r2, #5
	it	ne
	movne	r0, #1
	tst	r2, r0
	bne.w	.LBB208_165
	subs	r0, r1, r6
	cmp	r0, #1
	bge.w	.LBB208_165
	ldr	r0, [sp, #52]
	sub.w	r1, r0, r8
	str	r1, [sp, #72]
	cmp.w	r1, #-1
	mov	r0, r1
	ble.w	.LBB208_322
	movs	r0, #1
	str.w	r0, [r4, #300]
	ldr	r0, [sp, #52]
	str.w	r0, [r4, #304]
	b	.LBB208_155
.LBB208_203:
	ldr	r1, [sp, #40]
	cmp	r1, #3
	bne	.LBB208_206
	ldr.w	r0, [r4, #272]
	ldr	r1, [sp, #88]
	adds	r0, #1
	cmp	r1, r0
	bne	.LBB208_212
	movs	r0, #3
	b	.LBB208_149
.LBB208_206:
	add	r0, r12
	ldr.w	r1, [r4, #268]
	add	r0, r1
	cmp.w	r0, #-1
	ble.w	.LBB208_151
	ldr	r2, [sp, #88]
	ldr.w	r1, [r4, #272]
	add	r2, lr
	subs	r2, r2, r1
	bmi.w	.LBB208_267
	add	r0, r1
	ldr	r1, [sp, #88]
	subs	r0, r1, r0
	cmp	r0, #1
	ldr	r0, [sp, #40]
	str	r0, [sp, #100]
	blt.w	.LBB208_150
	ldr	r0, [sp, #8]
	ldrd	r2, r3, [r4, #200]
	ldrd	r1, r0, [r0]
	subs	r2, r1, r2
	sbcs.w	r2, r0, r3
	bge.w	.LBB208_232
	add	r0, sp, #432
	movs	r1, #116
	bl	__aeabi_memclr4
	mov.w	r8, #2
	b	.LBB208_233
.LBB208_211:
	ldr.w	r0, [r4, #272]
	ldr	r1, [sp, #88]
	adds	r0, #1
	cmp	r1, r0
	beq.w	.LBB208_143
.LBB208_212:
	add	r4, sp, #432
	add	r2, sp, #164
	mov	r0, r4
	mov	r1, r10
	bl	smoltcp::socket::tcp::TcpSocket::rst_reply::ha8b76961b12bd55c
	b	.LBB208_308
.LBB208_213:
	ldr	r0, [sp, #100]
	cmp	r0, #1
	beq.w	.LBB208_185
	ldr	r0, [sp, #100]
	cmp	r0, #2
	bne.w	.LBB208_267
	ldr	r0, [sp, #120]
	cmp	r0, #1
	bne	.LBB208_218
	ldr	r0, [sp, #80]
	lsls	r0, r0, #16
	beq.w	.LBB208_312
	ldr	r0, [sp, #80]
	uxth	r0, r0
	str.w	r0, [r4, #296]
.LBB208_218:
	ldrb.w	r0, [r10]
	cmp	r0, #0
	beq.w	.LBB208_245
	cmp	r0, #1
	bne.w	.LBB208_246
	ldr	r0, [sp, #112]
	movs	r1, #1
	ldr	r0, [r0]
	b	.LBB208_247
.LBB208_221:
	ldr	r0, [sp, #100]
	subs	r0, #3
	cmp	r0, #3
	bhi.w	.LBB208_267
.LCPI208_4:
	tbb	[pc, r0]
.LJTI208_3:
	.byte	(.LBB208_224-(.LCPI208_4+4))/2
	.byte	(.LBB208_224-(.LCPI208_4+4))/2
	.byte	(.LBB208_234-(.LCPI208_4+4))/2
	.byte	(.LBB208_236-(.LCPI208_4+4))/2
	.p2align	1
.LBB208_224:
	add.w	r0, r11, #1
	str.w	r0, [r4, #276]
	movw	r0, #263
	strh.w	r0, [r4, #358]
	b	.LBB208_251
.LBB208_225:
	movs	r0, #0
	strb.w	r0, [r4, #358]
	strh.w	r0, [r4, #316]
	strb.w	r0, [r4, #318]
	strh.w	r0, [r4, #336]
	strb.w	r0, [r4, #338]
	b	.LBB208_312
.LBB208_226:
	ldrb.w	r0, [r10, #18]
	ldr	r3, [sp, #36]
	ldr.w	r1, [r10, #19]
	ldr	r2, [sp, #28]
	strh.w	r2, [r4, #316]
	strb.w	r0, [r4, #318]
	str.w	r1, [r4, #319]
	ldr.w	r0, [r10, #23]
	ldr.w	r1, [r10, #27]
	ldr.w	r2, [r10, #31]
	str.w	r0, [r3, #275]
	str.w	r1, [r3, #279]
	str.w	r2, [r3, #283]
	ldr.w	r2, [r10, #6]
	ldrb.w	r0, [r10, #1]
	str	r2, [sp, #432]
	ldr.w	r2, [r10, #10]
	ldr.w	r1, [r10, #2]
	str	r2, [sp, #436]
	ldr.w	r2, [r10, #14]
	b	.LBB208_228
.LBB208_227:
	ldr	r0, [sp, #28]
	ldr.w	r1, [r10, #24]
	strh.w	r0, [r4, #316]
	movs	r0, #2
	strb.w	r0, [r4, #318]
	ldr	r6, [sp, #36]
	str.w	r1, [r4, #319]
	ldr.w	r3, [r10, #36]
	ldr.w	r1, [r10, #28]
	ldr.w	r2, [r10, #32]
	str.w	r3, [r6, #283]
	ldr	r3, [sp, #112]
	str.w	r1, [r6, #275]
	str.w	r2, [r6, #279]
	ldr	r2, [r3]
	str	r2, [sp, #432]
	ldr	r2, [r3, #4]
	ldr.w	r1, [r10, #8]
	str	r2, [sp, #436]
	ldr	r2, [r3, #8]
.LBB208_228:
	str	r2, [sp, #440]
.LBB208_229:
	ldr	r3, [sp, #36]
	ldr	r2, [sp, #440]
	strb.w	r0, [r4, #338]
	movw	r5, #64748
	str.w	r2, [r3, #303]
	ldr	r2, [sp, #436]
	str.w	r2, [r3, #299]
	ldr	r2, [sp, #432]
	str.w	r2, [r3, #295]
	ldr	r2, [sp, #104]
	ldr	r3, [sp, #8]
	strh.w	r2, [r4, #336]
	str.w	r1, [r4, #339]
	movw	r2, #24861
	ldrd	r0, r1, [r3, #24]
	movt	r2, #15417
	movt	r5, #47918
	umull	r12, r6, r0, r2
	muls	r1, r2, r1
	movw	r2, #61241
	mla	r0, r0, r5, r6
	movt	r2, #30096
	adds.w	r2, r2, r12
	adcs	r0, r1
	movs	r1, #29
	strd	r2, r0, [r3, #24]
	sub.w	r1, r1, r0, lsr #29
	lsls	r0, r0, #1
	eor	r3, r1, #31
	lsls	r0, r3
	lsr.w	r1, r2, r1
	orrs	r0, r1
	ldr	r1, [sp, #52]
	str.w	r0, [r4, #272]
	adds	r1, #1
	strd	r1, r0, [r4, #276]
	ldr	r0, [sp, #60]
	strb.w	r0, [r4, #382]
	ldr	r0, [sp, #44]
	strb.w	r0, [r4, #380]
	ldr	r0, [sp, #116]
	lsls	r0, r0, #31
	ldr	r0, [sp, #84]
	strb.w	r0, [r4, #381]
	bne	.LBB208_231
	ldr	r1, [sp, #36]
	movs	r0, #0
	strb.w	r0, [r1, #331]
.LBB208_231:
	movs	r0, #3
	b	.LBB208_250
.LBB208_232:
	movw	r2, #16960
	ldr	r3, [sp, #104]
	movt	r2, #15
	adds	r1, r1, r2
	mov	r2, r10
	adc	r0, r0, #0
	strd	r1, r0, [r4, #200]
	ldr	r1, [sp, #28]
	add	r0, sp, #432
	str	r1, [sp]
	ldr	r1, [sp, #36]
	bl	smoltcp::socket::tcp::TcpSocket::ack_reply::h9a8329310b8a3a8e
	ldr.w	r8, [sp, #480]
.LBB208_233:
	add	r0, sp, #300
	add	r4, sp, #432
	adds	r0, #2
	movs	r2, #48
	mov	r1, r4
	bl	__aeabi_memcpy
	add.w	r12, r4, #52
	add	r1, sp, #236
	ldm.w	r12!, {r0, r2, r3, r5, r6}
	stm	r1!, {r0, r2, r3, r5, r6}
	ldm.w	r12!, {r0, r2, r3, r5, r6}
	stm	r1!, {r0, r2, r3, r5, r6}
	b	.LBB208_310
.LBB208_234:
	add.w	r0, r11, #1
	str.w	r0, [r4, #276]
	mov.w	r0, #1
	strb.w	r0, [r4, #359]
	cbnz	r6, .LBB208_241
	movs	r0, #8
	b	.LBB208_250
.LBB208_236:
	add.w	r0, r11, #1
	str.w	r0, [r4, #276]
	mov.w	r0, #266
	strh.w	r0, [r4, #358]
	b	.LBB208_242
.LBB208_237:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.619
	mov	r0, r9
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.619
	mov	r1, r4
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB208_238:
	cmp	r6, #0
	beq	.LBB208_251
	ldr	r1, [sp, #36]
	movs	r0, #6
	strb.w	r0, [r1, #310]
	b	.LBB208_251
.LBB208_240:
	cmp	r6, #0
	beq	.LBB208_251
.LBB208_241:
	movs	r0, #10
	strb.w	r0, [r4, #358]
.LBB208_242:
	ldr	r0, [sp, #8]
	movw	r2, #38528
	movt	r2, #152
	movs	r3, #3
	ldrd	r0, r1, [r0]
	adds	r0, r0, r2
	str	r3, [r4, #48]
	mov.w	r3, #0
	str	r3, [r4, #52]
	str	r0, [r4, #56]
	adc	r0, r1, #0
	str	r0, [r4, #60]
	b	.LBB208_252
.LBB208_243:
	cmp	r6, #0
	beq	.LBB208_251
	movs	r0, #0
	strb.w	r0, [r4, #358]
	strh.w	r0, [r4, #316]
	strb.w	r0, [r4, #318]
	strh.w	r0, [r4, #336]
	strb.w	r0, [r4, #338]
	b	.LBB208_252
.LBB208_245:
	ldr.w	r2, [r10, #23]
	ldrb.w	r1, [r10, #18]
	str	r2, [sp, #432]
	ldr.w	r2, [r10, #27]
	ldr.w	r0, [r10, #19]
	str	r2, [sp, #436]
	ldr.w	r2, [r10, #31]
	str	r2, [sp, #440]
	b	.LBB208_247
.LBB208_246:
	add.w	r2, r10, #24
	ldm	r2, {r0, r1, r2}
	str	r1, [sp, #432]
	ldr.w	r1, [r10, #36]
	strd	r2, r1, [sp, #436]
	movs	r1, #2
.LBB208_247:
	ldr	r3, [sp, #36]
	ldr	r2, [sp, #440]
	strb.w	r1, [r4, #318]
	ldr.w	r1, [r4, #272]
	str.w	r2, [r3, #283]
	ldr	r2, [sp, #436]
	str.w	r2, [r3, #279]
	ldr	r2, [sp, #432]
	str.w	r2, [r3, #275]
	ldr	r2, [sp, #28]
	strh.w	r2, [r4, #316]
	ldr	r2, [sp, #52]
	str.w	r0, [r4, #319]
	adds	r0, r2, #1
	str.w	r0, [r4, #276]
	adds	r0, r1, #1
	str.w	r0, [r4, #280]
	movs	r0, #1
	strd	r0, r2, [r4, #284]
	ldr	r0, [sp, #44]
	strb.w	r0, [r4, #380]
	ldr	r0, [sp, #116]
	lsls	r0, r0, #31
	ldr	r0, [sp, #84]
	strb.w	r0, [r4, #381]
	bne	.LBB208_249
	ldr	r1, [sp, #36]
	movs	r0, #0
	strb.w	r0, [r1, #331]
.LBB208_249:
	movs	r0, #4
.LBB208_250:
	strb.w	r0, [r4, #358]
.LBB208_251:
	ldr	r0, [sp, #8]
	ldr.w	r2, [r4, #136]
	movs	r3, #0
	ldrd	r0, r1, [r0]
	str	r3, [r4, #48]
	ldr.w	r6, [r4, #140]
	str	r3, [r4, #52]
	ldr.w	r3, [r4, #144]
	str	r2, [r4, #56]
	ldr.w	r2, [r4, #148]
	adds	r0, r0, r3
	str	r6, [r4, #60]
	str	r0, [r4, #64]
	adc.w	r0, r2, r1
	str	r0, [r4, #68]
.LBB208_252:
	ldr	r0, [sp, #8]
	movs	r1, #1
	ldrd	r2, r3, [r0]
	movs	r0, #0
	str	r2, [sp, #116]
	strd	r1, r0, [r4, #152]
	ldrb.w	r0, [r4, #380]
	str.w	r2, [r4, #160]
	ldrb.w	r1, [r4, #381]
	str	r3, [sp, #112]
	str.w	r3, [r4, #164]
	cmp	r0, #0
	it	ne
	andne	r0, r1, #31
	ldr	r1, [sp, #96]
	subs	r1, #2
	it	ne
	movne	r1, r0
	ldr	r0, [sp, #76]
	cmp	r0, #0
	ldr	r0, [sp, #48]
	lsl.w	r0, r0, r1
	str.w	r0, [r4, #292]
	beq	.LBB208_258
	ldr.w	r0, [r4, #268]
	ldr	r1, [sp, #76]
	cmp	r0, r1
	blo.w	.LBB208_321
	ldr.w	r1, [r4, #260]
	ldr	r2, [sp, #76]
	sub.w	r0, r0, r2
	str.w	r0, [r4, #268]
	cbz	r1, .LBB208_256
	ldr.w	r0, [r4, #264]
	ldr	r2, [sp, #76]
	add	r0, r2
	udiv	r2, r0, r1
	mls	r0, r2, r1, r0
	b	.LBB208_257
.LBB208_256:
	movs	r0, #0
.LBB208_257:
	str.w	r0, [r4, #264]
.LBB208_258:
	ldr	r0, [sp, #16]
	cbz	r0, .LBB208_265
	ldr.w	r0, [r4, #308]
	cmp	r0, #1
	itt	eq
	ldreq	r0, [sp, #108]
	cmpeq	r0, #0
	beq	.LBB208_270
.LBB208_260:
	ldr	r0, [sp, #36]
	ldrb.w	r0, [r0, #335]
	cbz	r0, .LBB208_262
	ldr	r1, [sp, #36]
	movs	r0, #0
	strb.w	r0, [r1, #335]
.LBB208_262:
	movs	r0, #1
	str.w	r0, [r4, #308]
	ldr	r0, [sp, #88]
	str.w	r0, [r4, #312]
	ldr.w	r0, [r4, #280]
.LBB208_263:
	ldr	r1, [sp, #88]
	str.w	r1, [r4, #272]
	subs	r0, r0, r1
	bpl	.LBB208_265
	ldr	r0, [sp, #88]
	str.w	r0, [r4, #280]
.LBB208_265:
	ldr	r0, [sp, #108]
	cmp	r0, #0
	beq.w	.LBB208_312
	mov	r0, r4
	ldr	r2, [sp, #108]
	ldr	r1, [r0, #212]!
	strd	r1, r0, [sp, #100]
	subs	r0, #4
	ldr	r1, [sp, #72]
	str	r0, [sp, #120]
	bl	smoltcp::storage::assembler::Assembler::add::h47d7353f7e9155f9
	cbz	r0, .LBB208_268
.LBB208_267:
	ldr	r1, [sp, #92]
	movw	r0, #2305
	strh	r0, [r1]
	add.w	sp, sp, #548
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB208_268:
	ldr.w	r8, [r4, #244]
	cmp.w	r8, #0
	beq	.LBB208_274
	ldrd	r0, r5, [r4, #248]
	ldr	r1, [sp, #72]
	add	r0, r1
	add	r0, r5
	udiv	r1, r0, r8
	mls	r0, r1, r8, r0
	b	.LBB208_275
.LBB208_270:
	ldr.w	r0, [r4, #312]
	ldr	r1, [sp, #88]
	cmp	r0, r1
	bne	.LBB208_260
	ldr.w	r0, [r4, #280]
	ldr	r1, [sp, #88]
	subs	r1, r1, r0
	cmp.w	r1, #-1
	bgt	.LBB208_260
	ldr	r3, [sp, #36]
	movs	r2, #1
	ldrsb.w	r1, [r3, #335]
	uqadd8	r1, r1, r2
	strb.w	r1, [r3, #335]
	uxtb	r2, r1
	cmp	r2, #3
	bne	.LBB208_263
	ldr	r3, [sp, #36]
	movs	r1, #0
	movs	r2, #2
	strd	r2, r1, [r3]
	b	.LBB208_263
.LBB208_274:
	ldr.w	r5, [r4, #252]
	movs	r0, #0
.LBB208_275:
	sub.w	r9, r8, r5
	ldr	r1, [sp, #72]
	cmp	r9, r1
	ldr.w	r11, [sp, #216]
	ldr	r1, [sp, #212]
	str	r1, [sp, #108]
	bhs	.LBB208_277
	movw	r0, :lower16:CORE_PERIPHERALS
	movs	r6, #0
	movt	r0, :upper16:CORE_PERIPHERALS
	b	.LBB208_281
.LBB208_277:
	ldr	r1, [sp, #72]
	sub.w	r6, r9, r1
	mov	r1, r11
	cmp	r6, r11
	sub.w	r1, r8, r0
	it	hs
	movhs	r6, r11
	cmp	r6, r1
	it	hi
	movhi	r6, r1
	adds	r1, r6, r0
	bhs.w	.LBB208_323
	cmp	r1, r8
	bhi.w	.LBB208_324
	cmp	r6, r11
	bhi.w	.LBB208_325
	ldr.w	r1, [r4, #240]
	add	r0, r1
.LBB208_281:
	ldr	r1, [sp, #108]
	mov	r2, r6
	bl	__aeabi_memcpy
	ldr	r0, [sp, #72]
	cmp.w	r8, #0
	add.w	r2, r6, r0
	beq	.LBB208_283
	ldr.w	r0, [r4, #248]
	adds	r1, r2, r5
	add	r0, r1
	udiv	r1, r0, r8
	mls	r0, r1, r8, r0
	b	.LBB208_284
.LBB208_283:
	movs	r0, #0
.LBB208_284:
	cmp	r9, r2
	bhs	.LBB208_286
	movw	r0, :lower16:CORE_PERIPHERALS
	movs	r2, #0
	movt	r0, :upper16:CORE_PERIPHERALS
	b	.LBB208_290
.LBB208_286:
	sub.w	r1, r11, r6
	sub.w	r2, r9, r2
	cmp	r2, r1
	sub.w	r3, r8, r0
	it	hs
	movhs	r2, r1
	cmp	r2, r3
	it	hi
	movhi	r2, r3
	adds	r3, r2, r0
	bhs.w	.LBB208_326
	cmp	r3, r8
	bhi.w	.LBB208_327
	cmp	r2, r1
	bhi.w	.LBB208_329
	ldr.w	r1, [r4, #240]
	add	r0, r1
.LBB208_290:
	ldr	r1, [sp, #108]
	add	r1, r6
	bl	__aeabi_memcpy
	ldr	r0, [sp, #120]
	ldr	r0, [r0]
	cmp	r0, #0
	bne	.LBB208_301
	mov	r1, r4
	ldr	r0, [sp, #104]
	ldr	r2, [r1, #220]!
	ldr	r0, [r0]
	ldr	r3, [r1, #-4]
	strd	r3, r2, [r1, #-12]
	cbz	r2, .LBB208_295
	mov	r1, r4
	ldr	r2, [r1, #228]!
	ldr	r3, [r1, #-4]
	strd	r3, r2, [r1, #-12]
	cbz	r2, .LBB208_296
	mov	r1, r4
	ldr	r2, [r1, #236]!
	ldr	r3, [r1, #-4]
	strd	r3, r2, [r1, #-12]
	cbz	r2, .LBB208_297
	movs	r2, #0
	ldr	r1, [sp, #104]
	b	.LBB208_299
.LBB208_295:
	movs	r2, #0
	movs	r3, #1
	b	.LBB208_298
.LBB208_296:
	movs	r2, #1
	movs	r3, #2
	b	.LBB208_298
.LBB208_297:
	movs	r2, #2
	movs	r3, #3
.LBB208_298:
	ldr	r6, [sp, #36]
	add.w	r3, r6, r3, lsl #3
	adds	r3, #160
	str	r3, [sp, #120]
.LBB208_299:
	movs	r3, #0
	str	r3, [r1]
	ldr	r1, [sp, #36]
	ldr	r5, [sp, #120]
	ldr.w	r6, [r4, #244]
	add.w	r2, r1, r2, lsl #3
	ldr.w	r1, [r4, #252]
	str	r3, [r5]
	subs	r3, r6, r1
	ldr.w	r6, [r2, #160]
	cmp	r3, r0
	add.w	r3, r6, r0
	str.w	r3, [r2, #160]
	blo.w	.LBB208_330
	add	r0, r1
	str.w	r0, [r4, #252]
.LBB208_301:
	ldrd	r0, r1, [r4, #168]
	eor	r0, r0, #1
	orrs	r0, r1
	bne	.LBB208_306
	ldr	r0, [sp, #36]
	ldrd	r6, r8, [r4, #176]
	bl	smoltcp::socket::tcp::TcpSocket::ack_to_transmit::h6a8624e0a5e08feb
	cbz	r0, .LBB208_304
.LBB208_303:
	ldrd	r0, r1, [r4, #184]
	ldr	r2, [sp, #116]
	orrs	r0, r1
	adds	r2, r2, r6
	ldr	r1, [sp, #112]
	mov.w	r3, #2
	adc.w	r1, r1, r8
	cmp	r0, #0
	mov.w	r0, #0
	it	eq
	moveq	r3, #1
	str.w	r3, [r4, #184]
	strd	r0, r2, [r4, #188]
	str.w	r1, [r4, #196]
	b	.LBB208_306
.LBB208_304:
	ldr	r0, [sp, #36]
	ldrb.w	r0, [r0, #310]
	subs	r0, #2
	cmp	r0, #4
	bhi	.LBB208_306
	ldrb.w	r0, [r4, #379]
	ldr.w	r1, [r4, #244]
	ldr.w	r2, [r4, #252]
	subs	r1, r1, r2
	and	r0, r0, #31
	lsr.w	r0, r1, r0
	movw	r1, #65535
	cmp	r0, r1
	it	lo
	movlo	r1, r0
	ldrh.w	r0, [r4, #356]
	uxth	r1, r1
	cmp	r0, r1
	blo	.LBB208_303
.LBB208_306:
	ldr	r0, [sp, #104]
	ldr	r1, [sp, #100]
	ldr	r0, [r0]
	orrs	r0, r1
	beq	.LBB208_312
	ldrh.w	r3, [sp, #220]
	add	r4, sp, #432
	ldrh.w	r0, [sp, #222]
	mov	r2, r10
	str	r0, [sp]
	mov	r0, r4
	ldr	r1, [sp, #36]
	bl	smoltcp::socket::tcp::TcpSocket::ack_reply::h9a8329310b8a3a8e
.LBB208_308:
	add	r0, sp, #300
	movs	r2, #48
	adds	r0, #2
	mov	r1, r4
	bl	__aeabi_memcpy
	add.w	r12, r4, #52
	add	r1, sp, #236
	ldr.w	r8, [sp, #480]
.LBB208_309:
	ldm.w	r12!, {r2, r3, r4, r5, r6}
	stm	r1!, {r2, r3, r4, r5, r6}
	ldm.w	r12!, {r2, r3, r4, r5, r6}
	stm	r1!, {r2, r3, r4, r5, r6}
.LBB208_310:
	ldm.w	r12, {r0, r2, r3, r4, r5, r6}
	cmp.w	r8, #2
	stm	r1!, {r0, r2, r3, r4, r5, r6}
	beq	.LBB208_313
	add	r0, sp, #300
	movs	r2, #48
	adds	r1, r0, #2
	add	r0, sp, #384
	bl	__aeabi_memcpy
	add.w	r12, sp, #236
	add	r0, sp, #432
	ldm.w	r12!, {r1, r2, r3, r5, r6}
	stm	r0!, {r1, r2, r3, r5, r6}
	ldm.w	r12!, {r1, r2, r3, r5, r6}
	stm	r0!, {r1, r2, r3, r5, r6}
	ldm.w	r12, {r1, r2, r3, r4, r5, r6}
	stm	r0!, {r1, r2, r3, r4, r5, r6}
	movs	r0, #4
	b	.LBB208_314
.LBB208_312:
	add	r0, sp, #300
	movs	r1, #48
	adds	r0, #2
	bl	__aeabi_memclr
	add	r0, sp, #236
	movs	r1, #64
	bl	__aeabi_memclr4
.LBB208_313:
	add	r0, sp, #384
	movs	r1, #48
	bl	__aeabi_memclr4
	add	r0, sp, #432
	movs	r1, #64
	bl	__aeabi_memclr4
	mov.w	r8, #0
	movs	r0, #6
	strd	r8, r8, [sp, #376]
	strd	r8, r8, [sp, #368]
	strd	r8, r8, [sp, #360]
	strd	r8, r8, [sp, #352]
.LBB208_314:
	ldr.w	lr, [sp, #92]
	add	r1, sp, #384
	add.w	r12, lr, #12
	str.w	r0, [lr, #8]
	ldm	r1!, {r0, r2, r3, r4, r5, r6}
	stm.w	r12!, {r0, r2, r3, r4, r5, r6}
	ldm.w	r1, {r0, r2, r3, r4, r5, r6}
	stm.w	r12, {r0, r2, r3, r4, r5, r6}
	add.w	r12, sp, #432
	str.w	r8, [lr, #60]
	add.w	r0, lr, #64
	ldm.w	r12!, {r1, r2, r3, r5, r6}
	stm	r0!, {r1, r2, r3, r5, r6}
	ldm.w	r12!, {r1, r2, r3, r5, r6}
	stm	r0!, {r1, r2, r3, r5, r6}
	ldm.w	r12, {r1, r2, r3, r4, r5, r6}
	stm	r0!, {r1, r2, r3, r4, r5, r6}
	add	r1, sp, #352
	add.w	r0, lr, #128
	ldm	r1!, {r2, r3, r5, r6}
	stm	r0!, {r2, r3, r5, r6}
	ldm.w	r1, {r2, r3, r5, r6}
	stm	r0!, {r2, r3, r5, r6}
	movs	r0, #0
	strb.w	r0, [lr]
	add.w	sp, sp, #548
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB208_315:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.608
	movs	r0, #20
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.608
	bl	core::slice::index::slice_index_order_fail::h8a53f055fb6ee074
	.inst.n	0xdefe
.LBB208_316:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.608
	mov	r0, r1
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.608
	mov	r1, r11
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB208_317:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.606
	movs	r0, #16
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.606
	mov	r1, r11
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB208_318:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.609
	mov	r1, r11
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.609
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB208_319:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.12
	movs	r0, #2
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.12
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB208_320:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.5
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.102
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.5
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.102
	movs	r1, #40
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB208_321:
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.136
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.137
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.136
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.137
	movs	r1, #37
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB208_322:
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.598
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.599
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.598
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.599
	movs	r1, #51
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB208_323:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.130
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.130
	bl	core::slice::index::slice_index_order_fail::h8a53f055fb6ee074
	.inst.n	0xdefe
.LBB208_324:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.130
	mov	r0, r1
	b	.LBB208_328
.LBB208_325:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.131
	mov	r0, r6
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.131
	mov	r1, r11
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB208_326:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.130
	mov	r1, r3
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.130
	bl	core::slice::index::slice_index_order_fail::h8a53f055fb6ee074
	.inst.n	0xdefe
.LBB208_327:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.130
	mov	r0, r3
.LBB208_328:
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.130
	mov	r1, r8
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB208_329:
	movw	r3, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.132
	mov	r0, r2
	movt	r3, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.132
	mov	r2, r3
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB208_330:
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.133
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.134
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.133
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.134
	movs	r1, #40
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.Lfunc_end208:
	.size	smoltcp::iface::interface::InterfaceInner::process_tcp::h5ff6fe940e837b1a, .Lfunc_end208-smoltcp::iface::interface::InterfaceInner::process_tcp::h5ff6fe940e837b1a
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp5iface9interface14InterfaceInner11process_udp17h5cead8c80c35e914E,"ax",%progbits
	.p2align	1
	.type	smoltcp::iface::interface::InterfaceInner::process_udp::h5cead8c80c35e914,%function
	.code	16
	.thumb_func
smoltcp::iface::interface::InterfaceInner::process_udp::h5cead8c80c35e914:
.Lfunc_begin209:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#484
	sub	sp, #484
	mov	r9, r3
	ldrb	r3, [r3]
	mov	r10, r2
	mov	lr, r0
	ldr.w	r8, [r7, #16]
	cbz	r3, .LBB209_3
	cmp	r3, #1
	bne	.LBB209_4
	ldrd	r12, r11, [r9, #8]
	movs	r2, #1
	movs	r3, #1
	b	.LBB209_5
.LBB209_3:
	ldr.w	r0, [r9, #6]
	ldrb.w	r2, [r9, #1]
	ldr.w	r4, [r9, #23]
	str	r0, [sp, #376]
	ldr.w	r0, [r9, #10]
	ldrb.w	r3, [r9, #18]
	str	r4, [sp, #104]
	ldr.w	r4, [r9, #27]
	ldr.w	r12, [r9, #2]
	str	r0, [sp, #380]
	ldr.w	r0, [r9, #14]
	str	r0, [sp, #384]
	ldr.w	r11, [r9, #19]
	str	r4, [sp, #108]
	ldr.w	r4, [r9, #31]
	str	r4, [sp, #112]
	b	.LBB209_5
.LBB209_4:
	ldr.w	r2, [r9, #16]
	str	r2, [sp, #380]
	ldr.w	r2, [r9, #28]
	str	r2, [sp, #104]
	ldr.w	r2, [r9, #32]
	str	r2, [sp, #108]
	ldr.w	r3, [r9, #20]
	ldr.w	r11, [r9, #24]
	ldr.w	r2, [r9, #36]
	str	r3, [sp, #384]
	ldrd	r12, r0, [r9, #8]
	str	r2, [sp, #112]
	movs	r2, #2
	movs	r3, #2
	str	r0, [sp, #376]
.LBB209_5:
	ldr	r0, [sp, #104]
	str	r0, [sp, #336]
	ldr	r0, [sp, #108]
	str	r0, [sp, #340]
	ldr	r0, [sp, #112]
	str	r0, [sp, #344]
	strb.w	r2, [sp, #64]
	cmp.w	r8, #8
	ldrd	r0, r2, [sp, #336]
	ldr	r4, [sp, #384]
	str	r4, [sp, #268]
	ldr	r5, [sp, #380]
	str	r5, [sp, #264]
	ldr	r6, [sp, #376]
	str	r6, [sp, #260]
	str.w	r12, [sp, #65]
	str.w	r6, [sp, #69]
	str.w	r5, [sp, #73]
	str.w	r4, [sp, #77]
	strb.w	r3, [sp, #84]
	str.w	r11, [sp, #85]
	str.w	r0, [sp, #89]
	ldr	r0, [sp, #344]
	str.w	r2, [sp, #93]
	str.w	r0, [sp, #97]
	blo	.LBB209_7
	ldr	r6, [r7, #12]
	ldrh	r0, [r6, #4]
	rev	r0, r0
	cmp.w	r8, r0, lsr #16
	bhs	.LBB209_9
.LBB209_7:
	movs	r0, #4
.LBB209_8:
	strb.w	r0, [lr, #1]
	movs	r0, #1
	strb.w	r0, [lr]
	add	sp, #484
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB209_9:
	lsrs	r4, r0, #16
	cmp	r4, #8
	blo	.LBB209_17
	ldrh	r5, [r6, #2]
	cbz	r5, .LBB209_17
	ldrb.w	r0, [r1, #45]
	strd	r1, lr, [sp, #56]
	cmp	r0, #1
	bhi	.LBB209_18
	add	r0, sp, #64
	add	r1, sp, #84
	movs	r2, #4
	mov	r3, r4
	bl	smoltcp::wire::ip::checksum::pseudo_header::ha771da54de6c08b8
	mov	r11, r0
	mov	r0, r6
	mov	r1, r4
	bl	smoltcp::wire::ip::checksum::data::hebb229fc732545ff
	uxth	r0, r0
	uxtah	r0, r0, r11
	lsrs	r1, r0, #16
	uxtah	r0, r1, r0
	movw	r1, #65535
	add.w	r0, r0, r0, lsr #16
	uxth	r0, r0
	cmp	r0, r1
	beq	.LBB209_18
	ldrb.w	r0, [sp, #64]
	cmp	r0, #1
	mov.w	r0, #5
	bne.w	.LBB209_71
	ldrb.w	r1, [sp, #84]
	ldr.w	lr, [sp, #60]
	cmp	r1, #1
	bne	.LBB209_8
	ldrh	r0, [r6, #6]
	cbz	r0, .LBB209_18
	movs	r0, #5
	ldr.w	lr, [sp, #60]
	b	.LBB209_8
.LBB209_17:
	movs	r0, #8
	b	.LBB209_8
.LBB209_18:
	mov	r1, r6
	ldr.w	r12, [r7, #8]
	rev16	r5, r5
	ldrh	r0, [r1], #8
	str	r1, [sp, #12]
	mov.w	r1, #392
	rev	r0, r0
	lsrs	r0, r0, #16
	str	r0, [sp, #16]
	sub.w	r0, r4, #8
	str	r0, [sp, #36]
	ldrd	r11, r0, [r10]
	mov	r10, r9
	mla	r4, r0, r1, r11
	ldr	r0, [r10, #19]!
	str	r0, [sp, #20]
	add	r0, sp, #104
	sub.w	r3, r10, #15
	adds	r0, #20
	str	r0, [sp, #44]
	add	r0, sp, #376
	sub.w	lr, r10, #7
	adds	r0, #1
	str	r0, [sp, #48]
	sub.w	r0, r10, #1
	str	r0, [sp, #52]
.LBB209_19:
	mov	r0, r11
.LBB209_20:
	cmp	r0, r4
	beq.w	.LBB209_60
	ldr	r1, [r0, #40]
	cmp	r1, #1
	add.w	r1, r0, #392
	beq	.LBB209_31
	cmp	r1, r4
	beq.w	.LBB209_60
	ldr.w	r2, [r0, #432]
	add.w	r11, r0, #784
	cmp	r2, #1
	beq	.LBB209_29
	cmp	r11, r4
	beq.w	.LBB209_60
	ldr.w	r1, [r0, #824]
	cmp	r1, #1
	add.w	r1, r0, #1176
	beq	.LBB209_30
	cmp	r1, r4
	beq.w	.LBB209_60
	ldr.w	r1, [r0, #1216]
	add.w	r11, r0, #1568
	cmp	r1, #1
	mov	r0, r11
	bne	.LBB209_20
	sub.w	r0, r11, #392
	b	.LBB209_32
.LBB209_29:
	mov	r0, r1
	b	.LBB209_32
.LBB209_30:
	mov	r0, r11
.LBB209_31:
	mov	r11, r1
.LBB209_32:
	ldrh.w	r1, [r0, #108]
	cmp	r1, r5
	bne	.LBB209_19
	add.w	r2, r0, #44
	add	r1, sp, #24
	ldrb.w	r0, [r2, #66]
	stm.w	r1, {r2, r5, lr}
	cmp	r0, #1
	str	r0, [sp, #8]
	beq	.LBB209_36
	cmp	r0, #2
	bne.w	.LBB209_74
	ldr.w	r0, [r2, #79]
	str	r0, [sp, #116]
	ldr.w	r0, [r2, #75]
	str	r0, [sp, #112]
	ldr.w	r0, [r2, #71]
	str	r0, [sp, #108]
	ldr.w	r0, [r2, #67]
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.7
	str	r0, [sp, #104]
	movs	r2, #16
	add	r0, sp, #104
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.7
	mov	r5, r3
	bl	memcmp
	ldr	r2, [sp, #24]
	mov	r3, r5
	ldr.w	lr, [sp, #32]
	ldr	r5, [sp, #28]
	ldr.w	r12, [r7, #8]
	b	.LBB209_37
.LBB209_36:
	ldrb.w	r0, [r2, #67]
.LBB209_37:
	cmp	r0, #0
	beq.w	.LBB209_74
	ldrb.w	r0, [r9]
	str	r0, [sp, #40]
	cbz	r0, .LBB209_41
	cmp	r0, #1
	bne	.LBB209_42
	ldr.w	r0, [lr]
	str.w	r0, [sp, #377]
	movs	r0, #1
	b	.LBB209_43
.LBB209_41:
	movs	r2, #17
	add	r0, sp, #376
	ldr	r1, [sp, #52]
	mov	r5, r3
	bl	__aeabi_memcpy
	ldrb.w	r0, [sp, #376]
	ldr.w	r12, [r7, #8]
	ldr	r2, [sp, #24]
	mov	r3, r5
	ldr.w	lr, [sp, #32]
	ldr	r5, [sp, #28]
	b	.LBB209_43
.LBB209_42:
	mov	r12, r3
	add	r1, sp, #104
	mov	lr, r3
	ldm.w	r12!, {r0, r2, r3, r5, r6}
	stm	r1!, {r0, r2, r3, r5, r6}
	ldm.w	r12, {r0, r2, r3, r5, r6}
	stm	r1!, {r0, r2, r3, r5, r6}
	ldr	r2, [sp, #44]
	ldr.w	r12, [r7, #8]
	ldr	r5, [sp, #28]
	mov	r3, lr
	ldr	r0, [r2]
	str	r0, [sp, #4]
	ldr	r0, [sp, #48]
	ldr	r1, [r2, #12]
	ldr.w	lr, [sp, #32]
	ldr	r6, [r7, #12]
	str	r1, [r0, #12]
	ldr	r1, [r2, #8]
	str	r1, [r0, #8]
	ldr	r1, [r2, #4]
	ldr	r2, [sp, #24]
	str	r1, [r0, #4]
	ldr	r1, [sp, #4]
	str	r1, [r0]
	movs	r0, #2
.LBB209_43:
	ldr	r1, [sp, #8]
	cmp	r1, r0
	bne	.LBB209_48
	mov	r0, r1
	cmp	r1, #1
	beq	.LBB209_47
	cmp	r0, #2
	bne.w	.LBB209_78
	add.w	r0, r2, #67
	movs	r2, #16
	ldr	r1, [sp, #48]
	mov	r5, r3
	bl	memcmp
	ldr	r2, [sp, #24]
	mov	r3, r5
	ldr.w	lr, [sp, #32]
	ldr	r5, [sp, #28]
	ldr.w	r12, [r7, #8]
	cbnz	r0, .LBB209_48
	b	.LBB209_74
.LBB209_47:
	ldr.w	r0, [r2, #67]
	ldr.w	r1, [sp, #377]
	cmp	r0, r1
	beq.w	.LBB209_74
.LBB209_48:
	ldr	r0, [sp, #40]
	cbz	r0, .LBB209_51
	cmp	r0, #1
	bne	.LBB209_56
	movs	r0, #0
	mov	r1, lr
	b	.LBB209_52
.LBB209_51:
	ldr	r0, [sp, #52]
	mov	r1, r10
	ldrb	r0, [r0]
	subs	r0, #1
	it	ne
	movne	r0, #1
.LBB209_52:
	cmp	r0, #0
	itt	eq
	ldreq	r0, [r1]
	addseq.w	r0, r0, #1
	beq.w	.LBB209_74
	ldr	r0, [sp, #40]
	cbz	r0, .LBB209_58
	ldr.w	r1, [lr]
.LBB209_55:
	and	r0, r1, #240
	cmp	r0, #224
	bne.w	.LBB209_19
	b	.LBB209_74
.LBB209_56:
	ldr.w	r0, [r9, #24]
.LBB209_57:
	uxtb	r0, r0
	cmp	r0, #255
	bne.w	.LBB209_19
	b	.LBB209_74
.LBB209_58:
	ldr	r0, [sp, #52]
	ldrb	r0, [r0]
	cmp	r0, #0
	beq.w	.LBB209_19
	ldr	r1, [sp, #20]
	cmp	r0, #1
	mov	r0, r1
	beq	.LBB209_55
	b	.LBB209_57
.LBB209_60:
	ldrb.w	r0, [r9]
	cbz	r0, .LBB209_64
	cmp	r0, #1
	ldr	r4, [sp, #60]
	bne	.LBB209_65
	cmp.w	r12, #0
	bne	.LBB209_66
	cmp.w	r8, #528
	add.w	r9, sp, #376
	it	hs
	movhs.w	r8, #528
	ldr	r1, [r3, #12]
	str.w	r1, [sp, #273]
	ldr	r1, [r3, #8]
	str.w	r1, [sp, #269]
	ldr	r1, [r3, #4]
	str.w	r1, [sp, #265]
	ldr	r0, [r3]
	str.w	r0, [sp, #261]
	ldr	r1, [r3, #12]
	str	r1, [sp, #348]
	ldr	r0, [r3]
	movs	r2, #17
	ldr	r1, [r3, #8]
	str	r1, [sp, #344]
	ldr	r1, [r3, #4]
	strd	r0, r1, [sp, #336]
	movw	r0, #770
	strh.w	r0, [sp, #376]
	add.w	r0, r9, #3
	add	r1, sp, #260
	bl	__aeabi_memcpy
	add	r5, sp, #104
	add	r2, sp, #336
	mov	r0, r5
	ldr	r1, [sp, #56]
	mov	r3, r9
	strd	r6, r8, [sp, #396]
	add.w	r6, r4, #8
	bl	smoltcp::iface::interface::InterfaceInner::icmpv4_reply::haf1573f8e2fbb5a4
	movs	r2, #152
	mov	r0, r6
	mov	r1, r5
	bl	__aeabi_memcpy8
	b	.LBB209_67
.LBB209_64:
	ldr	r1, [sp, #60]
	movw	r0, #513
	strh	r0, [r1]
	add	sp, #484
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB209_65:
	cmp.w	r12, #0
	beq	.LBB209_68
.LBB209_66:
	add.w	r0, r4, #12
	movs	r1, #148
	bl	__aeabi_memclr4
	movs	r0, #6
	str	r0, [r4, #8]
.LBB209_67:
	movs	r0, #0
	strb	r0, [r4]
	add	sp, #484
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB209_68:
	add.w	r10, sp, #260
	movs	r2, #40
	add.w	r0, r10, #1
	mov	r1, r3
	cmp.w	r8, #1192
	mov	r9, r3
	it	hs
	movhs.w	r8, #1192
	bl	__aeabi_memcpy
	add	r0, sp, #336
	mov	r11, r6
	ldm.w	r9!, {r1, r2, r3, r5, r6}
	stm	r0!, {r1, r2, r3, r5, r6}
	ldm.w	r9, {r1, r2, r3, r5, r6}
	stm	r0!, {r1, r2, r3, r5, r6}
	mov.w	r0, #1024
	strh.w	r0, [sp, #376]
	add	r0, sp, #376
	movs	r2, #41
	adds	r0, #3
	mov	r1, r10
	bl	__aeabi_memcpy
	ldrb.w	r0, [sp, #356]
	str.w	r11, [sp, #420]
	str.w	r8, [sp, #424]
	cmp	r0, #255
	beq	.LBB209_72
	add	r0, sp, #336
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.7
	add.w	r5, r0, #20
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.7
	movs	r2, #16
	mov	r0, r5
	bl	memcmp
	cbz	r0, .LBB209_72
	add	r6, sp, #376
	mov	r0, r6
	bl	smoltcp::wire::icmpv6::Repr::buffer_len::h7ea189855c9c3b5a
	mov	r8, r0
	movs	r2, #104
	ldrd	r0, r1, [r5]
	str	r0, [sp, #320]
	ldr	r0, [r5, #8]
	str	r1, [sp, #324]
	ldr	r1, [r5, #12]
	strd	r0, r1, [sp, #328]
	ldrd	r0, r1, [sp, #340]
	str	r0, [sp, #304]
	ldr	r0, [sp, #348]
	str	r1, [sp, #308]
	ldr	r1, [sp, #352]
	strd	r0, r1, [sp, #312]
	add	r0, sp, #104
	mov	r1, r6
	adds	r0, #1
	bl	__aeabi_memcpy
	movs	r1, #1
	movs	r0, #7
	movs	r5, #64
	b	.LBB209_73
.LBB209_71:
	ldr.w	lr, [sp, #60]
	b	.LBB209_8
.LBB209_72:
	add	r0, sp, #104
	movs	r1, #105
	movs	r5, #0
	strd	r5, r5, [sp, #328]
	strd	r5, r5, [sp, #320]
	strd	r5, r5, [sp, #304]
	strd	r5, r5, [sp, #312]
	bl	__aeabi_memclr4
	movs	r1, #6
	movs	r0, #0
	mov.w	r8, #0
.LBB209_73:
	str	r1, [r4, #8]
	ldr	r1, [sp, #320]
	str	r1, [r4, #20]
	ldr	r1, [sp, #324]
	str	r1, [r4, #24]
	ldr	r1, [sp, #328]
	str	r1, [r4, #28]
	ldr	r1, [sp, #332]
	str	r1, [r4, #32]
	ldr	r1, [sp, #304]
	str	r1, [r4, #36]
	ldr	r1, [sp, #308]
	str	r1, [r4, #40]
	ldr	r1, [sp, #312]
	str	r1, [r4, #44]
	ldr	r1, [sp, #316]
	str	r1, [r4, #48]
	add	r1, sp, #104
	strb.w	r0, [r4, #52]
	add.w	r0, r4, #55
	movs	r2, #105
	movs	r6, #0
	strd	r6, r8, [r4, #12]
	strb.w	r6, [r4, #53]
	strb.w	r5, [r4, #54]
	bl	__aeabi_memcpy
	strb	r6, [r4]
	add	sp, #484
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB209_74:
	ldrb.w	r0, [r9]
	ands	r0, r0, #3
	ldr.w	r8, [sp, #60]
	mov	r1, r2
	beq	.LBB209_79
.LBB209_75:
	cmp	r0, #1
	bne	.LBB209_77
	ldr.w	r0, [r9, #8]
	movs	r5, #1
	b	.LBB209_80
.LBB209_77:
	ldr.w	r0, [r9, #8]
	movs	r5, #2
	ldrd	r3, r2, [lr]
	str	r3, [sp, #104]
	ldr.w	r3, [lr, #8]
	strd	r2, r3, [sp, #108]
	b	.LBB209_80
.LBB209_78:
	ldr	r0, [sp, #40]
	ands	r0, r0, #3
	ldr.w	r8, [sp, #60]
	mov	r1, r2
	bne	.LBB209_75
.LBB209_79:
	ldr.w	r2, [r9, #6]
	ldrb.w	r5, [r9, #1]
	str	r2, [sp, #104]
	ldr.w	r2, [r9, #10]
	ldr.w	r0, [r9, #2]
	str	r2, [sp, #108]
	ldr.w	r2, [r9, #14]
	str	r2, [sp, #112]
.LBB209_80:
	ldr	r2, [sp, #112]
	str	r2, [sp, #268]
	ldr	r3, [sp, #108]
	str	r3, [sp, #264]
	ldr	r6, [sp, #104]
	str.w	r0, [sp, #107]
	str.w	r3, [sp, #115]
	add	r0, sp, #376
	str.w	r2, [sp, #119]
	add	r3, sp, #104
	ldr	r2, [sp, #36]
	str	r6, [sp, #260]
	ldr	r4, [sp, #16]
	strh.w	r4, [sp, #104]
	strb.w	r5, [sp, #106]
	str.w	r6, [sp, #111]
	bl	smoltcp::storage::packet_buffer::PacketBuffer<H>::enqueue::hfba5cf974555267f
	ldrb.w	r0, [sp, #376]
	cbz	r0, .LBB209_82
	ldrb.w	r0, [sp, #377]
	strb.w	r0, [r8, #1]
	movs	r0, #1
	b	.LBB209_84
.LBB209_82:
	ldr	r0, [sp, #384]
	ldr	r1, [sp, #36]
	cmp	r0, r1
	bne	.LBB209_85
	ldr	r0, [sp, #380]
	ldr	r1, [sp, #12]
	ldr	r2, [sp, #36]
	bl	__aeabi_memcpy
	add.w	r0, r8, #12
	movs	r1, #148
	bl	__aeabi_memclr4
	movs	r0, #6
	str.w	r0, [r8, #8]
	movs	r0, #0
.LBB209_84:
	strb.w	r0, [r8]
	add	sp, #484
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB209_85:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.108
	ldr	r1, [sp, #36]
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.108
	bl	core::slice::<impl [T]>::copy_from_slice::len_mismatch_fail::h7bf74017f2463c91
	.inst.n	0xdefe
.Lfunc_end209:
	.size	smoltcp::iface::interface::InterfaceInner::process_udp::h5cead8c80c35e914, .Lfunc_end209-smoltcp::iface::interface::InterfaceInner::process_udp::h5cead8c80c35e914
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp4wire6icmpv64Repr5parse26create_packet_from_payload17h341590bec797a4b5E,"ax",%progbits
	.p2align	2
	.type	smoltcp::wire::icmpv6::Repr::parse::create_packet_from_payload::h341590bec797a4b5,%function
	.code	16
	.thumb_func
smoltcp::wire::icmpv6::Repr::parse::create_packet_from_payload::h341590bec797a4b5:
.Lfunc_begin210:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8}
	str	r8, [sp, #-4]!
	.cfi_offset r8, -24
	mov	r2, r1
	ldr	r1, [r1, #4]
	cmp	r1, #0
	beq.w	.LBB210_27
	ldr.w	r12, [r2]
	mov	r4, r0
	movs	r0, #8
	ldrb.w	r2, [r12]
	sub.w	r3, r2, #128
	cmp	r3, #15
	bhi	.LBB210_5
.LCPI210_0:
	tbb	[pc, r3]
.LJTI210_0:
	.byte	(.LBB210_10-(.LCPI210_0+4))/2
	.byte	(.LBB210_10-(.LCPI210_0+4))/2
	.byte	(.LBB210_7-(.LCPI210_0+4))/2
	.byte	(.LBB210_6-(.LCPI210_0+4))/2
	.byte	(.LBB210_6-(.LCPI210_0+4))/2
	.byte	(.LBB210_10-(.LCPI210_0+4))/2
	.byte	(.LBB210_8-(.LCPI210_0+4))/2
	.byte	(.LBB210_4-(.LCPI210_0+4))/2
	.byte	(.LBB210_4-(.LCPI210_0+4))/2
	.byte	(.LBB210_9-(.LCPI210_0+4))/2
	.byte	(.LBB210_6-(.LCPI210_0+4))/2
	.byte	(.LBB210_6-(.LCPI210_0+4))/2
	.byte	(.LBB210_6-(.LCPI210_0+4))/2
	.byte	(.LBB210_6-(.LCPI210_0+4))/2
	.byte	(.LBB210_6-(.LCPI210_0+4))/2
	.byte	(.LBB210_10-(.LCPI210_0+4))/2
	.p2align	1
.LBB210_4:
	movs	r0, #24
	b	.LBB210_10
.LBB210_5:
	subs	r6, r2, #1
	cmp	r6, #4
	blo	.LBB210_10
.LBB210_6:
	movs	r0, #4
	b	.LBB210_10
.LBB210_7:
	movs	r0, #28
	b	.LBB210_10
.LBB210_8:
	movs	r0, #16
	b	.LBB210_10
.LBB210_9:
	movs	r0, #40
.LBB210_10:
	cmp	r1, r0
	blo.w	.LBB210_28
	subs	r6, r1, r0
	cmp	r6, #40
	blo	.LBB210_25
	add.w	r8, r12, r0
	movs	r5, #40
	ldrh.w	r0, [r8, #4]
	rev	r0, r0
	add.w	r0, r5, r0, lsr #16
	cmp	r0, r6
	bhi	.LBB210_25
	cmp	r3, #15
	mov.w	r0, #8
	bhi	.LBB210_17
.LCPI210_1:
	tbb	[pc, r3]
.LJTI210_1:
	.byte	(.LBB210_22-(.LCPI210_1+4))/2
	.byte	(.LBB210_22-(.LCPI210_1+4))/2
	.byte	(.LBB210_19-(.LCPI210_1+4))/2
	.byte	(.LBB210_18-(.LCPI210_1+4))/2
	.byte	(.LBB210_18-(.LCPI210_1+4))/2
	.byte	(.LBB210_22-(.LCPI210_1+4))/2
	.byte	(.LBB210_20-(.LCPI210_1+4))/2
	.byte	(.LBB210_16-(.LCPI210_1+4))/2
	.byte	(.LBB210_16-(.LCPI210_1+4))/2
	.byte	(.LBB210_21-(.LCPI210_1+4))/2
	.byte	(.LBB210_18-(.LCPI210_1+4))/2
	.byte	(.LBB210_18-(.LCPI210_1+4))/2
	.byte	(.LBB210_18-(.LCPI210_1+4))/2
	.byte	(.LBB210_18-(.LCPI210_1+4))/2
	.byte	(.LBB210_18-(.LCPI210_1+4))/2
	.byte	(.LBB210_22-(.LCPI210_1+4))/2
	.p2align	1
.LBB210_16:
	movs	r0, #24
	b	.LBB210_22
.LBB210_17:
	subs	r2, #1
	cmp	r2, #4
	blo	.LBB210_22
.LBB210_18:
	movs	r0, #4
	b	.LBB210_22
.LBB210_19:
	movs	r0, #28
	b	.LBB210_22
.LBB210_20:
	movs	r0, #16
	b	.LBB210_22
.LBB210_21:
	movs	r0, #40
.LBB210_22:
	cmp	r1, r0
	blo	.LBB210_28
	subs	r1, r1, r0
	cmp	r1, #39
	bls	.LBB210_29
	sub.w	r6, r1, #40
	cmp	r6, #8
	bhs	.LBB210_26
.LBB210_25:
	movs	r0, #4
	strb	r0, [r4, #1]
	movs	r0, #1
	strb	r0, [r4]
	ldr	r8, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.LBB210_26:
	add.w	r1, r12, r0
	ldrb.w	r0, [r8, #6]
	add.w	r5, r1, #40
	bl	<smoltcp::wire::ip::Protocol as core::convert::From<u8>>::from::h32c43f1d7a16fe9c
	ldr.w	r2, [r8, #8]
	str	r2, [r4, #16]
	ldr.w	r2, [r8, #12]
	str	r2, [r4, #20]
	ldr.w	r2, [r8, #16]
	str	r2, [r4, #24]
	ldr.w	r2, [r8, #20]
	str	r2, [r4, #28]
	ldr.w	r2, [r8, #24]
	str	r2, [r4, #32]
	ldr.w	r2, [r8, #28]
	str	r2, [r4, #36]
	ldr.w	r2, [r8, #32]
	strb.w	r0, [r4, #48]
	ldrb.w	r0, [r8, #7]
	str	r2, [r4, #40]
	ldr.w	r2, [r8, #36]
	str	r2, [r4, #44]
	strd	r5, r6, [r4, #4]
	str	r6, [r4, #12]
	strb.w	r1, [r4, #49]
	strb.w	r0, [r4, #50]
	movs	r0, #0
	strb	r0, [r4]
	ldr	r8, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.LBB210_27:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.345
	movs	r0, #0
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.345
	movs	r1, #0
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB210_28:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.346
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.346
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB210_29:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.363
	movs	r0, #40
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.363
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.Lfunc_end210:
	.size	smoltcp::wire::icmpv6::Repr::parse::create_packet_from_payload::h341590bec797a4b5, .Lfunc_end210-smoltcp::wire::icmpv6::Repr::parse::create_packet_from_payload::h341590bec797a4b5
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN7smoltcp4wire11ndiscoption20NdiscOption$LT$T$GT$15link_layer_addr17hf7d071f40c3a5104E","ax",%progbits
	.p2align	1
	.type	smoltcp::wire::ndiscoption::NdiscOption<T>::link_layer_addr::hf7d071f40c3a5104,%function
	.code	16
	.thumb_func
smoltcp::wire::ndiscoption::NdiscOption<T>::link_layer_addr::hf7d071f40c3a5104:
.Lfunc_begin211:
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	ldr	r1, [r0, #4]
	cmp	r1, #1
	bls	.LBB211_3
	cmp	r1, #7
	itttt	hi
	ldrhi	r0, [r0]
	ldrhhi	r1, [r0, #6]
	ldrhi.w	r0, [r0, #2]
	lslhi	r1, r1, #8
	itttt	hi
	lslhi	r2, r0, #8
	orrhi.w	r1, r1, r0, lsr #24
	addhi	r0, r2, #6
	pophi	{r7, pc}
.LBB211_2:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.562
	movs	r0, #8
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.562
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB211_3:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.561
	movs	r0, #1
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.561
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.Lfunc_end211:
	.size	smoltcp::wire::ndiscoption::NdiscOption<T>::link_layer_addr::hf7d071f40c3a5104, .Lfunc_end211-smoltcp::wire::ndiscoption::NdiscOption<T>::link_layer_addr::hf7d071f40c3a5104
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp5iface9interface14InterfaceInner13process_ndisc17hc601fe30e414ee86E,"ax",%progbits
	.p2align	1
	.type	smoltcp::iface::interface::InterfaceInner::process_ndisc::hc601fe30e414ee86,%function
	.code	16
	.thumb_func
smoltcp::iface::interface::InterfaceInner::process_ndisc::hc601fe30e414ee86:
.Lfunc_begin212:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#164
	sub	sp, #164
	mov	r10, r3
	ldrb	r6, [r3], #19
	mov	r5, r2
	mov	r4, r1
	cmp	r6, #2
	mov	r8, r0
	beq	.LBB212_4
	cmp	r6, #3
	bne	.LBB212_3
	ldr.w	r2, [r10, #14]
	str	r2, [sp, #36]
	ldrb.w	r1, [r10, #18]
	ldrh.w	r9, [r3, #5]
	ldr.w	r2, [r10, #10]
	ldr.w	r11, [r3, #1]
	ldrb.w	r0, [r10, #19]
	str	r2, [sp, #32]
	ldr.w	r2, [r10, #6]
	ldr	r3, [r5, #16]
	ldrb.w	r6, [r10, #1]
	str	r2, [sp, #28]
	ldr.w	r2, [r10, #2]
	str.w	r3, [sp, #157]
	ldr	r3, [r5, #12]
	lsls	r1, r1, #31
	str	r2, [sp, #24]
	ldr	r2, [r5, #4]
	str.w	r3, [sp, #153]
	ldr	r3, [r5, #8]
	str.w	r3, [sp, #149]
	mov.w	r1, #2
	str.w	r2, [sp, #145]
	strb.w	r1, [sp, #144]
	bne.w	.LBB212_19
.LBB212_3:
	add.w	r0, r8, #12
	movs	r1, #148
	bl	__aeabi_memclr4
	movs	r0, #6
	str.w	r0, [r8, #8]
	movs	r0, #0
	strb.w	r0, [r8]
	add	sp, #164
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB212_4:
	ldr	r0, [r10, #1]!
	str	r0, [sp, #24]
	ldrb.w	r1, [r10, #16]
	ldr.w	r0, [r10, #8]
	ldr.w	r2, [r10, #12]
	strd	r0, r2, [sp, #32]
	lsls	r0, r1, #31
	ldr.w	r0, [r10, #4]
	str	r0, [sp, #28]
	bne.w	.LBB212_27
.LBB212_5:
	ldrd	r1, r0, [r5, #24]
	ldr	r2, [r5, #32]
	str.w	r8, [sp, #20]
	strd	r0, r2, [sp, #152]
	ldr	r0, [r4, #56]
	str	r4, [sp, #16]
	cmp	r0, #0
	str	r1, [sp, #148]
	str	r5, [sp, #12]
	ldr	r1, [r5, #20]
	str	r1, [sp, #144]
	beq.w	.LBB212_17
	ldr	r1, [sp, #16]
	add	r2, sp, #144
	add.w	r0, r0, r0, lsl #3
	add.w	r4, r2, #14
	ldr	r1, [r1, #52]
	add	r2, sp, #40
	add.w	r11, r1, #1
	lsls	r6, r0, #1
	add.w	r5, r2, #14
	mov	r9, r6
	mov	r8, r11
	b	.LBB212_8
.LBB212_7:
	subs.w	r9, r9, #18
	add.w	r8, r8, #18
	beq.w	.LBB212_17
.LBB212_8:
	ldrb	r0, [r8, #-1]
	cmp	r0, #0
	beq	.LBB212_7
	ldr.w	r0, [r8, #12]
	str	r0, [sp, #52]
	ldr.w	r0, [r8, #8]
	str	r0, [sp, #48]
	ldr.w	r0, [r8, #4]
	str	r0, [sp, #44]
	ldr.w	r0, [r8]
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.42
	str	r0, [sp, #40]
	movs	r2, #16
	add	r0, sp, #40
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.42
	bl	memcmp
	cmp	r0, #0
	beq	.LBB212_7
	ldr.w	r0, [r8, #12]
	str	r0, [sp, #52]
	ldrh	r0, [r4]
	ldrh	r1, [r5]
	cmp	r0, r1
	bne	.LBB212_7
	add	r0, sp, #144
	ldr.w	r1, [r10, #12]
	add.w	r9, r0, #1
	ldr.w	r0, [r10]
	str.w	r0, [sp, #145]
	add	r0, sp, #40
	str.w	r1, [sp, #157]
	ldr.w	r1, [r10, #8]
	adds	r4, r0, #1
	ldr	r5, [sp, #12]
	str.w	r1, [sp, #153]
	ldr.w	r1, [r10, #4]
	str.w	r1, [sp, #149]
	b	.LBB212_13
.LBB212_12:
	subs	r6, #18
	add.w	r11, r11, #18
	beq	.LBB212_17
.LBB212_13:
	ldrb	r0, [r11, #-1]
	cmp	r0, #0
	beq	.LBB212_12
	ldr.w	r0, [r11, #12]
	str	r0, [r4, #12]
	ldr.w	r0, [r11, #8]
	str	r0, [r4, #8]
	ldr.w	r0, [r11, #4]
	str	r0, [r4, #4]
	ldr.w	r0, [r11]
	str	r0, [r4]
	movs	r2, #16
	mov	r0, r4
	mov	r1, r9
	bl	memcmp
	cmp	r0, #0
	bne	.LBB212_12
	ldr	r2, [sp, #16]
	ldr	r0, [r2, #68]
	lsls	r1, r0, #31
	beq.w	.LBB212_40
	ldrb.w	r1, [r2, #74]
	add.w	r8, sp, #40
	ldrh.w	r2, [r2, #72]
	movs	r6, #1
	strb.w	r6, [sp, #66]
	orr.w	r1, r2, r1, lsl #16
	ldr.w	r2, [r10, #12]
	str.w	r2, [sp, #62]
	ldr.w	r2, [r10, #8]
	str.w	r2, [sp, #58]
	ldr.w	r2, [r10, #4]
	str.w	r2, [sp, #54]
	ldr.w	r2, [r10]
	str.w	r2, [sp, #50]
	movw	r2, #16387
	strh.w	r2, [sp, #48]
	movs	r2, #6
	bfi	r0, r2, #0, #8
	str.w	r0, [sp, #67]
	lsrs	r0, r1, #16
	strb.w	r0, [sp, #73]
	mov	r0, r8
	strh.w	r1, [sp, #71]
	strb.w	r2, [sp, #40]
	bl	smoltcp::wire::icmpv6::Repr::buffer_len::h7ea189855c9c3b5a
	ldr	r4, [sp, #20]
	ldr.w	r1, [r10]
	movs	r2, #104
	str	r1, [r4, #20]
	ldr.w	r1, [r10, #4]
	str	r1, [r4, #24]
	ldr.w	r1, [r10, #8]
	str	r1, [r4, #28]
	ldr.w	r1, [r10, #12]
	str	r1, [r4, #32]
	ldr	r1, [r5, #4]
	str	r1, [r4, #36]
	ldr	r1, [r5, #8]
	str	r1, [r4, #40]
	ldr	r1, [r5, #12]
	str	r0, [r4, #16]
	movs	r0, #7
	str	r1, [r4, #44]
	ldr	r1, [r5, #16]
	strb.w	r0, [r4, #52]
	movs	r0, #255
	str	r1, [r4, #48]
	mov	r1, r8
	strb.w	r0, [r4, #54]
	add.w	r0, r4, #56
	str	r6, [r4, #8]
	bl	__aeabi_memcpy4
	b	.LBB212_18
.LBB212_17:
	ldr	r4, [sp, #20]
	movs	r1, #148
	add.w	r0, r4, #12
	bl	__aeabi_memclr4
	movs	r0, #6
	str	r0, [r4, #8]
.LBB212_18:
	movs	r0, #0
	strb	r0, [r4]
	add	sp, #164
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB212_19:
	cmp	r0, #6
	blo	.LBB212_28
	bne	.LBB212_38
	lsls.w	r0, r11, #31
	bne	.LBB212_28
	ldrb.w	r0, [sp, #24]
	cmp	r0, #255
	beq	.LBB212_28
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.7
	add	r0, sp, #24
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.7
	movs	r2, #16
	bl	memcmp
	cbz	r0, .LBB212_28
	lsls	r0, r6, #26
	ldr	r0, [r4, #16]
	bmi	.LBB212_35
	cmp	r0, #0
	beq	.LBB212_41
	ldrd	r10, r5, [r4]
	add.w	r0, r4, #8
	add	r1, sp, #144
	mov	r2, r10
	mov	r3, r5
	bl	smoltcp::iface::neighbor::Cache::lookup::hb727a98f0eba979d
	mov	lr, r5
	lsls	r0, r0, #24
	bne	.LBB212_37
	b	.LBB212_3
.LBB212_27:
	ldrb.w	r0, [r10, #17]
	cmp	r0, #6
	bhs	.LBB212_29
.LBB212_28:
	movw	r0, #2049
	strh.w	r0, [r8]
	add	sp, #164
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB212_29:
	bne	.LBB212_38
	ldr	r6, [r3]
	lsls	r0, r6, #31
	bne	.LBB212_28
	ldrb.w	r0, [sp, #24]
	cmp	r0, #255
	beq	.LBB212_28
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.7
	ldrh.w	r9, [r3, #4]
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.7
	add	r0, sp, #24
	movs	r2, #16
	bl	memcmp
	cmp	r0, #0
	beq	.LBB212_28
	ldr	r0, [r4, #16]
	cbz	r0, .LBB212_39
	ldr	r1, [r5, #16]
	str.w	r1, [sp, #53]
	ldr	r1, [r5, #12]
	str.w	r1, [sp, #49]
	ldr	r1, [r5, #8]
	str.w	r1, [sp, #45]
	ldr	r1, [r5, #4]
	str.w	r1, [sp, #41]
	movs	r1, #2
	strb.w	r1, [sp, #40]
	ldrd	r1, r2, [r4]
	add.w	r0, r4, #8
	str	r1, [sp]
	add	r1, sp, #40
	str	r2, [sp, #4]
	mov	r2, r6
	mov	r3, r9
	bl	smoltcp::iface::neighbor::Cache::fill::hcfe9cbef821d0fb1
	b	.LBB212_5
.LBB212_35:
	cbz	r0, .LBB212_42
	ldrd	r10, lr, [r4]
.LBB212_37:
	add	r1, sp, #40
	add.w	r12, sp, #144
	mov	r2, r1
	ldm.w	r12!, {r0, r3, r5, r6}
	stm	r2!, {r0, r3, r5, r6}
	ldrb.w	r3, [r12]
	add.w	r0, r4, #8
	strb	r3, [r2]
	mov	r2, r11
	mov	r3, r9
	strd	r10, lr, [sp]
	bl	smoltcp::iface::neighbor::Cache::fill::hcfe9cbef821d0fb1
	b	.LBB212_3
.LBB212_38:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.685
	movs	r1, #6
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.685
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB212_39:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.46
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.46
	b	.LBB212_43
.LBB212_40:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.47
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.47
	b	.LBB212_43
.LBB212_41:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.44
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.44
	b	.LBB212_43
.LBB212_42:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.45
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.45
.LBB212_43:
	movs	r1, #43
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.Lfunc_end212:
	.size	smoltcp::iface::interface::InterfaceInner::process_ndisc::hc601fe30e414ee86, .Lfunc_end212-smoltcp::iface::interface::InterfaceInner::process_ndisc::hc601fe30e414ee86
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp4wire6icmpv64Repr10buffer_len17h7ea189855c9c3b5aE,"ax",%progbits
	.p2align	2
	.type	smoltcp::wire::icmpv6::Repr::buffer_len::h7ea189855c9c3b5a,%function
	.code	16
	.thumb_func
smoltcp::wire::icmpv6::Repr::buffer_len::h7ea189855c9c3b5a:
.Lfunc_begin213:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r11}
	push.w	{r8, r9, r11}
	.cfi_offset r11, -24
	.cfi_offset r9, -28
	.cfi_offset r8, -32
	.pad	#4
	sub	sp, #4
	mov	r1, r0
	ldrb	r2, [r1], #11
.LCPI213_0:
	tbb	[pc, r2]
.LJTI213_0:
	.byte	(.LBB213_2-(.LCPI213_0+4))/2
	.byte	(.LBB213_3-(.LCPI213_0+4))/2
	.byte	(.LBB213_2-(.LCPI213_0+4))/2
	.byte	(.LBB213_3-(.LCPI213_0+4))/2
	.byte	(.LBB213_5-(.LCPI213_0+4))/2
	.byte	(.LBB213_5-(.LCPI213_0+4))/2
	.byte	(.LBB213_6-(.LCPI213_0+4))/2
	.byte	(.LBB213_9-(.LCPI213_0+4))/2
	.p2align	1
.LBB213_2:
	adds	r0, #48
	b	.LBB213_4
.LBB213_3:
	adds	r0, #52
.LBB213_4:
	ldr	r0, [r0]
	adds	r0, #48
	add	sp, #4
	pop.w	{r8, r9, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB213_5:
	ldr	r0, [r0, #12]
	adds	r0, #8
	add	sp, #4
	pop.w	{r8, r9, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB213_6:
	ldrb	r4, [r0, #8]
	ldr.w	lr, [r0, #20]
	ldrb	r6, [r0, #26]
	ldrb	r5, [r0, #27]
	strb	r6, [r7, #-26]
	ldrb.w	r8, [r0, #9]
	strb	r5, [r7, #-27]
	ldr.w	r9, [r1]
	sub.w	r5, r7, #26
	ldrb	r2, [r0, #25]
	ldr.w	r12, [r0, #96]
.LCPI213_1:
	tbb	[pc, r4]
.LJTI213_1:
	.byte	(.LBB213_8-(.LCPI213_1+4))/2
	.byte	(.LBB213_15-(.LCPI213_1+4))/2
	.byte	(.LBB213_11-(.LCPI213_1+4))/2
	.byte	(.LBB213_10-(.LCPI213_1+4))/2
	.byte	(.LBB213_13-(.LCPI213_1+4))/2
	.p2align	1
.LBB213_8:
	lsls.w	r0, r8, #31
	mov.w	r0, #16
	it	eq
	moveq	r0, #8
	add	sp, #4
	pop.w	{r8, r9, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB213_9:
	ldrb	r1, [r0, #4]
	movs	r0, #8
	cmp	r1, #0
	it	eq
	moveq	r0, #28
	add	sp, #4
	pop.w	{r8, r9, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB213_10:
	sub.w	r5, r7, #27
	mov	r2, r6
.LBB213_11:
	lsls	r0, r2, #31
	bne	.LBB213_14
	movs	r0, #24
	add	sp, #4
	pop.w	{r8, r9, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB213_13:
	ldrb	r1, [r1, #30]
	ldrb.w	r0, [r0, #88]
	cmp	r1, #0
	it	ne
	movne	r1, #1
	cmp	r0, #11
	lsl.w	r0, r1, #3
	itt	ne
	addne	r0, r12
	addne	r0, #48
	adds	r0, #40
	add	sp, #4
	pop.w	{r8, r9, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB213_14:
	ldrb	r0, [r5]
	adds	r0, #9
	bic	r0, r0, #7
	adds	r0, #24
	add	sp, #4
	pop.w	{r8, r9, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB213_15:
	uxtb.w	r2, r9
	movs	r6, #8
	ldrd	r0, r1, [r0, #56]
	cmp	r2, #0
	eor	r0, r0, #1
	it	ne
	movne	r2, #1
	lsls	r3, r2, #3
	cmp.w	lr, #1
	it	eq
	addeq.w	r3, r6, r2, lsl #3
	orrs	r0, r1
	it	eq
	addeq	r3, #32
	add.w	r0, r3, #16
	add	sp, #4
	pop.w	{r8, r9, r11}
	pop	{r4, r5, r6, r7, pc}
.Lfunc_end213:
	.size	smoltcp::wire::icmpv6::Repr::buffer_len::h7ea189855c9c3b5a, .Lfunc_end213-smoltcp::wire::icmpv6::Repr::buffer_len::h7ea189855c9c3b5a
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp5iface8neighbor5Cache6lookup17hb727a98f0eba979dE,"ax",%progbits
	.p2align	1
	.type	smoltcp::iface::neighbor::Cache::lookup::hb727a98f0eba979d,%function
	.code	16
	.thumb_func
smoltcp::iface::neighbor::Cache::lookup::hb727a98f0eba979d:
.Lfunc_begin214:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#28
	sub	sp, #28
	ldrb.w	r11, [r1]
	mov	r4, r1
	mov	r10, r0
	cmp.w	r11, #1
	strd	r2, r3, [sp, #4]
	beq	.LBB214_14
	cmp.w	r11, #2
	bne	.LBB214_15
	ldr.w	r0, [r4, #1]
	uxtb	r1, r0
	cmp	r1, #255
	ldr.w	r1, [r4, #13]
	str	r1, [sp, #24]
	ldr.w	r1, [r4, #9]
	str	r1, [sp, #20]
	ldr.w	r1, [r4, #5]
	strd	r0, r1, [sp, #12]
	beq	.LBB214_15
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.7
	add	r0, sp, #12
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.7
	movs	r2, #16
	bl	memcmp
	cbz	r0, .LBB214_15
.LBB214_4:
	ldr.w	r0, [r10, #12]
	cmp	r0, #0
	beq.w	.LBB214_31
	and	r1, r11, #3
	ldr.w	r9, [r10, #8]
	cmp	r1, #1
	add.w	r8, r4, #1
	beq	.LBB214_16
	cmp	r1, #2
	bne	.LBB214_26
	movs	r4, #0
	mov	r5, r0
	b	.LBB214_10
.LBB214_8:
	adds	r4, r6, #1
	mov	r6, r5
.LBB214_9:
	subs	r0, r6, r4
	mov	r5, r6
	bls	.LBB214_31
.LBB214_10:
	add.w	r6, r4, r0, lsr #1
	add.w	r1, r6, r6, lsl #2
	ldrb.w	r2, [r9, r1, lsl #3]
	subs	r0, r2, #3
	it	ne
	addne.w	r0, r9, r1, lsl #3
	cmp	r2, #3
	beq	.LBB214_9
	ldrb	r1, [r0]
	cmp	r1, #2
	bne	.LBB214_8
	adds	r0, #1
	movs	r2, #16
	mov	r1, r8
	bl	memcmp
	cmp	r0, #0
	bmi	.LBB214_8
	bne	.LBB214_9
	b	.LBB214_24
.LBB214_14:
	ldr.w	r0, [r4, #1]
	adds	r1, r0, #1
	itttt	ne
	uxtbne	r0, r0
	cmpne	r0, #0
	andne	r0, r0, #240
	cmpne	r0, #224
	bne	.LBB214_4
.LBB214_15:
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.56
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.57
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.56
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.57
	movs	r1, #44
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB214_16:
	movs	r4, #0
	mov	r5, r0
	b	.LBB214_19
.LBB214_17:
	adds	r4, r6, #1
	mov	r6, r5
.LBB214_18:
	subs	r0, r6, r4
	mov	r5, r6
	bls	.LBB214_31
.LBB214_19:
	add.w	r6, r4, r0, lsr #1
	add.w	r1, r6, r6, lsl #2
	ldrb.w	r2, [r9, r1, lsl #3]
	subs	r0, r2, #3
	it	ne
	addne.w	r0, r9, r1, lsl #3
	cmp	r2, #3
	beq	.LBB214_18
	ldrb	r1, [r0]
	lsls	r2, r1, #30
	beq	.LBB214_17
	cmp	r1, #1
	bne	.LBB214_18
	adds	r0, #1
	movs	r2, #4
	mov	r1, r8
	bl	memcmp
	cmp	r0, #0
	bmi	.LBB214_17
	bne	.LBB214_18
.LBB214_24:
	add.w	r0, r6, r6, lsl #2
	ldr	r3, [sp, #4]
	add.w	r0, r9, r0, lsl #3
	ldrd	r1, r2, [r0, #24]
	subs	r1, r3, r1
	ldr	r1, [sp, #8]
	sbcs	r1, r2
	bge	.LBB214_31
	ldrh	r1, [r0, #36]
	ldr	r2, [r0, #32]
	movs	r0, #0
	b	.LBB214_32
.LBB214_26:
	movs	r1, #0
	mov	r2, r0
	b	.LBB214_28
.LBB214_27:
	mov	r2, r6
	subs	r0, r6, r1
	bls	.LBB214_31
.LBB214_28:
	add.w	r6, r1, r0, lsr #1
	add.w	r0, r6, r6, lsl #2
	ldrb.w	r0, [r9, r0, lsl #3]
	cmp	r0, #3
	beq	.LBB214_27
	cmp	r0, r11
	beq	.LBB214_24
	it	hs
	movhs	r2, r6
	cmp	r0, r11
	it	lo
	addlo	r1, r6, #1
	mov	r6, r2
	subs	r0, r6, r1
	bhi	.LBB214_28
.LBB214_31:
	ldrd	r0, r1, [r10]
	ldr	r2, [sp, #4]
	subs	r0, r2, r0
	ldr	r0, [sp, #8]
	sbcs	r0, r1
	mov.w	r0, #1
	it	lt
	movlt	r0, #2
.LBB214_32:
	lsls	r1, r1, #8
	orr.w	r1, r1, r2, lsr #24
	orr.w	r0, r0, r2, lsl #8
	add	sp, #28
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.Lfunc_end214:
	.size	smoltcp::iface::neighbor::Cache::lookup::hb727a98f0eba979d, .Lfunc_end214-smoltcp::iface::neighbor::Cache::lookup::hb727a98f0eba979d
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp5iface8neighbor5Cache4fill17hcfe9cbef821d0fb1E,"ax",%progbits
	.p2align	1
	.type	smoltcp::iface::neighbor::Cache::fill::hcfe9cbef821d0fb1,%function
	.code	16
	.thumb_func
smoltcp::iface::neighbor::Cache::fill::hcfe9cbef821d0fb1:
.Lfunc_begin215:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#220
	sub	sp, #220
	mov	r8, r2
	movw	r2, #34560
	mov	r5, r0
	ldr	r0, [r7, #8]
	movt	r2, #915
	add.w	r10, sp, #128
	mov	r9, r3
	ldr	r3, [r7, #12]
	adds	r4, r0, r2
	mov.w	r2, #17
	mov	r0, r10
	adc	r6, r3, #0
	add.w	r11, r5, #8
	bl	__aeabi_memcpy
	add	r0, sp, #56
	add	r3, sp, #176
	mov	r1, r11
	mov	r2, r10
	strd	r4, r6, [sp, #176]
	strh.w	r9, [sp, #188]
	str.w	r8, [sp, #184]
	bl	managed::map::ManagedMap<K,V>::insert::h42244055f886a865
	ldrd	r0, r1, [sp, #56]
	orrs	r0, r1
	beq.w	.LBB215_54
	ldr.w	r10, [r5, #12]
	add.w	r0, r10, r10, lsl #2
	lsls	r1, r0, #3
	beq.w	.LBB215_56
	ldr	r6, [r5, #8]
	mov	r3, r6
	ldrb	r1, [r3], #40
	cmp	r1, #3
	beq.w	.LBB215_55
	cmp.w	r10, #1
	add.w	lr, r6, r0, lsl #3
	str.w	lr, [sp, #28]
	bne	.LBB215_13
	add	r0, sp, #108
	strb.w	r1, [sp, #108]
	add.w	r9, r0, #1
	ldr.w	r0, [r6, #1]
	str.w	r0, [sp, #109]
	ldr.w	r0, [r6, #5]
	str.w	r0, [sp, #113]
	ldr.w	r0, [r6, #9]
	str.w	r0, [sp, #117]
	ldr.w	r0, [r6, #13]
	str.w	r0, [sp, #121]
	cmp	r1, #1
	beq.w	.LBB215_26
.LBB215_5:
	cmp	r1, #2
	bne.w	.LBB215_46
	movs	r4, #0
	mov	r0, r10
	mov	r5, r10
	b	.LBB215_9
.LBB215_7:
	add.w	r4, r8, #1
	mov	r8, r5
.LBB215_8:
	subs.w	r0, r8, r4
	mov	r5, r8
	bls.w	.LBB215_51
.LBB215_9:
	add.w	r8, r4, r0, lsr #1
	add.w	r1, r8, r8, lsl #2
	ldrb.w	r2, [r6, r1, lsl #3]
	subs	r0, r2, #3
	it	ne
	addne.w	r0, r6, r1, lsl #3
	cmp	r2, #3
	beq	.LBB215_8
	ldrb	r1, [r0]
	cmp	r1, #2
	bne	.LBB215_7
	adds	r0, #1
	movs	r2, #16
	mov	r1, r9
	bl	memcmp
	cmp	r0, #0
	bmi	.LBB215_7
	bne	.LBB215_8
	b	.LBB215_34
.LBB215_13:
	ldrd	r1, r2, [r6, #24]
	mov	r0, r6
.LBB215_14:
	ldrb	r5, [r3]
	cmp	r5, #3
	beq.w	.LBB215_55
	ldrd	r12, r4, [r3, #24]
	subs.w	r5, r12, r1
	sbcs.w	r5, r4, r2
	mov.w	r5, #0
	it	lt
	movlt	r5, #1
	cmp	r5, #0
	itt	ne
	movne	r0, r3
	movne	r2, r4
	add.w	r3, r3, #40
	it	ne
	movne	r1, r12
	cmp	r3, lr
	beq	.LBB215_22
	ldrb	r5, [r3]
	cmp	r5, #3
	beq.w	.LBB215_55
	ldrd	r12, r4, [r3, #24]
	subs.w	r5, r12, r1
	sbcs.w	r5, r4, r2
	mov.w	r5, #0
	it	lt
	movlt	r5, #1
	cmp	r5, #0
	itt	ne
	movne	r0, r3
	movne	r2, r4
	add.w	r3, r3, #40
	it	ne
	movne	r1, r12
	cmp	r3, lr
	beq	.LBB215_22
	ldrb	r5, [r3]
	cmp	r5, #3
	beq.w	.LBB215_55
	ldrd	r12, r4, [r3, #24]
	subs.w	r5, r12, r1
	sbcs.w	r5, r4, r2
	mov.w	r5, #0
	it	lt
	movlt	r5, #1
	cmp	r5, #0
	itt	ne
	movne	r0, r3
	movne	r2, r4
	add.w	r3, r3, #40
	it	ne
	movne	r1, r12
	cmp	r3, lr
	beq	.LBB215_22
	ldrb	r5, [r3]
	cmp	r5, #3
	beq.w	.LBB215_55
	ldrd	r12, r4, [r3, #24]
	subs.w	r5, r12, r1
	sbcs.w	r5, r4, r2
	mov.w	r5, #0
	it	lt
	movlt	r5, #1
	cmp	r5, #0
	itt	ne
	movne	r0, r3
	movne	r2, r4
	add.w	r3, r3, #40
	it	ne
	movne	r1, r12
	cmp	r3, lr
	bne	.LBB215_14
.LBB215_22:
	cmp	r0, #0
	beq.w	.LBB215_56
	ldrb	r1, [r0]
	cmp	r1, #3
	beq.w	.LBB215_60
	ldr.w	r2, [r0, #1]
	cmp.w	r10, #0
	strb.w	r1, [sp, #108]
	ldr.w	r3, [r0, #5]
	str.w	r2, [sp, #109]
	ldr.w	r2, [r0, #9]
	str.w	r3, [sp, #113]
	ldr.w	r0, [r0, #13]
	str.w	r2, [sp, #117]
	str.w	r0, [sp, #121]
	beq.w	.LBB215_51
	add	r0, sp, #108
	add.w	r9, r0, #1
	cmp	r1, #1
	bne.w	.LBB215_5
.LBB215_26:
	movs	r4, #0
	mov	r0, r10
	mov	r5, r10
	b	.LBB215_29
.LBB215_27:
	add.w	r4, r8, #1
	mov	r8, r5
.LBB215_28:
	subs.w	r0, r8, r4
	mov	r5, r8
	bls.w	.LBB215_51
.LBB215_29:
	add.w	r8, r4, r0, lsr #1
	add.w	r1, r8, r8, lsl #2
	ldrb.w	r2, [r6, r1, lsl #3]
	subs	r0, r2, #3
	it	ne
	addne.w	r0, r6, r1, lsl #3
	cmp	r2, #3
	beq	.LBB215_28
	ldrb	r1, [r0]
	lsls	r2, r1, #30
	beq	.LBB215_27
	cmp	r1, #1
	bne	.LBB215_28
	adds	r0, #1
	movs	r2, #4
	mov	r1, r9
	bl	memcmp
	cmp	r0, #0
	bmi	.LBB215_27
	bne	.LBB215_28
.LBB215_34:
	add.w	r0, r8, r8, lsl #2
	str.w	r11, [sp, #12]
	add.w	r1, r6, r0, lsl #3
	ldrb.w	r4, [r6, r0, lsl #3]
	mov	r0, r1
	mov	r6, r1
	movs	r1, #3
	strb	r1, [r0], #1
	movs	r1, #39
	bl	__aeabi_memclr
	cmp	r4, #3
	beq.w	.LBB215_57
	subs.w	r5, r10, r8
	beq.w	.LBB215_58
	subs	r3, r5, #1
	add	r0, sp, #56
	add.w	r1, r0, #8
	str	r1, [sp, #4]
	add.w	r0, r0, #32
	str	r0, [sp, #8]
	beq.w	.LBB215_53
	ldr	r0, [r6]
	str	r0, [sp, #48]
	ldr	r0, [r6, #4]
	str	r0, [sp, #44]
	ldr	r0, [r6, #8]
	str	r0, [sp, #24]
	ldr	r0, [r6, #12]
	str	r0, [sp, #32]
	add.w	r0, r3, r3, lsl #2
	mov	r11, r6
	ldrd	lr, r9, [r6, #16]
	ldrd	r4, r12, [r6, #24]
	ldr	r10, [r11, #32]!
	mov	r1, r6
	add.w	r6, r6, r0, lsl #3
	ldr.w	r2, [r11, #4]
	str	r2, [sp, #20]
	ldr.w	r8, [r1, r0, lsl #3]
	ldr	r2, [sp, #48]
	str.w	r2, [r1, r0, lsl #3]
	ldr	r0, [r6, #24]
	str	r0, [sp, #48]
	ldr	r0, [r6, #8]
	str	r0, [sp, #40]
	ldr	r0, [sp, #24]
	str	r0, [r6, #8]
	ldr	r0, [sp, #32]
	str.w	r8, [sp, #52]
	str	r4, [r6, #24]
	ldr	r4, [r6, #28]
	str	r3, [sp, #36]
	ldr	r3, [r6, #16]
	str.w	lr, [r6, #16]
	ldr.w	lr, [r6, #20]
	str.w	r12, [r6, #28]
	ldr.w	r12, [r6, #4]
	str.w	r9, [r6, #20]
	ldr.w	r9, [r6, #12]
	str	r0, [r6, #12]
	ldr	r0, [sp, #44]
	subs	r5, #2
	ldr.w	r8, [r6, #36]
	str	r0, [r6, #4]
	ldr	r2, [r6, #32]
	str	r2, [sp, #44]
	ldr	r0, [sp, #20]
	str.w	r10, [r6, #32]
	str	r0, [r6, #36]
	beq.w	.LBB215_52
	str	r1, [sp, #32]
	ldr	r1, [sp, #28]
	sub.w	r10, r1, #80
	ldr	r2, [sp, #36]
	str.w	r11, [sp, #20]
.LBB215_39:
	ldr	r1, [sp, #44]
	mov	r6, r8
	mov	r0, r3
	cmp	r5, r2
	ldrd	r3, r8, [r10, #32]
	strd	r1, r6, [r10, #32]
	mov	r1, r12
	ldr.w	r12, [sp, #52]
	str	r3, [sp, #44]
	mov	r11, r4
	ldr	r4, [sp, #48]
	mov	r6, lr
	mov	r3, r9
	ldr.w	r9, [sp, #40]
	it	lo
	movlo	r2, r5
	ldr.w	lr, [r10]
	str.w	r12, [r10]
	ldr.w	r12, [r10, #4]
	str.w	r1, [r10, #4]
	ldr.w	r1, [r10, #8]
	str.w	lr, [sp, #52]
	str	r1, [sp, #40]
	ldr.w	lr, [r10, #20]
	str.w	r9, [r10, #8]
	ldr.w	r9, [r10, #12]
	str.w	r3, [r10, #12]
	ldr.w	r3, [r10, #16]
	str.w	r0, [r10, #16]
	ldr.w	r1, [r10, #24]
	str.w	r6, [r10, #20]
	subs	r5, #1
	str.w	r4, [r10, #24]
	ldr.w	r4, [r10, #28]
	str.w	r11, [r10, #28]
	sub.w	r10, r10, #40
	str	r1, [sp, #48]
	bne	.LBB215_39
	ldr	r6, [sp, #32]
	ldr	r1, [sp, #52]
	ldr	r0, [sp, #40]
	cmp	r2, #2
	strd	r0, r9, [r6, #8]
	ldr	r0, [sp, #48]
	strd	r0, r4, [r6, #24]
	ldr	r0, [sp, #20]
	strd	r1, r12, [r6]
	ldr	r1, [sp, #44]
	strd	r1, r8, [r0]
	ldr	r1, [sp, #36]
	strd	r3, lr, [r6, #16]
	blo.w	.LBB215_53
	movs	r3, #1
.LBB215_42:
	add.w	r0, r3, r3, lsl #2
	str	r2, [sp, #24]
	add.w	r9, r3, r1
	str	r3, [sp, #28]
	add.w	r5, r6, r0, lsl #3
	ldr.w	r0, [r6, r0, lsl #3]
	str	r0, [sp, #52]
	ldrd	r4, r0, [r5, #4]
	str	r0, [sp, #48]
	ldr	r0, [r5, #12]
	str	r0, [sp, #44]
	ldr	r0, [r5, #16]
	str	r0, [sp, #40]
	mov	r0, r5
	ldrd	r2, r11, [r5, #20]
	ldr.w	r8, [r5, #28]
	ldr	lr, [r0, #32]!
	strd	r0, r5, [sp, #16]
	ldr.w	r10, [r5, #36]
	mov	r5, r4
.LBB215_43:
	add.w	r0, r9, r9, lsl #2
	ldr	r1, [sp, #52]
	mov	r12, r9
	mov	r9, r10
	add.w	r4, r6, r0, lsl #3
	ldr.w	r3, [r6, r0, lsl #3]
	str.w	r1, [r6, r0, lsl #3]
	ldr	r1, [sp, #48]
	str	r3, [sp, #52]
	mov	r3, r5
	ldr	r5, [r4, #8]
	str	r1, [r4, #8]
	ldr	r1, [r4, #12]
	mov	r10, lr
	mov	lr, r8
	mov	r8, r11
	mov	r6, r2
	str	r5, [sp, #48]
	ldrd	r2, r0, [sp, #40]
	str	r1, [sp, #44]
	ldr	r1, [sp, #36]
	str	r0, [r4, #12]
	ldr	r5, [r4, #4]
	ldr	r0, [r4, #16]
	str	r2, [r4, #16]
	ldr	r2, [r4, #20]
	str	r6, [r4, #20]
	ldr	r6, [sp, #32]
	ldr.w	r11, [r4, #24]
	str.w	r8, [r4, #24]
	ldr.w	r8, [r4, #28]
	str.w	lr, [r4, #28]
	ldr.w	lr, [r4, #32]
	str.w	r10, [r4, #32]
	cmp.w	r12, #0
	ldr.w	r10, [r4, #36]
	str.w	r9, [r4, #36]
	mov	r9, r1
	str	r3, [r4, #4]
	str	r0, [sp, #40]
	beq	.LBB215_43
	sub.w	r9, r12, #1
	ldr	r0, [sp, #28]
	cmp	r9, r0
	bne	.LBB215_43
	ldr	r0, [sp, #20]
	ldr	r3, [sp, #52]
	strd	r3, r5, [r0]
	ldr	r3, [sp, #48]
	str	r3, [r0, #8]
	ldr	r3, [sp, #44]
	str	r3, [r0, #12]
	ldr	r3, [sp, #40]
	strd	r3, r2, [r0, #16]
	ldr	r3, [sp, #28]
	ldr	r2, [sp, #24]
	adds	r3, #1
	strd	r11, r8, [r0, #24]
	ldr	r0, [sp, #16]
	cmp	r3, r2
	strd	lr, r10, [r0]
	bne	.LBB215_42
	b	.LBB215_53
.LBB215_46:
	movs	r0, #0
	mov	r3, r10
	mov	r2, r10
	b	.LBB215_48
.LBB215_47:
	mov	r2, r8
	subs.w	r3, r8, r0
	bls	.LBB215_51
.LBB215_48:
	add.w	r8, r0, r3, lsr #1
	add.w	r3, r8, r8, lsl #2
	ldrb.w	r3, [r6, r3, lsl #3]
	cmp	r3, #3
	beq	.LBB215_47
	cmp	r3, r1
	beq.w	.LBB215_34
	it	hs
	movhs	r2, r8
	cmp	r3, r1
	it	lo
	addlo.w	r0, r8, #1
	mov	r8, r2
	subs.w	r3, r8, r0
	bhi	.LBB215_48
.LBB215_51:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.53
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.53
	movs	r1, #43
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB215_52:
	ldr	r0, [sp, #40]
	ldr	r2, [sp, #52]
	strd	r0, r9, [r1, #8]
	ldr	r0, [sp, #48]
	strd	r2, r12, [r1]
	strd	r3, lr, [r1, #16]
	strd	r0, r4, [r1, #24]
	ldr	r0, [sp, #44]
	strd	r0, r8, [r11]
.LBB215_53:
	add	r2, sp, #176
	ldr	r4, [sp, #4]
	mov	r0, r2
	ldm	r4!, {r1, r3, r5, r6}
	stm	r0!, {r1, r3, r5, r6}
	ldrb	r1, [r4]
	add	r3, sp, #200
	strb	r1, [r0]
	ldr	r1, [sp, #8]
	ldr	r0, [r1, #12]
	str	r0, [sp, #212]
	ldr	r0, [r1, #8]
	str	r0, [sp, #208]
	ldr	r0, [r1, #4]
	str	r0, [sp, #204]
	ldr	r0, [r1]
	str	r0, [sp, #200]
	add	r0, sp, #128
	ldr	r1, [sp, #12]
	bl	managed::map::ManagedMap<K,V>::insert::h42244055f886a865
	add	r3, sp, #128
	ldm	r3, {r0, r1, r2, r3}
	orrs	r1, r3
	orrs	r0, r2
	orrs	r0, r1
	bne	.LBB215_59
.LBB215_54:
	add	sp, #220
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB215_55:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.55
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.55
	movs	r1, #43
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB215_56:
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.49
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.51
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.49
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.51
	movs	r1, #28
	bl	core::option::expect_failed::h22026eb39ea9589c
	.inst.n	0xdefe
.LBB215_57:
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.26
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.31
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.26
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.31
	movs	r1, #16
	bl	core::option::expect_failed::h22026eb39ea9589c
	.inst.n	0xdefe
.LBB215_58:
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1219
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1220
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1219
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1220
	movs	r1, #35
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB215_59:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.5
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.54
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.5
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.54
	movs	r1, #40
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB215_60:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.52
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.52
	movs	r1, #43
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.Lfunc_end215:
	.size	smoltcp::iface::neighbor::Cache::fill::hcfe9cbef821d0fb1, .Lfunc_end215-smoltcp::iface::neighbor::Cache::fill::hcfe9cbef821d0fb1
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN7managed3map23ManagedMap$LT$K$C$V$GT$6insert17h42244055f886a865E","ax",%progbits
	.p2align	1
	.type	managed::map::ManagedMap<K,V>::insert::h42244055f886a865,%function
	.code	16
	.thumb_func
managed::map::ManagedMap<K,V>::insert::h42244055f886a865:
.Lfunc_begin216:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#188
	sub	sp, #188
	mov	r4, sp
	bfc	r4, #0, #5
	mov	sp, r4
	ldr	r4, [r1, #4]
	mov	r10, r3
	mov	r3, r2
	mov	r8, r0
	cbz	r4, .LBB216_10
	mov	r11, r3
	ldr	r5, [r1]
	mov.w	r9, #0
	mov	r1, r4
	ldrb	r0, [r11], #1
	str	r4, [sp, #36]
	strd	r8, r3, [sp, #28]
	cmp	r0, #1
	beq	.LBB216_11
	cmp	r0, #2
	bne.w	.LBB216_21
	mov	r0, r4
	b	.LBB216_6
.LBB216_4:
	add.w	r9, r8, #1
	mov	r8, r4
.LBB216_5:
	subs.w	r0, r8, r9
	mov	r4, r8
	bls.w	.LBB216_26
.LBB216_6:
	add.w	r8, r9, r0, lsr #1
	add.w	r1, r8, r8, lsl #2
	ldrb.w	r2, [r5, r1, lsl #3]
	subs	r0, r2, #3
	it	ne
	addne.w	r0, r5, r1, lsl #3
	cmp	r2, #3
	beq	.LBB216_5
	ldrb	r1, [r0]
	cmp	r1, #2
	bne	.LBB216_4
	adds	r0, #1
	movs	r2, #16
	mov	r1, r11
	bl	memcmp
	cmp	r0, #0
	bmi	.LBB216_4
	bne	.LBB216_5
	b	.LBB216_19
.LBB216_10:
	add	r4, sp, #128
	movs	r2, #17
	mov	r0, r4
	mov	r1, r3
	bl	__aeabi_memcpy
	ldrd	r0, r1, [r10]
	str	r0, [sp, #152]
	ldr.w	r0, [r10, #8]
	str	r1, [sp, #156]
	ldr.w	r1, [r10, #12]
	strd	r0, r1, [sp, #160]
	add.w	r0, r8, #8
	ldm	r4!, {r1, r2, r3, r5, r6}
	stm	r0!, {r1, r2, r3, r5, r6}
	ldm.w	r4, {r1, r2, r3, r5, r6}
	stm	r0!, {r1, r2, r3, r5, r6}
	movs	r0, #0
	movs	r1, #1
	strd	r1, r0, [r8]
	sub.w	r4, r7, #28
	mov	sp, r4
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB216_11:
	mov	r0, r4
	b	.LBB216_14
.LBB216_12:
	add.w	r9, r8, #1
	mov	r8, r4
.LBB216_13:
	subs.w	r0, r8, r9
	mov	r4, r8
	bls	.LBB216_26
.LBB216_14:
	add.w	r8, r9, r0, lsr #1
	add.w	r1, r8, r8, lsl #2
	ldrb.w	r2, [r5, r1, lsl #3]
	subs	r0, r2, #3
	it	ne
	addne.w	r0, r5, r1, lsl #3
	cmp	r2, #3
	beq	.LBB216_13
	ldrb	r1, [r0]
	lsls	r2, r1, #30
	beq	.LBB216_12
	cmp	r1, #1
	bne	.LBB216_13
	adds	r0, #1
	movs	r2, #4
	mov	r1, r11
	bl	memcmp
	cmp	r0, #0
	bmi	.LBB216_12
	bne	.LBB216_13
.LBB216_19:
	add	r0, sp, #128
	movs	r2, #17
	ldr	r1, [sp, #32]
	bl	__aeabi_memcpy
	add.w	r0, r8, r8, lsl #2
	ldr	r2, [sp, #128]
	ldr.w	r1, [r10]
	add.w	r6, r5, r0, lsl #3
	ldr.w	r3, [r5, r0, lsl #3]
	str.w	r2, [r5, r0, lsl #3]
	ldrd	r2, r5, [r10, #4]
	ldr	r0, [r6, #24]
	str	r1, [r6, #24]
	ldr	r1, [r6, #28]
	str	r2, [r6, #28]
	ldr	r2, [sp, #144]
	str	r2, [r6, #16]
	ldr	r2, [sp, #148]
	str	r2, [r6, #20]
	ldr	r2, [sp, #136]
	str	r2, [r6, #8]
	ldr	r2, [sp, #140]
	str	r2, [r6, #12]
	ldr	r2, [sp, #132]
	str	r2, [r6, #4]
	uxtb	r3, r3
	ldr	r2, [r6, #32]
	cmp	r3, #3
	ldr	r3, [r6, #36]
	str	r5, [r6, #32]
	ldr.w	r5, [r10, #12]
	str	r5, [r6, #36]
	beq.w	.LBB216_52
	ldr	r4, [sp, #28]
	movs	r6, #0
	add.w	r12, r4, #16
	movs	r5, #1
	strd	r6, r6, [r4]
	strd	r5, r6, [r4, #8]
	stm.w	r12, {r0, r1, r2, r3}
	sub.w	r4, r7, #28
	mov	sp, r4
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB216_21:
	mov	r2, r4
	mov	r1, r4
	b	.LBB216_23
.LBB216_22:
	mov	r1, r8
	subs.w	r2, r8, r9
	bls	.LBB216_26
.LBB216_23:
	add.w	r8, r9, r2, lsr #1
	add.w	r2, r8, r8, lsl #2
	ldrb.w	r2, [r5, r2, lsl #3]
	cmp	r2, #3
	beq	.LBB216_22
	cmp	r2, r0
	beq	.LBB216_19
	it	hs
	movhs	r1, r8
	cmp	r2, r0
	it	lo
	addlo.w	r9, r8, #1
	mov	r8, r1
	subs.w	r2, r8, r9
	bhi	.LBB216_23
.LBB216_26:
	ldr	r1, [sp, #36]
	add.w	r0, r1, r1, lsl #2
	add.w	r0, r5, r0, lsl #3
	ldrb	r0, [r0, #-40]
	cmp	r0, #3
	bne	.LBB216_37
	cmp	r1, r9
	blo.w	.LBB216_49
	mvn.w	r0, r9
	str.w	r10, [sp, #12]
	adds	r2, r1, r0
	sub.w	r0, r1, r9
	cmp	r0, r2
	blo.w	.LBB216_50
	add.w	r1, r9, r9, lsl #2
	cmp	r2, #0
	str.w	r9, [sp, #24]
	strd	r1, r5, [sp, #16]
	add.w	r1, r5, r1, lsl #3
	str	r1, [sp, #56]
	beq.w	.LBB216_45
	subs	r0, r0, r2
	str	r0, [sp, #60]
	beq.w	.LBB216_45
	ldr	r3, [sp, #56]
	str	r2, [sp, #76]
	ldr	r1, [sp, #24]
	adds	r6, r3, #4
	ldr	r0, [r3]
	str	r0, [sp, #84]
	mov	r0, r3
	add.w	r11, r3, #16
	ldm	r6, {r4, r5, r6}
	ldr	r12, [r0, #32]!
	str	r0, [sp, #52]
	ldr	r0, [sp, #36]
	ldr.w	r8, [r3, #28]
	subs	r0, r1, r0
	ldr.w	lr, [r3, #36]
	adds	r0, #1
	str	r0, [sp, #64]
	ldr	r0, [sp, #60]
	str	r0, [sp, #48]
	ldm.w	r11, {r2, r10, r11}
	mov	r3, r0
	mov	r1, r0
.LBB216_32:
	add.w	r0, r3, r3, lsl #2
	ldr	r1, [sp, #56]
	str	r4, [sp, #80]
	add.w	r0, r1, r0, lsl #3
	strd	r3, r5, [sp, #68]
.LBB216_33:
	mov	r5, lr
	mov	r4, r12
	ldrd	r12, lr, [r0, #32]
	strd	r4, r5, [r0, #32]
	mov	r3, r2
	mov	r2, r6
	ldr	r6, [sp, #72]
	ldr	r4, [r0]
	ldrd	r5, r1, [sp, #80]
	mov	r9, r8
	mov	r8, r11
	mov	r11, r10
	str	r4, [sp, #84]
	str	r1, [r0]
	ldr	r4, [r0, #4]
	str	r5, [r0, #4]
	ldr	r5, [r0, #8]
	str	r6, [r0, #8]
	ldr	r6, [r0, #12]
	str	r2, [r0, #12]
	ldr	r2, [r0, #16]
	str	r3, [r0, #16]
	ldr	r1, [sp, #76]
	ldr	r3, [sp, #68]
	ldr.w	r10, [r0, #20]
	str.w	r11, [r0, #20]
	ldr.w	r11, [r0, #24]
	str.w	r8, [r0, #24]
	cmp	r3, r1
	ldr.w	r8, [r0, #28]
	str.w	r9, [r0, #28]
	bhs	.LBB216_35
	ldr	r1, [sp, #60]
	str	r5, [sp, #72]
	str	r4, [sp, #80]
	add	r3, r1
	str	r3, [sp, #68]
	adds	r0, #40
	b	.LBB216_33
.LBB216_35:
	ldr	r0, [sp, #64]
	adds	r3, r3, r0
	beq	.LBB216_38
	ldr	r0, [sp, #48]
	cmp	r3, r0
	it	lo
	movlo	r0, r3
	str	r0, [sp, #48]
	b	.LBB216_32
.LBB216_37:
	add	r4, sp, #128
	movs	r2, #17
	mov	r0, r4
	ldr	r1, [sp, #32]
	bl	__aeabi_memcpy
	ldrd	r0, r1, [r10]
	str	r0, [sp, #152]
	ldr.w	r0, [r10, #8]
	ldr.w	r12, [sp, #28]
	str	r1, [sp, #156]
	ldr.w	r1, [r10, #12]
	strd	r0, r1, [sp, #160]
	add.w	r0, r12, #8
	ldm	r4!, {r1, r2, r3, r5, r6}
	stm	r0!, {r1, r2, r3, r5, r6}
	ldm.w	r4, {r1, r2, r3, r5, r6}
	stm	r0!, {r1, r2, r3, r5, r6}
	movs	r0, #0
	movs	r1, #1
	strd	r1, r0, [r12]
	sub.w	r4, r7, #28
	mov	sp, r4
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB216_38:
	ldr	r0, [sp, #56]
	ldr	r1, [sp, #84]
	stm.w	r0, {r1, r4, r5, r6}
	add.w	r1, r0, #16
	str.w	r8, [r0, #28]
	ldr	r0, [sp, #48]
	cmp	r0, #2
	ldr	r0, [sp, #52]
	stm.w	r1, {r2, r10, r11}
	strd	r12, lr, [r0]
	blo	.LBB216_45
	movs	r3, #1
.LBB216_40:
	add.w	r0, r3, r3, lsl #2
	ldr	r1, [sp, #56]
	str	r3, [sp, #52]
	add.w	r2, r1, r0, lsl #3
	ldr.w	r10, [r1, r0, lsl #3]
	mov	r12, r2
	ldrd	r5, r0, [r2, #12]
	str	r0, [sp, #84]
	ldr	r0, [r2, #20]
	ldr	r1, [r12, #32]!
	str	r0, [sp, #80]
	ldrd	r6, r4, [r2, #4]
	ldr.w	r11, [r2, #24]
	ldr	r0, [r2, #28]
	strd	r12, r2, [sp, #40]
	ldr.w	r12, [r2, #36]
	ldr	r2, [sp, #60]
	add	r2, r3
	b	.LBB216_42
.LBB216_41:
	ldr	r3, [sp, #60]
	ldr	r4, [sp, #72]
	add	r2, r3
	mov	r6, r5
	ldrd	r11, r5, [sp, #64]
.LBB216_42:
	add.w	lr, r2, r2, lsl #2
	ldr	r3, [sp, #56]
	mov	r9, r10
	add.w	r8, r3, lr, lsl #3
	ldr.w	r10, [r3, lr, lsl #3]
	str.w	r9, [r3, lr, lsl #3]
	mov	lr, r12
	mov	r12, r1
	mov	r9, r0
	ldrd	r1, r0, [sp, #80]
	mov	r3, r5
	ldr.w	r5, [r8, #8]
	str	r5, [sp, #72]
	ldr.w	r5, [r8, #12]
	str.w	r3, [r8, #12]
	ldr.w	r3, [r8, #16]
	str.w	r0, [r8, #16]
	ldr.w	r0, [r8, #20]
	str.w	r4, [r8, #8]
	ldr	r4, [sp, #76]
	str	r0, [sp, #80]
	ldr.w	r0, [r8, #24]
	str	r5, [sp, #68]
	ldr.w	r5, [r8, #4]
	str.w	r1, [r8, #20]
	ldr.w	r1, [r8, #32]
	str	r0, [sp, #64]
	ldr.w	r0, [r8, #28]
	str.w	r12, [r8, #32]
	cmp	r2, r4
	ldr.w	r12, [r8, #36]
	str.w	r6, [r8, #4]
	str	r3, [sp, #84]
	str.w	r11, [r8, #24]
	str.w	r9, [r8, #28]
	str.w	lr, [r8, #36]
	blo	.LBB216_41
	subs	r2, r2, r4
	ldr	r3, [sp, #52]
	cmp	r2, r3
	ldr	r4, [sp, #72]
	mov	r6, r5
	ldrd	r11, r5, [sp, #64]
	bne	.LBB216_42
	ldr	r2, [sp, #44]
	ldr	r3, [sp, #84]
	str	r3, [r2, #16]
	ldr	r3, [sp, #80]
	str	r3, [r2, #20]
	ldr	r3, [sp, #52]
	adds	r3, #1
	strd	r11, r0, [r2, #24]
	ldr	r0, [sp, #48]
	cmp	r3, r0
	ldr	r0, [sp, #40]
	strd	r10, r6, [r2]
	strd	r4, r5, [r2, #8]
	strd	r1, r12, [r0]
	bne	.LBB216_40
.LBB216_45:
	ldr	r1, [sp, #36]
	ldr	r0, [sp, #24]
	cmp	r1, r0
	bls	.LBB216_48
	ldrd	r1, r0, [sp, #16]
	ldrb.w	r0, [r0, r1, lsl #3]
	cmp	r0, #3
	bne	.LBB216_51
	add.w	r8, sp, #128
	movs	r2, #17
	mov	r0, r8
	ldr	r1, [sp, #32]
	bl	__aeabi_memcpy
	ldr	r2, [sp, #12]
	ldrd	r0, r1, [r2]
	str	r0, [sp, #152]
	ldr	r0, [r2, #8]
	strd	r1, r0, [sp, #156]
	add	r0, sp, #88
	ldr	r1, [r2, #12]
	str	r1, [sp, #164]
	mov	r1, r0
	ldm.w	r8!, {r2, r3, r4, r5, r6}
	stm	r1!, {r2, r3, r4, r5, r6}
	ldm.w	r8, {r2, r3, r4, r5, r6}
	stm	r1!, {r2, r3, r4, r5, r6}
	ldr	r4, [sp, #56]
	ldm	r0!, {r1, r2, r3, r5, r6}
	stm	r4!, {r1, r2, r3, r5, r6}
	ldm.w	r0, {r1, r2, r3, r5, r6}
	stm	r4!, {r1, r2, r3, r5, r6}
	ldr	r1, [sp, #28]
	movs	r0, #0
	strd	r0, r0, [r1]
	strd	r0, r0, [r1, #8]
	sub.w	r4, r7, #28
	mov	sp, r4
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB216_48:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.25
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.25
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB216_49:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.24
	mov	r0, r9
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.24
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB216_50:
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1219
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1220
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1219
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1220
	movs	r1, #35
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB216_51:
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.26
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.27
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.26
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.27
	movs	r1, #16
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB216_52:
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.26
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.29
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.26
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.29
	movs	r1, #16
	bl	core::option::expect_failed::h22026eb39ea9589c
	.inst.n	0xdefe
.Lfunc_end216:
	.size	managed::map::ManagedMap<K,V>::insert::h42244055f886a865, .Lfunc_end216-managed::map::ManagedMap<K,V>::insert::h42244055f886a865
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN7smoltcp7storage13packet_buffer21PacketBuffer$LT$H$GT$7enqueue17hfba5cf974555267fE","ax",%progbits
	.p2align	1
	.type	smoltcp::storage::packet_buffer::PacketBuffer<H>::enqueue::hfba5cf974555267f,%function
	.code	16
	.thumb_func
smoltcp::storage::packet_buffer::PacketBuffer<H>::enqueue::hfba5cf974555267f:
.Lfunc_begin217:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#4
	sub	sp, #4
	ldr	r4, [r1, #20]
	mov	r8, r0
	cmp	r4, r2
	bhs	.LBB217_2
	movs	r0, #4
	b	.LBB217_20
.LBB217_2:
	ldr.w	lr, [r1, #4]
	mov	r5, r1
	ldr.w	r12, [r1, #12]
	cmp	lr, r12
	beq	.LBB217_19
	ldr.w	r9, [r5, #28]
	mov	r6, r2
	sub.w	r10, r4, r9
	cbz	r4, .LBB217_5
	ldr	r0, [r5, #24]
	add	r0, r9
	udiv	r1, r0, r4
	mls	r0, r1, r4, r0
	b	.LBB217_6
.LBB217_5:
	movs	r0, #0
.LBB217_6:
	subs	r2, r4, r0
	cmp	r10, r2
	it	ls
	movls	r2, r10
	cmp	r10, r6
	blo	.LBB217_19
	cmp	r2, r6
	bhs	.LBB217_18
	sub.w	r0, r10, r2
	cmp	r0, r6
	blo	.LBB217_19
	cmp.w	lr, #0
	beq.w	.LBB217_30
	ldr	r0, [r5, #8]
	cmp.w	r9, #0
	add	r0, r12
	ldr.w	r11, [r5]
	udiv	r1, r0, lr
	mls	r0, r1, lr, r0
	add.w	r12, r12, #1
	str.w	r12, [r5, #12]
	add.w	r0, r0, r0, lsl #1
	add.w	r1, r11, r0, lsl #3
	str.w	r2, [r11, r0, lsl #3]
	mov.w	r11, #0
	mov.w	r0, #3
	strh.w	r11, [r1, #4]
	strb	r0, [r1, #6]
	str.w	r11, [r1, #7]
	str.w	r11, [r1, #11]
	str.w	r11, [r1, #15]
	str.w	r11, [r1, #19]
	strb.w	r11, [r1, #23]
	beq	.LBB217_12
	ldr.w	r11, [r5, #24]
	b	.LBB217_13
.LBB217_12:
	str.w	r11, [r5, #24]
.LBB217_13:
	cbz	r4, .LBB217_16
	add.w	r0, r11, r9
	udiv	r1, r0, r4
	mls	r0, r1, r4, r0
	subs	r1, r4, r0
	cmp	r10, r1
	it	hi
	movhi	r10, r1
	adds.w	r1, r10, r0
	bhs	.LBB217_31
	cmp	r1, r4
	bls	.LBB217_17
	b	.LBB217_32
.LBB217_16:
	mov.w	r10, #0
.LBB217_17:
	cmp	r10, r2
	it	lo
	movlo	r2, r10
	add	r9, r2
	str.w	r9, [r5, #28]
.LBB217_18:
	cmp	lr, r12
	bne	.LBB217_21
.LBB217_19:
	movs	r0, #0
.LBB217_20:
	strb.w	r0, [r8, #1]
	movs	r0, #1
	strb.w	r0, [r8]
	add	sp, #4
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB217_21:
	cmp.w	lr, #0
	beq	.LBB217_30
	ldr	r0, [r5, #8]
	movs	r2, #20
	add	r0, r12
	udiv	r1, r0, lr
	mls	r0, r1, lr, r0
	ldr	r1, [r5]
	add.w	r0, r0, r0, lsl #1
	add.w	r0, r1, r0, lsl #3
	add.w	r1, r12, #1
	str	r1, [r5, #12]
	mov	r1, r3
	str	r6, [r0], #4
	bl	__aeabi_memcpy
	cmp.w	r9, #0
	beq	.LBB217_25
	ldr	r0, [r5, #24]
	cbz	r4, .LBB217_26
.LBB217_24:
	add	r0, r9
	udiv	r1, r0, r4
	mls	r0, r1, r4, r0
	b	.LBB217_27
.LBB217_25:
	movs	r0, #0
	str	r0, [r5, #24]
	cmp	r4, #0
	bne	.LBB217_24
.LBB217_26:
	movs	r0, #0
.LBB217_27:
	sub.w	r2, r4, r9
	subs	r1, r4, r0
	cmp	r2, r1
	it	hi
	movhi	r2, r1
	adds	r1, r2, r0
	bhs	.LBB217_31
	cmp	r1, r4
	bhi	.LBB217_32
	ldr	r1, [r5, #16]
	cmp	r2, r6
	add	r0, r1
	it	lo
	movlo	r6, r2
	add.w	r2, r6, r9
	str	r2, [r5, #28]
	strd	r0, r6, [r8, #4]
	movs	r0, #0
	strb.w	r0, [r8]
	add	sp, #4
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB217_30:
	movw	r0, :lower16:str.0.1011
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.126
	movt	r0, :upper16:str.0.1011
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.126
	movs	r1, #57
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB217_31:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.128
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.128
	bl	core::slice::index::slice_index_order_fail::h8a53f055fb6ee074
	.inst.n	0xdefe
.LBB217_32:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.128
	mov	r0, r1
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.128
	mov	r1, r4
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.Lfunc_end217:
	.size	smoltcp::storage::packet_buffer::PacketBuffer<H>::enqueue::hfba5cf974555267f, .Lfunc_end217-smoltcp::storage::packet_buffer::PacketBuffer<H>::enqueue::hfba5cf974555267f
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp5iface9interface14InterfaceInner12icmpv4_reply17haf1573f8e2fbb5a4E,"ax",%progbits
	.p2align	1
	.type	smoltcp::iface::interface::InterfaceInner::icmpv4_reply::haf1573f8e2fbb5a4,%function
	.code	16
	.thumb_func
smoltcp::iface::interface::InterfaceInner::icmpv4_reply::haf1573f8e2fbb5a4:
.Lfunc_begin218:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10}
	push.w	{r8, r9, r10}
	.cfi_offset r10, -24
	.cfi_offset r9, -28
	.cfi_offset r8, -32
	ldr	r5, [r2, #4]
	mov	r4, r2
	adds	r2, r5, #1
	mov	r10, r0
	beq	.LBB218_20
	uxtb	r0, r5
	cmp	r0, #0
	beq	.LBB218_20
	and	r0, r0, #240
	cmp	r0, #224
	beq	.LBB218_20
	mov	r6, r1
	mov	r0, r1
	mov	r1, r5
	mov	r8, r3
	bl	smoltcp::iface::interface::InterfaceInner::is_subnet_broadcast::h01a1330f6358acef
	cmp	r0, #0
	bne	.LBB218_20
	ldr.w	r9, [r4, #8]
	adds.w	r0, r9, #1
	beq	.LBB218_9
	uxtb.w	r0, r9
	cbz	r0, .LBB218_8
	and	r0, r0, #240
	cmp	r0, #224
	beq	.LBB218_8
	mov	r0, r6
	mov	r1, r9
	bl	smoltcp::iface::interface::InterfaceInner::is_subnet_broadcast::h01a1330f6358acef
	cbz	r0, .LBB218_21
.LBB218_8:
	mov	r0, r6
	mov	r1, r9
	bl	smoltcp::iface::interface::InterfaceInner::is_subnet_broadcast::h01a1330f6358acef
	cbz	r0, .LBB218_20
.LBB218_9:
	ldrb.w	r0, [r8]
	cmp	r0, #1
	bne	.LBB218_20
	ldr	r0, [r6, #56]
	add.w	r1, r0, r0, lsl #3
	ldr	r0, [r6, #52]
	rsbs	r1, r1, #0
	lsls	r2, r1, #1
	movs	r1, #0
.LBB218_11:
	adds	r6, r2, r1
	beq	.LBB218_20
	ldrb	r3, [r0, r1]
	cmp	r3, #1
	add.w	r3, r0, r1
	bne	.LBB218_24
	adds.w	r4, r6, #18
	beq	.LBB218_20
	ldrb	r4, [r3, #18]
	cmp	r4, #1
	bne	.LBB218_22
	adds.w	r4, r6, #36
	beq	.LBB218_20
	ldrb.w	r4, [r3, #36]
	cmp	r4, #1
	bne	.LBB218_23
	adds	r6, #54
	beq	.LBB218_20
	ldrb.w	r3, [r3, #54]
	adds	r1, #72
	cmp	r3, #1
	beq	.LBB218_11
	add	r0, r1
	sub.w	r3, r0, #18
	b	.LBB218_24
.LBB218_20:
	movs	r1, #152
	mov	r0, r10
	bl	__aeabi_memclr8
	movs	r0, #6
	str.w	r0, [r10]
	pop.w	{r8, r9, r10}
	pop	{r4, r5, r6, r7, pc}
.LBB218_21:
	add.w	r2, r10, #20
	ldrb.w	r12, [r8]
	ldr.w	r1, [r8, #24]
	ldr.w	lr, [r8, #12]
	ldm.w	r8!, {r0, r4, r6}
	stm	r2!, {r0, r4, r6}
	add.w	r0, r1, #28
	cmp.w	r12, #2
	ldm.w	r8, {r1, r3, r4, r6}
	stm	r2!, {r1, r3, r4, r6}
	mov.w	r1, #0
	str.w	r1, [r10]
	it	lo
	addlo.w	r0, lr, #8
	strd	r0, r9, [r10, #4]
	b	.LBB218_25
.LBB218_22:
	adds	r3, #18
	b	.LBB218_24
.LBB218_23:
	adds	r3, #36
.LBB218_24:
	add.w	r1, r10, #20
	ldr.w	r12, [r3, #1]
	ldr.w	r2, [r8, #12]
	ldm.w	r8!, {r3, r4, r6}
	stm	r1!, {r3, r4, r6}
	ldm.w	r8, {r0, r3, r4, r6}
	stm	r1!, {r0, r3, r4, r6}
	movs	r0, #0
	str.w	r0, [r10]
	add.w	r0, r2, #8
	strd	r0, r12, [r10, #4]
.LBB218_25:
	movs	r0, #1
	str.w	r5, [r10, #12]
	strb.w	r0, [r10, #16]
	movs	r0, #64
	strb.w	r0, [r10, #18]
	pop.w	{r8, r9, r10}
	pop	{r4, r5, r6, r7, pc}
.Lfunc_end218:
	.size	smoltcp::iface::interface::InterfaceInner::icmpv4_reply::haf1573f8e2fbb5a4, .Lfunc_end218-smoltcp::iface::interface::InterfaceInner::icmpv4_reply::haf1573f8e2fbb5a4
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp5iface9interface14InterfaceInner19is_subnet_broadcast17h01a1330f6358acefE,"ax",%progbits
	.p2align	1
	.type	smoltcp::iface::interface::InterfaceInner::is_subnet_broadcast::h01a1330f6358acef,%function
	.code	16
	.thumb_func
smoltcp::iface::interface::InterfaceInner::is_subnet_broadcast::h01a1330f6358acef:
.Lfunc_begin219:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10}
	push.w	{r8, r9, r10}
	.cfi_offset r10, -24
	.cfi_offset r9, -28
	.cfi_offset r8, -32
	ldr	r2, [r0, #56]
	cmp	r2, #0
	beq	.LBB219_9
	ldr	r0, [r0, #52]
	add.w	r2, r2, r2, lsl #3
	adds	r0, #2
	lsls	r2, r2, #1
	mov.w	lr, #-1
	mov.w	r12, #65280
	b	.LBB219_5
.LBB219_2:
	movs	r4, #0
.LBB219_3:
	ldrb	r5, [r0, #2]
	ldrb	r9, [r0, #-1]
	ldrb	r6, [r0, #1]
	and	r3, r3, #31
	ldrb.w	r8, [r0]
	and.w	r5, r5, r4, lsr #24
	and.w	r6, r6, r4, lsr #16
	lsl.w	r10, r5, #24
	and.w	r5, r8, r4, lsr #8
	and.w	r4, r4, r9
	orr.w	r6, r10, r6, lsl #16
	orr.w	r5, r6, r5, lsl #8
	uxtb	r4, r4
	lsr.w	r3, lr, r3
	add	r4, r5
	rev	r4, r4
	orrs	r3, r4
	lsls	r4, r3, #8
	uxtb16	r4, r4
	and.w	r5, r12, r3, lsr #8
	orr.w	r4, r4, r3, lsl #24
	add	r4, r5
	orr.w	r3, r4, r3, lsr #24
	cmp	r3, r1
	beq	.LBB219_10
.LBB219_4:
	subs	r2, #18
	add.w	r0, r0, #18
	beq	.LBB219_9
.LBB219_5:
	ldrb	r3, [r0, #-2]
	cmp	r3, #0
	bne	.LBB219_4
	ldrb	r3, [r0, #3]
	cmp	r3, #0
	beq	.LBB219_2
	sub.w	r4, r3, #31
	uxtb	r4, r4
	cmp	r4, #2
	blo	.LBB219_4
	rsbs	r4, r3, #0
	and	r4, r4, #31
	lsl.w	r4, lr, r4
	rev	r4, r4
	b	.LBB219_3
.LBB219_9:
	movs	r0, #0
	pop.w	{r8, r9, r10}
	pop	{r4, r5, r6, r7, pc}
.LBB219_10:
	movs	r0, #1
	pop.w	{r8, r9, r10}
	pop	{r4, r5, r6, r7, pc}
.Lfunc_end219:
	.size	smoltcp::iface::interface::InterfaceInner::is_subnet_broadcast::h01a1330f6358acef, .Lfunc_end219-smoltcp::iface::interface::InterfaceInner::is_subnet_broadcast::h01a1330f6358acef
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp6socket3tcp9TcpSocket9ack_reply17h9a8329310b8a3a8eE,"ax",%progbits
	.p2align	1
	.type	smoltcp::socket::tcp::TcpSocket::ack_reply::h9a8329310b8a3a8e,%function
	.code	16
	.thumb_func
smoltcp::socket::tcp::TcpSocket::ack_reply::h9a8329310b8a3a8e:
.Lfunc_begin220:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#84
	sub	sp, #84
	ldrb	r6, [r2]
	cbz	r6, .LBB220_3
	cmp	r6, #1
	bne	.LBB220_4
	ldrd	r8, r10, [r2, #8]
	mov.w	r11, #1
	movs	r2, #1
	b	.LBB220_5
.LBB220_3:
	ldr.w	r6, [r2, #25]
	str	r6, [sp, #60]
	ldr.w	r6, [r2, #29]
	str	r6, [sp, #64]
	ldrh.w	r6, [r2, #33]
	ldrh.w	r5, [r2, #23]
	strh.w	r6, [sp, #68]
	ldrb	r6, [r2, #1]
	ldrb.w	r11, [r2, #18]
	str	r6, [sp, #20]
	ldr.w	r6, [r2, #6]
	ldr.w	r10, [r2, #19]
	ldr.w	r8, [r2, #2]
	str	r6, [sp, #72]
	ldr.w	r6, [r2, #10]
	str	r6, [sp, #76]
	ldr.w	r2, [r2, #14]
	str	r2, [sp, #80]
	b	.LBB220_6
.LBB220_4:
	ldr.w	r5, [r2, #34]
	ldr.w	r10, [r2, #24]
	ldr.w	r6, [r2, #30]
	mov.w	r11, #2
	strd	r6, r5, [sp, #60]
	ldr	r5, [r2, #16]
	str	r5, [sp, #76]
	ldrh	r6, [r2, #38]
	ldrh	r5, [r2, #28]
	strh.w	r6, [sp, #68]
	ldrd	r8, r4, [r2, #8]
	ldr	r6, [r2, #20]
	movs	r2, #2
	str	r4, [sp, #72]
	str	r6, [sp, #80]
.LBB220_5:
	str	r2, [sp, #20]
.LBB220_6:
	str	r3, [sp, #16]
	ldrd	r2, r3, [sp, #60]
	strd	r2, r3, [sp, #40]
	ldrh.w	r2, [sp, #68]
	strh.w	r5, [sp, #56]
	strh.w	r2, [sp, #48]
	ldr	r2, [sp, #72]
	str	r2, [sp, #28]
	ldr	r2, [sp, #76]
	str	r2, [sp, #32]
	ldr	r2, [sp, #80]
	str	r2, [sp, #36]
	str.w	r10, [sp, #52]
	ldrd	r2, r3, [sp, #40]
	strd	r2, r3, [sp, #60]
	ldrh.w	r2, [sp, #48]
	ldr.w	r3, [sp, #54]
	str	r3, [sp, #24]
	strh.w	r2, [sp, #68]
	ldrd	r2, r3, [sp, #28]
	str	r2, [sp, #72]
	ldr.w	r2, [r1, #204]
	cmp.w	r2, #-1
	str	r3, [sp, #76]
	ldr	r3, [sp, #36]
	str	r3, [sp, #80]
	ble.w	.LBB220_31
	ldrb.w	r4, [r1, #331]
	ldr.w	r5, [r1, #196]
	ldrd	r3, r6, [r1, #228]
	str	r6, [sp, #12]
	add.w	lr, r3, r2
	movs	r6, #1
	subs	r2, r5, r2
	and	r3, r4, #31
	str.w	r6, [r1, #236]
	lsr.w	r3, r2, r3
	movw	r6, #65535
	ldrb.w	r5, [r1, #334]
	cmp	r3, r6
	str.w	lr, [r1, #240]
	it	lo
	movlo	r6, r3
	cmp	r5, #0
	strh.w	r6, [r1, #308]
	beq	.LBB220_24
	ldr.w	r3, [r1, #252]
	str.w	r8, [sp, #8]
	cmp	r3, #0
	strd	r11, r10, [sp]
	beq	.LBB220_22
	ldr.w	r8, [r1, #256]
	mov.w	r11, #0
	mov.w	r10, #0
.LBB220_10:
	cmp.w	r10, #3
	bhi	.LBB220_22
	add.w	r3, r1, r10, lsl #3
	ldrd	r3, r5, [r3, #160]
	add.w	r4, r3, r11
	add.w	r11, r4, r5
	cmp	r4, r11
	blo	.LBB220_19
	add.w	r3, r10, #1
	cmp	r3, #4
	beq	.LBB220_22
	add.w	r5, r1, r3, lsl #3
	ldrd	r5, r2, [r5, #160]
	add	r4, r5
	add.w	r11, r4, r2
	cmp	r4, r11
	blo	.LBB220_16
	add.w	r3, r10, #2
	cmp	r3, #4
	beq	.LBB220_22
	add.w	r2, r1, r3, lsl #3
	ldrd	r2, r5, [r2, #160]
	add	r4, r2
	add.w	r11, r4, r5
	cmp	r4, r11
	bhs	.LBB220_17
.LBB220_16:
	mov	r10, r3
	b	.LBB220_19
.LBB220_17:
	add.w	r10, r10, #3
	cmp.w	r10, #4
	beq	.LBB220_22
	add.w	r2, r1, r10, lsl #3
	ldrd	r2, r3, [r2, #160]
	add	r4, r2
	add.w	r11, r4, r3
	cmp	r4, r11
	bhs	.LBB220_22
.LBB220_19:
	add.w	r12, r4, lr
	add.w	r10, r10, #1
	cmp	r12, r8
	bhi	.LBB220_10
	add.w	r9, r11, lr
	cmp	r9, r8
	blo	.LBB220_10
	movs	r1, #1
	movs	r3, #30
	ldr	r5, [sp, #16]
	ldr.w	r8, [sp, #8]
	ldrd	r11, r10, [sp]
	b	.LBB220_29
.LBB220_22:
	ldrd	r3, r2, [r1, #160]
	adds	r4, r3, r2
	cmp	r3, r4
	bhs	.LBB220_25
	ldr	r5, [sp, #16]
	ldr.w	r8, [sp, #8]
	ldrd	r11, r10, [sp]
	b	.LBB220_28
.LBB220_24:
	movs	r3, #20
	movs	r1, #0
	ldr	r5, [sp, #16]
	b	.LBB220_29
.LBB220_25:
	ldrd	r2, r5, [r1, #168]
	add	r3, r2
	ldr.w	r8, [sp, #8]
	adds	r4, r3, r5
	ldr	r5, [sp, #16]
	cmp	r3, r4
	ldrd	r11, r10, [sp]
	blo	.LBB220_28
	ldrd	r2, r4, [r1, #176]
	add	r3, r2
	add	r4, r3
	cmp	r3, r4
	blo	.LBB220_28
	ldrd	r1, r2, [r1, #184]
	add	r3, r1
	adds	r4, r3, r2
	cmp	r3, r4
	bhs	.LBB220_30
.LBB220_28:
	add.w	r12, r3, lr
	add.w	r9, r4, lr
	movs	r1, #1
	movs	r3, #30
.LBB220_29:
	ldrh.w	r4, [sp, #68]
	ldr	r2, [sp, #24]
	strh	r4, [r0, #16]
	ldr	r4, [sp, #72]
	str.w	r4, [r0, #23]
	ldr	r4, [sp, #76]
	str.w	r4, [r0, #27]
	ldr	r4, [sp, #80]
	str.w	r4, [r0, #31]
	ldr	r4, [sp, #60]
	str	r4, [r0, #8]
	ldr	r4, [sp, #64]
	str	r4, [r0, #12]
	lsls	r4, r3, #30
	mov.w	r4, #3
	strb.w	r4, [r0, #35]
	mov.w	r4, #64
	strb.w	r11, [r0, #1]
	strh.w	r10, [r0, #2]
	str	r2, [r0, #4]
	ldr	r2, [sp, #20]
	strb	r2, [r0, #18]
	str.w	r8, [r0, #19]
	strb.w	r4, [r0, #37]
	and	r4, r3, #29
	it	mi
	addmi	r3, r4, #4
	strd	r1, r12, [r0, #56]
	movw	r1, :lower16:CORE_PERIPHERALS
	ldr	r2, [sp, #12]
	movt	r1, :upper16:CORE_PERIPHERALS
	str	r1, [r0, #92]
	ldr	r1, [r7, #8]
	str	r3, [r0, #40]
	str	r2, [r0, #44]
	movs	r2, #1
	strd	r2, lr, [r0, #48]
	str.w	r9, [r0, #64]
	strh.w	r1, [r0, #100]
	movs	r1, #0
	strh.w	r5, [r0, #102]
	strh.w	r6, [r0, #104]
	strb	r1, [r0]
	str	r1, [r0, #68]
	str	r1, [r0, #80]
	str	r1, [r0, #96]
	strh.w	r1, [r0, #106]
	strh.w	r1, [r0, #110]
	strb.w	r1, [r0, #113]
	add	sp, #84
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB220_30:
	movs	r1, #0
	movs	r3, #20
	b	.LBB220_29
.LBB220_31:
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.593
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.595
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.593
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.595
	movs	r1, #56
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.Lfunc_end220:
	.size	smoltcp::socket::tcp::TcpSocket::ack_reply::h9a8329310b8a3a8e, .Lfunc_end220-smoltcp::socket::tcp::TcpSocket::ack_reply::h9a8329310b8a3a8e
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp6socket3tcp9TcpSocket9rst_reply17ha8b76961b12bd55cE,"ax",%progbits
	.p2align	1
	.type	smoltcp::socket::tcp::TcpSocket::rst_reply::ha8b76961b12bd55c,%function
	.code	16
	.thumb_func
smoltcp::socket::tcp::TcpSocket::rst_reply::ha8b76961b12bd55c:
.Lfunc_begin221:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#52
	sub	sp, #52
	ldrb	r3, [r1]
	ldrh.w	r12, [r2, #56]
	ldrh.w	lr, [r2, #58]
	cbz	r3, .LBB221_3
	cmp	r3, #1
	bne	.LBB221_4
	ldrd	r8, r9, [r1, #8]
	mov.w	r10, #1
	mov.w	r11, #1
	b	.LBB221_5
.LBB221_3:
	ldr.w	r3, [r1, #23]
	str	r3, [sp, #28]
	ldr.w	r3, [r1, #27]
	str	r3, [sp, #32]
	ldr.w	r3, [r1, #31]
	ldrb.w	r10, [r1, #18]
	str	r3, [sp, #36]
	ldrb.w	r11, [r1, #1]
	ldr.w	r3, [r1, #6]
	ldr.w	r9, [r1, #19]
	ldr.w	r8, [r1, #2]
	str	r3, [sp, #40]
	ldr.w	r3, [r1, #10]
	str	r3, [sp, #44]
	ldr.w	r1, [r1, #14]
	str	r1, [sp, #48]
	b	.LBB221_5
.LBB221_4:
	ldr	r4, [r1, #28]
	str	r4, [sp, #28]
	ldr	r4, [r1, #32]
	str	r4, [sp, #32]
	ldrd	r8, r3, [r1, #8]
	ldr	r4, [r1, #36]
	ldr.w	r9, [r1, #24]
	mov.w	r10, #2
	mov.w	r11, #2
	str	r4, [sp, #36]
	ldr	r4, [r1, #16]
	str	r3, [sp, #40]
	ldr	r3, [r1, #20]
	str	r4, [sp, #44]
	str	r3, [sp, #48]
.LBB221_5:
	ldr	r5, [sp, #40]
	ldr	r1, [sp, #36]
	ldr	r3, [sp, #32]
	str	r5, [sp, #4]
	ldr	r5, [sp, #44]
	str	r5, [sp, #8]
	str	r1, [sp, #24]
	ldr	r4, [sp, #28]
	str	r3, [sp, #20]
	ldr	r5, [sp, #48]
	strd	r4, r3, [sp, #40]
	str	r1, [sp, #48]
	ldrd	r1, r3, [sp, #4]
	str	r5, [sp, #12]
	strd	r1, r3, [sp, #28]
	ldrb.w	r1, [r2, #66]
	ldr	r3, [sp, #12]
	str	r4, [sp, #16]
	ldr	r4, [r2, #8]
	str	r3, [sp, #36]
	ldr	r3, [r2, #4]
	cmp	r1, #2
	mov.w	r1, #0
	bne	.LBB221_9
	mov.w	r6, #0
	cbnz	r3, .LBB221_10
	ldr	r5, [r2, #52]
	adds	r5, #1
	cmp.w	r5, #-1
	ble	.LBB221_11
	ldr	r2, [r2]
	movs	r6, #1
	add	r5, r2
	b	.LBB221_10
.LBB221_9:
	movs	r6, #0
.LBB221_10:
	ldr	r2, [sp, #48]
	str.w	r2, [r0, #14]
	ldr	r2, [sp, #44]
	str.w	r2, [r0, #10]
	ldr	r2, [sp, #40]
	str.w	r2, [r0, #6]
	ldr	r2, [sp, #28]
	str.w	r2, [r0, #23]
	ldr	r2, [sp, #32]
	str.w	r2, [r0, #27]
	ldr	r2, [sp, #36]
	str.w	r2, [r0, #31]
	movs	r2, #3
	strb.w	r2, [r0, #35]
	movs	r2, #64
	strb.w	r2, [r0, #37]
	movs	r2, #20
	str	r2, [r0, #40]
	movw	r2, :lower16:CORE_PERIPHERALS
	strb	r1, [r0]
	movt	r2, :upper16:CORE_PERIPHERALS
	strb.w	r10, [r0, #1]
	str.w	r9, [r0, #2]
	cmp	r3, #0
	strb.w	r11, [r0, #18]
	str.w	r8, [r0, #19]
	it	eq
	moveq	r4, r3
	strd	r4, r6, [r0, #44]
	strd	r5, r1, [r0, #52]
	str	r1, [r0, #68]
	str	r1, [r0, #80]
	strd	r2, r1, [r0, #92]
	strh.w	lr, [r0, #100]
	movs	r2, #4
	strh.w	r12, [r0, #102]
	str	r1, [r0, #104]
	strh.w	r2, [r0, #110]
	strb.w	r1, [r0, #113]
	add	sp, #52
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB221_11:
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.593
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.595
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.593
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.595
	movs	r1, #56
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.Lfunc_end221:
	.size	smoltcp::socket::tcp::TcpSocket::rst_reply::ha8b76961b12bd55c, .Lfunc_end221-smoltcp::socket::tcp::TcpSocket::rst_reply::ha8b76961b12bd55c
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp7storage9assembler9Assembler3add17h47d7353f7e9155f9E,"ax",%progbits
	.p2align	1
	.type	smoltcp::storage::assembler::Assembler::add::h47d7353f7e9155f9,%function
	.code	16
	.thumb_func
smoltcp::storage::assembler::Assembler::add::h47d7353f7e9155f9:
.Lfunc_begin222:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#4
	sub	sp, #4
	mov.w	r12, #0
	mov.w	lr, #0
	b	.LBB222_3
.LBB222_1:
	subs.w	r1, r1, r9
	add.w	lr, lr, #1
	it	lo
	movlo	r1, r12
.LBB222_2:
	cmp.w	lr, #4
	mov.w	r3, #0
	it	ne
	cmpne	r2, #0
	beq.w	.LBB222_30
.LBB222_3:
	add.w	r4, r0, lr, lsl #3
	ldr.w	r6, [r0, lr, lsl #3]
	mov	r5, r4
	ldr	r3, [r5, #4]!
	add.w	r9, r3, r6
	cmp	r1, r9
	bhs	.LBB222_1
	cbnz	r1, .LBB222_13
	cmp	r6, r2
	bhi	.LBB222_13
	cmp.w	lr, #0
	beq	.LBB222_13
	ldr	r3, [r4, #-4]
	cmp.w	lr, #3
	add	r3, r9
	str	r3, [r4, #-4]
	beq	.LBB222_11
	add.w	r10, lr, #1
	add.w	r8, r0, r10, lsl #3
	ldr.w	r3, [r0, r10, lsl #3]
	mov	r6, r8
	str.w	r3, [r0, lr, lsl #3]
	ldr	r11, [r6, #4]!
	str.w	r11, [r4, #4]
	cmp.w	r11, #0
	beq	.LBB222_28
	cmp.w	r10, #3
	beq	.LBB222_11
	mov	r3, r4
	ldr	r11, [r3, #16]!
	mov	r6, r3
	str.w	r11, [r0, r10, lsl #3]
	ldr	r12, [r6, #4]!
	cmp.w	r12, #0
	it	eq
	moveq	r5, r6
	str.w	r12, [r8, #4]
	mov.w	r12, #0
	it	eq
	moveq	r4, r3
.LBB222_11:
	mov	r6, r5
.LBB222_12:
	str.w	r12, [r4]
	str.w	r12, [r6]
	b	.LBB222_27
.LBB222_13:
	cbnz	r1, .LBB222_17
	cmp	r6, r2
	bls	.LBB222_17
	cmp.w	lr, #0
	beq	.LBB222_17
	ldr	r3, [r4, #-4]
	add	r3, r2
	str	r3, [r4, #-4]
	subs	r3, r6, r2
	str.w	r3, [r0, lr, lsl #3]
	b	.LBB222_26
.LBB222_17:
	cmp	r6, r1
	add.w	r8, r1, r2
	it	hs
	cmphs	r8, r6
	bhs	.LBB222_25
	cmp	r8, r6
	bhs	.LBB222_26
	ldrd	r3, r6, [r0, #24]
	cmn	r6, r3
	bne	.LBB222_29
	cmp.w	lr, #2
	bhi	.LBB222_31
	ldr	r3, [r0, #16]
	cmp.w	lr, #2
	str	r3, [r0, #24]
	ldr	r3, [r0, #20]
	str	r3, [r0, #28]
	beq	.LBB222_24
	ldr	r3, [r0, #8]
	cmp.w	lr, #0
	str	r3, [r0, #16]
	ldr	r3, [r0, #12]
	str	r3, [r0, #20]
	bne	.LBB222_24
	ldr	r3, [r0]
	str	r3, [r0, #8]
	ldr	r3, [r0, #4]
	str	r3, [r0, #12]
.LBB222_24:
	ldr	r3, [r4, #8]
	str.w	r1, [r0, lr, lsl #3]
	str	r2, [r4, #4]
	sub.w	r3, r3, r8
	str	r3, [r4, #8]
	add.w	lr, lr, #2
	b	.LBB222_27
.LBB222_25:
	subs	r6, r6, r1
	str	r1, [r4]
	add	r3, r6
	str	r3, [r5]
.LBB222_26:
	add.w	lr, lr, #1
.LBB222_27:
	add	r1, r2
	subs.w	r2, r1, r9
	mov.w	r1, #0
	it	lo
	movlo	r2, r1
	b	.LBB222_2
.LBB222_28:
	mov	r4, r8
	b	.LBB222_12
.LBB222_29:
	movs	r3, #1
.LBB222_30:
	mov	r0, r3
	add	sp, #4
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB222_31:
	strd	r1, r2, [r4]
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.121
	movs	r0, #4
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.121
	movs	r1, #4
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.Lfunc_end222:
	.size	smoltcp::storage::assembler::Assembler::add::h47d7353f7e9155f9, .Lfunc_end222-smoltcp::storage::assembler::Assembler::add::h47d7353f7e9155f9
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp6socket3tcp9TcpSocket15ack_to_transmit17h6a8624e0a5e08febE,"ax",%progbits
	.p2align	1
	.type	smoltcp::socket::tcp::TcpSocket::ack_to_transmit::h6a8624e0a5e08feb,%function
	.code	16
	.thumb_func
smoltcp::socket::tcp::TcpSocket::ack_to_transmit::h6a8624e0a5e08feb:
.Lfunc_begin223:
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	ldr.w	r1, [r0, #236]
	cmp	r1, #1
	bne	.LBB223_3
	ldr.w	r1, [r0, #204]
	cmp.w	r1, #-1
	itttt	gt
	ldrgt.w	r2, [r0, #228]
	ldrgt.w	r0, [r0, #240]
	addgt	r1, r2
	subgt	r0, r0, r1
	itt	gt
	lsrgt	r0, r0, #31
	popgt	{r7, pc}
.LBB223_2:
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.593
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.595
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.593
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.595
	movs	r1, #56
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB223_3:
	movs	r0, #0
	pop	{r7, pc}
.Lfunc_end223:
	.size	smoltcp::socket::tcp::TcpSocket::ack_to_transmit::h6a8624e0a5e08feb, .Lfunc_end223-smoltcp::socket::tcp::TcpSocket::ack_to_transmit::h6a8624e0a5e08feb
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN4core4iter6traits8iterator8Iterator8for_each17he2535e1bc93cc462E,"ax",%progbits
	.p2align	1
	.type	core::iter::traits::iterator::Iterator::for_each::he2535e1bc93cc462,%function
	.code	16
	.thumb_func
core::iter::traits::iterator::Iterator::for_each::he2535e1bc93cc462:
.Lfunc_begin224:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r11}
	str	r11, [sp, #-4]!
	.cfi_offset r11, -24
	cmp	r0, r1
	beq	.LBB224_9
	mov	r12, r1
	lsls	r2, r2, #3
	ldrd	r6, r1, [r3]
	b	.LBB224_4
.LBB224_2:
	movs	r4, #0
.LBB224_3:
	strd	r4, r5, [r0]
	str	r3, [r0, #8]
	adds	r0, #12
	cmp	r0, r12
	add.w	r2, r2, #8
	beq	.LBB224_9
.LBB224_4:
	cmp	r2, r1
	bhs	.LBB224_2
	adds	r3, r2, #4
	cmp	r3, r1
	bhi	.LBB224_10
	add.w	lr, r2, #8
	cmp	lr, r3
	blo	.LBB224_11
	cmp	lr, r1
	bhi	.LBB224_12
	adds	r3, r6, r2
	ldr	r5, [r6, r2]
	movs	r4, #1
	ldr	r3, [r3, #4]
	rev	r5, r5
	rev	r3, r3
	b	.LBB224_3
.LBB224_9:
	ldr	r11, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.LBB224_10:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.620
	mov	r0, r3
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.620
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB224_11:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.621
	mov	r0, r3
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.621
	mov	r1, lr
	bl	core::slice::index::slice_index_order_fail::h8a53f055fb6ee074
	.inst.n	0xdefe
.LBB224_12:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.621
	mov	r0, lr
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.621
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.Lfunc_end224:
	.size	core::iter::traits::iterator::Iterator::for_each::he2535e1bc93cc462, .Lfunc_end224-core::iter::traits::iterator::Iterator::for_each::he2535e1bc93cc462
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp5iface9interface14InterfaceInner14process_icmpv417h455ece092990769aE,"ax",%progbits
	.p2align	1
	.type	smoltcp::iface::interface::InterfaceInner::process_icmpv4::h455ece092990769a,%function
	.code	16
	.thumb_func
smoltcp::iface::interface::InterfaceInner::process_icmpv4::h455ece092990769a:
.Lfunc_begin225:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r11}
	push.w	{r8, r9, r11}
	.cfi_offset r11, -24
	.cfi_offset r9, -28
	.cfi_offset r8, -32
	.pad	#48
	sub	sp, #48
	ldr.w	r8, [r7, #8]
	mov	r9, r0
	cmp.w	r8, #8
	bhs	.LBB225_2
	movs	r0, #4
	strb.w	r0, [r9, #1]
	b	.LBB225_16
.LBB225_2:
	ldrb.w	r0, [r1, #47]
	mov	r6, r3
	mov	r4, r2
	mov	r5, r1
	cmp	r0, #1
	bhi	.LBB225_5
	mov	r0, r6
	mov	r1, r8
	bl	smoltcp::wire::ip::checksum::data::hebb229fc732545ff
	uxth	r0, r0
	movw	r1, #65535
	cmp	r0, r1
	beq	.LBB225_5
	movs	r4, #5
	b	.LBB225_15
.LBB225_5:
	ldrb	r0, [r6]
	cmp	r0, #8
	beq	.LBB225_10
	cmp	r0, #3
	beq	.LBB225_12
	cbnz	r0, .LBB225_11
	ldrb	r0, [r6, #1]
	movs	r4, #6
	cbnz	r0, .LBB225_15
	add.w	r0, r9, #12
	movs	r1, #148
	bl	__aeabi_memclr4
	str.w	r4, [r9, #8]
	b	.LBB225_19
.LBB225_10:
	ldrb	r0, [r6, #1]
	cbz	r0, .LBB225_17
.LBB225_11:
	movs	r4, #6
	b	.LBB225_15
.LBB225_12:
	sub.w	r0, r8, #8
	cmp	r0, #20
	blo	.LBB225_14
	ldrb	r1, [r6, #8]
	movs	r2, #60
	and.w	r1, r2, r1, lsl #2
	cmp	r0, r1
	bhs	.LBB225_20
.LBB225_14:
	movs	r4, #4
.LBB225_15:
	strb.w	r4, [r9, #1]
.LBB225_16:
	movs	r0, #1
	strb.w	r0, [r9]
	add	sp, #48
	pop.w	{r8, r9, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB225_17:
	ldrb	r0, [r4]
	cmp	r0, #1
	bne	.LBB225_24
	ldrh	r0, [r6, #4]
	ldr	r3, [r4, #16]
	ldrh	r1, [r6, #6]
	str	r3, [sp, #16]
	ldr	r3, [r4, #12]
	str	r3, [sp, #12]
	rev	r0, r0
	ldr	r3, [r4, #8]
	lsrs	r0, r0, #16
	str	r3, [sp, #8]
	ldr	r3, [r4, #4]
	strh.w	r0, [sp, #22]
	rev	r1, r1
	add.w	r2, r6, #8
	lsrs	r0, r1, #16
	str	r3, [sp, #4]
	movs	r3, #1
	strh.w	r0, [sp, #24]
	sub.w	r0, r8, #8
	strb.w	r3, [sp, #20]
	strd	r2, r0, [sp, #28]
	add.w	r0, r9, #8
	add	r2, sp, #4
	add	r3, sp, #20
	mov	r1, r5
	bl	smoltcp::iface::interface::InterfaceInner::icmpv4_reply::haf1573f8e2fbb5a4
.LBB225_19:
	movs	r0, #0
	strb.w	r0, [r9]
	add	sp, #48
	pop.w	{r8, r9, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB225_20:
	ldrh	r2, [r6, #10]
	rev	r2, r2
	cmp.w	r1, r2, lsr #16
	bls	.LBB225_22
	movs	r4, #8
	b	.LBB225_15
.LBB225_22:
	lsrs	r2, r2, #16
	movs	r4, #4
	cmp	r0, r2
	blo	.LBB225_15
	subs	r0, r0, r1
	cmp	r0, #8
	blo	.LBB225_15
.LBB225_24:
	movs	r0, #6
	strb.w	r0, [r9, #1]
	b	.LBB225_16
.Lfunc_end225:
	.size	smoltcp::iface::interface::InterfaceInner::process_icmpv4::h455ece092990769a, .Lfunc_end225-smoltcp::iface::interface::InterfaceInner::process_icmpv4::h455ece092990769a
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp4wire2ip4Cidr13contains_addr17h768e43cd1d234828E,"ax",%progbits
	.p2align	1
	.type	smoltcp::wire::ip::Cidr::contains_addr::h768e43cd1d234828,%function
	.code	16
	.thumb_func
smoltcp::wire::ip::Cidr::contains_addr::h768e43cd1d234828:
.Lfunc_begin226:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#36
	sub	sp, #36
	ldrb	r2, [r0]
	mov	r4, r1
	ldrb	r1, [r1]
	cmp	r2, #0
	beq	.LBB226_5
	cmp	r1, #2
	bne	.LBB226_9
	ldrb	r1, [r0, #17]
	cmp	r1, #0
	beq	.LBB226_10
	cmp	r1, #129
	bhs	.LBB226_11
	rsb.w	r6, r1, #128
	movs	r1, #16
	add.w	r8, sp, #4
	add.w	r10, r0, #1
	sub.w	r9, r1, r6, lsr #3
	and	r11, r6, #7
	add.w	r0, r8, r6, lsr #3
	mov	r1, r9
	lsrs	r5, r6, #3
	bl	__aeabi_memclr
	mov	r0, r8
	mov	r1, r10
	mov	r2, r5
	bl	__aeabi_memcpy
	mvn	r0, #255
	ldrb.w	r1, [r10, r5]
	asr.w	r11, r0, r11
	add.w	r10, sp, #20
	and.w	r0, r1, r11
	strb.w	r0, [r8, r5]
	add.w	r0, r10, r6, lsr #3
	mov	r1, r9
	adds	r4, #1
	bl	__aeabi_memclr
	mov	r0, r10
	mov	r1, r4
	mov	r2, r5
	bl	__aeabi_memcpy
	ldrb	r0, [r4, r5]
	movs	r2, #16
	mov	r1, r10
	and.w	r0, r0, r11
	strb.w	r0, [r10, r5]
	mov	r0, r8
	bl	memcmp
	b	.LBB226_8
.LBB226_5:
	cmp	r1, #1
	bne	.LBB226_9
	ldrb	r1, [r0, #5]
	cbz	r1, .LBB226_10
	ldr.w	r0, [r0, #1]
	rsbs	r1, r1, #0
	ldr.w	r2, [r4, #1]
	and	r1, r1, #31
	rev	r0, r0
	lsrs	r0, r1
	rev	r2, r2
	lsr.w	r1, r2, r1
	subs	r0, r0, r1
.LBB226_8:
	clz	r0, r0
	lsrs	r0, r0, #5
	add	sp, #36
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB226_9:
	movs	r0, #0
	add	sp, #36
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB226_10:
	movs	r0, #1
	add	sp, #36
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB226_11:
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.438
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.439
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.438
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.439
	movs	r1, #29
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.Lfunc_end226:
	.size	smoltcp::wire::ip::Cidr::contains_addr::h768e43cd1d234828, .Lfunc_end226-smoltcp::wire::ip::Cidr::contains_addr::h768e43cd1d234828
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp5iface5route6Routes6lookup17h2f9b0a604461411eE,"ax",%progbits
	.p2align	1
	.type	smoltcp::iface::route::Routes::lookup::h2f9b0a604461411e,%function
	.code	16
	.thumb_func
smoltcp::iface::route::Routes::lookup::h2f9b0a604461411e:
.Lfunc_begin227:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#84
	sub	sp, #84
	mov	r5, r2
	ldrb	r2, [r2]
	mov	r4, r1
	mov	r8, r0
	cmp	r2, #1
	beq	.LBB227_5
	cmp	r2, #2
	bne	.LBB227_7
	ldr.w	r0, [r5, #1]
	uxtb	r1, r0
	cmp	r1, #255
	ldr.w	r1, [r5, #13]
	str	r1, [sp, #56]
	ldr.w	r1, [r5, #9]
	str	r1, [sp, #52]
	ldr.w	r1, [r5, #5]
	strd	r0, r1, [sp, #44]
	beq	.LBB227_7
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.7
	add	r0, sp, #44
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.7
	movs	r2, #16
	bl	memcmp
	cbz	r0, .LBB227_7
	ldr.w	r2, [r5, #6]
	ldrb.w	r12, [r5, #5]
	str	r2, [sp, #32]
	ldr.w	r2, [r5, #10]
	movs	r0, #1
	ldr.w	lr, [r5, #1]
	str	r2, [sp, #36]
	ldr.w	r2, [r5, #13]
	str.w	r2, [sp, #39]
	str	r0, [sp, #28]
	movs	r0, #0
	b	.LBB227_9
.LBB227_5:
	ldr.w	lr, [r5, #1]
	adds.w	r0, lr, #1
	beq	.LBB227_7
	uxtb.w	r0, lr
	cmp	r0, #0
	itt	ne
	andne	r0, r0, #240
	cmpne	r0, #224
	bne	.LBB227_8
.LBB227_7:
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.58
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.60
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.58
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.60
	movs	r1, #35
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB227_8:
	movs	r0, #0
	mov.w	r12, #32
	str	r0, [sp, #28]
	movs	r0, #1
.LBB227_9:
	str	r0, [sp, #20]
	ldr	r0, [r4, #4]
	cmp	r0, #0
	str.w	r8, [sp, #12]
	beq.w	.LBB227_59
	subs	r2, r0, #1
	mov	r1, r0
	str	r0, [sp, #8]
	bic	r3, r2, #-268435456
	ldr	r0, [r4]
	str	r5, [sp]
	adds	r2, r3, #1
	subs	r6, r3, #2
	subs	r5, r3, #1
	add.w	r4, r0, #184
	mov.w	r10, #0
	str	r0, [sp, #24]
.LBB227_11:
	ldrd	r0, r1, [r4, #-160]
	eor	r0, r0, #2
	orrs	r0, r1
	beq	.LBB227_23
	cmp	r3, r10
	beq	.LBB227_19
	ldrd	r0, r1, [r4, #-80]
	eor	r0, r0, #2
	orrs	r0, r1
	beq	.LBB227_20
	cmp	r5, r10
	beq	.LBB227_19
	ldrd	r0, r1, [r4]
	eor	r0, r0, #2
	orrs	r0, r1
	beq	.LBB227_21
	cmp	r6, r10
	beq	.LBB227_19
	ldrd	r0, r1, [r4, #80]
	eor	r0, r0, #2
	orrs	r0, r1
	beq	.LBB227_22
	add.w	r10, r10, #4
	add.w	r4, r4, #320
	cmp	r2, r10
	bne	.LBB227_11
.LBB227_19:
	mov	r10, r2
	b	.LBB227_23
.LBB227_20:
	add.w	r10, r10, #1
	b	.LBB227_23
.LBB227_21:
	add.w	r10, r10, #2
	b	.LBB227_23
.LBB227_22:
	add.w	r10, r10, #3
.LBB227_23:
	ldr	r0, [sp, #8]
	cmp	r10, r0
	bhi.w	.LBB227_72
	movs	r0, #2
	strb.w	r0, [sp, #44]
	movs	r0, #0
	strb.w	r0, [sp, #63]
	ldr	r0, [sp, #28]
	strb.w	r0, [sp, #64]
	ldrd	r0, r1, [sp, #32]
	cmp.w	r10, #0
	ldr	r3, [sp, #24]
	str.w	lr, [sp, #65]
	strb.w	r12, [sp, #69]
	str.w	r0, [sp, #70]
	ldr.w	r0, [sp, #39]
	str.w	r1, [sp, #74]
	str.w	r0, [sp, #77]
	beq.w	.LBB227_59
	add	r0, sp, #44
	mov.w	r11, #0
	adds	r0, #21
	mov	r8, r10
	str	r0, [sp, #16]
	uxtb.w	r0, r12
	str	r0, [sp, #4]
	b	.LBB227_28
.LBB227_26:
	bhs.w	.LBB227_50
.LBB227_27:
	add.w	r11, r4, #1
	cmp	r8, r11
	bls.w	.LBB227_48
.LBB227_28:
	sub.w	r0, r8, r11
	adds	r0, #1
	add.w	r4, r11, r0, lsr #1
	subs	r5, r4, #1
	cmp	r5, r10
	bhs.w	.LBB227_70
	add.w	r0, r5, r5, lsl #2
	add.w	r0, r3, r0, lsl #4
	ldrd	r1, r2, [r0, #24]
	eor	r1, r1, #2
	orrs.w	r9, r1, r2
	it	ne
	movne	r9, r0
	bne	.LBB227_36
.LBB227_30:
	cmp	r4, r10
	bhs.w	.LBB227_50
	add.w	r0, r4, r4, lsl #2
	add.w	r0, r3, r0, lsl #4
	ldrd	r1, r2, [r0, #24]
	eor	r1, r1, #2
	orrs.w	r6, r1, r2
	it	ne
	movne	r6, r0
	beq	.LBB227_27
	ldrb	r0, [r6]
	ldr	r1, [sp, #28]
	cmp	r0, r1
	bne	.LBB227_26
	ldr	r0, [sp, #20]
	cmp	r0, #0
	beq	.LBB227_44
	adds	r0, r6, #1
	movs	r2, #4
	ldr	r1, [sp, #16]
	bl	memcmp
	cmp	r0, #0
	it	ne
	movne	r0, #1
	it	mi
	movmi.w	r0, #-1
	cmp	r0, #0
	ldr	r3, [sp, #24]
	bne	.LBB227_45
	ldrb	r1, [r6, #5]
	ldr	r2, [sp, #4]
	subs	r0, r1, r2
	it	ne
	movne	r0, #1
	cmp	r1, r2
	blo	.LBB227_27
	b	.LBB227_45
.LBB227_36:
	ldrb.w	r0, [r9]
	ldr	r1, [sp, #28]
	cmp	r0, r1
	bne	.LBB227_40
	ldr	r0, [sp, #20]
	cbz	r0, .LBB227_41
	add.w	r0, r9, #1
	movs	r2, #4
	ldr	r1, [sp, #16]
	bl	memcmp
	cmp	r0, #0
	it	ne
	movne	r0, #1
	it	mi
	movmi.w	r0, #-1
	ldr	r3, [sp, #24]
	cbnz	r0, .LBB227_42
	ldrb.w	r1, [r9, #5]
	ldr	r2, [sp, #4]
	subs	r0, r1, r2
	it	ne
	movne	r0, #1
	cmp	r1, r2
	blo	.LBB227_30
	b	.LBB227_42
.LBB227_40:
	blo	.LBB227_30
	b	.LBB227_43
.LBB227_41:
	add.w	r0, r9, #1
	movs	r2, #16
	ldr	r1, [sp, #16]
	bl	memcmp
	cmp	r0, #0
	it	ne
	movne	r0, #1
	it	mi
	movmi.w	r0, #-1
	ldr	r3, [sp, #24]
	cbz	r0, .LBB227_46
.LBB227_42:
	uxtb	r0, r0
	cmp	r0, #1
	bne	.LBB227_30
.LBB227_43:
	mov	r8, r5
	cmp	r8, r11
	bhi.w	.LBB227_28
	b	.LBB227_48
.LBB227_44:
	adds	r0, r6, #1
	movs	r2, #16
	ldr	r1, [sp, #16]
	bl	memcmp
	cmp	r0, #0
	it	ne
	movne	r0, #1
	it	mi
	movmi.w	r0, #-1
	ldr	r3, [sp, #24]
	cbz	r0, .LBB227_47
.LBB227_45:
	uxtb	r0, r0
	cmp	r0, #1
	bne.w	.LBB227_27
	b	.LBB227_50
.LBB227_46:
	ldrb.w	r0, [r9, #17]
	sxtb	r1, r0
	subs	r0, #128
	it	ne
	movne	r0, #1
	cmp.w	r1, #-1
	bgt.w	.LBB227_30
	b	.LBB227_42
.LBB227_47:
	ldrb	r0, [r6, #17]
	sxtb	r1, r0
	subs	r0, #128
	it	ne
	movne	r0, #1
	cmp.w	r1, #-1
	bgt.w	.LBB227_27
	b	.LBB227_45
.LBB227_48:
	cmp.w	r8, #0
	beq	.LBB227_59
	sub.w	r5, r8, #1
	mov	r4, r8
.LBB227_50:
	cmp	r5, r10
	bhs.w	.LBB227_71
	add.w	r0, r5, r5, lsl #2
	add.w	r0, r3, r0, lsl #4
	ldrd	r1, r2, [r0, #24]
	eor	r1, r1, #2
	orrs.w	r5, r1, r2
	it	ne
	movne	r5, r0
	beq	.LBB227_62
	ldrb	r0, [r5]
	ldr	r1, [sp, #28]
	cmp	r0, r1
	bne	.LBB227_56
	ldr	r0, [sp, #20]
	cbz	r0, .LBB227_57
	adds	r0, r5, #1
	movs	r2, #4
	ldr	r1, [sp, #16]
	bl	memcmp
	cmp	r0, #0
	it	ne
	movne	r0, #1
	it	mi
	movmi.w	r0, #-1
	ldr	r3, [sp, #24]
	cbnz	r0, .LBB227_58
	ldrb	r1, [r5, #5]
	ldr	r2, [sp, #4]
	subs	r0, r1, r2
	it	ne
	movne	r0, #1
	cmp	r1, r2
	bhs	.LBB227_58
	b	.LBB227_62
.LBB227_56:
	bhs	.LBB227_59
	b	.LBB227_62
.LBB227_57:
	adds	r0, r5, #1
	movs	r2, #16
	ldr	r1, [sp, #16]
	bl	memcmp
	cmp	r0, #0
	it	ne
	movne	r0, #1
	it	mi
	movmi.w	r0, #-1
	ldr	r3, [sp, #24]
	cbz	r0, .LBB227_61
.LBB227_58:
	uxtb	r0, r0
	cmp	r0, #1
	bne	.LBB227_62
.LBB227_59:
	ldr	r6, [sp, #12]
.LBB227_60:
	movs	r0, #0
	str.w	r0, [r6, #13]
	str.w	r0, [r6, #9]
	str.w	r0, [r6, #5]
	str.w	r0, [r6, #1]
	movs	r0, #3
	strb	r0, [r6]
	add	sp, #84
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB227_61:
	ldrb	r0, [r5, #17]
	sxtb	r1, r0
	subs	r0, #128
	it	ne
	movne	r0, #1
	cmp.w	r1, #-1
	ble	.LBB227_58
.LBB227_62:
	ldr	r1, [sp, #8]
	cmp	r4, r1
	bhi	.LBB227_73
	add.w	r0, r4, r4, lsl #2
	ldr	r6, [sp, #12]
	ldr.w	r8, [sp]
	add.w	r0, r3, r0, lsl #4
	sub.w	r5, r0, #80
	ldrd	r10, r9, [r7, #8]
	b	.LBB227_66
.LBB227_64:
	mov	r0, r5
	mov	r1, r8
	bl	smoltcp::wire::ip::Cidr::contains_addr::h768e43cd1d234828
	cbnz	r0, .LBB227_69
.LBB227_65:
	subs	r4, #1
	sub.w	r5, r5, #80
	beq	.LBB227_60
.LBB227_66:
	ldrd	r0, r1, [r5, #24]
	eor	r0, r0, #2
	orrs	r0, r1
	beq	.LBB227_60
	ldrd	r0, r1, [r5, #40]
	eor	r0, r0, #1
	orrs	r0, r1
	bne	.LBB227_64
	ldrd	r0, r1, [r5, #48]
	subs.w	r0, r0, r10
	sbcs.w	r0, r1, r9
	bge	.LBB227_64
	b	.LBB227_65
.LBB227_69:
	add.w	r1, r5, #56
	movs	r2, #17
	mov	r0, r6
	bl	__aeabi_memcpy
	add	sp, #84
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB227_70:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.19
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.19
	mov	r0, r5
	mov	r1, r10
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB227_71:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.20
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.20
	mov	r0, r5
	mov	r1, r10
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB227_72:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.21
	mov	r0, r10
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.21
	ldr	r1, [sp, #8]
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB227_73:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.23
	mov	r0, r4
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.23
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.Lfunc_end227:
	.size	smoltcp::iface::route::Routes::lookup::h2f9b0a604461411e, .Lfunc_end227-smoltcp::iface::route::Routes::lookup::h2f9b0a604461411e
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp5iface5route6Routes22add_default_ipv4_route17ha591256f21e3a8bcE,"ax",%progbits
	.p2align	1
	.type	smoltcp::iface::route::Routes::add_default_ipv4_route::ha591256f21e3a8bc,%function
	.code	16
	.thumb_func
smoltcp::iface::route::Routes::add_default_ipv4_route::ha591256f21e3a8bc:
.Lfunc_begin228:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#252
	sub	sp, #252
	mov	r4, sp
	bfc	r4, #0, #5
	mov	sp, r4
	ldr	r6, [r1, #4]
	movs	r3, #0
	cmp	r6, #0
	mov	r4, r0
	strb.w	r3, [sp, #104]
	strb.w	r3, [sp, #109]
	str.w	r3, [sp, #105]
	strb.w	r3, [sp, #121]
	strd	r3, r3, [sp, #136]
	mov.w	r3, #1
	strb.w	r3, [sp, #152]
	str.w	r2, [sp, #153]
	beq	.LBB228_9
	ldr.w	r9, [r1]
	add.w	r8, sp, #104
	mov	r0, r9
	mov	r1, r6
	mov	r2, r8
	bl	managed::map::binary_search_by_key::h3c2ff4370daba264
	cmp	r0, #0
	beq	.LBB228_10
	add.w	r0, r6, r6, lsl #2
	add.w	r0, r9, r0, lsl #4
	ldrd	r0, r2, [r0, #-56]
	eor	r0, r0, #2
	orrs	r0, r2
	bne	.LBB228_9
	cmp	r6, r1
	blo.w	.LBB228_33
	mvns	r0, r1
	adds	r3, r6, r0
	subs	r0, r6, r1
	cmp	r0, r3
	blo.w	.LBB228_34
	add.w	r2, r1, r1, lsl #2
	cmp	r3, #0
	str	r4, [sp, #24]
	add.w	r2, r9, r2, lsl #4
	it	ne
	subsne.w	lr, r0, r3
	bne.w	.LBB228_15
	cmp	r6, r1
	bls.w	.LBB228_29
.LBB228_7:
	ldrd	r0, r1, [r2, #24]
	eor	r0, r0, #2
	orrs	r0, r1
	bne.w	.LBB228_35
	add	r0, sp, #160
	mov	r9, r2
	mov	r1, r0
	ldm.w	r8!, {r2, r3, r5, r6}
	stm	r1!, {r2, r3, r5, r6}
	ldrh.w	r2, [r8]
	ldr	r3, [sp, #156]
	strh	r2, [r1]
	ldr	r1, [sp, #128]
	str	r1, [sp, #100]
	ldr	r1, [sp, #132]
	str	r1, [sp, #96]
	ldr	r1, [sp, #136]
	str	r1, [sp, #92]
	ldr	r1, [sp, #148]
	str	r1, [sp, #88]
	mov	r2, r9
	ldrd	r11, r10, [sp, #140]
	ldr	r1, [sp, #152]
	ldm.w	r0, {r4, r5, r6, r8, r12, lr}
	stm.w	r2, {r4, r5, r6, r8, r12, lr}
	strd	r1, r3, [r9, #56]
	ldr	r1, [sp, #100]
	str.w	r1, [r9, #32]
	ldr	r1, [sp, #96]
	str.w	r1, [r9, #36]
	ldr	r1, [sp, #92]
	movs	r0, #0
	strd	r1, r11, [r9, #40]
	ldr	r1, [sp, #88]
	str.w	r10, [r9, #48]
	strd	r0, r0, [r9, #24]
	str.w	r1, [r9, #52]
	movs	r1, #2
	mov.w	r12, #0
	mov.w	r10, #0
	mov.w	lr, #0
	movs	r3, #0
	movs	r6, #0
	mov.w	r8, #0
	mov.w	r9, #0
	movs	r5, #0
	strd	r0, r0, [sp, #232]
	strd	r0, r0, [sp, #240]
	b	.LBB228_13
.LBB228_9:
	ldrh.w	r0, [sp, #120]
	strh.w	r0, [sp, #168]
	ldr	r0, [sp, #136]
	str	r0, [sp, #232]
	ldr	r0, [sp, #140]
	str	r0, [sp, #236]
	ldr	r0, [sp, #144]
	str	r0, [sp, #240]
	ldr	r0, [sp, #148]
	str	r0, [sp, #244]
	movs	r0, #0
	strb	r0, [r4, #1]
	movs	r0, #1
	b	.LBB228_14
.LBB228_10:
	str	r4, [sp, #24]
	add	r0, sp, #160
	ldm.w	r8!, {r2, r3, r4, r5}
	stm	r0!, {r2, r3, r4, r5}
	ldrh.w	r2, [r8]
	cmp	r6, r1
	strh	r2, [r0]
	ldr	r0, [sp, #156]
	str	r0, [sp, #100]
	ldr	r0, [sp, #152]
	str	r0, [sp, #96]
	ldr	r0, [sp, #148]
	str	r0, [sp, #92]
	ldr	r0, [sp, #144]
	str	r0, [sp, #88]
	ldr	r0, [sp, #136]
	ldrd	r8, lr, [sp, #128]
	ldr	r3, [sp, #140]
	str	r0, [sp, #84]
	mov.w	r0, #0
	str	r0, [sp, #188]
	str	r0, [sp, #184]
	bls.w	.LBB228_30
	add.w	r0, r1, r1, lsl #2
	ldr	r5, [sp, #160]
	lsls	r1, r0, #4
	ldr	r2, [sp, #184]
	add.w	r11, r9, r0, lsl #4
	ldr	r4, [sp, #188]
	str.w	r5, [r9, r1]
	ldr	r1, [sp, #168]
	str.w	r1, [r11, #8]
	ldr	r1, [sp, #164]
	str.w	r1, [r11, #4]
	ldr	r1, [sp, #172]
	str.w	r1, [r11, #12]
	ldr	r1, [sp, #176]
	ldr	r0, [sp, #180]
	ldr.w	r10, [r11, #40]
	strd	r1, r0, [r11, #16]
	ldrd	r1, r5, [r11, #24]
	str.w	r2, [r11, #24]
	ldr	r2, [sp, #84]
	str.w	r4, [r11, #28]
	eor	r4, r1, #2
	str.w	r2, [r11, #40]
	ldr	r2, [sp, #88]
	ldr.w	r0, [r11, #32]
	str.w	r8, [r11, #32]
	ldr.w	r12, [r11, #36]
	str.w	lr, [r11, #36]
	ldrd	r8, r9, [r11, #56]
	ldr.w	lr, [r11, #44]
	str.w	r3, [r11, #44]
	ldr.w	r3, [r11, #48]
	str.w	r2, [r11, #48]
	ldr.w	r6, [r11, #52]
	ldr	r2, [sp, #92]
	orrs	r4, r5
	str.w	r2, [r11, #52]
	ldr	r2, [sp, #96]
	str.w	r2, [r11, #56]
	ldr	r4, [sp, #100]
	str.w	r4, [r11, #60]
	beq.w	.LBB228_32
	ldr.w	r4, [r11, #76]
	str	r4, [sp, #244]
	ldr.w	r4, [r11, #72]
	str	r4, [sp, #240]
	ldr.w	r4, [r11, #68]
	str	r4, [sp, #236]
	ldr.w	r4, [r11, #64]
	str	r4, [sp, #232]
.LBB228_13:
	ldr	r4, [sp, #24]
	strd	r0, r12, [r4, #16]
	add.w	r0, r4, #32
	str.w	r9, [r4, #44]
	strd	r1, r5, [r4, #8]
	stm.w	r0, {r3, r6, r8}
	ldr	r0, [sp, #232]
	str	r0, [r4, #48]
	ldr	r1, [sp, #236]
	str	r1, [r4, #52]
	ldr	r0, [sp, #240]
	strd	r10, lr, [r4, #24]
	ldr	r1, [sp, #244]
	strd	r0, r1, [r4, #56]
	movs	r0, #0
.LBB228_14:
	strb	r0, [r4]
	sub.w	r4, r7, #28
	mov	sp, r4
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB228_15:
	ldr	r4, [r2, #12]
	str	r4, [sp, #100]
	ldr	r4, [r2, #16]
	str	r4, [sp, #92]
	ldr	r4, [r2, #20]
	str	r4, [sp, #88]
	ldr	r4, [r2, #24]
	str	r4, [sp, #84]
	ldr	r4, [r2, #28]
	str	r4, [sp, #80]
	mov	r4, r2
	mov	r12, r2
	ldr	r5, [r2]
	str	r5, [sp, #96]
	ldr	r0, [r4, #32]!
	str	r0, [sp, #72]
	ldr	r0, [r2, #40]
	str	r0, [sp, #68]
	ldr	r0, [r12, #64]!
	str	r0, [sp, #232]
	ldr	r0, [r2, #68]
	str	r0, [sp, #236]
	ldr	r0, [r2, #72]
	str	r0, [sp, #240]
	ldr	r0, [r2, #76]
	str	r4, [sp, #44]
	ldr	r4, [r2, #36]
	str	r0, [sp, #244]
	subs	r0, r1, r6
	str	r4, [sp, #76]
	ldrd	r5, r8, [r2, #4]
	mov	r4, lr
	str.w	r12, [sp, #36]
	adds	r0, #1
	ldr.w	r11, [r2, #60]
	ldrd	lr, r12, [r2, #44]
	ldrd	r10, r9, [r2, #52]
	strd	r1, r6, [sp, #16]
	str	r0, [sp, #60]
	mov	r0, r4
	str	r2, [sp, #52]
	str	r4, [sp, #40]
	str	r4, [sp, #56]
	str	r3, [sp, #48]
.LBB228_16:
	add.w	r2, r4, r4, lsl #2
	ldr	r0, [sp, #52]
	mov	r1, r8
	str	r4, [sp, #64]
	add.w	r2, r0, r2, lsl #4
.LBB228_17:
	mov	r3, r5
	ldr	r0, [r2]
	mov	r3, r1
	ldr.w	r8, [sp, #96]
	ldr	r3, [sp, #100]
	str	r0, [sp, #96]
	ldr	r0, [r2, #12]
	str	r3, [r2, #12]
	ldr	r3, [sp, #92]
	str	r0, [sp, #100]
	ldr	r0, [r2, #16]
	str	r3, [r2, #16]
	ldr	r3, [sp, #88]
	str	r0, [sp, #92]
	ldr	r0, [r2, #20]
	str	r3, [r2, #20]
	ldr	r3, [sp, #84]
	str	r0, [sp, #88]
	ldr	r0, [r2, #24]
	str	r3, [r2, #24]
	ldr	r3, [sp, #80]
	str	r0, [sp, #84]
	ldr	r0, [r2, #28]
	str	r3, [r2, #28]
	ldr	r3, [sp, #72]
	str	r0, [sp, #80]
	ldr	r0, [r2, #32]
	str	r3, [r2, #32]
	ldr	r3, [sp, #76]
	str	r0, [sp, #72]
	ldr	r0, [r2, #36]
	str	r3, [r2, #36]
	ldr	r3, [sp, #68]
	str	r0, [sp, #76]
	ldr	r0, [r2, #40]
	str	r3, [r2, #40]
	mov	r3, lr
	ldr.w	lr, [r2, #44]
	str	r3, [r2, #44]
	mov	r3, r12
	ldr.w	r12, [r2, #48]
	str	r3, [r2, #48]
	mov	r3, r10
	ldr.w	r10, [r2, #52]
	str	r3, [r2, #52]
	mov	r3, r9
	ldr.w	r9, [r2, #56]
	str	r3, [r2, #56]
	mov	r3, r11
	str.w	r8, [r2]
	ldr	r6, [r2, #4]
	str	r5, [r2, #4]
	ldr.w	r8, [r2, #8]
	str	r1, [r2, #8]
	str	r0, [sp, #68]
	ldr.w	r11, [r2, #60]
	str	r3, [r2, #60]
	ldr	r3, [r2, #64]
	ldr	r1, [sp, #232]
	str	r1, [r2, #64]
	ldr	r0, [sp, #236]
	ldr	r1, [r2, #68]
	ldr	r5, [sp, #240]
	str	r0, [r2, #68]
	ldr	r4, [sp, #244]
	ldr	r0, [r2, #72]
	str	r5, [r2, #72]
	ldr	r5, [r2, #76]
	str	r4, [r2, #76]
	ldr	r4, [sp, #64]
	str	r3, [sp, #232]
	strd	r3, r1, [sp, #160]
	ldr	r3, [sp, #48]
	str	r1, [sp, #236]
	cmp	r4, r3
	strd	r0, r5, [sp, #168]
	strd	r0, r5, [sp, #240]
	bhs	.LBB228_19
	ldr	r0, [sp, #56]
	mov	r1, r8
	add	r4, r0
	str	r4, [sp, #64]
	adds	r2, #80
	mov	r5, r6
	b	.LBB228_17
.LBB228_19:
	ldr	r0, [sp, #60]
	adds	r4, r4, r0
	beq	.LBB228_21
	ldr	r0, [sp, #40]
	mov	r5, r6
	cmp	r4, r0
	it	lo
	movlo	r0, r4
	str	r0, [sp, #40]
	b	.LBB228_16
.LBB228_21:
	ldr	r0, [sp, #44]
	ldr	r1, [sp, #72]
	ldr	r2, [sp, #52]
	str	r1, [r0]
	ldr	r1, [sp, #76]
	str	r1, [r0, #4]
	ldr	r1, [sp, #68]
	strd	r1, lr, [r0, #8]
	ldr	r1, [sp, #36]
	strd	r12, r10, [r0, #16]
	strd	r9, r11, [r0, #24]
	ldr	r0, [sp, #232]
	str	r0, [r1]
	ldr	r0, [sp, #236]
	str	r0, [r1, #4]
	ldr	r0, [sp, #240]
	str	r0, [r1, #8]
	ldr	r0, [sp, #244]
	str	r0, [r1, #12]
	ldr	r0, [sp, #96]
	stm.w	r2, {r0, r6, r8}
	ldr	r0, [sp, #100]
	str	r0, [r2, #12]
	ldr	r0, [sp, #92]
	str	r0, [r2, #16]
	ldr	r0, [sp, #88]
	str	r0, [r2, #20]
	ldr	r0, [sp, #84]
	str	r0, [r2, #24]
	ldr	r0, [sp, #40]
	cmp	r0, #2
	ldr	r0, [sp, #80]
	str	r0, [r2, #28]
	blo.w	.LBB228_28
	movs	r4, #1
	ldr.w	r8, [sp, #48]
.LBB228_23:
	add.w	r0, r4, r4, lsl #2
	str	r4, [sp, #44]
	lsls	r1, r0, #4
	add.w	r0, r2, r0, lsl #4
	str	r0, [sp, #36]
	ldr.w	r9, [r2, r1]
	ldr	r1, [r0, #4]
	str	r1, [sp, #100]
	ldr	r1, [r0, #8]
	str	r1, [sp, #96]
	ldr	r1, [r0, #12]
	str	r1, [sp, #92]
	ldr	r1, [r0, #16]
	str	r1, [sp, #88]
	ldr	r1, [r0, #20]
	str	r1, [sp, #84]
	ldr	r1, [r0, #24]
	str	r1, [sp, #80]
	mov	r1, r0
	ldr	r3, [r0, #28]
	str	r3, [sp, #72]
	ldr	r5, [r0, #56]
	ldr	r3, [r1, #32]!
	str	r1, [sp, #28]
	mov	r1, r0
	str	r3, [sp, #76]
	ldr	r3, [r0, #36]
	str	r3, [sp, #68]
	ldr	r3, [r1, #64]!
	str	r3, [sp, #232]
	ldr	r3, [r0, #68]
	str	r3, [sp, #236]
	ldr	r3, [r0, #72]
	str	r1, [sp, #32]
	str	r3, [sp, #240]
	ldr	r3, [r0, #76]
	ldr	r1, [r0, #48]
	str	r3, [sp, #244]
	ldrd	r12, lr, [r0, #40]
	str	r1, [sp, #60]
	ldr	r1, [r0, #52]
	ldr	r3, [r0, #60]
	ldr	r0, [sp, #56]
	adds	r6, r4, r0
	str	r1, [sp, #64]
	b	.LBB228_25
.LBB228_24:
	ldr	r0, [sp, #56]
	ldr	r2, [sp, #52]
	add	r6, r0
	mov	r3, r5
	mov	r5, r11
.LBB228_25:
	add.w	r1, r6, r6, lsl #2
	mov	r0, r9
	lsl.w	r11, r1, #4
	ldr	r4, [sp, #244]
	add.w	r10, r2, r1, lsl #4
	cmp	r6, r8
	ldr.w	r9, [r2, r11]
	str.w	r0, [r2, r11]
	ldr	r0, [sp, #96]
	ldr.w	r1, [r10, #8]
	str.w	r0, [r10, #8]
	ldr	r0, [sp, #92]
	str	r1, [sp, #96]
	ldr.w	r1, [r10, #12]
	str.w	r0, [r10, #12]
	ldr	r0, [sp, #100]
	str	r1, [sp, #92]
	ldr.w	r1, [r10, #4]
	str.w	r0, [r10, #4]
	ldr	r0, [sp, #88]
	str	r1, [sp, #100]
	ldr.w	r1, [r10, #16]
	str.w	r0, [r10, #16]
	ldr	r0, [sp, #84]
	str	r1, [sp, #88]
	ldr.w	r1, [r10, #20]
	str.w	r0, [r10, #20]
	ldr	r0, [sp, #80]
	str	r1, [sp, #84]
	ldr.w	r1, [r10, #24]
	str.w	r0, [r10, #24]
	ldr	r0, [sp, #72]
	str	r1, [sp, #80]
	ldr.w	r1, [r10, #28]
	str.w	r0, [r10, #28]
	mov	r0, r12
	ldr.w	r12, [r10, #40]
	str.w	r0, [r10, #40]
	mov	r0, lr
	ldr.w	lr, [r10, #44]
	str.w	r0, [r10, #44]
	ldr	r0, [sp, #76]
	str	r1, [sp, #72]
	ldr.w	r1, [r10, #32]
	str.w	r0, [r10, #32]
	ldr	r0, [sp, #68]
	str	r1, [sp, #76]
	ldr.w	r1, [r10, #36]
	str.w	r0, [r10, #36]
	ldr	r0, [sp, #60]
	str	r1, [sp, #68]
	ldr.w	r1, [r10, #48]
	str.w	r0, [r10, #48]
	ldr	r0, [sp, #64]
	str	r1, [sp, #60]
	ldr.w	r1, [r10, #52]
	str.w	r0, [r10, #52]
	mov	r0, r5
	str	r1, [sp, #64]
	mov	r0, r3
	ldr	r1, [sp, #232]
	ldr.w	r11, [r10, #56]
	ldr	r2, [sp, #236]
	str.w	r5, [r10, #56]
	ldr	r3, [sp, #240]
	ldr.w	r5, [r10, #60]
	str.w	r0, [r10, #60]
	ldr.w	r0, [r10, #64]
	str.w	r1, [r10, #64]
	ldr.w	r1, [r10, #68]
	str.w	r2, [r10, #68]
	ldr.w	r2, [r10, #72]
	str.w	r3, [r10, #72]
	ldr.w	r3, [r10, #76]
	str.w	r4, [r10, #76]
	add	r4, sp, #160
	str	r0, [sp, #232]
	strd	r2, r3, [sp, #240]
	stm	r4!, {r0, r1, r2, r3}
	str	r1, [sp, #236]
	blo.w	.LBB228_24
	sub.w	r6, r6, r8
	ldr	r0, [sp, #44]
	cmp	r6, r0
	ldr	r2, [sp, #52]
	mov	r3, r5
	mov	r5, r11
	bne.w	.LBB228_25
	ldr	r0, [sp, #36]
	ldr	r1, [sp, #100]
	str	r1, [r0, #4]
	ldr	r1, [sp, #96]
	str	r1, [r0, #8]
	ldr	r1, [sp, #92]
	str	r1, [r0, #12]
	ldr	r1, [sp, #88]
	str	r1, [r0, #16]
	ldr	r1, [sp, #84]
	str	r1, [r0, #20]
	ldr	r1, [sp, #80]
	str.w	r9, [r0]
	str	r1, [r0, #24]
	ldr	r1, [sp, #72]
	str	r1, [r0, #28]
	ldr	r0, [sp, #28]
	ldr	r1, [sp, #76]
	adds	r4, r0, #4
	str	r1, [r0]
	ldr	r1, [sp, #68]
	stm.w	r4, {r1, r12, lr}
	ldr	r1, [sp, #60]
	str	r1, [r0, #16]
	ldr	r1, [sp, #64]
	str	r3, [r0, #28]
	strd	r1, r5, [r0, #20]
	ldr	r1, [sp, #32]
	ldr	r4, [sp, #44]
	ldr	r0, [sp, #232]
	adds	r4, #1
	str	r0, [r1]
	ldr	r0, [sp, #236]
	str	r0, [r1, #4]
	ldr	r0, [sp, #240]
	str	r0, [r1, #8]
	ldr	r0, [sp, #40]
	cmp	r4, r0
	ldr	r0, [sp, #244]
	str	r0, [r1, #12]
	bne.w	.LBB228_23
.LBB228_28:
	ldrd	r1, r6, [sp, #16]
	add.w	r8, sp, #104
	cmp	r6, r1
	bhi.w	.LBB228_7
.LBB228_29:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.25
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.25
	b	.LBB228_31
.LBB228_30:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.28
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.28
.LBB228_31:
	mov	r0, r1
	mov	r1, r6
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB228_32:
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.26
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.29
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.26
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.29
	movs	r1, #16
	bl	core::option::expect_failed::h22026eb39ea9589c
	.inst.n	0xdefe
.LBB228_33:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.24
	mov	r0, r1
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.24
	mov	r1, r6
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB228_34:
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1219
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1220
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1219
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1220
	movs	r1, #35
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB228_35:
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.26
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.27
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.26
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.27
	movs	r1, #16
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.Lfunc_end228:
	.size	smoltcp::iface::route::Routes::add_default_ipv4_route::ha591256f21e3a8bc, .Lfunc_end228-smoltcp::iface::route::Routes::add_default_ipv4_route::ha591256f21e3a8bc
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7managed3map20binary_search_by_key17h3c2ff4370daba264E,"ax",%progbits
	.p2align	1
	.type	managed::map::binary_search_by_key::h3c2ff4370daba264,%function
	.code	16
	.thumb_func
managed::map::binary_search_by_key::h3c2ff4370daba264:
.Lfunc_begin229:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#12
	sub	sp, #12
	cmp	r1, #0
	beq	.LBB229_17
	mov	r4, r0
	ldrb.w	r10, [r2]
	ldrb	r0, [r2, #5]
	add.w	r8, r2, #1
	str	r0, [sp, #4]
	ldrb	r0, [r2, #17]
	movs	r6, #0
	mov	r9, r1
	str	r0, [sp, #8]
	b	.LBB229_4
.LBB229_2:
	adds	r6, r5, #1
	mov	r5, r9
.LBB229_3:
	subs	r1, r5, r6
	mov	r9, r5
	bls	.LBB229_16
.LBB229_4:
	add.w	r5, r6, r1, lsr #1
	add.w	r0, r5, r5, lsl #2
	add.w	r0, r4, r0, lsl #4
	ldrd	r1, r2, [r0, #24]
	eor	r1, r1, #2
	orrs.w	r11, r1, r2
	it	ne
	movne	r11, r0
	beq	.LBB229_3
	ldrb.w	r0, [r11]
	cmp	r0, r10
	bne	.LBB229_9
	add.w	r0, r11, #1
	cmp.w	r10, #0
	beq	.LBB229_10
	movs	r2, #16
	mov	r1, r8
	bl	memcmp
	cmp	r0, #0
	it	ne
	movne	r0, #1
	it	mi
	movmi.w	r0, #-1
	cbnz	r0, .LBB229_11
	ldrb.w	r1, [r11, #17]
	ldr	r2, [sp, #8]
	b	.LBB229_13
.LBB229_9:
	blo	.LBB229_2
	b	.LBB229_3
.LBB229_10:
	movs	r2, #4
	mov	r1, r8
	bl	memcmp
	cmp	r0, #0
	it	ne
	movne	r0, #1
	it	mi
	movmi.w	r0, #-1
	cbz	r0, .LBB229_12
.LBB229_11:
	uxtb	r1, r0
	cmp	r1, #255
	bne	.LBB229_14
	b	.LBB229_2
.LBB229_12:
	ldrb.w	r1, [r11, #5]
	ldr	r2, [sp, #4]
.LBB229_13:
	subs	r0, r1, r2
	it	ne
	movne	r0, #1
	cmp	r1, r2
	blo	.LBB229_2
.LBB229_14:
	uxtb	r0, r0
	cmp	r0, #1
	beq	.LBB229_3
	movs	r0, #0
	mov	r1, r5
	add	sp, #12
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB229_16:
	movs	r0, #1
	mov	r5, r6
	mov	r1, r5
	add	sp, #12
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB229_17:
	movs	r0, #1
	movs	r5, #0
	mov	r1, r5
	add	sp, #12
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.Lfunc_end229:
	.size	managed::map::binary_search_by_key::h3c2ff4370daba264, .Lfunc_end229-managed::map::binary_search_by_key::h3c2ff4370daba264
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp5iface5route6Routes25remove_default_ipv4_route17h246da95b8708a486E,"ax",%progbits
	.p2align	1
	.type	smoltcp::iface::route::Routes::remove_default_ipv4_route::h246da95b8708a486,%function
	.code	16
	.thumb_func
smoltcp::iface::route::Routes::remove_default_ipv4_route::h246da95b8708a486:
.Lfunc_begin230:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#220
	sub	sp, #220
	ldrd	r9, r4, [r1]
	mov	r11, r0
	add	r2, sp, #84
	mov	r0, r9
	mov	r1, r4
	movs	r6, #0
	strb.w	r6, [sp, #89]
	str.w	r6, [sp, #85]
	strb.w	r6, [sp, #84]
	bl	managed::map::binary_search_by_key::h3c2ff4370daba264
	cbz	r0, .LBB230_2
	add.w	r0, r11, #8
	movs	r1, #48
	bl	__aeabi_memclr8
	movs	r0, #2
	strd	r0, r6, [r11]
	add	sp, #220
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB230_2:
	cmp	r4, r1
	bls.w	.LBB230_17
	add.w	r12, r1, r1, lsl #2
	str	r4, [sp, #72]
	str	r1, [sp, #80]
	add	r2, sp, #152
	add.w	r8, r9, r12, lsl #4
	add.w	r10, r8, #32
	lsl.w	r12, r12, #4
	mov	lr, r10
	ldrd	r1, r0, [r8, #24]
	strd	r0, r1, [sp, #8]
	ldm.w	lr!, {r0, r1, r3, r4, r5, r6}
	stm	r2!, {r0, r1, r3, r4, r5, r6}
	ldm.w	lr, {r0, r1, r3, r4, r5, r6}
	stm	r2!, {r0, r1, r3, r4, r5, r6}
	movs	r0, #0
	movs	r1, #2
	str.w	r0, [r9, r12]
	strd	r0, r0, [r8, #4]
	strd	r0, r0, [r8, #12]
	strd	r0, r1, [r8, #20]
	str.w	r0, [r8, #28]
	movs	r1, #48
	mov	r0, r10
	str.w	r9, [sp, #68]
	str.w	r8, [sp, #40]
	str.w	r10, [sp, #24]
	bl	__aeabi_memclr8
	ldr	r0, [sp, #12]
	ldr	r1, [sp, #8]
	eor	r0, r0, #2
	orrs	r0, r1
	beq.w	.LBB230_18
	add.w	r9, sp, #152
	add.w	r12, sp, #104
	mov	r2, r9
	mov	lr, r12
	ldm	r2!, {r0, r1, r3, r4, r5, r6}
	stm.w	lr!, {r0, r1, r3, r4, r5, r6}
	ldm.w	r2, {r0, r1, r3, r4, r5, r6}
	stm.w	lr, {r0, r1, r3, r4, r5, r6}
	mov	r0, r9
	ldm.w	r12!, {r1, r2, r3, r4, r5, r6}
	stm	r0!, {r1, r2, r3, r4, r5, r6}
	ldm.w	r12, {r1, r2, r3, r4, r5, r6}
	stm	r0!, {r1, r2, r3, r4, r5, r6}
	ldr.w	r10, [sp, #72]
	ldr	r0, [sp, #80]
	subs.w	r8, r10, r0
	beq.w	.LBB230_19
	mov	r12, r9
	subs.w	r3, r8, #1
	beq.w	.LBB230_16
	ldr	r1, [sp, #40]
	mov	r12, r3
	str.w	r11, [sp, #4]
	add.w	r11, r1, #12
	ldr	r5, [r1, #24]
	str	r5, [sp, #80]
	ldr	r5, [r1, #28]
	str	r5, [sp, #76]
	mov	r5, r1
	str.w	r12, [sp, #36]
	ldm.w	r1, {r2, r9, lr}
	ldr	r3, [r5, #64]!
	str	r3, [sp, #200]
	ldrd	r3, r1, [r5, #4]
	str	r3, [sp, #204]
	add.w	r3, r10, r10, lsl #2
	str	r5, [sp, #20]
	ldr	r5, [r5, #12]
	strd	r1, r5, [sp, #208]
	ldr	r1, [sp, #68]
	str.w	r12, [sp, #28]
	ldm.w	r11, {r0, r6, r11}
	add.w	r1, r1, r3, lsl #4
	sub.w	r3, r8, #2
	sub.w	r5, r1, #16
	movs	r1, #0
	str	r1, [sp, #72]
	movs	r1, #0
	str	r1, [sp, #64]
	movs	r1, #0
	str	r1, [sp, #60]
	movs	r1, #0
	str	r1, [sp, #56]
	movs	r1, #0
	str	r1, [sp, #52]
	movs	r1, #0
	str	r1, [sp, #68]
	movs	r1, #0
	str	r1, [sp, #48]
	movs	r1, #0
	str	r1, [sp, #44]
	mov	r1, r12
.LBB230_7:
	mov	r1, r2
	ldr	r2, [r5, #-64]
	str	r1, [r5, #-64]
	mov	r1, r9
	mov	r1, lr
	ldr	lr, [r5, #-56]
	str	r1, [r5, #-56]
	mov	r1, r0
	mov	r1, r6
	ldr	r8, [r5, #-52]
	mov	r1, r11
	str	r0, [r5, #-52]
	ldr	r11, [r5, #-44]
	str	r1, [r5, #-44]
	ldr	r1, [sp, #80]
	ldr	r0, [r5, #-40]
	str	r0, [sp, #80]
	ldr	r0, [r5, #-36]
	str	r1, [r5, #-40]
	ldr	r1, [sp, #76]
	str	r0, [sp, #76]
	ldr	r0, [r5, #-32]
	str	r1, [r5, #-36]
	ldr	r1, [sp, #72]
	str	r0, [sp, #72]
	ldr	r0, [r5, #-28]
	str	r1, [r5, #-32]
	ldr	r1, [sp, #64]
	str	r0, [sp, #64]
	ldr	r0, [r5, #-24]
	str	r1, [r5, #-28]
	ldr	r1, [sp, #60]
	str	r0, [sp, #60]
	ldr	r0, [r5, #-20]
	str	r1, [r5, #-24]
	ldr	r1, [sp, #56]
	str	r0, [sp, #56]
	ldr	r0, [r5, #-16]
	str	r1, [r5, #-20]
	ldr	r1, [sp, #52]
	str	r0, [sp, #52]
	ldr	r0, [r5, #-12]
	str	r1, [r5, #-16]
	ldr	r1, [sp, #68]
	str	r0, [sp, #68]
	ldr	r0, [r5, #-8]
	str	r1, [r5, #-12]
	ldr	r1, [sp, #48]
	str	r2, [sp, #32]
	ldr	r12, [r5, #-60]
	ldr	r10, [r5, #-48]
	str	r0, [sp, #48]
	str	r1, [r5, #-8]
	ldr	r1, [sp, #44]
	ldr	r0, [r5, #-4]
	ldr	r2, [sp, #200]
	ldr	r4, [sp, #208]
	str	r9, [r5, #-60]
	ldr.w	r9, [sp, #204]
	str	r6, [r5, #-48]
	ldr	r6, [sp, #212]
	str	r0, [sp, #44]
	ldr	r0, [r5, #8]
	str	r1, [r5, #-4]
	ldr	r1, [r5]
	str	r2, [r5]
	ldr	r2, [r5, #4]
	str.w	r9, [r5, #4]
	str	r4, [r5, #8]
	ldr	r4, [r5, #12]
	str	r6, [r5, #12]
	str	r1, [sp, #200]
	strd	r0, r4, [sp, #112]
	strd	r0, r4, [sp, #208]
	strd	r1, r2, [sp, #104]
	str	r2, [sp, #204]
	cbz	r3, .LBB230_9
	ldr	r0, [sp, #28]
	subs	r5, #80
	cmp	r3, r0
	mov	r9, r12
	it	lo
	movlo	r0, r3
	str	r0, [sp, #28]
	subs	r3, #1
	mov	r0, r8
	mov	r6, r10
	ldr	r2, [sp, #32]
	b	.LBB230_7
.LBB230_9:
	ldr	r0, [sp, #24]
	ldr	r3, [sp, #36]
	ldr	r1, [sp, #72]
	str	r1, [r0]
	ldr	r1, [sp, #64]
	str	r1, [r0, #4]
	ldr	r1, [sp, #60]
	str	r1, [r0, #8]
	ldr	r1, [sp, #56]
	str	r1, [r0, #12]
	ldr	r1, [sp, #52]
	str	r1, [r0, #16]
	ldr	r1, [sp, #68]
	str	r1, [r0, #20]
	ldr	r1, [sp, #48]
	str	r1, [r0, #24]
	ldr	r1, [sp, #44]
	str	r1, [r0, #28]
	ldr	r1, [sp, #20]
	ldr	r0, [sp, #200]
	str	r0, [r1]
	ldr	r0, [sp, #204]
	str	r0, [r1, #4]
	ldr	r0, [sp, #208]
	str	r0, [r1, #8]
	ldr	r0, [sp, #212]
	str	r0, [r1, #12]
	ldr	r0, [sp, #40]
	ldr	r1, [sp, #32]
	stm.w	r0, {r1, r12, lr}
	add.w	r1, r0, #12
	stm.w	r1, {r8, r10, r11}
	ldr	r1, [sp, #80]
	str	r1, [r0, #24]
	ldr	r1, [sp, #28]
	cmp	r1, #2
	ldr	r1, [sp, #76]
	str	r1, [r0, #28]
	blo.w	.LBB230_15
	movs	r4, #1
.LBB230_11:
	add.w	r0, r4, r4, lsl #2
	ldr	r2, [sp, #40]
	lsls	r1, r0, #4
	str	r4, [sp, #32]
	add.w	r5, r2, r0, lsl #4
	str	r5, [sp, #24]
	ldr.w	lr, [r2, r1]
	ldrd	r2, r0, [r5, #4]
	str	r0, [sp, #80]
	ldr	r0, [r5, #12]
	str	r0, [sp, #76]
	ldr	r0, [r5, #16]
	str	r0, [sp, #72]
	ldr	r0, [r5, #20]
	str	r0, [sp, #68]
	ldr	r0, [r5, #24]
	str	r0, [sp, #64]
	mov	r0, r5
	ldr	r1, [r5, #28]
	str	r1, [sp, #56]
	ldr	r1, [r0, #32]!
	str	r1, [sp, #60]
	mov	r1, r5
	str	r0, [sp, #16]
	ldr	r0, [r5, #36]
	str	r0, [sp, #52]
	ldr	r0, [r1, #64]!
	str	r0, [sp, #200]
	ldr	r0, [r5, #68]
	str	r0, [sp, #204]
	ldr	r0, [r5, #72]
	str	r0, [sp, #208]
	ldr	r0, [r5, #76]
	str	r0, [sp, #212]
	ldr	r0, [r5, #56]
	str	r0, [sp, #44]
	ldrd	r9, r12, [r5, #40]
	ldrd	r8, r11, [r5, #48]
	ldr	r0, [r5, #60]
	adds	r5, r4, r3
	str	r1, [sp, #20]
	str	r0, [sp, #48]
.LBB230_12:
	mov	r4, r5
	add.w	r5, r5, r5, lsl #2
	ldr	r0, [sp, #40]
	lsls	r6, r5, #4
	mov	r10, lr
	ldr	r1, [sp, #208]
	add.w	r5, r0, r5, lsl #4
	ldr.w	lr, [r0, r6]
	str.w	r10, [r0, r6]
	ldr	r6, [sp, #80]
	ldr	r0, [r5, #8]
	str	r6, [r5, #8]
	ldr	r6, [sp, #76]
	str	r0, [sp, #80]
	ldr	r0, [r5, #12]
	str	r6, [r5, #12]
	mov	r6, r2
	str	r0, [sp, #76]
	ldr	r6, [sp, #72]
	ldr	r0, [r5, #16]
	str	r6, [r5, #16]
	ldr	r6, [sp, #68]
	str	r0, [sp, #72]
	ldr	r0, [r5, #20]
	str	r6, [r5, #20]
	ldr	r6, [sp, #64]
	str	r0, [sp, #68]
	ldr	r0, [r5, #24]
	str	r6, [r5, #24]
	ldr	r6, [sp, #56]
	str	r0, [sp, #64]
	ldr	r0, [r5, #28]
	str	r6, [r5, #28]
	mov	r6, r9
	ldr.w	r9, [r5, #40]
	str	r6, [r5, #40]
	mov	r6, r12
	ldr.w	r12, [r5, #44]
	str	r6, [r5, #44]
	ldr	r6, [sp, #60]
	str	r0, [sp, #56]
	ldr	r0, [r5, #32]
	str	r6, [r5, #32]
	ldr	r6, [sp, #52]
	str	r0, [sp, #60]
	ldr	r0, [r5, #36]
	str	r6, [r5, #36]
	mov	r6, r8
	str	r0, [sp, #52]
	ldr.w	r8, [r5, #48]
	str	r6, [r5, #48]
	mov	r6, r11
	ldr	r0, [r5, #56]
	ldr.w	r10, [r5, #4]
	ldr.w	r11, [r5, #52]
	str	r6, [r5, #52]
	ldr	r6, [sp, #44]
	str	r0, [sp, #44]
	ldr	r0, [r5, #60]
	str	r2, [r5, #4]
	str	r6, [r5, #56]
	ldr	r6, [sp, #48]
	str	r0, [sp, #48]
	ldr	r2, [sp, #200]
	ldr	r0, [sp, #204]
	str	r6, [r5, #60]
	ldr	r3, [sp, #212]
	ldr	r6, [r5, #64]
	str	r2, [r5, #64]
	ldr	r2, [r5, #68]
	str	r0, [r5, #68]
	ldr	r0, [r5, #72]
	str	r1, [r5, #72]
	ldr	r1, [r5, #76]
	str	r3, [r5, #76]
	ldr	r3, [sp, #36]
	strd	r6, r2, [sp, #104]
	cmp	r4, #0
	str	r2, [sp, #204]
	mov	r2, r10
	mov	r5, r3
	str	r6, [sp, #200]
	strd	r0, r1, [sp, #112]
	strd	r0, r1, [sp, #208]
	beq	.LBB230_12
	subs	r5, r4, #1
	ldr	r0, [sp, #32]
	cmp	r5, r0
	bne	.LBB230_12
	ldr	r0, [sp, #24]
	ldr	r1, [sp, #80]
	str	r1, [r0, #8]
	ldr	r1, [sp, #76]
	str	r1, [r0, #12]
	ldr	r1, [sp, #72]
	str	r1, [r0, #16]
	ldr	r1, [sp, #68]
	str	r1, [r0, #20]
	ldr	r1, [sp, #64]
	strd	lr, r2, [r0]
	str	r1, [r0, #24]
	ldr	r1, [sp, #56]
	str	r1, [r0, #28]
	ldr	r0, [sp, #16]
	ldr	r1, [sp, #60]
	adds	r2, r0, #4
	str	r1, [r0]
	ldr	r1, [sp, #52]
	stm.w	r2, {r1, r9, r12}
	ldr	r1, [sp, #44]
	str	r1, [r0, #24]
	ldr	r1, [sp, #48]
	str	r1, [r0, #28]
	ldr	r1, [sp, #20]
	ldr	r4, [sp, #32]
	strd	r8, r11, [r0, #16]
	ldr	r0, [sp, #200]
	str	r0, [r1]
	ldr	r0, [sp, #204]
	str	r0, [r1, #4]
	ldr	r0, [sp, #208]
	adds	r4, #1
	str	r0, [r1, #8]
	ldr	r0, [sp, #28]
	cmp	r4, r0
	ldr	r0, [sp, #212]
	str	r0, [r1, #12]
	bne.w	.LBB230_11
.LBB230_15:
	ldr.w	r11, [sp, #4]
	add.w	r12, sp, #152
.LBB230_16:
	add.w	r0, r11, #8
	ldm.w	r12!, {r1, r2, r3, r4, r5, r6}
	stm	r0!, {r1, r2, r3, r4, r5, r6}
	ldm.w	r12, {r1, r2, r3, r4, r5, r6}
	stm	r0!, {r1, r2, r3, r4, r5, r6}
	ldrd	r1, r0, [sp, #8]
	strd	r0, r1, [r11]
	add	sp, #220
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB230_17:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.30
	mov	r0, r1
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.30
	mov	r1, r4
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB230_18:
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.26
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.31
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.26
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.31
	movs	r1, #16
	bl	core::option::expect_failed::h22026eb39ea9589c
	.inst.n	0xdefe
.LBB230_19:
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1219
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1220
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1219
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1220
	movs	r1, #35
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.Lfunc_end230:
	.size	smoltcp::iface::route::Routes::remove_default_ipv4_route::h246da95b8708a486, .Lfunc_end230-smoltcp::iface::route::Routes::remove_default_ipv4_route::h246da95b8708a486
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN71_$LT$smoltcp..wire..ethernet..Address$u20$as$u20$core..fmt..Display$GT$3fmt17h8290af5f199f6c5aE","ax",%progbits
	.p2align	1
	.type	<smoltcp::wire::ethernet::Address as core::fmt::Display>::fmt::h8290af5f199f6c5a,%function
	.code	16
	.thumb_func
<smoltcp::wire::ethernet::Address as core::fmt::Display>::fmt::h8290af5f199f6c5a:
.Lfunc_begin231:
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	.pad	#80
	sub	sp, #80
	ldrh	r2, [r0, #4]
	ldr	r0, [r0]
	str	r0, [sp]
	mov	r0, sp
	strh.w	r2, [sp, #4]
	movw	r2, :lower16:core::fmt::num::<impl core::fmt::LowerHex for i8>::fmt::hd91ed785dea0d6b1
	adds	r3, r0, #1
	movt	r2, :upper16:core::fmt::num::<impl core::fmt::LowerHex for i8>::fmt::hd91ed785dea0d6b1
	str	r0, [sp, #32]
	strd	r3, r2, [sp, #40]
	adds	r3, r0, #2
	str	r2, [sp, #36]
	strd	r3, r2, [sp, #48]
	adds	r3, r0, #3
	strd	r3, r2, [sp, #56]
	adds	r3, r0, #4
	adds	r0, #5
	strd	r0, r2, [sp, #72]
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.220
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.220
	str	r0, [sp, #8]
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.221
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.221
	strd	r3, r2, [sp, #64]
	movs	r2, #6
	str	r2, [sp, #12]
	strd	r0, r2, [sp, #16]
	add	r0, sp, #32
	str	r0, [sp, #24]
	mov	r0, r1
	add	r1, sp, #8
	str	r2, [sp, #28]
	bl	core::fmt::Formatter::write_fmt::hd37bb40752075c70
	add	sp, #80
	pop	{r7, pc}
.Lfunc_end231:
	.size	<smoltcp::wire::ethernet::Address as core::fmt::Display>::fmt::h8290af5f199f6c5a, .Lfunc_end231-<smoltcp::wire::ethernet::Address as core::fmt::Display>::fmt::h8290af5f199f6c5a
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp6socket6dhcpv412Dhcpv4Socket7process17h233a98d8058a82c3E,"ax",%progbits
	.p2align	2
	.type	smoltcp::socket::dhcpv4::Dhcpv4Socket::process::h233a98d8058a82c3,%function
	.code	16
	.thumb_func
smoltcp::socket::dhcpv4::Dhcpv4Socket::process::h233a98d8058a82c3:
.Lfunc_begin232:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#332
	sub	sp, #332
	uxth	r3, r3
	cmp	r3, #67
	ittt	eq
	ldreq	r3, [r7, #8]
	uxtheq	r3, r3
	cmpeq	r3, #68
	beq	.LBB232_2
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.68
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.70
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.68
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.70
	movs	r1, #88
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB232_2:
	ldr	r6, [r7, #16]
	cmp	r6, #240
	blo.w	.LBB232_119
	ldr.w	r10, [r7, #12]
	ldrb.w	r3, [r10, #1]
	cmp	r3, #1
	bne.w	.LBB232_119
	ldrb.w	r3, [r10, #2]
	cmp	r3, #6
	bne.w	.LBB232_119
	movw	r5, #33379
	ldr.w	r3, [r10, #236]
	movt	r5, #25427
	cmp	r3, r5
	bne.w	.LBB232_119
	ldrh.w	r9, [r10, #32]
	mov	r4, r1
	ldr.w	lr, [r2, #4]
	ldr.w	r12, [r10, #4]
	ldr.w	r8, [r10, #28]
	ldr.w	r2, [r10, #16]
	ldr.w	r11, [r10, #12]
	subs.w	r1, r6, #240
	ldr.w	r5, [r10, #20]
	mov.w	r3, #0
	strh.w	r3, [sp, #308]
	ldr.w	r6, [r10, #24]
	strd	r3, r3, [sp, #300]
	str	r6, [sp, #84]
	str	r3, [sp, #296]
	beq.w	.LBB232_119
	strd	lr, r0, [sp, #60]
	add	r0, sp, #156
	strd	r5, r4, [sp, #36]
	add.w	r5, r0, #26
	rev.w	r0, r12
	str	r0, [sp, #28]
	add	r0, sp, #248
	adds	r0, #1
	str	r0, [sp, #32]
	movs	r0, #0
	str	r0, [sp, #148]
	movs	r0, #2
	str	r0, [sp, #72]
	movs	r0, #8
	str	r0, [sp, #68]
	strd	r8, r2, [sp, #52]
	add.w	r8, r10, #240
	strd	r11, r9, [sp, #44]
	movs	r0, #1
	str	r0, [sp, #88]
	movs	r0, #0
	str	r0, [sp, #144]
	movs	r0, #0
	str	r0, [sp, #152]
	movs	r0, #0
	str	r0, [sp, #140]
	movs	r0, #0
	str	r0, [sp, #136]
	movs	r0, #0
	str	r0, [sp, #80]
	movs	r0, #0
	str	r0, [sp, #76]
	movs	r0, #0
	str	r0, [sp, #132]
	movs	r0, #0
	str	r0, [sp, #128]
	b	.LBB232_9
.LBB232_8:
	cmp	r1, #0
	beq.w	.LBB232_93
.LBB232_9:
	ldrb.w	r10, [r8]
	cmp.w	r10, #0
	beq	.LBB232_14
	cmp.w	r10, #255
	bne	.LBB232_15
	movs	r0, #1
	mov.w	r9, #0
.LBB232_12:
	mov.w	r12, #0
.LBB232_13:
	movs	r2, #0
	b	.LBB232_53
.LBB232_14:
	mov.w	r9, #1
	mov.w	r12, #0
	movs	r2, #0
	movs	r0, #1
	b	.LBB232_53
.LBB232_15:
	cmp	r1, #2
	blo.w	.LBB232_119
	ldrb.w	r11, [r8, #1]
	add.w	r0, r11, #2
	mov	r3, r11
	cmp	r0, r1
	it	hi
	movhi	r3, #0
	bhi.w	.LBB232_119
	sub.w	r4, r10, #1
	add.w	r2, r8, #2
	cmp	r4, #60
	bhi.w	.LBB232_51
.LCPI232_0:
	tbh	[pc, r4, lsl #1]
.LJTI232_0:
	.short	(.LBB232_20-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_26-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_29-(.LCPI232_0+4))/2
	.short	(.LBB232_33-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_38-(.LCPI232_0+4))/2
	.short	(.LBB232_23-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_43-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_51-(.LCPI232_0+4))/2
	.short	(.LBB232_47-(.LCPI232_0+4))/2
	.p2align	1
.LBB232_20:
	cmp.w	r11, #4
	bne.w	.LBB232_51
	cmp	r3, #4
	bne.w	.LBB232_128
	ldr	r2, [r2]
	mov.w	r11, #4
	lsrs	r3, r2, #8
	mov.w	r9, #8
	b	.LBB232_32
.LBB232_23:
	cmp.w	r11, #4
	bne.w	.LBB232_51
	cmp	r3, #4
	bne.w	.LBB232_128
	ldr	r2, [r2]
	mov.w	r11, #4
	lsrs	r3, r2, #8
	mov.w	r9, #5
	b	.LBB232_32
.LBB232_26:
	cmp.w	r11, #4
	bne.w	.LBB232_51
	cmp	r3, #4
	bne.w	.LBB232_128
	ldr	r2, [r2]
	mov.w	r11, #4
	lsrs	r3, r2, #8
	mov.w	r9, #7
	b	.LBB232_32
.LBB232_29:
	cmp.w	r11, #4
	bne.w	.LBB232_51
	cmp	r3, #4
	bne.w	.LBB232_128
	ldr	r2, [r2]
	mov.w	r11, #4
	lsrs	r3, r2, #8
	mov.w	r9, #3
.LBB232_32:
	lsr.w	r12, r2, #16
	uxtb.w	r10, r2
	lsrs	r2, r2, #24
	b	.LBB232_53
.LBB232_33:
	cmp.w	r11, #4
	bne.w	.LBB232_51
	cmp	r3, #1
	beq.w	.LBB232_121
	cmp	r3, #2
	bls.w	.LBB232_123
	cmp	r3, #3
	beq.w	.LBB232_126
	ldrb.w	r3, [r8, #3]
	ldrb.w	r6, [r8, #4]
	ldrb	r2, [r2]
	ldrb.w	r4, [r8, #5]
	mov.w	r11, #4
	mov.w	r9, #6
	orr.w	r2, r2, r3, lsl #8
	orr.w	r2, r2, r6, lsl #16
	orr.w	r2, r2, r4, lsl #24
	rev	r3, r2
	str.w	r3, [sp, #325]
	ldr.w	r12, [sp, #324]
	lsr.w	lr, r3, #24
	lsr.w	r2, r12, #8
	b	.LBB232_52
.LBB232_38:
	cmp.w	r11, #1
	bne	.LBB232_51
	ldrb	r3, [r2]
	subs	r2, r3, #1
	cmp	r2, #7
	bhi.w	.LBB232_84
.LCPI232_1:
	tbh	[pc, r2, lsl #1]
.LJTI232_1:
	.short	(.LBB232_42-(.LCPI232_1+4))/2
	.short	(.LBB232_85-(.LCPI232_1+4))/2
	.short	(.LBB232_86-(.LCPI232_1+4))/2
	.short	(.LBB232_87-(.LCPI232_1+4))/2
	.short	(.LBB232_88-(.LCPI232_1+4))/2
	.short	(.LBB232_89-(.LCPI232_1+4))/2
	.short	(.LBB232_90-(.LCPI232_1+4))/2
	.short	(.LBB232_91-(.LCPI232_1+4))/2
	.p2align	1
.LBB232_42:
	mov.w	r11, #1
	mov.w	r9, #2
	mov.w	r10, #0
	b	.LBB232_12
.LBB232_43:
	cmp.w	r11, #2
	bne	.LBB232_51
	cmp	r3, #0
	beq.w	.LBB232_122
	cmp	r3, #1
	beq.w	.LBB232_124
	ldrh.w	r2, [r8, #2]
	mov.w	r11, #2
	mov.w	r9, #9
	rev	r2, r2
	lsrs	r3, r2, #16
	strh.w	r3, [sp, #324]
	ldr.w	r12, [sp, #325]
	lsr.w	r2, r12, #8
	b	.LBB232_53
.LBB232_47:
	cmp.w	r11, #7
	bne	.LBB232_51
	ldrb	r2, [r2]
	cmp	r2, #1
	bne.w	.LBB232_119
	subs	r3, #1
	cmp	r3, #6
	bne.w	.LBB232_129
	ldrh.w	r2, [r8, #7]
	mov.w	r11, #7
	ldr.w	r6, [r8, #3]
	mov.w	r9, #4
	lsrs	r4, r6, #16
	lsrs	r3, r6, #8
	orr.w	r12, r4, r2, lsl #16
	lsrs	r4, r6, #24
	orr.w	r3, r3, r2, lsl #24
	uxtb.w	r10, r6
	orr.w	r2, r4, r2, lsl #8
	b	.LBB232_53
.LBB232_51:
	lsr.w	lr, r2, #24
	mov.w	r12, #0
	mov.w	r9, #10
.LBB232_52:
.LBB232_53:
	cmp	r1, r0
	blo.w	.LBB232_127
	uxtb.w	r6, r12
	strb.w	r3, [sp, #248]
	orr.w	r2, r6, r2, lsl #8
	str.w	r2, [sp, #249]
	strb.w	lr, [sp, #253]
	add	r8, r0
	ldrh.w	r2, [sp, #248]
	subs	r1, r1, r0
	ldr.w	r0, [sp, #250]
.LCPI232_2:
	tbh	[pc, r9, lsl #1]
.LJTI232_2:
	.short	(.LBB232_93-(.LCPI232_2+4))/2
	.short	(.LBB232_57-(.LCPI232_2+4))/2
	.short	(.LBB232_58-(.LCPI232_2+4))/2
	.short	(.LBB232_61-(.LCPI232_2+4))/2
	.short	(.LBB232_62-(.LCPI232_2+4))/2
	.short	(.LBB232_63-(.LCPI232_2+4))/2
	.short	(.LBB232_64-(.LCPI232_2+4))/2
	.short	(.LBB232_65-(.LCPI232_2+4))/2
	.short	(.LBB232_66-(.LCPI232_2+4))/2
	.short	(.LBB232_56-(.LCPI232_2+4))/2
	.short	(.LBB232_67-(.LCPI232_2+4))/2
	.p2align	1
.LBB232_56:
	movs	r0, #1
	str	r0, [sp, #132]
	str	r2, [sp, #96]
	b	.LBB232_8
.LBB232_57:
	b	.LBB232_8
.LBB232_58:
	movs	r0, #1
	movs	r3, #0
	lsl.w	r4, r0, r10
	mov.w	r12, #1
	tst.w	r4, #205
	ldr	r0, [r7, #12]
	bne.w	.LBB232_81
	tst.w	r4, #50
	beq.w	.LBB232_80
	mov.w	r12, #1
	movs	r3, #1
	b	.LBB232_81
.LBB232_61:
	orr.w	r2, r10, r2, lsl #8
	orr.w	r0, r2, r0, lsl #24
	str	r0, [sp, #120]
	movs	r0, #1
	str	r0, [sp, #148]
	b	.LBB232_8
.LBB232_62:
	movs	r3, #1
	str	r3, [sp, #144]
	str	r2, [sp, #112]
	strd	r0, r10, [sp, #100]
	b	.LBB232_8
.LBB232_63:
	orr.w	r2, r10, r2, lsl #8
	orr.w	r0, r2, r0, lsl #24
	str	r0, [sp, #124]
	movs	r0, #1
	str	r0, [sp, #152]
	b	.LBB232_8
.LBB232_64:
	movs	r2, #1
	str	r2, [sp, #128]
	str	r0, [sp, #92]
	b	.LBB232_8
.LBB232_65:
	orr.w	r2, r10, r2, lsl #8
	orr.w	r0, r2, r0, lsl #24
	str	r0, [sp, #116]
	movs	r0, #1
	str	r0, [sp, #140]
	b	.LBB232_8
.LBB232_66:
	orr.w	r2, r10, r2, lsl #8
	orr.w	r0, r2, r0, lsl #24
	str	r0, [sp, #108]
	movs	r0, #1
	str	r0, [sp, #136]
	b	.LBB232_8
.LBB232_67:
	cmp.w	r10, #6
	beq	.LBB232_70
	cmp.w	r10, #55
	bne.w	.LBB232_8
	strd	r0, r11, [sp, #76]
	b	.LBB232_8
.LBB232_70:
	lsr.w	r2, r11, #2
	lsls.w	r3, r11, #30
	mov.w	r3, #1
	it	ne
	addne.w	r2, r3, r11, lsr #2
	cmp.w	r11, #0
	mov.w	r3, #0
	it	eq
	moveq	r2, r11
	cmp	r2, #3
	strb.w	r3, [sp, #248]
	it	hs
	movhs	r2, #3
	strb.w	r3, [sp, #253]
	strb.w	r3, [sp, #258]
	cbz	r2, .LBB232_78
	cmp.w	r11, #3
	bls.w	.LBB232_119
	movs	r3, #1
	cmp	r2, #1
	strb.w	r3, [sp, #248]
	ldr	r3, [r0]
	str.w	r3, [sp, #249]
	beq	.LBB232_77
	bic	r3, r11, #3
	cmp	r3, #4
	beq.w	.LBB232_119
	cmp	r2, #2
	mov.w	r6, #1
	strb.w	r6, [sp, #253]
	ldr	r2, [r0, #4]
	str.w	r2, [sp, #254]
	beq	.LBB232_77
	cmp	r3, #8
	beq.w	.LBB232_119
	movs	r2, #1
	strb.w	r2, [sp, #258]
	ldr	r0, [r0, #8]
	str.w	r0, [sp, #259]
.LBB232_77:
	ldrb.w	r0, [sp, #248]
	b	.LBB232_79
.LBB232_78:
	movs	r0, #0
.LBB232_79:
	ldr	r2, [sp, #32]
	str	r0, [sp, #72]
	ldrh	r0, [r2, #12]
	strh.w	r0, [sp, #308]
	ldr	r0, [r2, #8]
	str	r0, [sp, #304]
	ldr	r0, [r2, #4]
	str	r0, [sp, #300]
	ldr	r0, [r2]
	str	r0, [sp, #296]
	b	.LBB232_8
.LBB232_80:
	movs	r3, #2
	mov.w	r12, #0
.LBB232_81:
	ldrb	r4, [r0]
	movs	r6, #2
	cmp	r4, #2
	it	eq
	moveq	r6, #1
	subs	r0, r4, #1
	it	ne
	movne	r0, r6
	cmp	r3, r0
	bne.w	.LBB232_8
	clz	r0, r4
	lsrs	r0, r0, #5
	orr.w	r0, r0, r12
	cmp	r0, #1
	bne.w	.LBB232_8
	movs	r0, #0
	str	r0, [sp, #88]
	str	r2, [sp, #24]
	str.w	r10, [sp, #68]
	b	.LBB232_8
.LBB232_84:
	mov.w	r12, #0
	mov.w	r11, #1
	mov.w	r9, #2
	mov.w	r10, #8
	b	.LBB232_92
.LBB232_85:
	mov.w	r12, #0
	mov.w	r9, #2
	mov.w	r10, #1
	mov.w	r11, #1
	b	.LBB232_13
.LBB232_86:
	mov.w	r12, #0
	mov.w	r11, #1
	mov.w	r10, #2
	mov.w	r9, #2
	b	.LBB232_92
.LBB232_87:
	mov.w	r12, #0
	mov.w	r11, #1
	mov.w	r9, #2
	mov.w	r10, #3
	b	.LBB232_92
.LBB232_88:
	mov.w	r12, #0
	mov.w	r11, #1
	mov.w	r9, #2
	mov.w	r10, #4
	b	.LBB232_92
.LBB232_89:
	mov.w	r12, #0
	mov.w	r11, #1
	mov.w	r9, #2
	mov.w	r10, #5
	b	.LBB232_92
.LBB232_90:
	mov.w	r12, #0
	mov.w	r11, #1
	mov.w	r9, #2
	mov.w	r10, #6
	b	.LBB232_92
.LBB232_91:
	mov.w	r12, #0
	mov.w	r11, #1
	mov.w	r9, #2
	mov.w	r10, #7
.LBB232_92:
	b	.LBB232_13
.LBB232_93:
	add.w	r8, sp, #44
	ldr	r0, [sp, #88]
	mov	r6, r5
	lsls	r0, r0, #31
	ldr.w	r10, [sp, #64]
	ldr	r2, [r7, #12]
	ldrd	lr, r12, [sp, #56]
	ldm.w	r8, {r3, r5, r8}
	ldrd	r4, r11, [sp, #36]
	bne.w	.LBB232_119
	ldr	r0, [sp, #296]
	str.w	r0, [sp, #233]
	ldr	r0, [sp, #300]
	str.w	r0, [sp, #237]
	ldr	r0, [sp, #304]
	str.w	r0, [sp, #241]
	ldrh.w	r0, [sp, #308]
	strh	r5, [r6, #4]
	strh.w	r0, [sp, #245]
	ldr	r0, [sp, #76]
	str	r0, [sp, #160]
	ldr	r0, [sp, #80]
	str	r0, [sp, #164]
	ldr	r0, [sp, #128]
	str	r0, [sp, #168]
	ldr	r0, [sp, #92]
	str	r0, [sp, #172]
	ldr	r0, [sp, #132]
	strh.w	r0, [sp, #176]
	ldr	r0, [sp, #96]
	strh.w	r0, [sp, #178]
	ldr	r0, [sp, #24]
	ldr	r1, [sp, #100]
	strb.w	r0, [sp, #181]
	lsrs	r0, r1, #16
	strb.w	r0, [r6, #44]
	ldr	r0, [sp, #140]
	strb.w	r0, [sp, #200]
	ldr	r0, [sp, #116]
	str.w	r0, [sp, #201]
	ldr	r0, [sp, #136]
	strb.w	r0, [sp, #205]
	ldr	r0, [sp, #108]
	str.w	r0, [sp, #206]
	ldrb	r0, [r2, #10]
	ldr	r2, [sp, #84]
	str.w	r2, [sp, #210]
	ldr	r2, [sp, #72]
	lsrs	r0, r0, #7
	strb.w	r0, [sp, #214]
	ldr	r0, [sp, #148]
	strb.w	r0, [sp, #215]
	ldr	r0, [sp, #120]
	str	r0, [sp, #216]
	ldr	r0, [sp, #144]
	strb.w	r0, [sp, #220]
	ldr	r0, [sp, #104]
	strb.w	r0, [sp, #221]
	ldr	r0, [sp, #112]
	strh.w	r0, [sp, #222]
	ldr.w	r0, [r11, #68]
	strh	r1, [r6, #42]
	str.w	r8, [r6]
	ldr	r6, [sp, #28]
	str	r4, [sp, #196]
	ldr.w	r9, [sp, #68]
	ldr	r1, [sp, #152]
	strb.w	r2, [sp, #232]
	lsls	r2, r0, #31
	ldr	r4, [sp, #124]
	str	r3, [sp, #188]
	str	r6, [sp, #156]
	strb.w	r9, [sp, #180]
	str.w	lr, [sp, #192]
	strb.w	r1, [sp, #227]
	str	r4, [sp, #228]
	bne	.LBB232_96
	movs	r0, #8
	b	.LBB232_120
.LBB232_96:
	ldrb.w	r2, [r11, #74]
	lsrs	r0, r0, #8
	ldrh.w	r3, [r11, #72]
	orr.w	r2, r3, r2, lsl #16
	bic	r2, r2, #-16777216
	uxth	r3, r5
	orr.w	r0, r0, r2, lsl #24
	eor.w	r2, r3, r2, lsr #8
	eor.w	r0, r0, r8
	orrs	r0, r2
	mov.w	r0, #11
	itt	eq
	ldreq.w	r2, [r10, #80]
	cmpeq	r6, r2
	bne.w	.LBB232_120
	cmp	r1, #0
	beq.w	.LBB232_120
	ldrd	r2, r0, [r10]
	cmp	r2, #2
	beq	.LBB232_106
	cmp	r2, #1
	beq	.LBB232_111
	cmp	r2, #0
	bne.w	.LBB232_119
	cmp.w	r9, #1
	bne.w	.LBB232_119
	adds.w	r0, lr, #1
	beq.w	.LBB232_119
	uxtb.w	r2, lr
	movs	r0, #11
	cmp	r2, #0
	beq.w	.LBB232_120
	and	r2, r2, #240
	cmp	r2, #224
	beq.w	.LBB232_120
	movs	r2, #1
	str.w	r2, [r10]
	ldrd	r0, r1, [r11]
	movs	r2, #0
	str.w	r1, [r10, #12]
	strd	r2, r0, [r10, #4]
	strh.w	r2, [r10, #16]
	str.w	r12, [r10, #18]
	str.w	r4, [r10, #22]
	str.w	lr, [r10, #26]
	b	.LBB232_119
.LBB232_106:
	cmp.w	r9, #5
	beq	.LBB232_113
	cmp.w	r9, #4
	bne.w	.LBB232_119
	add.w	r6, r10, #64
	add.w	r12, sp, #8
	ldr.w	r5, [r10, #76]
	str	r5, [sp, #20]
	ldm	r6, {r0, r1, r6}
	stm.w	r12, {r0, r1, r6}
	add	r5, sp, #248
	add	r0, sp, #156
	ldrd	r2, r3, [r11]
	str	r0, [sp]
	mov	r0, r5
	bl	smoltcp::socket::dhcpv4::Dhcpv4Socket::parse_ack::h20be3382a35c1771
	ldrb.w	r0, [sp, #261]
	cmp	r0, #2
	beq.w	.LBB232_119
	add.w	r8, r5, #8
	add	r1, sp, #296
	mov	r12, r8
	mov	lr, r1
	ldm.w	r12!, {r0, r2, r3, r4, r5, r6}
	stm.w	lr!, {r0, r2, r3, r4, r5, r6}
	ldrb.w	r0, [r12]
	add.w	r5, r10, #32
	strb.w	r0, [lr]
	ldrd	r0, r2, [sp, #248]
	str.w	r0, [r10, #8]
	ldr	r0, [sp, #288]
	str.w	r2, [r10, #12]
	ldr	r2, [sp, #292]
	strd	r0, r2, [r10, #16]
	mov	r0, r5
	bl	<smoltcp::socket::dhcpv4::Config as core::cmp::PartialEq>::ne::h1fd7c655db0320e3
	cmp	r0, #0
	beq	.LBB232_119
	movs	r0, #1
	strb.w	r0, [r10, #84]
	ldm.w	r8!, {r0, r1, r2, r3, r4, r6}
	stm	r5!, {r0, r1, r2, r3, r4, r6}
	ldrb.w	r0, [r8]
	strb	r0, [r5]
	b	.LBB232_119
.LBB232_111:
	cmp.w	r9, #4
	beq	.LBB232_117
	cmp.w	r9, #5
	bne	.LBB232_119
.LBB232_113:
	ldrb.w	r1, [r10, #85]
	cmp	r1, #0
	bne	.LBB232_119
	eor	r1, r2, #2
	orrs	r0, r1
	bne	.LBB232_116
	movs	r0, #1
	strb.w	r0, [r10, #84]
.LBB232_116:
	movs	r0, #0
	str.w	r0, [r10]
	str.w	r0, [r10, #4]
	str.w	r0, [r10, #8]
	str.w	r0, [r10, #12]
	b	.LBB232_119
.LBB232_117:
	add.w	r6, r10, #64
	add.w	r12, sp, #8
	ldr.w	r5, [r10, #76]
	str	r5, [sp, #20]
	ldm	r6, {r0, r1, r6}
	stm.w	r12, {r0, r1, r6}
	add	r5, sp, #248
	add	r0, sp, #156
	ldrd	r2, r3, [r11]
	str	r0, [sp]
	mov	r0, r5
	bl	smoltcp::socket::dhcpv4::Dhcpv4Socket::parse_ack::h20be3382a35c1771
	ldrb.w	r0, [sp, #261]
	cmp	r0, #2
	beq	.LBB232_119
	add.w	r0, r5, #8
	ldr	r1, [sp, #248]
	str	r1, [sp, #152]
	ldr	r1, [sp, #252]
	str	r1, [sp, #148]
	movs	r5, #1
	strb.w	r5, [r10, #84]
	add.w	r4, r10, #32
	ldrd	r8, r9, [sp, #288]
	ldr.w	lr, [r10, #18]
	ldr.w	r11, [r10, #22]
	ldm.w	r0!, {r1, r2, r3, r5, r6, r12}
	stm.w	r4!, {r1, r2, r3, r5, r6, r12}
	ldrb	r0, [r0]
	add.w	r1, r10, #12
	strb	r0, [r4]
	movs	r0, #2
	str.w	r0, [r10]
	movs	r0, #0
	str.w	r0, [r10, #4]
	ldr	r0, [sp, #152]
	str.w	r0, [r10, #8]
	ldr	r0, [sp, #148]
	stm.w	r1, {r0, r8, r9, lr}
	str.w	r11, [r10, #28]
.LBB232_119:
	movs	r0, #11
.LBB232_120:
	add	sp, #332
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB232_121:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.182
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.182
	b	.LBB232_125
.LBB232_122:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.185
	movs	r0, #0
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.185
	movs	r1, #0
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB232_123:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.183
	movs	r0, #2
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.183
	movs	r1, #2
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB232_124:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.186
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.186
.LBB232_125:
	movs	r0, #1
	movs	r1, #1
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB232_126:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.184
	movs	r0, #3
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.184
	movs	r1, #3
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB232_127:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.187
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.187
	bl	core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3
	.inst.n	0xdefe
.LBB232_128:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.413
	movs	r0, #4
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.413
	b	.LBB232_130
.LBB232_129:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.218
	movs	r0, #6
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.218
.LBB232_130:
	mov	r1, r3
	bl	core::slice::<impl [T]>::copy_from_slice::len_mismatch_fail::h7bf74017f2463c91
	.inst.n	0xdefe
.Lfunc_end232:
	.size	smoltcp::socket::dhcpv4::Dhcpv4Socket::process::h233a98d8058a82c3, .Lfunc_end232-smoltcp::socket::dhcpv4::Dhcpv4Socket::process::h233a98d8058a82c3
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp6socket6dhcpv412Dhcpv4Socket9parse_ack17h20be3382a35c1771E,"ax",%progbits
	.p2align	1
	.type	smoltcp::socket::dhcpv4::Dhcpv4Socket::parse_ack::h20be3382a35c1771,%function
	.code	16
	.thumb_func
smoltcp::socket::dhcpv4::Dhcpv4Socket::parse_ack::h20be3382a35c1771:
.Lfunc_begin233:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#52
	sub	sp, #52
	ldr.w	r12, [r7, #8]
	mov	r10, r0
	ldr.w	r9, [r7, #16]
	ldrb.w	r1, [r12, #49]
	cmp	r1, #0
	beq.w	.LBB233_28
	add.w	r11, sp, #16
	ldr.w	r5, [r12, #50]
	add.w	r8, r11, #2
	movs	r6, #0
	movs	r4, #1
	movs	r1, #0
	str.w	r5, [sp, #17]
	lsls	r4, r4, #31
	beq	.LBB233_4
.LBB233_2:
	uxtb.w	lr, r5
	sxtb	r4, r5
	cmp	r4, #0
	add.w	r1, r1, lr, lsr #7
	and	r4, r5, #64
	bmi	.LBB233_13
	cbz	r4, .LBB233_5
	b	.LBB233_28
.LBB233_4:
	uxtb	r4, r5
	cmp	r4, #64
	bhs	.LBB233_28
.LBB233_5:
	lsls	r4, r5, #26
	bmi	.LBB233_28
.LBB233_6:
	lsls	r0, r5, #27
	bmi	.LBB233_28
.LBB233_7:
	lsls	r0, r5, #28
	bmi	.LBB233_28
.LBB233_8:
	lsls	r0, r5, #29
	bmi	.LBB233_28
.LBB233_9:
	lsls	r0, r5, #30
	bmi	.LBB233_28
.LBB233_10:
	lsls	r0, r5, #31
	mov.w	r4, #0
	bne	.LBB233_28
.LBB233_11:
	cmp	r6, #3
	beq	.LBB233_26
.LBB233_12:
	ldrb.w	r5, [r8, r6]
	adds	r6, #1
	lsls	r4, r4, #31
	beq	.LBB233_4
	b	.LBB233_2
.LBB233_13:
	cmp	r4, #0
	mov	r0, r4
	it	ne
	movne	r0, #1
	cmp	r4, #0
	add	r1, r0
	and	r4, r5, #32
	bne	.LBB233_15
	cmp	r4, #0
	beq	.LBB233_6
	b	.LBB233_28
.LBB233_15:
	cmp	r4, #0
	mov	r0, r4
	it	ne
	movne	r0, #1
	cmp	r4, #0
	add	r1, r0
	and	r4, r5, #16
	bne	.LBB233_17
	cmp	r4, #0
	beq	.LBB233_7
	b	.LBB233_28
.LBB233_17:
	cmp	r4, #0
	mov	r0, r4
	it	ne
	movne	r0, #1
	cmp	r4, #0
	add	r1, r0
	and	r4, r5, #8
	bne	.LBB233_19
	cmp	r4, #0
	beq	.LBB233_8
	b	.LBB233_28
.LBB233_19:
	cmp	r4, #0
	mov	r0, r4
	it	ne
	movne	r0, #1
	cmp	r4, #0
	add	r1, r0
	and	r4, r5, #4
	bne	.LBB233_21
	cmp	r4, #0
	beq	.LBB233_9
	b	.LBB233_28
.LBB233_21:
	cmp	r4, #0
	mov	r0, r4
	it	ne
	movne	r0, #1
	cmp	r4, #0
	add	r1, r0
	and	r4, r5, #2
	bne	.LBB233_23
	cmp	r4, #0
	beq	.LBB233_10
	b	.LBB233_28
.LBB233_23:
	cmp	r4, #0
	mov	r0, r4
	it	ne
	movne	r0, #1
	cmp	r4, #0
	add	r1, r0
	and	r4, r5, #1
	bne	.LBB233_25
	cmp	r4, #0
	mov.w	r4, #0
	beq	.LBB233_11
	b	.LBB233_28
.LBB233_25:
	add	r1, r4
	cmp	r4, #0
	it	ne
	movne	r4, #1
	cmp	r6, #3
	bne	.LBB233_12
.LBB233_26:
	ldr.w	r8, [r12, #36]
	adds.w	r0, r8, #1
	uxtb.w	r0, r8
	beq	.LBB233_28
	cmp	r0, #0
	and	r0, r0, #240
	it	ne
	cmpne	r0, #224
	bne	.LBB233_29
.LBB233_28:
	movs	r1, #48
	mov	r0, r10
	bl	__aeabi_memclr8
	movs	r0, #2
	strb.w	r0, [r10, #13]
	add	sp, #52
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB233_29:
	movw	r6, #16960
	ldr.w	r0, [r12, #16]
	movt	r6, #15
	ldr.w	r5, [r12, #12]
	umull	lr, r6, r0, r6
	cmp	r5, #0
	ittt	eq
	moveq	r6, r5
	movweq	lr, #3584
	movteq	lr, #1831
	sub.w	r0, r9, #1
	mov	r9, r6
	ldr	r6, [r7, #24]
	ldr	r4, [r7, #28]
	subs.w	r6, r6, lr
	mov.w	r5, #0
	clz	r0, r0
	sbcs.w	r6, r4, r9
	mov.w	r6, #0
	lsr.w	r0, r0, #5
	it	lo
	movlo	r6, #1
	ands	r0, r6
	strb.w	r5, [sp, #36]
	mov	r0, r12
	strb.w	r5, [sp, #41]
	ldrb	r6, [r0, #76]!
	it	ne
	movne	r9, r4
	ldr	r4, [r7, #24]
	it	ne
	movne	lr, r4
	cmp	r6, #2
	strb.w	r5, [sp, #46]
	beq	.LBB233_41
	ldr.w	r6, [r0, #11]
	str.w	r6, [sp, #27]
	ldr	r6, [r0, #8]
	str	r6, [sp, #24]
	ldr	r6, [r0, #4]
	str.w	r8, [sp, #12]
	ldr	r0, [r0]
	str	r0, [sp, #16]
	add.w	r5, r11, #15
	movs	r0, #0
	mov.w	r8, #0
	str	r6, [sp, #20]
.LBB233_31:
	lsls.w	r4, r8, #31
	mov.w	r6, #0
	beq	.LBB233_38
.LBB233_32:
	cbz	r6, .LBB233_38
	ldr	r4, [r6]
	mov.w	r8, #1
	adds	r6, r4, #1
	uxtb	r6, r4
	beq	.LBB233_31
	cmp	r6, #0
	and	r6, r6, #240
	mov.w	r8, #1
	beq	.LBB233_31
	cmp	r6, #224
	beq	.LBB233_31
	cmp	r0, #2
	bhi	.LBB233_44
	add.w	r6, r0, r0, lsl #2
	str	r0, [sp, #8]
	add	r0, sp, #36
	mov.w	r8, #1
	add	r0, r6
	str	r0, [sp, #4]
	add	r0, sp, #36
	strb.w	r8, [r0, r6]
	ldr	r0, [sp, #4]
	str.w	r4, [r0, #1]
	ldr	r0, [sp, #8]
	adds	r0, #1
	b	.LBB233_31
.LBB233_38:
	cmp.w	r11, #0
	it	ne
	cmpne	r5, r11
	beq	.LBB233_40
	add.w	r4, r11, #5
	ldrb	r6, [r11], #1
	cmp	r6, #0
	it	eq
	moveq	r11, r6
	mov	r6, r11
	mov	r11, r4
	b	.LBB233_32
.LBB233_40:
	ldr.w	r8, [sp, #12]
.LBB233_41:
	uxtb	r0, r1
	cmp	r0, #33
	bhs	.LBB233_43
	lsrs.w	r0, r9, #1
	strb.w	r1, [r10, #12]
	rrx	r6, lr
	adds	r6, r6, r2
	str.w	r6, [r10]
	adcs	r0, r3
	adds.w	r1, lr, r2
	strd	r0, r8, [r10, #4]
	ldr.w	r0, [r12, #44]
	str.w	r0, [r10, #13]
	ldrb.w	r0, [r12, #48]
	adc.w	r2, r9, r3
	strb.w	r0, [r10, #17]
	ldr	r0, [sp, #36]
	str.w	r0, [r10, #18]
	ldr	r0, [sp, #40]
	str.w	r0, [r10, #22]
	ldr	r0, [sp, #44]
	str.w	r0, [r10, #26]
	ldr.w	r0, [sp, #47]
	str.w	r0, [r10, #29]
	strd	r1, r2, [r10, #40]
	add	sp, #52
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB233_43:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.415
	movs	r0, #1
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.415
	movs	r1, #1
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB233_44:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.71
	movs	r1, #3
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.71
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.Lfunc_end233:
	.size	smoltcp::socket::dhcpv4::Dhcpv4Socket::parse_ack::h20be3382a35c1771, .Lfunc_end233-smoltcp::socket::dhcpv4::Dhcpv4Socket::parse_ack::h20be3382a35c1771
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN72_$LT$smoltcp..socket..dhcpv4..Config$u20$as$u20$core..cmp..PartialEq$GT$2ne17h1fd7c655db0320e3E","ax",%progbits
	.p2align	1
	.type	<smoltcp::socket::dhcpv4::Config as core::cmp::PartialEq>::ne::h1fd7c655db0320e3,%function
	.code	16
	.thumb_func
<smoltcp::socket::dhcpv4::Config as core::cmp::PartialEq>::ne::h1fd7c655db0320e3:
.Lfunc_begin234:
	.fnstart
	.cfi_startproc
	ldr	r2, [r0]
	ldr	r3, [r1]
	cmp	r2, r3
	mov.w	r12, #1
	bne	.LBB234_15
	ldrb	r3, [r0, #4]
	ldrb	r2, [r1, #4]
	cmp	r3, r2
	bne	.LBB234_15
	ldrb	r2, [r0, #5]
	ldrb	r3, [r1, #5]
	cmp	r2, r3
	bne	.LBB234_16
	cbz	r2, .LBB234_5
	ldr.w	r2, [r0, #6]
	ldr.w	r3, [r1, #6]
	cmp	r2, r3
	bne	.LBB234_16
.LBB234_5:
	ldrb	r2, [r0, #10]
	ldrb	r3, [r1, #10]
	cmp	r2, r3
	bne	.LBB234_16
	cbz	r2, .LBB234_8
	ldr.w	r2, [r0, #11]
	ldr.w	r3, [r1, #11]
	cmp	r2, r3
	bne	.LBB234_16
.LBB234_8:
	ldrb	r2, [r0, #15]
	ldrb	r3, [r1, #15]
	cmp	r2, r3
	bne	.LBB234_16
	cbz	r2, .LBB234_11
	ldr	r2, [r0, #16]
	ldr	r3, [r1, #16]
	cmp	r2, r3
	bne	.LBB234_16
.LBB234_11:
	ldrb	r2, [r0, #20]
	ldrb	r3, [r1, #20]
	cmp	r2, r3
	bne	.LBB234_16
	cbz	r2, .LBB234_14
	ldr.w	r0, [r0, #21]
	ldr.w	r1, [r1, #21]
	cmp	r0, r1
	bne	.LBB234_16
.LBB234_14:
	mov.w	r12, #0
.LBB234_15:
	mov	r0, r12
	bx	lr
.LBB234_16:
	movs	r0, #1
	bx	lr
.Lfunc_end234:
	.size	<smoltcp::socket::dhcpv4::Config as core::cmp::PartialEq>::ne::h1fd7c655db0320e3, .Lfunc_end234-<smoltcp::socket::dhcpv4::Config as core::cmp::PartialEq>::ne::h1fd7c655db0320e3
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN7smoltcp4wire4ipv419Packet$LT$$RF$T$GT$7payload17h2b0d1ff23f7a1934E","ax",%progbits
	.p2align	1
	.type	smoltcp::wire::ipv4::Packet<&T>::payload::h2b0d1ff23f7a1934,%function
	.code	16
	.thumb_func
smoltcp::wire::ipv4::Packet<&T>::payload::h2b0d1ff23f7a1934:
.Lfunc_begin235:
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	ldr	r1, [r0, #4]
	cbz	r1, .LBB235_5
	cmp	r1, #3
	bls	.LBB235_6
	ldr	r2, [r0]
	movs	r0, #60
	ldrh	r3, [r2, #2]
	ldrb.w	r12, [r2]
	and.w	r0, r0, r12, lsl #2
	rev	r3, r3
	cmp.w	r0, r3, lsr #16
	lsr.w	r3, r3, #16
	bhi	.LBB235_7
	cmp	r1, r3
	itttt	hs
	addhs	r2, r0
	subhs	r1, r3, r0
	movhs	r0, r2
	pophs	{r7, pc}
.LBB235_4:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.420
	mov	r0, r3
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.420
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB235_5:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.417
	movs	r0, #0
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.417
	movs	r1, #0
	bl	core::panicking::panic_bounds_check::h693951cbac28abbe
	.inst.n	0xdefe
.LBB235_6:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.418
	movs	r0, #4
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.418
	bl	core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0
	.inst.n	0xdefe
.LBB235_7:
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.420
	mov	r1, r3
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.420
	bl	core::slice::index::slice_index_order_fail::h8a53f055fb6ee074
	.inst.n	0xdefe
.Lfunc_end235:
	.size	smoltcp::wire::ipv4::Packet<&T>::payload::h2b0d1ff23f7a1934, .Lfunc_end235-smoltcp::wire::ipv4::Packet<&T>::payload::h2b0d1ff23f7a1934
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp6socket3tcp5Timer18set_for_retransmit17h7f625af8cb92cdffE,"ax",%progbits
	.p2align	2
	.type	smoltcp::socket::tcp::Timer::set_for_retransmit::h7f625af8cb92cdff,%function
	.code	16
	.thumb_func
smoltcp::socket::tcp::Timer::set_for_retransmit::h7f625af8cb92cdff:
.Lfunc_begin236:
	.fnstart
	.cfi_startproc
	.save	{r4, r6, r7, lr}
	push	{r4, r6, r7, lr}
	.cfi_def_cfa_offset 16
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r4, -16
	.setfp	r7, sp, #8
	add	r7, sp, #8
	.cfi_def_cfa r7, 8
	ldr	r1, [r0]
	ldrd	lr, r12, [r7, #8]
.LCPI236_0:
	tbb	[pc, r1]
.LJTI236_0:
	.byte	(.LBB236_2-(.LCPI236_0+4))/2
	.byte	(.LBB236_3-(.LCPI236_0+4))/2
	.byte	(.LBB236_2-(.LCPI236_0+4))/2
	.byte	(.LBB236_5-(.LCPI236_0+4))/2
	.p2align	1
.LBB236_2:
	movs	r1, #1
	str	r1, [r0]
	movs	r1, #0
	str	r1, [r0, #4]
	adds.w	r1, lr, r2
	str	r1, [r0, #8]
	adc.w	r1, r12, r3
	str.w	r12, [r0, #20]
	strd	r1, lr, [r0, #12]
	pop	{r4, r6, r7, pc}
.LBB236_3:
	ldrd	r1, r4, [r0, #8]
	subs	r1, r2, r1
	sbcs.w	r1, r3, r4
	it	lt
	poplt	{r4, r6, r7, pc}
.LBB236_4:
	ldrd	r1, r4, [r0, #16]
	adds.w	r12, r1, r2
	mov.w	r2, #1
	str	r2, [r0]
	mov.w	r2, #0
	str	r2, [r0, #4]
	adc.w	r2, r4, r3
	lsls	r3, r4, #1
	str.w	r12, [r0, #8]
	str	r2, [r0, #12]
	lsls	r2, r1, #1
	str	r2, [r0, #16]
	orr.w	r1, r3, r1, lsr #31
	str	r1, [r0, #20]
.LBB236_5:
	pop	{r4, r6, r7, pc}
.Lfunc_end236:
	.size	smoltcp::socket::tcp::Timer::set_for_retransmit::h7f625af8cb92cdff, .Lfunc_end236-smoltcp::socket::tcp::Timer::set_for_retransmit::h7f625af8cb92cdff
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp6socket3tcp9TcpSocket5reset17h3eed303dba5cd1e6E,"ax",%progbits
	.p2align	1
	.type	smoltcp::socket::tcp::TcpSocket::reset::h3eed303dba5cd1e6,%function
	.code	16
	.thumb_func
smoltcp::socket::tcp::TcpSocket::reset::h3eed303dba5cd1e6:
.Lfunc_begin237:
	.fnstart
	.cfi_startproc
	mov.w	r2, #300
	str	r2, [r0, #48]
	movs	r2, #100
	movs	r1, #0
	strd	r2, r1, [r0, #52]
	ldr.w	r2, [r0, #196]
	strh.w	r1, [r0, #310]
	strd	r2, r1, [r0, #160]
	clz	r2, r2
	strb.w	r1, [r0, #64]
	rsb.w	r2, r2, #32
	strb.w	r1, [r0, #312]
	subs	r2, #16
	strb.w	r1, [r0, #314]
	strd	r1, r1, [r0]
	strd	r1, r1, [r0, #8]
	strd	r1, r1, [r0, #24]
	strd	r1, r1, [r0, #168]
	strd	r1, r1, [r0, #176]
	strd	r1, r1, [r0, #184]
	strd	r1, r1, [r0, #200]
	strd	r1, r1, [r0, #88]
	strd	r1, r1, [r0, #72]
	strh.w	r1, [r0, #268]
	movw	r3, #10000
	strb.w	r1, [r0, #270]
	strh.w	r1, [r0, #288]
	strb.w	r1, [r0, #290]
	strh.w	r1, [r0, #308]
	str.w	r1, [r0, #244]
	strb.w	r1, [r0, #332]
	strd	r1, r1, [r0, #216]
	str.w	r1, [r0, #224]
	str.w	r1, [r0, #228]
	str.w	r1, [r0, #232]
	str.w	r1, [r0, #236]
	it	lo
	movlo	r2, r1
	strb.w	r2, [r0, #331]
	mov.w	r2, #536
	str.w	r2, [r0, #248]
	movs	r2, #1
	strd	r1, r1, [r0, #104]
	strd	r2, r1, [r0, #120]
	strd	r3, r1, [r0, #128]
	strd	r1, r1, [r0, #136]
	strd	r1, r1, [r0, #152]
	strb.w	r2, [r0, #336]
	bx	lr
.Lfunc_end237:
	.size	smoltcp::socket::tcp::TcpSocket::reset::h3eed303dba5cd1e6, .Lfunc_end237-smoltcp::socket::tcp::TcpSocket::reset::h3eed303dba5cd1e6
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp6socket3tcp9TcpSocket15seq_to_transmit17hb33c0196cfeb4773E,"ax",%progbits
	.p2align	1
	.type	smoltcp::socket::tcp::TcpSocket::seq_to_transmit::hb33c0196cfeb4773,%function
	.code	16
	.thumb_func
smoltcp::socket::tcp::TcpSocket::seq_to_transmit::hb33c0196cfeb4773:
.Lfunc_begin238:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8}
	str	r8, [sp, #-4]!
	.cfi_offset r8, -24
	ldrb.w	r2, [r0, #270]
	cmp	r2, #1
	beq	.LBB238_3
	cmp	r2, #2
	bne	.LBB238_13
	mvn	r2, #73
	b	.LBB238_4
.LBB238_3:
	mvn	r2, #53
.LBB238_4:
	ldr	r1, [r1, #32]
	ldrb.w	r5, [r0, #310]
	adds	r3, r2, r1
	ldr.w	r1, [r0, #248]
	cmp	r3, r1
	and	r2, r5, #14
	it	hi
	movhi	r3, r1
	cmp	r2, #2
	ldr.w	r2, [r0, #224]
	ldr.w	r1, [r0, #232]
	it	eq
	cmpeq	r2, r1
	beq	.LBB238_10
	ldr.w	r12, [r0, #220]
	ldr.w	r6, [r0, #244]
	cmp	r6, r12
	it	hi
	movhi	r6, r12
	cmp.w	r6, #-1
	ble	.LBB238_12
	subs	r4, r2, r1
	cmp	r5, #9
	add.w	lr, r4, r6
	bic.w	r8, lr, lr, asr #31
	bhi	.LBB238_11
	movs	r6, #1
	lsl.w	r5, r6, r5
	tst.w	r5, #800
	beq	.LBB238_11
	cmp.w	r12, #-1
	ble	.LBB238_12
	cmp	r8, r3
	mov.w	r3, #0
	it	hs
	movhs	r3, #1
	ldrb.w	r0, [r0, #336]
	add	r2, r12
	clz	r4, r4
	subs	r1, r1, r2
	clz	r0, r0
	lsrs	r6, r4, #5
	lsrs	r0, r0, #5
	movs	r5, #0
	orrs	r0, r6
	cmp.w	lr, #0
	orr.w	r0, r0, r3
	clz	r1, r1
	it	gt
	movgt	r5, #1
	ands	r0, r5
	lsrs	r1, r1, #5
	orrs	r0, r1
	ldr	r8, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.LBB238_10:
	movs	r0, #1
	ldr	r8, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.LBB238_11:
	ldrb.w	r0, [r0, #336]
	movs	r1, #0
	clz	r2, r4
	cmp	r8, r3
	clz	r0, r0
	lsr.w	r2, r2, #5
	lsr.w	r0, r0, #5
	mov.w	r3, #0
	orr.w	r0, r0, r2
	it	hs
	movhs	r1, #1
	orrs	r0, r1
	cmp.w	lr, #0
	it	gt
	movgt	r3, #1
	movs	r1, #0
	ands	r0, r3
	orrs	r0, r1
	ldr	r8, [sp], #4
	pop	{r4, r5, r6, r7, pc}
.LBB238_12:
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.593
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.595
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.593
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.595
	movs	r1, #56
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB238_13:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.5
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.104
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.5
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.104
	movs	r1, #40
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.Lfunc_end238:
	.size	smoltcp::socket::tcp::TcpSocket::seq_to_transmit::hb33c0196cfeb4773, .Lfunc_end238-smoltcp::socket::tcp::TcpSocket::seq_to_transmit::hb33c0196cfeb4773
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp4wire6dhcpv44Repr10buffer_len17hbab4115fcbcda0baE,"ax",%progbits
	.p2align	1
	.type	smoltcp::wire::dhcpv4::Repr::buffer_len::hbab4115fcbcda0ba,%function
	.code	16
	.thumb_func
smoltcp::wire::dhcpv4::Repr::buffer_len::hbab4115fcbcda0ba:
.Lfunc_begin239:
	.fnstart
	.cfi_startproc
	mov	r1, r0
	ldrb.w	r2, [r0, #59]
	movs	r0, #250
	cmp	r2, #0
	ldrb.w	r2, [r1, #64]
	it	eq
	moveq	r0, #244
	cmp	r2, #0
	ldrb.w	r2, [r1, #71]
	it	ne
	addne	r0, #9
	cmp	r2, #0
	ldrh	r2, [r1, #20]
	it	ne
	addne	r0, #6
	ldrb.w	r3, [r1, #44]
	cmp	r2, #1
	ldrb.w	r2, [r1, #49]
	it	eq
	addeq	r0, #4
	cmp	r3, #0
	it	ne
	addne	r0, #6
	cmp	r2, #0
	ldr	r3, [r1, #12]
	ldrb.w	r2, [r1, #76]
	it	ne
	addne	r0, #6
	cmp	r3, #1
	it	eq
	addeq	r0, #6
	cmp	r2, #2
	beq	.LBB239_2
	ldrb.w	r3, [r1, #81]
	ldrb.w	r12, [r1, #86]
	add	r2, r3
	add	r2, r12
	add.w	r0, r0, r2, lsl #2
	adds	r0, #2
.LBB239_2:
	ldrd	r2, r1, [r1, #4]
	add	r1, r0
	cmp	r2, #0
	it	ne
	addne	r0, r1, #2
	bx	lr
.Lfunc_end239:
	.size	smoltcp::wire::dhcpv4::Repr::buffer_len::hbab4115fcbcda0ba, .Lfunc_end239-smoltcp::wire::dhcpv4::Repr::buffer_len::hbab4115fcbcda0ba
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp4wire2ip8Endpoint12is_specified17h5bbec8f8783a27daE,"ax",%progbits
	.p2align	1
	.type	smoltcp::wire::ip::Endpoint::is_specified::h5bbec8f8783a27da,%function
	.code	16
	.thumb_func
smoltcp::wire::ip::Endpoint::is_specified::h5bbec8f8783a27da:
.Lfunc_begin240:
	.fnstart
	.cfi_startproc
	.save	{r4, r6, r7, lr}
	push	{r4, r6, r7, lr}
	.cfi_def_cfa_offset 16
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r4, -16
	.setfp	r7, sp, #8
	add	r7, sp, #8
	.cfi_def_cfa r7, 8
	.pad	#16
	sub	sp, #16
	mov	r4, r0
	ldrb	r0, [r0, #2]
	cbz	r0, .LBB240_3
	cmp	r0, #1
	bne	.LBB240_4
	ldrh	r1, [r4]
	ldrb	r0, [r4, #3]
	b	.LBB240_5
.LBB240_3:
	movs	r1, #0
	mov	r0, r1
	add	sp, #16
	pop	{r4, r6, r7, pc}
.LBB240_4:
	ldr.w	r0, [r4, #15]
	str	r0, [sp, #12]
	ldr.w	r0, [r4, #11]
	str	r0, [sp, #8]
	ldr.w	r0, [r4, #7]
	str	r0, [sp, #4]
	ldr.w	r0, [r4, #3]
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.7
	str	r0, [sp]
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.7
	mov	r0, sp
	movs	r2, #16
	bl	memcmp
	ldrh	r1, [r4]
.LBB240_5:
	cmp	r1, #0
	it	ne
	movne	r1, #1
	cmp	r0, #0
	it	eq
	moveq	r1, #0
	mov	r0, r1
	add	sp, #16
	pop	{r4, r6, r7, pc}
.Lfunc_end240:
	.size	smoltcp::wire::ip::Endpoint::is_specified::h5bbec8f8783a27da, .Lfunc_end240-smoltcp::wire::ip::Endpoint::is_specified::h5bbec8f8783a27da
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp4wire2ip4Repr5lower17h8146fabc9d801364E,"ax",%progbits
	.p2align	1
	.type	smoltcp::wire::ip::Repr::lower::h8146fabc9d801364,%function
	.code	16
	.thumb_func
smoltcp::wire::ip::Repr::lower::h8146fabc9d801364:
.Lfunc_begin241:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#124
	sub	sp, #124
	mov	r6, r1
	ldrb	r1, [r1]
	mov	r8, r3
	mov	r10, r2
	mov	r11, r0
	cbz	r1, .LBB241_4
	cmp	r1, #1
	bne	.LBB241_9
	ldrd	r2, r0, [r6, #4]
	lsls	r1, r0, #24
	ldrd	r1, r12, [r6, #12]
	beq	.LBB241_12
	movs	r3, #1
	strb.w	r3, [r11, #4]
	str.w	r2, [r11, #8]
	b	.LBB241_67
.LBB241_4:
	ldrb.w	r9, [r6, #1]
	cmp.w	r9, #0
	beq.w	.LBB241_32
	cmp.w	r9, #1
	beq.w	.LBB241_35
	cmp.w	r9, #2
	itt	eq
	ldrbeq	r0, [r6, #18]
	cmpeq	r0, #2
	bne.w	.LBB241_82
	mov	r4, r6
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.7
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.7
	movs	r2, #16
	ldr	r0, [r4, #2]!
	str	r0, [sp, #80]
	ldr	r0, [r4, #12]
	str	r0, [sp, #92]
	ldr	r0, [r4, #8]
	str	r0, [sp, #88]
	ldr	r0, [r4, #4]
	str	r0, [sp, #84]
	add	r0, sp, #80
	bl	memcmp
	cmp	r0, #0
	beq.w	.LBB241_49
	movs	r1, #2
	strb.w	r1, [r11, #4]
	ldr	r1, [r6, #40]
	str.w	r1, [r11, #8]
	ldr	r1, [r4]
	str.w	r1, [r11, #12]
	ldr	r1, [r4, #4]
	str.w	r1, [r11, #16]
	ldr	r1, [r4, #8]
	str.w	r1, [r11, #20]
	ldr	r1, [r4, #12]
	str.w	r1, [r11, #24]
	ldr.w	r1, [r6, #19]
	str.w	r1, [r11, #28]
	ldr.w	r1, [r6, #23]
	str.w	r1, [r11, #32]
	ldr.w	r1, [r6, #27]
	str.w	r1, [r11, #36]
	ldr.w	r1, [r6, #31]
	str.w	r1, [r11, #40]
	ldrh.w	r0, [r6, #35]
	ldrb.w	r1, [r6, #37]
	strh.w	r0, [r11, #44]
	strb.w	r1, [r11, #46]
	b	.LBB241_81
.LBB241_9:
	add.w	r9, r6, #4
	add.w	r12, sp, #40
	mov	r1, r9
	mov	r2, r12
	ldm	r1!, {r0, r3, r4, r5, r6}
	stm	r2!, {r0, r3, r4, r5, r6}
	ldm.w	r1, {r0, r3, r4, r5, r6}
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.7
	stm	r2!, {r0, r3, r4, r5, r6}
	add.w	r0, r12, #4
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.7
	movs	r2, #16
	bl	memcmp
	cbz	r0, .LBB241_22
	add	r5, sp, #80
	movs	r2, #40
	adds	r0, r5, #3
	mov	r1, r9
.LBB241_11:
	bl	__aeabi_memcpy
	movs	r0, #2
	strb.w	r0, [r11, #4]
	add.w	r0, r11, #5
	movs	r2, #43
	mov	r1, r5
	bl	__aeabi_memcpy
	b	.LBB241_81
.LBB241_12:
	add.w	r0, r8, r8, lsl #3
	movs	r6, #0
	rsbs	r0, r0, #0
	lsls	r0, r0, #1
.LBB241_13:
	adds	r4, r0, r6
	beq.w	.LBB241_63
	ldrb.w	r3, [r10, r6]
	cmp	r3, #0
	add.w	r3, r10, r6
	beq.w	.LBB241_66
	adds.w	r5, r4, #18
	beq.w	.LBB241_63
	ldrb	r5, [r3, #18]
	cmp	r5, #0
	beq.w	.LBB241_64
	adds.w	r5, r4, #36
	beq.w	.LBB241_63
	ldrb.w	r5, [r3, #36]
	cmp	r5, #0
	beq.w	.LBB241_65
	adds.w	r5, r4, #54
	beq.w	.LBB241_63
	ldrb.w	r3, [r3, #54]
	adds	r6, #72
	cmp	r3, #0
	bne	.LBB241_13
	add.w	r0, r10, r6
	sub.w	r3, r0, #18
	b	.LBB241_66
.LBB241_22:
	cmp.w	r8, #0
	beq.w	.LBB241_63
	add.w	r0, r8, r8, lsl #3
	movs	r2, #0
	rsbs	r0, r0, #0
	lsls	r1, r0, #1
.LBB241_24:
	ldrb.w	r0, [r10, r2]
	cmp	r0, #0
	add.w	r0, r10, r2
	bne.w	.LBB241_75
	adds	r3, r1, r2
	adds.w	r6, r3, #18
	beq.w	.LBB241_63
	ldrb	r6, [r0, #18]
	cmp	r6, #0
	bne.w	.LBB241_72
	adds.w	r6, r3, #36
	beq.w	.LBB241_63
	ldrb.w	r6, [r0, #36]
	cmp	r6, #0
	bne.w	.LBB241_73
	adds	r3, #54
	beq.w	.LBB241_63
	ldrb.w	r3, [r0, #54]
	cmp	r3, #0
	bne.w	.LBB241_74
	adds	r2, #72
	adds	r0, r1, r2
	bne	.LBB241_24
	b	.LBB241_63
.LBB241_32:
	ldrb	r0, [r6, #18]
	cmp	r0, #2
	beq	.LBB241_48
	cmp	r0, #1
	bne.w	.LBB241_82
	ldr.w	r3, [r6, #2]
	b	.LBB241_38
.LBB241_35:
	ldrb	r0, [r6, #18]
	cmp	r0, #1
	bne.w	.LBB241_82
	ldr.w	r3, [r6, #2]
	lsls	r0, r3, #24
	beq	.LBB241_38
	movs	r0, #1
	strb.w	r0, [r11, #4]
	ldr	r0, [r6, #40]
	str.w	r0, [r11, #8]
	ldr.w	r1, [r6, #19]
	str.w	r1, [r11, #16]
	ldrh.w	r0, [r6, #35]
	ldrb.w	r1, [r6, #37]
	str.w	r3, [r11, #12]
	strh.w	r0, [r11, #20]
	strb.w	r1, [r11, #22]
	b	.LBB241_81
.LBB241_38:
	ldr.w	r0, [r6, #19]
	add.w	r1, r8, r8, lsl #3
	str	r0, [sp, #8]
	ldrb.w	r0, [r6, #35]
	ldrb.w	lr, [r6, #36]
	rsbs	r1, r1, #0
	ldrb.w	r8, [r6, #37]
	str	r0, [sp, #4]
	ldr	r0, [r6, #40]
	lsls	r2, r1, #1
	movs	r1, #0
.LBB241_39:
	adds	r4, r2, r1
	beq	.LBB241_62
	ldrb.w	r6, [r10, r1]
	cmp	r6, #0
	add.w	r6, r10, r1
	beq.w	.LBB241_70
	adds.w	r12, r4, #18
	beq	.LBB241_62
	ldrb	r5, [r6, #18]
	cmp	r5, #0
	beq	.LBB241_68
	adds.w	r5, r4, #36
	beq	.LBB241_62
	ldrb.w	r5, [r6, #36]
	cmp	r5, #0
	beq	.LBB241_69
	adds.w	r5, r4, #54
	beq	.LBB241_62
	ldrb.w	r6, [r6, #54]
	adds	r1, #72
	cmp	r6, #0
	bne	.LBB241_39
	add	r1, r10
	sub.w	r6, r1, #18
	b	.LBB241_70
.LBB241_48:
	adds	r4, r6, #2
.LBB241_49:
	ldr	r3, [r4]
	ldr.w	r0, [r6, #6]
	cmp.w	r9, #2
	ldr.w	r1, [r6, #10]
	strd	r0, r1, [sp, #12]
	ldr.w	r0, [r6, #14]
	str	r0, [sp, #20]
	bne	.LBB241_51
	ldr	r0, [sp, #20]
	str	r0, [sp, #32]
	ldr	r0, [sp, #16]
	str	r0, [sp, #28]
	ldr	r0, [sp, #12]
	str	r0, [sp, #24]
.LBB241_51:
	ldrb.w	r0, [r6, #37]
	ldrb.w	lr, [r6, #35]
	str	r0, [sp, #8]
	ldrb.w	r0, [r6, #36]
	cmp.w	r8, #0
	ldr.w	r12, [r6, #40]
	str	r0, [sp, #4]
	beq	.LBB241_61
	add.w	r0, r8, r8, lsl #3
	rsbs	r0, r0, #0
	lsls	r2, r0, #1
	movs	r0, #0
.LBB241_53:
	ldrb.w	r1, [r10, r0]
	cmp	r1, #0
	add.w	r1, r10, r0
	bne	.LBB241_79
	adds	r4, r2, r0
	adds.w	r5, r4, #18
	beq	.LBB241_61
	ldrb	r5, [r1, #18]
	cmp	r5, #0
	bne	.LBB241_76
	adds.w	r5, r4, #36
	beq	.LBB241_61
	ldrb.w	r5, [r1, #36]
	cmp	r5, #0
	bne	.LBB241_77
	adds	r4, #54
	beq	.LBB241_61
	ldrb.w	r4, [r1, #54]
	cmp	r4, #0
	bne	.LBB241_78
	adds	r0, #72
	adds	r1, r2, r0
	bne	.LBB241_53
.LBB241_61:
	ldrd	r0, r1, [sp, #28]
	cmp.w	r9, #2
	strd	r0, r1, [sp, #84]
	ldr	r0, [sp, #24]
	str	r0, [sp, #80]
	bne	.LBB241_63
	b	.LBB241_80
.LBB241_62:
	cmp.w	r9, #1
	beq	.LBB241_71
.LBB241_63:
	movw	r0, #513
	strh.w	r0, [r11]
	add	sp, #124
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB241_64:
	adds	r3, #18
	b	.LBB241_66
.LBB241_65:
	adds	r3, #36
.LBB241_66:
	movs	r0, #1
	strb.w	r0, [r11, #4]
	str.w	r2, [r11, #8]
	ldr.w	r0, [r3, #1]
.LBB241_67:
	str.w	r0, [r11, #12]
	str.w	r1, [r11, #16]
	str.w	r12, [r11, #20]
	b	.LBB241_81
.LBB241_68:
	adds	r6, #18
	b	.LBB241_70
.LBB241_69:
	adds	r6, #36
.LBB241_70:
	ldr.w	r3, [r6, #1]
.LBB241_71:
	movs	r1, #1
	strb.w	r1, [r11, #4]
	ldrh.w	r1, [sp, #40]
	str.w	r0, [r11, #8]
	strh.w	r1, [r11, #5]
	ldrb.w	r1, [sp, #42]
	strb.w	r1, [r11, #7]
	ldr	r0, [sp, #8]
	add	r1, sp, #80
	str.w	r3, [r11, #12]
	str.w	r0, [r11, #16]
	ldr	r0, [sp, #4]
	strb.w	r0, [r11, #20]
	add.w	r12, r11, #24
	strb.w	lr, [r11, #21]
	strb.w	r8, [r11, #22]
	ldm.w	r1, {r0, r2, r3, r4, r5, r6}
	stm.w	r12, {r0, r2, r3, r4, r5, r6}
	b	.LBB241_81
.LBB241_72:
	adds	r0, #18
	b	.LBB241_75
.LBB241_73:
	adds	r0, #36
	b	.LBB241_75
.LBB241_74:
	adds	r0, #54
.LBB241_75:
	ldr.w	r1, [r0, #1]
	ldr.w	r2, [r0, #5]
	ldr.w	r3, [r0, #9]
	add	r5, sp, #80
	ldr.w	r0, [r0, #13]
	str	r2, [sp, #48]
	strd	r3, r0, [sp, #52]
	str	r1, [sp, #44]
	adds	r0, r5, #3
	add	r1, sp, #40
	movs	r2, #40
	b	.LBB241_11
.LBB241_76:
	adds	r1, #18
	b	.LBB241_79
.LBB241_77:
	adds	r1, #36
	b	.LBB241_79
.LBB241_78:
	adds	r1, #54
.LBB241_79:
	ldr.w	r0, [r1, #13]
	str	r0, [sp, #88]
	ldr.w	r0, [r1, #9]
	ldr.w	r3, [r1, #1]
	str	r0, [sp, #84]
	ldr.w	r0, [r1, #5]
	str	r0, [sp, #80]
.LBB241_80:
	ldr	r0, [sp, #80]
	str.w	r0, [r11, #16]
	ldr	r2, [sp, #84]
	movs	r4, #2
	strd	r0, r2, [sp, #40]
	add.w	r0, r6, #19
	ldr	r1, [sp, #88]
	str	r1, [sp, #48]
	lsrs	r5, r3, #24
	str.w	r1, [r11, #24]
	ldr	r1, [r0]
	str.w	r1, [r11, #28]
	ldr	r1, [r0, #4]
	strb.w	r4, [r11, #4]
	ldrh	r4, [r7, #-115]
	str.w	r1, [r11, #32]
	ldr	r1, [r0, #8]
	ldr	r0, [r0, #12]
	strh.w	r4, [r11, #5]
	ldrb	r4, [r7, #-113]
	str.w	r0, [r11, #40]
	ldr	r0, [sp, #4]
	strb.w	r4, [r11, #7]
	str.w	r12, [r11, #8]
	strb.w	r3, [r11, #12]
	lsrs	r3, r3, #8
	strb.w	r5, [r11, #15]
	strh.w	r3, [r11, #13]
	str.w	r2, [r11, #20]
	str.w	r1, [r11, #36]
	strb.w	lr, [r11, #44]
	strb.w	r0, [r11, #45]
	ldr	r0, [sp, #8]
	strb.w	r0, [r11, #46]
.LBB241_81:
	movs	r0, #0
	strb.w	r0, [r11]
	add	sp, #124
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB241_82:
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.399
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.400
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.399
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.400
	movs	r1, #55
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.Lfunc_end241:
	.size	smoltcp::wire::ip::Repr::lower::h8146fabc9d801364, .Lfunc_end241-smoltcp::wire::ip::Repr::lower::h8146fabc9d801364
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp4wire2ip4Repr10buffer_len17h21a6824b18829e4bE,"ax",%progbits
	.p2align	1
	.type	smoltcp::wire::ip::Repr::buffer_len::h21a6824b18829e4b,%function
	.code	16
	.thumb_func
smoltcp::wire::ip::Repr::buffer_len::h21a6824b18829e4b:
.Lfunc_begin242:
	.fnstart
	.cfi_startproc
	uxtb	r0, r0
	cmp	r0, #1
	beq	.LBB242_3
	cmp	r0, #2
	itt	eq
	moveq	r0, #40
	bxeq	lr
.LBB242_2:
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.401
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.402
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.401
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.402
	movs	r1, #29
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.LBB242_3:
	movs	r0, #20
	bx	lr
.Lfunc_end242:
	.size	smoltcp::wire::ip::Repr::buffer_len::h21a6824b18829e4b, .Lfunc_end242-smoltcp::wire::ip::Repr::buffer_len::h21a6824b18829e4b
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp4wire4ipv67Address14solicited_node17haf06f2ed20c3c012E,"ax",%progbits
	.p2align	1
	.type	smoltcp::wire::ipv6::Address::solicited_node::haf06f2ed20c3c012,%function
	.code	16
	.thumb_func
smoltcp::wire::ipv6::Address::solicited_node::haf06f2ed20c3c012:
.Lfunc_begin243:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r7, lr}
	push	{r4, r5, r7, lr}
	.cfi_def_cfa_offset 16
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r5, -12
	.cfi_offset r4, -16
	.setfp	r7, sp, #8
	add	r7, sp, #8
	.cfi_def_cfa r7, 8
	mov	r4, r1
	ldrb	r1, [r1]
	cmp	r1, #255
	beq	.LBB243_2
	movw	r1, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.7
	mov	r5, r0
	movt	r1, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.7
	movs	r2, #16
	mov	r0, r4
	bl	memcmp
	cmp	r0, #0
	itttt	ne
	movwne	r0, #767
	strhne	r0, [r5]
	movne	r0, #0
	strne.w	r0, [r5, #2]
	itttt	ne
	strne.w	r0, [r5, #6]
	ldrhne.w	r1, [r4, #13]
	strbne	r0, [r5, #10]
	movwne	r0, #65281
	itttt	ne
	strhne.w	r0, [r5, #11]
	ldrbne	r0, [r4, #15]
	strhne.w	r1, [r5, #13]
	strbne	r0, [r5, #15]
	it	ne
	popne	{r4, r5, r7, pc}
.LBB243_2:
	movw	r0, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.440
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.441
	movt	r0, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.440
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.441
	movs	r1, #35
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.Lfunc_end243:
	.size	smoltcp::wire::ipv6::Address::solicited_node::haf06f2ed20c3c012, .Lfunc_end243-smoltcp::wire::ipv6::Address::solicited_node::haf06f2ed20c3c012
	.cfi_endproc
	.cantunwind
	.fnend

	.section	.text._ZN7smoltcp4wire3tcp4Repr10buffer_len17h2eec5b61ad7be6e8E,"ax",%progbits
	.p2align	1
	.type	smoltcp::wire::tcp::Repr::buffer_len::h2eec5b61ad7be6e8,%function
	.code	16
	.thumb_func
smoltcp::wire::tcp::Repr::buffer_len::h2eec5b61ad7be6e8:
.Lfunc_begin244:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r7, lr}
	push	{r4, r5, r7, lr}
	.cfi_def_cfa_offset 16
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r5, -12
	.cfi_offset r4, -16
	.setfp	r7, sp, #8
	add	r7, sp, #8
	.cfi_def_cfa r7, 8
	ldrh	r2, [r0, #62]
	movs	r1, #20
	movs	r5, #8
	cmp	r2, #1
	it	eq
	moveq	r1, #24
	ldr	r3, [r0, #12]
	ldr	r2, [r0, #24]
	cmp	r3, #0
	ldrb.w	lr, [r0, #67]
	ldrb.w	r12, [r0, #69]
	it	ne
	movne	r3, #1
	ldr	r4, [r0, #36]
	add.w	r5, r5, r3, lsl #3
	cmp	r2, #0
	it	eq
	lsleq	r5, r3, #3
	cmp	r4, #0
	it	ne
	addne	r5, #8
	cmp.w	lr, #0
	it	ne
	addne	r1, #3
	cmp.w	r12, #0
	it	ne
	addne	r1, #2
	adds	r2, r1, r5
	cmp	r5, #0
	ldr	r0, [r0, #52]
	it	ne
	addne	r1, r2, #2
	ands	r2, r1, #3
	add	r0, r1
	sub.w	r1, r0, r2
	it	ne
	addne	r0, r1, #4
	pop	{r4, r5, r7, pc}
.Lfunc_end244:
	.size	smoltcp::wire::tcp::Repr::buffer_len::h2eec5b61ad7be6e8, .Lfunc_end244-smoltcp::wire::tcp::Repr::buffer_len::h2eec5b61ad7be6e8
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17h45af9a73fc454a88E","ax",%progbits
	.p2align	1
	.type	<&T as core::fmt::Debug>::fmt::h45af9a73fc454a88,%function
	.code	16
	.thumb_func
<&T as core::fmt::Debug>::fmt::h45af9a73fc454a88:
.Lfunc_begin245:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r7, lr}
	push	{r4, r5, r7, lr}
	.cfi_def_cfa_offset 16
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r5, -12
	.cfi_offset r4, -16
	.setfp	r7, sp, #8
	add	r7, sp, #8
	.cfi_def_cfa r7, 8
	ldr	r5, [r0]
	mov	r0, r1
	mov	r4, r1
	bl	core::fmt::Formatter::debug_lower_hex::h3647386a22b50f1b
	cbz	r0, .LBB245_2
	mov	r0, r5
	mov	r1, r4
	pop.w	{r4, r5, r7, lr}
	b	core::fmt::num::<impl core::fmt::LowerHex for i32>::fmt::hac89ce7c82380f7e
.LBB245_2:
	mov	r0, r4
	bl	core::fmt::Formatter::debug_upper_hex::hda639ee7898a7efd
	cbz	r0, .LBB245_4
	mov	r0, r5
	mov	r1, r4
	pop.w	{r4, r5, r7, lr}
	b	core::fmt::num::<impl core::fmt::UpperHex for i32>::fmt::h199b48bc29ed0670
.LBB245_4:
	mov	r0, r5
	mov	r1, r4
	pop.w	{r4, r5, r7, lr}
	b	core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::h9d0ff72e374f98e7
.Lfunc_end245:
	.size	<&T as core::fmt::Debug>::fmt::h45af9a73fc454a88, .Lfunc_end245-<&T as core::fmt::Debug>::fmt::h45af9a73fc454a88
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN77_$LT$smoltcp..iface..socket_set..SocketHandle$u20$as$u20$core..fmt..Debug$GT$3fmt17h5c316454e699546eE","ax",%progbits
	.p2align	1
	.type	<smoltcp::iface::socket_set::SocketHandle as core::fmt::Debug>::fmt::h5c316454e699546e,%function
	.code	16
	.thumb_func
<smoltcp::iface::socket_set::SocketHandle as core::fmt::Debug>::fmt::h5c316454e699546e:
.Lfunc_begin246:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r7, lr}
	push	{r4, r5, r7, lr}
	.cfi_def_cfa_offset 16
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r5, -12
	.cfi_offset r4, -16
	.setfp	r7, sp, #8
	add	r7, sp, #8
	.cfi_def_cfa r7, 8
	.pad	#16
	sub	sp, #16
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.762
	mov	r5, sp
	mov	r4, r0
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.762
	movs	r3, #12
	mov	r0, r5
	bl	core::fmt::Formatter::debug_tuple::h9a9c92e1e856202e
	movw	r2, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.763
	add	r1, sp, #12
	movt	r2, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.763
	mov	r0, r5
	str	r4, [sp, #12]
	bl	core::fmt::builders::DebugTuple::field::h344a2bce7ddce2f6
	bl	core::fmt::builders::DebugTuple::finish::hfca393014b7f9d44
	add	sp, #16
	pop	{r4, r5, r7, pc}
.Lfunc_end246:
	.size	<smoltcp::iface::socket_set::SocketHandle as core::fmt::Debug>::fmt::h5c316454e699546e, .Lfunc_end246-<smoltcp::iface::socket_set::SocketHandle as core::fmt::Debug>::fmt::h5c316454e699546e
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN51_$LT$smoltcp..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h1b457a22b40bf124E","ax",%progbits
	.p2align	2
	.type	<smoltcp::Error as core::fmt::Debug>::fmt::h1b457a22b40bf124,%function
	.code	16
	.thumb_func
<smoltcp::Error as core::fmt::Debug>::fmt::h1b457a22b40bf124:
.Lfunc_begin247:
	.fnstart
	.cfi_startproc
	ldrb	r0, [r0]
.LCPI247_0:
	tbb	[pc, r0]
.LJTI247_0:
	.byte	(.LBB247_2-(.LCPI247_0+4))/2
	.byte	(.LBB247_3-(.LCPI247_0+4))/2
	.byte	(.LBB247_4-(.LCPI247_0+4))/2
	.byte	(.LBB247_5-(.LCPI247_0+4))/2
	.byte	(.LBB247_6-(.LCPI247_0+4))/2
	.byte	(.LBB247_7-(.LCPI247_0+4))/2
	.byte	(.LBB247_8-(.LCPI247_0+4))/2
	.byte	(.LBB247_9-(.LCPI247_0+4))/2
	.byte	(.LBB247_12-(.LCPI247_0+4))/2
	.byte	(.LBB247_10-(.LCPI247_0+4))/2
	.byte	(.LBB247_11-(.LCPI247_0+4))/2
	.p2align	1
.LBB247_2:
	movw	r3, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1204
	movt	r3, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1204
	movs	r2, #9
	mov	r0, r1
	mov	r1, r3
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB247_3:
	movw	r3, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1203
	movs	r2, #7
	movt	r3, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1203
	mov	r0, r1
	mov	r1, r3
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB247_4:
	movw	r3, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1202
	movs	r2, #13
	movt	r3, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1202
	mov	r0, r1
	mov	r1, r3
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB247_5:
	movw	r3, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1201
	movs	r2, #8
	movt	r3, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1201
	mov	r0, r1
	mov	r1, r3
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB247_6:
	movw	r3, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1200
	movt	r3, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1200
	movs	r2, #9
	mov	r0, r1
	mov	r1, r3
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB247_7:
	movw	r3, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1199
	movs	r2, #8
	movt	r3, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1199
	mov	r0, r1
	mov	r1, r3
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB247_8:
	movw	r3, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1198
	movs	r2, #12
	movt	r3, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1198
	mov	r0, r1
	mov	r1, r3
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB247_9:
	movw	r3, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1197
	movs	r2, #10
	movt	r3, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1197
	mov	r0, r1
	mov	r1, r3
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB247_10:
	movw	r3, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1195
	movs	r2, #7
	movt	r3, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1195
	mov	r0, r1
	mov	r1, r3
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB247_11:
	movw	r3, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1194
	movs	r2, #12
	movt	r3, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1194
	mov	r0, r1
	mov	r1, r3
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB247_12:
	movw	r3, :lower16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1196
	movt	r3, :upper16:.Lanon.dc80c87ea47a70125c3d5d93959ab909.1196
	movs	r2, #9
	mov	r0, r1
	mov	r1, r3
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.Lfunc_end247:
	.size	<smoltcp::Error as core::fmt::Debug>::fmt::h1b457a22b40bf124, .Lfunc_end247-<smoltcp::Error as core::fmt::Debug>::fmt::h1b457a22b40bf124
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN13stm32h7xx_hal3adc66Adc$LT$stm32h7..stm32h743v..ADC1$C$stm32h7xx_hal..adc..Enabled$GT$27check_conversion_conditions17h7b40729b58c989daE","ax",%progbits
	.p2align	1
	.type	stm32h7xx_hal::adc::Adc<stm32h7::stm32h743v::ADC1,stm32h7xx_hal::adc::Enabled>::check_conversion_conditions::h7b40729b58c989da,%function
	.code	16
	.thumb_func
stm32h7xx_hal::adc::Adc<stm32h7::stm32h743v::ADC1,stm32h7xx_hal::adc::Enabled>::check_conversion_conditions::h7b40729b58c989da:
.Lfunc_begin248:
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	.pad	#24
	sub	sp, #24
	movw	r0, #8200
	movt	r0, #16386
	ldr	r1, [r0]
	lsls	r1, r1, #29
	bmi	.LBB248_6
	ldr	r1, [r0]
	lsls	r1, r1, #28
	bmi	.LBB248_7
	ldr	r1, [r0]
	lsls	r1, r1, #31
	beq	.LBB248_8
	ldr	r0, [r0]
	lsls	r0, r0, #30
	itt	pl
	addpl	sp, #24
	poppl	{r7, pc}
.LBB248_4:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.169
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.169
.LBB248_5:
	movw	r1, :lower16:CORE_PERIPHERALS
	str	r0, [sp]
	movs	r0, #1
	movt	r1, :upper16:CORE_PERIPHERALS
	str	r0, [sp, #4]
	movs	r0, #0
	str	r1, [sp, #16]
	movw	r1, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.156
	str	r0, [sp, #8]
	movt	r1, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.156
	str	r0, [sp, #12]
	str	r0, [sp, #20]
	mov	r0, sp
	bl	core::panicking::panic_fmt::h679f68291595c801
	.inst.n	0xdefe
.LBB248_6:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.163
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.163
	b	.LBB248_5
.LBB248_7:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.165
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.165
	b	.LBB248_5
.LBB248_8:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.167
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.167
	b	.LBB248_5
.Lfunc_end248:
	.size	stm32h7xx_hal::adc::Adc<stm32h7::stm32h743v::ADC1,stm32h7xx_hal::adc::Enabled>::check_conversion_conditions::h7b40729b58c989da, .Lfunc_end248-stm32h7xx_hal::adc::Adc<stm32h7::stm32h743v::ADC1,stm32h7xx_hal::adc::Enabled>::check_conversion_conditions::h7b40729b58c989da
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN13stm32h7xx_hal3adc66Adc$LT$stm32h7..stm32h743v..ADC3$C$stm32h7xx_hal..adc..Enabled$GT$27check_conversion_conditions17h48973f161e2166bdE","ax",%progbits
	.p2align	1
	.type	stm32h7xx_hal::adc::Adc<stm32h7::stm32h743v::ADC3,stm32h7xx_hal::adc::Enabled>::check_conversion_conditions::h48973f161e2166bd,%function
	.code	16
	.thumb_func
stm32h7xx_hal::adc::Adc<stm32h7::stm32h743v::ADC3,stm32h7xx_hal::adc::Enabled>::check_conversion_conditions::h48973f161e2166bd:
.Lfunc_begin249:
	.fnstart
	.cfi_startproc
	.save	{r7, lr}
	push	{r7, lr}
	.cfi_def_cfa_offset 8
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.setfp	r7, sp
	mov	r7, sp
	.cfi_def_cfa_register r7
	.pad	#24
	sub	sp, #24
	movw	r0, #24584
	movt	r0, #22530
	ldr	r1, [r0]
	lsls	r1, r1, #29
	bmi	.LBB249_6
	ldr	r1, [r0]
	lsls	r1, r1, #28
	bmi	.LBB249_7
	ldr	r1, [r0]
	lsls	r1, r1, #31
	beq	.LBB249_8
	ldr	r0, [r0]
	lsls	r0, r0, #30
	itt	pl
	addpl	sp, #24
	poppl	{r7, pc}
.LBB249_4:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.169
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.169
.LBB249_5:
	movw	r1, :lower16:CORE_PERIPHERALS
	str	r0, [sp]
	movs	r0, #1
	movt	r1, :upper16:CORE_PERIPHERALS
	str	r0, [sp, #4]
	movs	r0, #0
	str	r1, [sp, #16]
	movw	r1, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.170
	str	r0, [sp, #8]
	movt	r1, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.170
	str	r0, [sp, #12]
	str	r0, [sp, #20]
	mov	r0, sp
	bl	core::panicking::panic_fmt::h679f68291595c801
	.inst.n	0xdefe
.LBB249_6:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.163
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.163
	b	.LBB249_5
.LBB249_7:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.165
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.165
	b	.LBB249_5
.LBB249_8:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.167
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.167
	b	.LBB249_5
.Lfunc_end249:
	.size	stm32h7xx_hal::adc::Adc<stm32h7::stm32h743v::ADC3,stm32h7xx_hal::adc::Enabled>::check_conversion_conditions::h48973f161e2166bd, .Lfunc_end249-stm32h7xx_hal::adc::Adc<stm32h7::stm32h743v::ADC3,stm32h7xx_hal::adc::Enabled>::check_conversion_conditions::h48973f161e2166bd
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN66_$LT$stm32h7xx_hal..rng..ErrorKind$u20$as$u20$core..fmt..Debug$GT$3fmt17h754cb07ace65f846E","ax",%progbits
	.p2align	1
	.type	<stm32h7xx_hal::rng::ErrorKind as core::fmt::Debug>::fmt::h754cb07ace65f846,%function
	.code	16
	.thumb_func
<stm32h7xx_hal::rng::ErrorKind as core::fmt::Debug>::fmt::h754cb07ace65f846:
.Lfunc_begin250:
	.fnstart
	.cfi_startproc
	ldrb	r0, [r0]
	cmp	r0, #0
	mov	r0, r1
	beq	.LBB250_2
	movw	r1, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.339
	movs	r2, #9
	movt	r1, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.339
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB250_2:
	movw	r1, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.340
	movs	r2, #10
	movt	r1, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.340
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.Lfunc_end250:
	.size	<stm32h7xx_hal::rng::ErrorKind as core::fmt::Debug>::fmt::h754cb07ace65f846, .Lfunc_end250-<stm32h7xx_hal::rng::ErrorKind as core::fmt::Debug>::fmt::h754cb07ace65f846
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN62_$LT$stm32h7xx_hal..spi..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17h5e2472fb426a1a78E","ax",%progbits
	.p2align	2
	.type	<stm32h7xx_hal::spi::Error as core::fmt::Debug>::fmt::h5e2472fb426a1a78,%function
	.code	16
	.thumb_func
<stm32h7xx_hal::spi::Error as core::fmt::Debug>::fmt::h5e2472fb426a1a78:
.Lfunc_begin251:
	.fnstart
	.cfi_startproc
	.save	{r4, r6, r7, lr}
	push	{r4, r6, r7, lr}
	.cfi_def_cfa_offset 16
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r4, -16
	.setfp	r7, sp, #8
	add	r7, sp, #8
	.cfi_def_cfa r7, 8
	.pad	#24
	sub	sp, #24
	mov	r3, r1
	ldr	r1, [r0]
.LCPI251_0:
	tbb	[pc, r1]
.LJTI251_0:
	.byte	(.LBB251_2-(.LCPI251_0+4))/2
	.byte	(.LBB251_3-(.LCPI251_0+4))/2
	.byte	(.LBB251_4-(.LCPI251_0+4))/2
	.byte	(.LBB251_5-(.LCPI251_0+4))/2
	.byte	(.LBB251_6-(.LCPI251_0+4))/2
	.byte	(.LBB251_7-(.LCPI251_0+4))/2
	.p2align	1
.LBB251_2:
	movw	r1, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.387
	movs	r2, #7
	movt	r1, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.387
	mov	r0, r3
	add	sp, #24
	pop.w	{r4, r6, r7, lr}
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB251_3:
	movw	r1, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.432
	movs	r2, #9
	movt	r1, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.432
	mov	r0, r3
	add	sp, #24
	pop.w	{r4, r6, r7, lr}
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB251_4:
	movw	r1, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.431
	movs	r2, #3
	movt	r1, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.431
	mov	r0, r3
	add	sp, #24
	pop.w	{r4, r6, r7, lr}
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB251_5:
	movw	r1, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.430
	movs	r2, #11
	movt	r1, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.430
	mov	r0, r3
	add	sp, #24
	pop.w	{r4, r6, r7, lr}
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB251_6:
	movw	r1, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.429
	movs	r2, #25
	movt	r1, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.429
	mov	r0, r3
	add	sp, #24
	pop.w	{r4, r6, r7, lr}
	b	core::fmt::Formatter::write_str::he05d53f0ac3a4f9e
.LBB251_7:
	movw	r1, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.426
	adds	r4, r0, #4
	movt	r1, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.426
	movs	r2, #12
	mov	r0, r3
	bl	core::fmt::Formatter::debug_struct::h410abba8da9e6590
	strd	r0, r1, [sp, #8]
	movw	r1, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.427
	str	r4, [sp, #20]
	movw	r4, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.428
	movt	r1, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.427
	add	r0, sp, #8
	add	r3, sp, #20
	movs	r2, #8
	movt	r4, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.428
	str	r4, [sp]
	bl	core::fmt::builders::DebugStruct::field::hf57541a1df3c3ba1
	bl	core::fmt::builders::DebugStruct::finish::h13801c6cd64a79cd
	add	sp, #24
	pop	{r4, r6, r7, pc}
.Lfunc_end251:
	.size	<stm32h7xx_hal::spi::Error as core::fmt::Debug>::fmt::h5e2472fb426a1a78, .Lfunc_end251-<stm32h7xx_hal::spi::Error as core::fmt::Debug>::fmt::h5e2472fb426a1a78
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN151_$LT$stm32h7xx_hal..spi..Spi$LT$stm32h7..stm32h743v..SPI3$C$stm32h7xx_hal..spi..Enabled$GT$$u20$as$u20$embedded_hal..blocking..spi..Write$LT$u8$GT$$GT$5write17ha51d71009bfdfd7bE","ax",%progbits
	.p2align	1
	.type	<stm32h7xx_hal::spi::Spi<stm32h7::stm32h743v::SPI3,stm32h7xx_hal::spi::Enabled> as embedded_hal::blocking::spi::Write<u8>>::write::ha51d71009bfdfd7b,%function
	.code	16
	.thumb_func
<stm32h7xx_hal::spi::Spi<stm32h7::stm32h743v::SPI3,stm32h7xx_hal::spi::Enabled> as embedded_hal::blocking::spi::Write<u8>>::write::ha51d71009bfdfd7b:
.Lfunc_begin252:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r7, lr}
	push	{r4, r5, r7, lr}
	.cfi_def_cfa_offset 16
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r5, -12
	.cfi_offset r4, -16
	.setfp	r7, sp, #8
	add	r7, sp, #8
	.cfi_def_cfa r7, 8
	uxtb.w	lr, r0
	movw	r0, #15360
	cmp.w	lr, #3
	movt	r0, #16384
	bne	.LBB252_7
	ldr	r2, [r0]
	lsls	r2, r2, #22
	bmi	.LBB252_20
	ldr	r2, [r0]
	orr	r2, r2, #1024
	str	r2, [r0]
.LBB252_3:
	ldr	r2, [r0, #20]
	lsls	r2, r2, #28
	bpl	.LBB252_6
	ldr	r2, [r0, #20]
	lsls	r2, r2, #28
	itt	mi
	ldrmi	r2, [r0, #20]
	lslsmi.w	r2, r2, #28
	bpl	.LBB252_6
	ldr	r2, [r0, #20]
	lsls	r2, r2, #28
	bmi	.LBB252_3
.LBB252_6:
	mov.w	r2, #4096
	str	r2, [r0]
	movs	r2, #3
	str	r2, [r0, #4]
	mov.w	r2, #512
	str	r2, [r0, #24]
	ldr	r2, [r0, #20]
	ldr	r2, [r0, #20]
	movw	r2, #4097
	str	r2, [r0]
.LBB252_7:
	mov	r3, r1
	ldrb	r5, [r3], #1
	ldr	r2, [r0, #20]
	lsls	r4, r2, #25
	bmi	.LBB252_50
	lsls	r4, r2, #22
	bmi.w	.LBB252_68
	lsls	r4, r2, #24
	bmi.w	.LBB252_69
	lsls	r2, r2, #30
	add.w	r12, r1, #3
	bmi	.LBB252_22
	ldrb	r5, [r1, #1]
	ldr	r2, [r0, #20]
	lsls	r3, r2, #25
	bmi	.LBB252_50
	lsls	r3, r2, #22
	bmi.w	.LBB252_68
	lsls	r3, r2, #24
	bmi.w	.LBB252_69
	lsls	r2, r2, #30
	bmi	.LBB252_21
	ldrb	r5, [r1, #2]
	ldr	r1, [r0, #20]
	lsls	r2, r1, #25
	bmi	.LBB252_50
	lsls	r2, r1, #22
	bmi.w	.LBB252_68
	lsls	r2, r1, #24
	bmi.w	.LBB252_69
	lsls	r1, r1, #30
	bpl.w	.LBB252_70
	mov	r3, r12
	b	.LBB252_22
.LBB252_20:
	movs	r0, #4
	pop	{r4, r5, r7, pc}
.LBB252_21:
	adds	r3, r1, #2
.LBB252_22:
	strb.w	r5, [r0, #32]
	ldr	r1, [r0]
	orr	r1, r1, #512
	str	r1, [r0]
.LBB252_23:
	cmp	r3, r12
	beq.w	.LBB252_70
	ldrb	r1, [r3], #1
	ldr	r2, [r0, #20]
	lsls	r4, r2, #25
	bmi	.LBB252_50
	lsls	r4, r2, #22
	bmi	.LBB252_68
	lsls	r4, r2, #24
	bmi	.LBB252_69
	lsls	r2, r2, #30
	bpl	.LBB252_23
	strb.w	r1, [r0, #32]
	ldr	r1, [r0]
	orr	r1, r1, #512
	str	r1, [r0]
.LBB252_29:
	cmp	r3, r12
	beq	.LBB252_70
	ldrb	r1, [r3], #1
	ldr	r2, [r0, #20]
	lsls	r4, r2, #25
	bmi	.LBB252_50
	lsls	r4, r2, #22
	bmi	.LBB252_68
	lsls	r4, r2, #24
	bmi	.LBB252_69
	lsls	r2, r2, #30
	bpl	.LBB252_29
	strb.w	r1, [r0, #32]
	cmp	r3, r12
	ldr	r1, [r0]
	orr	r1, r1, #512
	str	r1, [r0]
	beq	.LBB252_49
.LBB252_35:
	ldrb	r1, [r3], #1
.LBB252_36:
	ldr	r2, [r0, #20]
	lsls	r4, r2, #25
	bmi	.LBB252_50
	lsls	r4, r2, #22
	bmi	.LBB252_68
	lsls	r4, r2, #24
	bmi	.LBB252_69
	lsls	r2, r2, #30
	bpl	.LBB252_36
	strb.w	r1, [r0, #32]
	ldr	r1, [r0]
	orr	r1, r1, #512
	str	r1, [r0]
.LBB252_41:
	ldr	r1, [r0, #20]
	lsls	r2, r1, #25
	bmi	.LBB252_50
	lsls	r2, r1, #22
	bmi	.LBB252_68
	lsls	r2, r1, #24
	bmi	.LBB252_69
	lsls	r1, r1, #31
	beq	.LBB252_41
	ldrb.w	r1, [r0, #48]
	cmp	r3, r12
	bne	.LBB252_35
	b	.LBB252_49
.LBB252_46:
	lsls	r2, r1, #22
	bmi	.LBB252_68
	lsls	r2, r1, #24
	bmi	.LBB252_69
	lsls	r1, r1, #31
	bne	.LBB252_51
.LBB252_49:
	ldr	r1, [r0, #20]
	lsls	r2, r1, #25
	bpl	.LBB252_46
.LBB252_50:
	movs	r0, #0
	pop	{r4, r5, r7, pc}
.LBB252_51:
	ldrb.w	r1, [r0, #48]
.LBB252_52:
	ldr	r1, [r0, #20]
	lsls	r2, r1, #25
	bmi	.LBB252_50
	lsls	r2, r1, #22
	bmi	.LBB252_68
	lsls	r2, r1, #24
	bmi	.LBB252_69
	lsls	r1, r1, #31
	beq	.LBB252_52
	ldrb.w	r1, [r0, #48]
.LBB252_57:
	ldr	r1, [r0, #20]
	lsls	r2, r1, #25
	bmi	.LBB252_50
	lsls	r2, r1, #22
	bmi	.LBB252_68
	lsls	r2, r1, #24
	bmi	.LBB252_69
	lsls	r1, r1, #31
	beq	.LBB252_57
	ldrb.w	r1, [r0, #48]
	cmp.w	lr, #3
	bne	.LBB252_67
	ldr	r1, [r0]
	orr	r1, r1, #1024
	str	r1, [r0]
.LBB252_63:
	ldr	r1, [r0]
	lsls	r1, r1, #22
	bpl	.LBB252_66
	ldr	r1, [r0]
	lsls	r1, r1, #22
	itt	mi
	ldrmi	r1, [r0]
	lslsmi.w	r1, r1, #22
	bpl	.LBB252_66
	ldr	r1, [r0]
	lsls	r1, r1, #22
	bmi	.LBB252_63
.LBB252_66:
	movs	r1, #24
	str	r1, [r0, #24]
.LBB252_67:
	movs	r0, #6
	pop	{r4, r5, r7, pc}
.LBB252_68:
	movs	r0, #1
	pop	{r4, r5, r7, pc}
.LBB252_69:
	movs	r0, #2
	pop	{r4, r5, r7, pc}
.LBB252_70:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movw	r2, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.438
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movt	r2, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.438
	movs	r1, #43
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.Lfunc_end252:
	.size	<stm32h7xx_hal::spi::Spi<stm32h7::stm32h743v::SPI3,stm32h7xx_hal::spi::Enabled> as embedded_hal::blocking::spi::Write<u8>>::write::ha51d71009bfdfd7b, .Lfunc_end252-<stm32h7xx_hal::spi::Spi<stm32h7::stm32h743v::SPI3,stm32h7xx_hal::spi::Enabled> as embedded_hal::blocking::spi::Write<u8>>::write::ha51d71009bfdfd7b
	.cfi_endproc
	.cantunwind
	.fnend

	.section	".text._ZN13stm32h7xx_hal3spi66Spi$LT$stm32h7..stm32h743v..SPI4$C$stm32h7xx_hal..spi..Enabled$GT$17transfer_internal17h3a158811a6b4093eE","ax",%progbits
	.p2align	1
	.type	stm32h7xx_hal::spi::Spi<stm32h7::stm32h743v::SPI4,stm32h7xx_hal::spi::Enabled>::transfer_internal::h3a158811a6b4093e,%function
	.code	16
	.thumb_func
stm32h7xx_hal::spi::Spi<stm32h7::stm32h743v::SPI4,stm32h7xx_hal::spi::Enabled>::transfer_internal::h3a158811a6b4093e:
.Lfunc_begin253:
	.fnstart
	.cfi_startproc
	.save	{r4, r5, r6, r7, lr}
	push	{r4, r5, r6, r7, lr}
	.cfi_def_cfa_offset 20
	.cfi_offset lr, -4
	.cfi_offset r7, -8
	.cfi_offset r6, -12
	.cfi_offset r5, -16
	.cfi_offset r4, -20
	.setfp	r7, sp, #12
	add	r7, sp, #12
	.cfi_def_cfa r7, 8
	.save	{r8, r9, r10, r11}
	push.w	{r8, r9, r10, r11}
	.cfi_offset r11, -24
	.cfi_offset r10, -28
	.cfi_offset r9, -32
	.cfi_offset r8, -36
	.pad	#4
	sub	sp, #4
	ldrb.w	r12, [r0]
	cmp.w	r12, #3
	bne	.LBB253_9
	movs	r6, #0
	cmp.w	r6, r2, lsr #16
	beq	.LBB253_3
	movw	r1, #65535
	movs	r0, #5
	add	sp, #4
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB253_3:
	movw	r6, #13312
	movt	r6, #16385
	ldr	r5, [r6]
	lsls	r5, r5, #22
	bmi.w	.LBB253_56
	ldr	r5, [r6]
	orr	r5, r5, #1024
	str	r5, [r6]
.LBB253_5:
	ldr	r5, [r6, #20]
	lsls	r5, r5, #28
	bpl	.LBB253_8
	ldr	r5, [r6, #20]
	lsls	r5, r5, #28
	itt	mi
	ldrmi	r5, [r6, #20]
	lslsmi.w	r5, r5, #28
	bpl	.LBB253_8
	ldr	r5, [r6, #20]
	lsls	r5, r5, #28
	bmi	.LBB253_5
.LBB253_8:
	mov.w	r5, #4096
	str	r5, [r6]
	uxth	r5, r2
	str	r5, [r6, #4]
	mov.w	r5, #512
	str	r5, [r6, #24]
	ldr	r5, [r6, #20]
	ldr	r5, [r6, #20]
	movw	r5, #4097
	str	r5, [r6]
.LBB253_9:
	mov	r11, r2
	movw	lr, #13312
	cmp	r2, #4
	ldr.w	r8, [r7, #8]
	it	hs
	movhs.w	r11, #4
	movt	lr, #16385
	mov	r10, r11
	add.w	r9, r1, r2
	cmp.w	r11, #1
	it	ls
	movls.w	r10, #1
.LBB253_10:
	cmp	r2, #0
	beq.w	.LBB253_99
	ldrb	r4, [r1], #1
	ldr.w	r5, [lr, #20]
	lsls	r6, r5, #25
	bmi.w	.LBB253_73
	lsls	r6, r5, #22
	bmi.w	.LBB253_97
	lsls	r6, r5, #24
	bmi.w	.LBB253_98
	lsls	r5, r5, #30
	sub.w	r2, r2, #1
	bpl	.LBB253_10
	strb.w	r4, [lr, #32]
	cmp.w	r11, #2
	ldr.w	r4, [lr]
	orr	r4, r4, #512
	str.w	r4, [lr]
	bhs	.LBB253_38
.LBB253_16:
	cmp	r3, #0
	beq.w	.LBB253_68
	cmp	r1, r9
	add.w	r2, r3, r8
	beq	.LBB253_30
.LBB253_18:
	ldrb	r4, [r1], #1
.LBB253_19:
	ldr.w	r5, [lr, #20]
	lsls	r6, r5, #25
	bmi.w	.LBB253_73
	lsls	r6, r5, #22
	bmi.w	.LBB253_97
	lsls	r6, r5, #24
	bmi.w	.LBB253_98
	lsls	r5, r5, #30
	bpl	.LBB253_19
	strb.w	r4, [lr, #32]
	ldr.w	r4, [lr]
	orr	r4, r4, #512
	str.w	r4, [lr]
.LBB253_24:
	ldr.w	r4, [lr, #20]
	lsls	r5, r4, #25
	bmi.w	.LBB253_73
	lsls	r5, r4, #22
	bmi.w	.LBB253_97
	lsls	r5, r4, #24
	bmi.w	.LBB253_98
	lsls	r4, r4, #31
	beq	.LBB253_24
	ldrb.w	r4, [lr, #48]
	cmp	r3, r2
	beq.w	.LBB253_99
	cmp	r1, r9
	strb	r4, [r3], #1
	bne	.LBB253_18
.LBB253_30:
	cmp	r3, r2
	beq.w	.LBB253_75
.LBB253_31:
	adds	r1, r3, #1
.LBB253_32:
	ldr.w	r6, [lr, #20]
	lsls	r5, r6, #25
	bmi.w	.LBB253_73
	lsls	r5, r6, #22
	bmi.w	.LBB253_97
	lsls	r5, r6, #24
	bmi.w	.LBB253_98
	lsls	r6, r6, #31
	beq	.LBB253_32
	ldrb.w	r6, [lr, #48]
	cmp	r1, r2
	strb	r6, [r3]
	mov	r3, r1
	bne	.LBB253_31
	ldrb.w	r12, [r0]
	b	.LBB253_75
.LBB253_38:
	cmp	r2, #0
	beq.w	.LBB253_99
	ldrb	r4, [r1], #1
	ldr.w	r5, [lr, #20]
	lsls	r6, r5, #25
	bmi.w	.LBB253_73
	lsls	r6, r5, #22
	bmi.w	.LBB253_97
	lsls	r6, r5, #24
	bmi.w	.LBB253_98
	lsls	r5, r5, #30
	sub.w	r2, r2, #1
	bpl	.LBB253_38
	strb.w	r4, [lr, #32]
	cmp.w	r10, #2
	ldr.w	r4, [lr]
	orr	r4, r4, #512
	str.w	r4, [lr]
	beq	.LBB253_16
.LBB253_44:
	cmp	r2, #0
	beq.w	.LBB253_99
	ldrb	r4, [r1], #1
	ldr.w	r5, [lr, #20]
	lsls	r6, r5, #25
	bmi	.LBB253_73
	lsls	r6, r5, #22
	bmi.w	.LBB253_97
	lsls	r6, r5, #24
	bmi.w	.LBB253_98
	lsls	r5, r5, #30
	sub.w	r2, r2, #1
	bpl	.LBB253_44
	strb.w	r4, [lr, #32]
	cmp.w	r10, #3
	ldr.w	r4, [lr]
	orr	r4, r4, #512
	str.w	r4, [lr]
	beq.w	.LBB253_16
.LBB253_50:
	cmp	r2, #0
	beq.w	.LBB253_99
	ldrb	r4, [r1], #1
	ldr.w	r5, [lr, #20]
	lsls	r6, r5, #25
	bmi	.LBB253_73
	lsls	r6, r5, #22
	bmi.w	.LBB253_97
	lsls	r6, r5, #24
	bmi.w	.LBB253_98
	lsls	r5, r5, #30
	sub.w	r2, r2, #1
	bpl	.LBB253_50
	strb.w	r4, [lr, #32]
	ldr.w	r2, [lr]
	orr	r2, r2, #512
	str.w	r2, [lr]
	b	.LBB253_16
.LBB253_56:
	movs	r1, #0
	movs	r0, #4
	add	sp, #4
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB253_57:
	ldrb	r0, [r1], #1
.LBB253_58:
	ldr.w	r2, [lr, #20]
	lsls	r3, r2, #25
	bmi	.LBB253_73
	lsls	r3, r2, #22
	bmi	.LBB253_97
	lsls	r3, r2, #24
	bmi.w	.LBB253_98
	lsls	r2, r2, #30
	bpl	.LBB253_58
	strb.w	r0, [lr, #32]
	ldr.w	r0, [lr]
	orr	r0, r0, #512
	str.w	r0, [lr]
.LBB253_63:
	ldr.w	r0, [lr, #20]
	lsls	r2, r0, #25
	bmi	.LBB253_73
	lsls	r2, r0, #22
	bmi	.LBB253_97
	lsls	r2, r0, #24
	bmi	.LBB253_98
	lsls	r0, r0, #31
	beq	.LBB253_63
	ldrb.w	r0, [lr, #48]
.LBB253_68:
	cmp	r1, r9
	bne	.LBB253_57
	b	.LBB253_72
.LBB253_69:
	lsls	r1, r0, #22
	bmi	.LBB253_97
	lsls	r1, r0, #24
	bmi	.LBB253_98
	lsls	r0, r0, #31
	bne	.LBB253_74
.LBB253_72:
	ldr.w	r0, [lr, #20]
	lsls	r1, r0, #25
	bpl	.LBB253_69
.LBB253_73:
	movs	r0, #0
	movs	r1, #0
	add	sp, #4
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB253_74:
	ldrb.w	r0, [lr, #48]
	cmp.w	r11, #2
	bhs	.LBB253_82
.LBB253_75:
	cmp.w	r12, #3
	bne	.LBB253_81
	ldr.w	r0, [lr]
	orr	r0, r0, #1024
	str.w	r0, [lr]
.LBB253_77:
	ldr.w	r0, [lr]
	lsls	r0, r0, #22
	bpl	.LBB253_80
	ldr.w	r0, [lr]
	lsls	r0, r0, #22
	itt	mi
	ldrmi.w	r0, [lr]
	lslsmi.w	r0, r0, #22
	bpl	.LBB253_80
	ldr.w	r0, [lr]
	lsls	r0, r0, #22
	bmi	.LBB253_77
.LBB253_80:
	movs	r0, #24
	str.w	r0, [lr, #24]
.LBB253_81:
	movs	r1, #0
	movs	r0, #6
	add	sp, #4
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB253_82:
	ldr.w	r0, [lr, #20]
	lsls	r1, r0, #25
	bmi	.LBB253_73
	lsls	r1, r0, #22
	bmi	.LBB253_97
	lsls	r1, r0, #24
	bmi	.LBB253_98
	lsls	r0, r0, #31
	beq	.LBB253_82
	ldrb.w	r0, [lr, #48]
	cmp.w	r10, #2
	beq	.LBB253_75
.LBB253_87:
	ldr.w	r0, [lr, #20]
	lsls	r1, r0, #25
	bmi	.LBB253_73
	lsls	r1, r0, #22
	bmi	.LBB253_97
	lsls	r1, r0, #24
	bmi	.LBB253_98
	lsls	r0, r0, #31
	beq	.LBB253_87
	ldrb.w	r0, [lr, #48]
	cmp.w	r10, #3
	beq	.LBB253_75
.LBB253_92:
	ldr.w	r0, [lr, #20]
	lsls	r1, r0, #25
	bmi	.LBB253_73
	lsls	r1, r0, #22
	bmi	.LBB253_97
	lsls	r1, r0, #24
	bmi	.LBB253_98
	lsls	r0, r0, #31
	beq	.LBB253_92
	ldrb.w	r0, [lr, #48]
	b	.LBB253_75
.LBB253_97:
	movs	r1, #0
	movs	r0, #1
	add	sp, #4
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB253_98:
	movs	r1, #0
	movs	r0, #2
	add	sp, #4
	pop.w	{r8, r9, r10, r11}
	pop	{r4, r5, r6, r7, pc}
.LBB253_99:
	movw	r0, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movw	r2, :lower16:.Lanon.a766a8867b32155983aeb12c9f88ad10.438
	movt	r0, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.275
	movt	r2, :upper16:.Lanon.a766a8867b32155983aeb12c9f88ad10.438
	movs	r1, #43
	bl	core::panicking::panic::ha0d68f1d939a874b
	.inst.n	0xdefe
.Lfunc_end253:
	.size	stm32h7xx_hal::spi::Spi<stm32h7::stm32h743v::SPI4,stm32h7xx_hal::spi::Enabled>::transfer_internal::h3a158811a6b4093e, .Lfunc_end253-stm32h7xx_hal::spi::Spi<stm32h7::stm32h743v::SPI4,stm32h7xx_hal::spi::Enabled>::transfer_internal::h3a158811a6b4093e
	.cfi_endproc
	.cantunwind
	.fnend

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.0,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.0,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.0:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/miniconf-0.3.0/src/mqtt_client/messages.rs"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.0, 103

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.1,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.1,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.1:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.0
	.asciz	"g\000\000\000P\000\000\0003\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.1, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.2,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.2,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.2:
	.ascii	"TryFromPrimitiveError"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.2, 21

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.3,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.3,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.3:
	.ascii	"number"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.3, 6

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.4,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.4,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.4:
	.long	core::ptr::drop_in_place<bool>::h0b92a80a750bd66f
	.asciz	"\004\000\000\000\004\000\000"
	.long	core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h4b1edc1df8703cc0
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.4, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.5,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.5,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.5:
	.ascii	"Bus conflict"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.5, 12

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.6,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.6,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.6:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/shared-bus-0.2.2/src/mutex.rs"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.6, 90

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.7,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.7,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.7:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.6
	.asciz	"Z\000\000\000\276\000\000\000\016\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.7, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.8,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.8,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.8:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/minimq-0.5.2/src/de/packet_reader.rs"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.8, 97

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.9,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.9,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.9:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.8
	.asciz	"a\000\000\000/\000\000\000%\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.9, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.10,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.10,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.10:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.8
	.asciz	"a\000\000\000/\000\000\000\r\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.10, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.11,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.11,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.11:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.8
	.asciz	"a\000\000\0003\000\000\000$\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.11, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.12,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.12,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.12:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.8
	.asciz	"a\000\000\0009\000\000\000\037\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.12, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.13,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.13,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.13:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.8
	.asciz	"a\000\000\000@\000\000\000$\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.13, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.14,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.14,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.14:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.8
	.asciz	"a\000\000\000F\000\000\000\036\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.14, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.15,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.15,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.15:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.8
	.asciz	"a\000\000\000M\000\000\0000\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.15, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.16,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.16,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.16:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/miniconf-0.3.0/src/mqtt_client/mqtt_client.rs"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.16, 106

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.17,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.17,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.17:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.8
	.asciz	"a\000\000\000\273\000\000\000$\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.17, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.18,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.18,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.18:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.8
	.asciz	"a\000\000\000\303\000\000\000\024\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.18, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.19,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.19,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.19:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.8
	.asciz	"a\000\000\000\323\000\000\000\t\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.19, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.20,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.20,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.20:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.8
	.asciz	"a\000\000\000\356\000\000\000\030\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.20, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.21,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.21,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.21:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.8
	.asciz	"a\000\000\000\375\000\000\000\032\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.21, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.22,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.22,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.22:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.16
	.asciz	"j\000\000\000\231\000\000\000-\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.22, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.25,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.25,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.25:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.16
	.asciz	"j\000\000\000\242\000\000\000\016\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.25, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.26,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.26,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.26:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.16
	.asciz	"j\000\000\000\245\000\000\000/\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.26, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.27,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.27,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.27:
	.ascii	"assertion failed: settings_prefix.len() + 1 + settings.get_metadata().max_topic_size <=\\n    MAX_TOPIC_LENGTH"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.27, 109

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.28,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.28,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.28:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.16
	.asciz	"j\000\000\000\247\000\000\000\t\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.28, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.29,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.29,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.29:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.16
	.asciz	"j\000\000\000\274\000\000\000\016\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.29, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.30,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.30,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.30:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.16
	.asciz	"j\000\000\000\302\000\000\000<\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.30, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.31,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.31,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.31:
	.byte	47
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.31, 1

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.32,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.32,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.32:
	.long	CORE_PERIPHERALS
	.zero	4
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.31
	.asciz	"\001\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.32, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.33,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.33,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.33:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.16
	.asciz	"j\000\000\000\305\000\000\000Q\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.33, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.34,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.34,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.34:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.16
	.asciz	"j\000\000\000\315\000\000\000\026\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.34, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.35,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.35,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.35:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.16
	.asciz	"j\000\000\000\322\000\000\000\022\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.35, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.36,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.36,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.36:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.16
	.asciz	"j\000\000\000\336\000\000\000\016\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.36, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.41,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.41,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.41:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.16
	.asciz	"j\000\000\000\350\000\000\000'\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.41, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.42,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.42,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.42:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.16
	.asciz	"j\000\000\000\353\000\000\000>\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.42, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.43,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.43,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.43:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.16
	.asciz	"j\000\000\000\362\000\000\000-\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.43, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.44,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.44,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.44:
	.byte	49
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.44, 1

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.45,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.45,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.45:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.16
	.asciz	"j\000\000\000\002\001\000\000\022\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.45, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.46,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.46,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.46:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.16
	.asciz	"j\000\000\000\034\001\000\000\032\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.46, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.47,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.47,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.47:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.16
	.asciz	"j\000\000\0000\001\000\000)\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.47, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.51,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.51,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.51:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.16
	.asciz	"j\000\000\0009\001\000\000\032\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.51, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.59,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.59,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.59:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/smoltcp-nal-0.2.0/src/lib.rs"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.59, 89

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.60,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.60,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.60:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.59
	.asciz	"Y\000\000\000\312\000\000\0003\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.60, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.61,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.61,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.61:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.59
	.asciz	"Y\000\000\000\333\000\000\000F\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.61, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.62,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.62,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.62:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.59
	.asciz	"Y\000\000\000'\001\000\000\022\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.62, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.63,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.63,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.63:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.59
	.asciz	"Y\000\000\000r\001\000\000,\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.63, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.64,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.64,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.64:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.59
	.asciz	"Y\000\000\000\356\001\000\000.\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.64, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.66,%object
	.section	.rodata.cst4,"aM",%progbits,4
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.66:
	.ascii	"MQTT"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.66, 4

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.67,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.67,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.67:
	.ascii	"src/hardware/ad7172.rs"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.67, 22

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.68,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.68,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.68:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.67
	.asciz	"\026\000\000\000\274\000\000\000%\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.68, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.70,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.70,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.70:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.67
	.asciz	"\026\000\000\000\304\000\000\0001\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.70, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.71,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.71,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.71:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.67
	.asciz	"\026\000\000\000\315\000\000\000*\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.71, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.74,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.74,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.74:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/miniconf-0.3.0/src/lib.rs"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.74, 86

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.75,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.75,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.75:
	.ascii	"Topic buffer too short"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.75, 22

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.76,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.76,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.76:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.75
	.asciz	"\026\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.76, 8

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.77,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.77,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.77:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.74
	.asciz	"V\000\000\000\313\001\000\000\025\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.77, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.79,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.79,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.79:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.74
	.asciz	"V\000\000\000\323\001\000\000\021\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.79, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.80,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.80,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.80:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.74
	.asciz	"V\000\000\000\326\001\000\000\020\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.80, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.82,%object
	.section	.rodata.cst4,"aM",%progbits,4
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.82:
	.ascii	"code"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.82, 4

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.83,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.83,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.83:
	.ascii	"msg"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.83, 3

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.86,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.86,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.86:
	.long	.Lanon.a766a8867b32155983aeb12c9f88ad10.3
	.asciz	"S\000\000\000g\001\000\000\016\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.86, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.89,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.89,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.89:
	.ascii	"ADC: PLL3_R must be enabled"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.89, 27

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.90,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.90,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.90:
	.long	.Lanon.a766a8867b32155983aeb12c9f88ad10.3
	.asciz	"S\000\000\000b\001\000\000 \000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.90, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.97,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.97,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.97:
	.ascii	"non-IP response packet"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.97, 22

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.98,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.98,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.98:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.32
	.asciz	"a\000\000\000\270\003\000\000'\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.98, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.99,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.99,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.99:
	.ascii	"src/hardware/adc.rs"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.99, 19

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.101,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.101,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.101:
	.asciz	"\000\000\000\000\000\000\000\000\001\000\000\000\002\000\000\000\002\000\000\000\004\000\000\000\003\000\000\000\006\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\003\000\000\000\002\000\000\000\005\000\000\000\003\000\000\000\007\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.101, 64

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.103,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.103,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.103:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.99
	.asciz	"\023\000\000\000\316\000\000\000\r\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.103, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.104,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.104,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.104:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.99
	.asciz	"\023\000\000\000\013\001\000\000\"\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.104, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.105,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.105,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.105:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.99
	.asciz	"\023\000\000\000\022\001\000\000\t\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.105, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.106,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.106,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.106:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/minimq-0.5.2/src/mqtt_client.rs"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.106, 92

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.107,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.107,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.107:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.106
	.asciz	"\\\000\000\000W\000\000\000\026\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.107, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.108,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.108,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.108:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.106
	.asciz	"\\\000\000\000y\000\000\000\026\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.108, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.109,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.109,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.109:
	.zero	1
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.109, 1

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.110,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.110,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.110:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.32
	.asciz	"a\000\000\000\261\004\000\000V\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.110, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.111,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.111,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.111:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.32
	.asciz	"a\000\000\000\214\005\000\000.\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.111, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.112,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.112,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.112:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.32
	.asciz	"a\000\000\000\225\005\000\000\036\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.112, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.113,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.113,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.113:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.106
	.asciz	"\\\000\000\000x\001\000\000H\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.113, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.115,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.115,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.115:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.106
	.asciz	"\\\000\000\000;\002\000\000-\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.115, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.116,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.116,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.116:
	.ascii	"Add failed"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.116, 10

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.117,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.117,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.117:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/embedded-time-0.12.1/./src/instant.rs"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.117, 98

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.118,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.118,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.118:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.117
	.asciz	"b\000\000\000W\001\000\000\r\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.118, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.119,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.119,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.119:
	.ascii	"Sub failed"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.119, 10

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.120,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.120,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.120:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.117
	.asciz	"b\000\000\000\306\001\000\000\r\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.120, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.121,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.121,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.121:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/minimq-0.5.2/src/network_manager.rs"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.121, 96

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.130,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.130,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.130:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.32
	.asciz	"a\000\000\000\n\t\000\000\016\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.130, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.131,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.131,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.131:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.32
	.asciz	"a\000\000\0009\t\000\0005\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.131, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.132,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.132,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.132:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.32
	.asciz	"a\000\000\000M\t\000\000&\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.132, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.133,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.133,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.133:
	.ascii	"assertion failed: self.pending_write.is_none()"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.133, 46

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.134,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.134,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.134:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.121
	.asciz	"`\000\000\000`\000\000\000\t\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.134, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.136,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.136,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.136:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.121
	.asciz	"`\000\000\000m\000\000\0003\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.136, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.137,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.137,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.137:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.121
	.asciz	"`\000\000\000m\000\000\000D\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.137, 16

	.type	str.1,%object
	.section	.rodata.str.1,"a",%progbits
	.p2align	4
str.1:
	.ascii	"attempt to calculate the remainder with a divisor of zero"
	.size	str.1, 57

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.140,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.140,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.140:
	.ascii	"\":"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.140, 2

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.141,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.141,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.141:
	.ascii	"src/hardware/dac.rs"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.141, 19

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.142,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.142,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.142:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.141
	.asciz	"\023\000\000\000\210\000\000\000%\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.142, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.143,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.143,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.143:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.141
	.asciz	"\023\000\000\000\203\000\000\000%\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.143, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.144,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.144,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.144:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.141
	.asciz	"\023\000\000\000~\000\000\000%\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.144, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.145,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.145,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.145:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.141
	.asciz	"\023\000\000\000y\000\000\000%\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.145, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.146,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.146,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.146:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/minimq-0.5.2/src/session_state.rs"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.146, 94

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.147,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.147,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.147:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.146
	.asciz	"^\000\000\000_\000\000\0008\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.147, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.148,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.148,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.148:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.146
	.asciz	"^\000\000\000_\000\000\000\021\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.148, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.149,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.149,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.149:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.146
	.asciz	"^\000\000\000a\000\000\000\024\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.149, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.150,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.150,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.150:
	.ascii	"adding a socket to a full SocketSet"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.150, 35

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.151,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.151,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.151:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/smoltcp-0.8.0/src/iface/socket_set.rs"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.151, 98

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.152,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.152,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.152:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.151
	.asciz	"b\000\000\000Q\000\000\000*\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.152, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.153,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.153,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.153:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.151
	.asciz	"b\000\000\000a\000\000\000\017\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.153, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.154,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.154,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.154:
	.ascii	"handle refers to a socket of a wrong type"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.154, 41

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.155,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.155,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.155:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.151
	.asciz	"b\000\000\000c\000\000\000/\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.155, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.156,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.156,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.156:
	.ascii	"handle does not refer to a valid socket"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.156, 39

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.157,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.157,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.157:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.151
	.asciz	"b\000\000\000e\000\000\000\025\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.157, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.158,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.158,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.158:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/minimq-0.5.2/src/will.rs"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.158, 85

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.159,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.159,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.159:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.158
	.asciz	"U\000\000\0002\000\000\0007\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.159, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.160,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.160,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.160:
	.asciz	"\000\000\000\000\000\000\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.160, 24

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.161,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.161,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.161:
	.ascii	"\377\002\000\000\000\000\000\000\000\000\000\001\377\000\000\000h"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.161, 17

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.162,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.162,"a",%progbits
	.p2align	3
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.162:
	.asciz	
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.162, 392

	.type	thermostat_eem::hardware::setup::DES_RING::hb906d6ece668422b,%object
	.section	.sram3.eth,"aw",%progbits
thermostat_eem::hardware::setup::DES_RING::hb906d6ece668422b:
	.zero	12424
	.size	thermostat_eem::hardware::setup::DES_RING::hb906d6ece668422b, 12424

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.163,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.163,"a",%progbits
	.p2align	3
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.163:
	.ascii	"\200\037\022c\204\033"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.163, 6

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.167,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.167,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.167:
	.ascii	"src/hardware/setup.rs"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.167, 21

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.169,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.169,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.169:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.167
	.asciz	"\025\000\000\000\234\001\000\000P\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.169, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.170,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.170,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.170:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.167
	.asciz	"\025\000\000\000\246\001\000\000\016\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.170, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.171,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.171,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.171:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.167
	.asciz	"\025\000\000\000\322\001\000\000!\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.171, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.180,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.180,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.180:
	.ascii	"assertion failed: self.is_char_boundary(new_len)"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.180, 48

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.181,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.181,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.181:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.7.10/src/string.rs"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.181, 90

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.182,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.182,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.182:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.181
	.asciz	"Z\000\000\000\335\000\000\000\r\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.182, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.183,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.183,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.183:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.181
	.asciz	"Z\000\000\000'\001\000\000\031\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.183, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.184,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.184,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.184:
	.ascii	"src/net/telemetry.rs"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.184, 20

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.185,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.185,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.185:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.184
	.asciz	"\024\000\000\000/\000\000\000I\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.185, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.186,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.186,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.186:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.184
	.asciz	"\024\000\000\0002\000\000\0000\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.186, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.187,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.187,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.187:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.184
	.asciz	"\024\000\000\000D\000\000\000J\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.187, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.192,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.192,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.192:
	.ascii	"src/net/mod.rs"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.192, 14

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.193,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.193,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.193:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.192
	.asciz	"\016\000\000\000K\000\000\000Q\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.193, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.194,%object
	.section	.rodata.cst8,"aM",%progbits,8
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.194:
	.ascii	"settings"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.194, 8

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.195,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.195,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.195:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.192
	.asciz	"\016\000\000\000X\000\000\000\n\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.195, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.196,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.196,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.196:
	.ascii	"tlm"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.196, 3

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.198,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.198,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.198:
	.long	CORE_PERIPHERALS
	.zero	4
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.219
	.asciz	"\001\000\000"
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.219
	.asciz	"\001\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.198, 24

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.199,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.199,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.199:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.192
	.asciz	"\016\000\000\000\215\000\000\000;\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.199, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.200,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.200,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.200:
	.ascii	"dt/sinara/"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.200, 10

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.201,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.201,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.201:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.200
	.asciz	"\n\000\000"
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.31
	.asciz	"\001\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.201, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.202,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.202,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.202:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.192
	.asciz	"\016\000\000\000\240\000\000\0006\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.202, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.203,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.203,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.203:
	.ascii	"Clock"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.203, 5

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.204,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.204,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.204:
	.long	core::ptr::drop_in_place<bool>::h0b92a80a750bd66f
	.asciz	"\004\000\000\000\004\000\000"
	.long	<&T as core::fmt::Debug>::fmt::h5fa9f38792cc9b9a
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.204, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.205,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.205,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.205:
	.ascii	"SessionReset"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.205, 12

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.206,%object
	.section	.rodata.cst8,"aM",%progbits,8
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.206:
	.ascii	"Protocol"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.206, 8

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.207,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.207,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.207:
	.long	core::ptr::drop_in_place<bool>::h0b92a80a750bd66f
	.asciz	"\004\000\000\000\004\000\000"
	.long	<&T as core::fmt::Debug>::fmt::ha61e53eebf9b52f6
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.207, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.209,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.209,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.209:
	.long	core::ptr::drop_in_place<bool>::h0b92a80a750bd66f
	.asciz	"\004\000\000\000\004\000\000"
	.long	<&T as core::fmt::Debug>::fmt::h9a7024b8faed08c4
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.209, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.210,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.210,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.210:
	.ascii	"ProvidedClientIdTooLong"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.210, 23

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.212,%object
	.section	.rodata.cst8,"aM",%progbits,8
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.212:
	.ascii	"NotReady"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.212, 8

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.213,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.213,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.213:
	.ascii	"WriteFail"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.213, 9

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.214,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.214,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.214:
	.ascii	"Network"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.214, 7

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.215,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.215,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.215:
	.long	core::ptr::drop_in_place<bool>::h0b92a80a750bd66f
	.asciz	"\004\000\000\000\004\000\000"
	.long	<&T as core::fmt::Debug>::fmt::h91a59510d9356673
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.215, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.216,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.216,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.216:
	.ascii	"\001\003\006"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.216, 3

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.217,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.217,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.217:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/heapless-0.7.10/src/vec.rs"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.217, 87

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.218,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.218,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.218:
	.ascii	"assertion failed: index < self.len"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.218, 34

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.219,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.219,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.219:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.217
	.asciz	"W\000\000\000\270\001\000\000\t\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.219, 16

	.type	"{\"package\":\"thermostat-eem\",\"tag\":\"defmt_derived\",\"data\":\"Zero|One|Two|Three|Four|Five|Six|Seven\",\"disambiguator\":\"10513902806566486202\"}",%object
	.section	".defmt.{\"package\":\"thermostat-eem\",\"tag\":\"defmt_derived\",\"data\":\"Zero|One|Two|Three|Four|Five|Six|Seven\",\"disambiguator\":\"10513902806566486202\"}","a",%progbits
	.globl	"{\"package\":\"thermostat-eem\",\"tag\":\"defmt_derived\",\"data\":\"Zero|One|Two|Three|Four|Five|Six|Seven\",\"disambiguator\":\"10513902806566486202\"}"
"{\"package\":\"thermostat-eem\",\"tag\":\"defmt_derived\",\"data\":\"Zero|One|Two|Three|Four|Five|Six|Seven\",\"disambiguator\":\"10513902806566486202\"}":
	.zero	1
	.size	"{\"package\":\"thermostat-eem\",\"tag\":\"defmt_derived\",\"data\":\"Zero|One|Two|Three|Four|Five|Six|Seven\",\"disambiguator\":\"10513902806566486202\"}", 1

	.type	"{\"package\":\"thermostat-eem\",\"tag\":\"defmt_error\",\"data\":\"panicked at 'internal error: entered unreachable code'\",\"disambiguator\":\"12639707502804292082\"}",%object
	.section	".defmt.{\"package\":\"thermostat-eem\",\"tag\":\"defmt_error\",\"data\":\"panicked at 'internal error: entered unreachable code'\",\"disambiguator\":\"12639707502804292082\"}","a",%progbits
	.globl	"{\"package\":\"thermostat-eem\",\"tag\":\"defmt_error\",\"data\":\"panicked at 'internal error: entered unreachable code'\",\"disambiguator\":\"12639707502804292082\"}"
"{\"package\":\"thermostat-eem\",\"tag\":\"defmt_error\",\"data\":\"panicked at 'internal error: entered unreachable code'\",\"disambiguator\":\"12639707502804292082\"}":
	.zero	1
	.size	"{\"package\":\"thermostat-eem\",\"tag\":\"defmt_error\",\"data\":\"panicked at 'internal error: entered unreachable code'\",\"disambiguator\":\"12639707502804292082\"}", 1

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.221,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.221,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.221:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.217
	.asciz	"W\000\000\000\300\002\000\000%\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.221, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.223,%object
	.section	.rodata.cst4,"aM",%progbits,4
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.223:
	.ascii	"High"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.223, 4

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.224,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.224,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.224:
	.ascii	"Low"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.224, 3

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.225,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.225,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.225:
	.ascii	"Absent"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.225, 6

	.type	"{\"package\":\"thermostat-eem\",\"tag\":\"defmt_derived\",\"data\":\"Absent|Low|High\",\"disambiguator\":\"8255724396233050865\"}",%object
	.section	".defmt.{\"package\":\"thermostat-eem\",\"tag\":\"defmt_derived\",\"data\":\"Absent|Low|High\",\"disambiguator\":\"8255724396233050865\"}","a",%progbits
	.globl	"{\"package\":\"thermostat-eem\",\"tag\":\"defmt_derived\",\"data\":\"Absent|Low|High\",\"disambiguator\":\"8255724396233050865\"}"
"{\"package\":\"thermostat-eem\",\"tag\":\"defmt_derived\",\"data\":\"Absent|Low|High\",\"disambiguator\":\"8255724396233050865\"}":
	.zero	1
	.size	"{\"package\":\"thermostat-eem\",\"tag\":\"defmt_derived\",\"data\":\"Absent|Low|High\",\"disambiguator\":\"8255724396233050865\"}", 1

	.type	"{\"package\":\"thermostat-eem\",\"tag\":\"defmt_error\",\"data\":\"panicked at 'internal error: entered unreachable code'\",\"disambiguator\":\"13653270584804884220\"}",%object
	.section	".defmt.{\"package\":\"thermostat-eem\",\"tag\":\"defmt_error\",\"data\":\"panicked at 'internal error: entered unreachable code'\",\"disambiguator\":\"13653270584804884220\"}","a",%progbits
	.globl	"{\"package\":\"thermostat-eem\",\"tag\":\"defmt_error\",\"data\":\"panicked at 'internal error: entered unreachable code'\",\"disambiguator\":\"13653270584804884220\"}"
"{\"package\":\"thermostat-eem\",\"tag\":\"defmt_error\",\"data\":\"panicked at 'internal error: entered unreachable code'\",\"disambiguator\":\"13653270584804884220\"}":
	.zero	1
	.size	"{\"package\":\"thermostat-eem\",\"tag\":\"defmt_error\",\"data\":\"panicked at 'internal error: entered unreachable code'\",\"disambiguator\":\"13653270584804884220\"}", 1

	.type	thermostat_eem::hardware::setup::setup::{{closure}}::VAR::h41876559f3123297,%object
	.section	".data._ZN14thermostat_eem8hardware5setup5setup28_$u7b$$u7b$closure$u7d$$u7d$3VAR17h41876559f3123297E","aw",%progbits
	.p2align	3
thermostat_eem::hardware::setup::setup::{{closure}}::VAR::h41876559f3123297:
	.asciz	
	.size	thermostat_eem::hardware::setup::setup::{{closure}}::VAR::h41876559f3123297, 15080

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.226,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.226,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.226:
	.ascii	"/home/norman/.cargo/git/checkouts/stm32h7xx-hal-6d4075b8f01f2ff9/0d984a2/src/ethernet/eth.rs"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.226, 92

	.type	thermostat_eem::net::NetworkUsers<S,T>::new::{{closure}}::VAR::hde997f617c25c583,%object
	.section	".bss._ZN14thermostat_eem3net25NetworkUsers$LT$S$C$T$GT$3new28_$u7b$$u7b$closure$u7d$$u7d$3VAR17hde997f617c25c583E","aw",%nobits
	.p2align	3
thermostat_eem::net::NetworkUsers<S,T>::new::{{closure}}::VAR::hde997f617c25c583:
	.zero	304
	.size	thermostat_eem::net::NetworkUsers<S,T>::new::{{closure}}::VAR::hde997f617c25c583, 304

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.227,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.227,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.227:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.226
	.asciz	"\\\000\000\000\220\000\000\000\t\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.227, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.228,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.228,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.228:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.226
	.asciz	"\\\000\000\000\226\000\000\000\021\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.228, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.229,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.229,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.229:
	.ascii	"assertion failed: self.td[x].tdes3 & EMAC_DES3_OWN == 0"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.229, 55

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.230,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.230,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.230:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.226
	.asciz	"\\\000\000\000\226\000\000\000\t\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.230, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.231,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.231,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.231:
	.ascii	"assertion failed: self.td[x].tdes2 & !EMAC_TDES2_B1L == 0"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.231, 57

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.232,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.232,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.232:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.226
	.asciz	"\\\000\000\000\235\000\000\000\t\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.232, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.233,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.233,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.233:
	.ascii	"assertion failed: self.td[x].tdes2 & EMAC_TDES2_B1L > 0"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.233, 55

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.234,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.234,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.234:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.226
	.asciz	"\\\000\000\000\236\000\000\000\t\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.234, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.235,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.235,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.235:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.226
	.asciz	"\\\000\000\000\270\000\000\000*\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.235, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.236,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.236,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.236:
	.ascii	"src/main.rs"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.236, 11

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.237,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.237,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.237:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.236
	.asciz	"\013\000\000\000\034\000\000\000\036\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.237, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.238,%object
	.section	.rodata.cst8,"aM",%progbits,8
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.238:
	.ascii	"shutdown"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.238, 8

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.239,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.239,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.239:
	.ascii	"current_limit_positive"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.239, 22

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.240,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.240,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.240:
	.ascii	"current_limit_negative"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.240, 22

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.241,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.241,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.241:
	.ascii	"voltage_limit"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.241, 13

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.242,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.242,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.242:
	.ascii	"current"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.242, 7

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.243,%object
	.section	.rodata.cst8,"aM",%progbits,8
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.243:
	.ascii	"/current"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.243, 8

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.244,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.244,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.244:
	.ascii	"/voltage_limit"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.244, 14

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.245,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.245,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.245:
	.ascii	"/current_limit_negative"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.245, 23

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.246,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.246,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.246:
	.ascii	"/current_limit_positive"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.246, 23

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.247,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.247,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.247:
	.ascii	"/shutdown"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.247, 9

	.type	"{\"package\":\"thermostat-eem\",\"tag\":\"defmt_derived\",\"data\":\"OutputSettings {{ shutdown: {=bool:?}, current_limit_positive: {=f32:?}, current_limit_negative: {=f32:?}, voltage_limit: {=f32:?}, current: {=f32:?} }}\",\"disambiguator\":\"9152009558125533769\"}",%object
	.section	".defmt.{\"package\":\"thermostat-eem\",\"tag\":\"defmt_derived\",\"data\":\"OutputSettings {{ shutdown: {=bool:?}, current_limit_positive: {=f32:?}, current_limit_negative: {=f32:?}, voltage_limit: {=f32:?}, current: {=f32:?} }}\",\"disambiguator\":\"9152009558125533769\"}","a",%progbits
	.globl	"{\"package\":\"thermostat-eem\",\"tag\":\"defmt_derived\",\"data\":\"OutputSettings {{ shutdown: {=bool:?}, current_limit_positive: {=f32:?}, current_limit_negative: {=f32:?}, voltage_limit: {=f32:?}, current: {=f32:?} }}\",\"disambiguator\":\"9152009558125533769\"}"
"{\"package\":\"thermostat-eem\",\"tag\":\"defmt_derived\",\"data\":\"OutputSettings {{ shutdown: {=bool:?}, current_limit_positive: {=f32:?}, current_limit_negative: {=f32:?}, voltage_limit: {=f32:?}, current: {=f32:?} }}\",\"disambiguator\":\"9152009558125533769\"}":
	.zero	1
	.size	"{\"package\":\"thermostat-eem\",\"tag\":\"defmt_derived\",\"data\":\"OutputSettings {{ shutdown: {=bool:?}, current_limit_positive: {=f32:?}, current_limit_negative: {=f32:?}, voltage_limit: {=f32:?}, current: {=f32:?} }}\",\"disambiguator\":\"9152009558125533769\"}", 1

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.248,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.248,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.248:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.226
	.asciz	"\\\000\000\000#\001\000\000\t\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.248, 16

	.type	"{\"package\":\"thermostat-eem\",\"tag\":\"defmt_error\",\"data\":\"panicked at 'internal error: entered unreachable code'\",\"disambiguator\":\"8564317697380092209\"}",%object
	.section	".defmt.{\"package\":\"thermostat-eem\",\"tag\":\"defmt_error\",\"data\":\"panicked at 'internal error: entered unreachable code'\",\"disambiguator\":\"8564317697380092209\"}","a",%progbits
	.globl	"{\"package\":\"thermostat-eem\",\"tag\":\"defmt_error\",\"data\":\"panicked at 'internal error: entered unreachable code'\",\"disambiguator\":\"8564317697380092209\"}"
"{\"package\":\"thermostat-eem\",\"tag\":\"defmt_error\",\"data\":\"panicked at 'internal error: entered unreachable code'\",\"disambiguator\":\"8564317697380092209\"}":
	.zero	1
	.size	"{\"package\":\"thermostat-eem\",\"tag\":\"defmt_error\",\"data\":\"panicked at 'internal error: entered unreachable code'\",\"disambiguator\":\"8564317697380092209\"}", 1

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.250,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.250,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.250:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.226
	.asciz	"\\\000\000\000.\001\000\000\021\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.250, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.251,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.251,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.251:
	.ascii	"assertion failed: self.rd[x].rdes3 & EMAC_DES3_OWN == 0"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.251, 55

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.252,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.252,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.252:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.226
	.asciz	"\\\000\000\000.\001\000\000\t\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.252, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.253,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.253,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.253:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.226
	.asciz	"\\\000\000\000U\001\000\000\"\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.253, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.254,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.254,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.254:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.236
	.asciz	"\013\000\000\000=\000\000\000\036\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.254, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.255,%object
	.section	.rodata.cst16,"aM",%progbits,16
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.255:
	.ascii	"telemetry_period"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.255, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.256,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.256,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.256:
	.ascii	"output_settings"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.256, 15

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.257,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.257,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.257:
	.ascii	"led"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.257, 3

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.258,%object
	.section	.rodata.cst4,"aM",%progbits,4
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.258:
	.ascii	"/led"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.258, 4

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.259,%object
	.section	.rodata.cst16,"aM",%progbits,16
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.259:
	.ascii	"/output_settings"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.259, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.260,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.260,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.260:
	.ascii	"/telemetry_period"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.260, 17

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.269,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.269,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.269:
	.ascii	"output_vref"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.269, 11

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.270,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.270,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.270:
	.ascii	"output_current"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.270, 14

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.271,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.271,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.271:
	.ascii	"output_voltage"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.271, 14

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.274,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.274,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.274:
	.ascii	"thermostat-eem"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.274, 14

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.275,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.275,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.275:
	.ascii	"10.42.0.1"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.275, 9

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.276,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.276,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.276:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.236
	.asciz	"\013\000\000\000\242\000\000\000\022\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.276, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.277,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.277,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.277:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.236
	.asciz	"\013\000\000\000\245\000\000\000 \000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.277, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.278,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.278,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.278:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.236
	.asciz	"\013\000\000\000\246\000\000\000\"\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.278, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.279,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.279,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.279:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.236
	.asciz	"\013\000\000\000\247\000\000\000!\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.279, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.280,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.280,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.280:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.236
	.asciz	"\013\000\000\000\276\000\000\000K\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.280, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.281,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.281,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.281:
	.ascii	"assertion failed: len <= ETH_BUF_SIZE"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.281, 37

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.282,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.282,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.282:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.226
	.asciz	"\\\000\000\000,\003\000\000\t\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.282, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.283,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.283,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.283:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.236
	.asciz	"\013\000\000\000\330\000\000\000@\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.283, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.284,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.284,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.284:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.236
	.asciz	"\013\000\000\000\332\000\000\000\022\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.284, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.285,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.285,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.285:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.236
	.asciz	"\013\000\000\000\334\000\000\000\022\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.285, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.286,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.286,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.286:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.236
	.asciz	"\013\000\000\000\335\000\000\000,\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.286, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.287,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.287,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.287:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.236
	.asciz	"\013\000\000\000\357\000\000\0001\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.287, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.288,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.288,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.288:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.236
	.asciz	"\013\000\000\000\377\000\000\000T\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.288, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.289,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.289,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.289:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.236
	.asciz	"\013\000\000\000\007\001\000\000.\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.289, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.290,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.290,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.290:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/smoltcp-0.8.0/src/storage/packet_buffer.rs"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.290, 103

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.291,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.291,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.291:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.290
	.asciz	"g\000\000\000\236\000\000\000-\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.291, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.292,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.292,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.292:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.290
	.asciz	"g\000\000\000\236\000\000\000<\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.292, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.295,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.295,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.295:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.125
	.asciz	"e\000\000\000\233\000\000\000\026\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.295, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.297,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.297,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.297:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.125
	.asciz	"e\000\000\000s\001\000\000\n\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.297, 16

	.type	thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164,%object
	.section	.uninit.rtic0,"aw",%progbits
	.p2align	2
thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164:
	.zero	5164
	.size	thermostat_eem::app::__rtic_internal_shared_resource_network::hd9d5f1c693dad164, 5164

	.type	thermostat_eem::app::__rtic_internal_shared_resource_settings::haa2b499d3e77eee9,%object
	.section	.uninit.rtic1,"aw",%progbits
	.p2align	2
thermostat_eem::app::__rtic_internal_shared_resource_settings::haa2b499d3e77eee9:
	.zero	88
	.size	thermostat_eem::app::__rtic_internal_shared_resource_settings::haa2b499d3e77eee9, 88

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.298,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.298,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.298:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/smoltcp-0.8.0/src/wire/arp.rs"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.298, 90

	.type	thermostat_eem::app::__rtic_internal_shared_resource_telemetry::hda6106852c11677f,%object
	.section	.uninit.rtic2,"aw",%progbits
	.p2align	2
thermostat_eem::app::__rtic_internal_shared_resource_telemetry::hda6106852c11677f:
	.zero	68
	.size	thermostat_eem::app::__rtic_internal_shared_resource_telemetry::hda6106852c11677f, 68

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.299,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.299,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.299:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.298
	.asciz	"Z\000\000\000\224\000\000\000\n\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.299, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.300,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.300,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.300:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.298
	.asciz	"Z\000\000\000\232\000\000\000\n\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.300, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.301,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.301,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.301:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.298
	.asciz	"Z\000\000\000\240\000\000\000\n\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.301, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.302,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.302,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.302:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.298
	.asciz	"Z\000\000\000\246\000\000\000\n\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.302, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.303,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.303,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.303:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.298
	.asciz	"Z\000\000\000\257\000\000\000'\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.303, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.304,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.304,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.304:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.298
	.asciz	"Z\000\000\000\266\000\000\000'\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.304, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.305,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.305,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.305:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.298
	.asciz	"Z\000\000\000\275\000\000\000\t\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.305, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.306,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.306,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.306:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.298
	.asciz	"Z\000\000\000\304\000\000\000\t\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.306, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.307,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.307,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.307:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.298
	.asciz	"Z\000\000\000\313\000\000\000'\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.307, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.308,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.308,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.308:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.298
	.asciz	"Z\000\000\000\325\000\000\000\t\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.308, 16

	.type	thermostat_eem::app::__rtic_internal_local_resource_adc::h99c6b0f7a5dfd579,%object
	.section	.uninit.rtic4,"aw",%progbits
	.p2align	2
thermostat_eem::app::__rtic_internal_local_resource_adc::h99c6b0f7a5dfd579:
	.zero	8
	.size	thermostat_eem::app::__rtic_internal_local_resource_adc::h99c6b0f7a5dfd579, 8

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.310,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.310,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.310:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.298
	.asciz	"Z\000\000\000\337\000\000\000\t\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.310, 16

	.type	thermostat_eem::app::__rtic_internal_local_resource_dac::ha17ee108b9c8f7a2,%object
	.section	.uninit.rtic5,"aw",%progbits
thermostat_eem::app::__rtic_internal_local_resource_dac::ha17ee108b9c8f7a2:
	.zero	1
	.size	thermostat_eem::app::__rtic_internal_local_resource_dac::ha17ee108b9c8f7a2, 1

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.312,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.312,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.312:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.298
	.asciz	"Z\000\000\000\351\000\000\000\t\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.312, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.314,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.314,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.314:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.298
	.asciz	"Z\000\000\000\363\000\000\000\t\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.314, 16

	.type	thermostat_eem::app::__rtic_internal_local_resource_adc_internal::h7bbf580938bd99c8,%object
	.section	.uninit.rtic7,"aw",%progbits
thermostat_eem::app::__rtic_internal_local_resource_adc_internal::h7bbf580938bd99c8:
	.zero	10
	.size	thermostat_eem::app::__rtic_internal_local_resource_adc_internal::h7bbf580938bd99c8, 10

	.type	thermostat_eem::app::__rtic_internal_TQ_Mono::h16029fb9efc906be,%object
	.section	.data._ZN14thermostat_eem3app23__rtic_internal_TQ_Mono17h16029fb9efc906beE,"aw",%progbits
	.p2align	3
thermostat_eem::app::__rtic_internal_TQ_Mono::h16029fb9efc906be:
	.asciz	"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\377\377\000\000\000\000\000\000\377\377\000\000\000\000\000"
	.size	thermostat_eem::app::__rtic_internal_TQ_Mono::h16029fb9efc906be, 80

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.318,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.318,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.318:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.217
	.asciz	"_\000\000\000\274\000\000\000\t\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.318, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.320,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.320,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.320:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.217
	.asciz	"_\000\000\000\303\000\000\000'\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.320, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.351,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.351,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.351:
	.ascii	"already mutably borrowed"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.351, 24

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.352,%object
	.section	.rodata.cst16,"aM",%progbits,16
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.352:
	.ascii	"already borrowed"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.352, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.357,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.357,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.357:
	.ascii	"internal error: entered unreachable code: "
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.357, 42

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.358,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.358,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.358:
	.long	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.357
	.asciz	"*\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.358, 8

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.360,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.360,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.360:
	.long	core::ptr::drop_in_place<bool>::h0b92a80a750bd66f
	.asciz	"\001\000\000\000\001\000\000"
	.long	<bool as core::fmt::Debug>::fmt::h892e011bbc64ca02
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.360, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.361,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.361,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.361:
	.long	core::ptr::drop_in_place<bool>::h0b92a80a750bd66f
	.asciz	"\000\000\000\000\001\000\000"
	.long	<core::cell::BorrowError as core::fmt::Debug>::fmt::he01a02bd97eeb704
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.361, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.362,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.362,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.362:
	.long	core::ptr::drop_in_place<bool>::h0b92a80a750bd66f
	.asciz	"\000\000\000\000\001\000\000"
	.long	<core::cell::BorrowMutError as core::fmt::Debug>::fmt::hbedb9b53a3463d04
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.362, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363:
	.ascii	"called `Result::unwrap()` on an `Err` value"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.363, 43

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.364,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.364,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.364:
	.long	core::ptr::drop_in_place<bool>::h0b92a80a750bd66f
	.asciz	"\b\000\000\000\004\000\000"
	.long	<stm32h7xx_hal::spi::Error as core::fmt::Debug>::fmt::h5e2472fb426a1a78
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.364, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.365,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.365,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.365:
	.long	core::ptr::drop_in_place<bool>::h0b92a80a750bd66f
	.asciz	"\002\000\000\000\001\000\000"
	.long	<minimq::Error<E> as core::fmt::Debug>::fmt::h0e1b5f1f74e22f8b
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.365, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.366,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.366,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.366:
	.long	core::ptr::drop_in_place<bool>::h0b92a80a750bd66f
	.asciz	"\001\000\000\000\001\000\000"
	.long	<smoltcp::Error as core::fmt::Debug>::fmt::h1b457a22b40bf124
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.366, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.367,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.367,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.367:
	.long	core::ptr::drop_in_place<bool>::h0b92a80a750bd66f
	.asciz	"\001\000\000\000\001\000\000"
	.long	<miniconf::mqtt_client::mqtt_client::sm::Error as core::fmt::Debug>::fmt::h8eebe26439d3aa3b
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.367, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.368,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.368,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.368:
	.long	core::ptr::drop_in_place<bool>::h0b92a80a750bd66f
	.asciz	"\001\000\000\000\001\000\000"
	.long	<minimq::mqtt_client::sm::Error as core::fmt::Debug>::fmt::h73afb84edc8faa65
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.368, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.369,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.369,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.369:
	.long	core::ptr::drop_in_place<bool>::h0b92a80a750bd66f
	.asciz	"\000\000\000\000\001\000\000"
	.long	<() as core::fmt::Debug>::fmt::h734bc91bafa1a210
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.369, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.370,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.370,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.370:
	.long	core::ptr::drop_in_place<bool>::h0b92a80a750bd66f
	.asciz	"\001\000\000\000\001\000\000"
	.long	<stm32h7xx_hal::rng::ErrorKind as core::fmt::Debug>::fmt::h754cb07ace65f846
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.370, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.371,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.371,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.371:
	.long	core::ptr::drop_in_place<bool>::h0b92a80a750bd66f
	.asciz	"\000\000\000\000\001\000\000"
	.long	<no_std_net::parser::AddrParseError as core::fmt::Debug>::fmt::h06e2b4c657f0e984
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.371, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.372,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.372,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.372:
	.long	core::ptr::drop_in_place<bool>::h0b92a80a750bd66f
	.asciz	"\004\000\000\000\004\000\000"
	.long	<smoltcp::iface::socket_set::SocketHandle as core::fmt::Debug>::fmt::h5c316454e699546e
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.372, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.373,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.373,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.373:
	.long	core::ptr::drop_in_place<bool>::h0b92a80a750bd66f
	.asciz	"\000\000\000\000\001\000\000"
	.long	<serde_json_core::ser::Error as core::fmt::Debug>::fmt::hed4f224dbf78539c
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.373, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.374,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.374,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.374:
	.long	core::ptr::drop_in_place<bool>::h0b92a80a750bd66f
	.asciz	"\001\000\000\000\001\000\000"
	.long	<miniconf::Error as core::fmt::Debug>::fmt::hdb291abaf915c143
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.374, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.375,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.375,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.375:
	.long	core::ptr::drop_in_place<bool>::h0b92a80a750bd66f
	.asciz	"\000\000\000\000\001\000\000"
	.long	<thermostat_eem::hardware::dac::Error as core::fmt::Debug>::fmt::hb696b91c26bd1c66
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.375, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.376,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.376,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.376:
	.long	core::ptr::drop_in_place<bool>::h0b92a80a750bd66f
	.asciz	"\004\000\000\000\004\000\000"
	.long	<num_enum::TryFromPrimitiveError<Enum> as core::fmt::Debug>::fmt::hbf382f91c07847b4
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.376, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.377,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.377,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.377:
	.long	core::ptr::drop_in_place<bool>::h0b92a80a750bd66f
	.asciz	"\000\000\000\000\001\000\000"
	.long	<core::fmt::Error as core::fmt::Debug>::fmt::hfa2a9d808c106497
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.377, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.378,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.378,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.378:
	.long	core::ptr::drop_in_place<bool>::h0b92a80a750bd66f
	.asciz	"\001\000\000\000\001\000\000"
	.long	<miniconf::IterError as core::fmt::Debug>::fmt::h074b09b19ff751d9
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.378, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.379,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.379,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.379:
	.long	core::ptr::drop_in_place<bool>::h0b92a80a750bd66f
	.asciz	"\004\000\000\000\004\000\000"
	.long	<&mut W as core::fmt::Write>::write_str::h23afcdcb16176a7e
	.long	<&mut W as core::fmt::Write>::write_char::h60688cb82a934564
	.long	<&mut W as core::fmt::Write>::write_fmt::hd504f3bfaf618f0e
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.379, 24

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.380,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.380,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.380:
	.long	core::ptr::drop_in_place<bool>::h0b92a80a750bd66f
	.asciz	"\004\000\000\000\004\000\000"
	.long	<&mut W as core::fmt::Write>::write_str::h76dae6f71e4f6d54
	.long	<&mut W as core::fmt::Write>::write_char::h051094ac7bc79ffd
	.long	<&mut W as core::fmt::Write>::write_fmt::h8e39c0e52d6c41b1
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.380, 24

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.394,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.394,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.394:
	.long	.Lanon.a766a8867b32155983aeb12c9f88ad10.437
	.asciz	"S\000\000\000o\005\000\000\001\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.394, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.397,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.397,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.397:
	.ascii	"SPI123: PLL3_P must be enabled"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.397, 30

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.399,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.399,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.399:
	.ascii	"SPI123: PLL1_Q must be enabled"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.399, 30

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.400,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.400,"a",%progbits
	.p2align	2
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.400:
	.long	.Lanon.a766a8867b32155983aeb12c9f88ad10.437
	.asciz	"S\000\000\000r\005\000\000\001\000\000"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.400, 16

	.type	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.404,%object
	.section	.rodata..Lanon.0c1329e98a8e4daf707f1d3aba20b49b.404,"a",%progbits
.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.404:
	.ascii	"SPI45: PLL3_Q must be enabled"
	.size	.Lanon.0c1329e98a8e4daf707f1d3aba20b49b.404, 29

	.type	.Lswitch.table.EXTI15_10,%object
	.section	.rodata.cst16,"aM",%progbits,16
	.p2align	2
.Lswitch.table.EXTI15_10:
	.long	1
	.long	2
	.long	8
	.long	16
	.size	.Lswitch.table.EXTI15_10, 16

	.type	.Lswitch.table.EXTI15_10.733,%object
	.p2align	2
.Lswitch.table.EXTI15_10.733:
	.long	65536
	.long	131072
	.long	524288
	.long	1048576
	.size	.Lswitch.table.EXTI15_10.733, 16

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.0,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.0,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.0:
	.ascii	"library/core/src/num/dec2flt/decimal.rs"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.0, 39

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.1,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.1,"a",%progbits
	.p2align	2
.Lanon.5beea011998fea4e4b11a776df4066f0.1:
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.0
	.asciz	"'\000\000\000Q\000\000\000'\000\000"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.1, 16

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.4,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.4,"a",%progbits
	.p2align	2
.Lanon.5beea011998fea4e4b11a776df4066f0.4:
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.0
	.asciz	"'\000\000\000}\000\000\000\023\000\000"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.4, 16

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.5,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.5,"a",%progbits
	.p2align	2
.Lanon.5beea011998fea4e4b11a776df4066f0.5:
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.0
	.asciz	"'\000\000\000\241\000\000\000 \000\000"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.5, 16

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.6,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.6,"a",%progbits
	.p2align	2
.Lanon.5beea011998fea4e4b11a776df4066f0.6:
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.0
	.asciz	"'\000\000\000\270\000\000\000%\000\000"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.6, 16

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.7,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.7,"a",%progbits
	.p2align	2
.Lanon.5beea011998fea4e4b11a776df4066f0.7:
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.0
	.asciz	"'\000\000\000\341\000\000\000\021\000\000"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.7, 16

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.8,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.8,"a",%progbits
	.p2align	2
.Lanon.5beea011998fea4e4b11a776df4066f0.8:
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.0
	.asciz	"'\000\000\000\354\000\000\000\023\000\000"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.8, 16

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.9,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.9,"a",%progbits
	.p2align	1
.Lanon.5beea011998fea4e4b11a776df4066f0.9:
	.ascii	"\000\000\000\b\001\b\003\b\006\020\t\020\r\020\022\030\027\030\035\030$ + 3 < F(P([(g0s0\2000\2168\2348\2538\2738\314@\335@\357@\002I\025I)I>QSQiQ\200Q\230Y\260Y\311Y\343a\375a\030b4jPjmj\213j\252r\311r\351r\n{+{M{p\203\223\203\267\203\334\203\002\214(\214O\214w\224\237\224\310\224\362\234\034\005\034\005\034\005\034\005"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.9, 130

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.10,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.10,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.10:
	.ascii	"\005\002\005\001\002\005\006\002\005\003\001\002\005\001\005\006\002\005\007\b\001\002\005\003\t\000\006\002\005\001\t\005\003\001\002\005\t\007\006\005\006\002\005\004\b\b\002\b\001\002\005\002\004\004\001\004\000\006\002\005\001\002\002\000\007\000\003\001\002\005\006\001\000\003\005\001\005\006\002\005\003\000\005\001\007\005\007\b\001\002\005\001\005\002\005\b\007\b\t\000\006\002\005\007\006\002\t\003\t\004\005\003\001\002\005\003\b\001\004\006\t\007\002\006\005\006\002\005\001\t\000\007\003\004\b\006\003\002\b\001\002\005\t\005\003\006\007\004\003\001\006\004\000\006\002\005\004\007\006\b\003\007\001\005\b\002\000\003\001\002\005\002\003\b\004\001\b\005\007\t\001\000\001\005\006\002\005\001\001\t\002\000\t\002\b\t\005\005\000\007\b\001\002\005\005\t\006\000\004\006\004\004\007\007\005\003\t\000\006\002\005\002\t\b\000\002\003\002\002\003\b\007\006\t\005\003\001\002\005\001\004\t\000\001\001\006\001\001\t\003\b\004\007\006\005\006\002\005\007\004\005\000\005\b\000\005\t\006\t\002\003\b\002\b\001\002\005\003\007\002\005\002\t\000\002\t\b\004\006\001\t\001\004\000\006\002\005\001\b\006\002\006\004\005\001\004\t\002\003\000\t\005\007\000\003\001\002\005\t\003\001\003\002\002\005\007\004\006\001\005\004\007\b\005\001\005\006\002\005\004\006\005\006\006\001\002\b\007\003\000\007\007\003\t\002\005\007\b\001\002\005\002\003\002\b\003\000\006\004\003\006\005\003\b\006\t\006\002\b\t\000\006\002\005\001\001\006\004\001\005\003\002\001\b\002\006\t\003\004\b\001\004\004\005\003\001\002\005\005\b\002\000\007\006\006\000\t\001\003\004\006\007\004\000\007\002\002\006\005\006\002\005\002\t\001\000\003\b\003\000\004\005\006\007\003\003\007\000\003\006\001\003\002\b\001\002\005\001\004\005\005\001\t\001\005\002\002\b\003\006\006\b\005\001\b\000\006\006\004\000\006\002\005\007\002\007\005\t\005\007\006\001\004\001\b\003\004\002\005\t\000\003\003\002\000\003\001\002\005\003\006\003\007\t\007\b\b\000\007\000\t\001\007\001\002\t\005\001\006\006\000\001\005\006\002\005\001\b\001\b\t\b\t\004\000\003\005\004\005\b\005\006\004\007\005\b\003\000\000\007\b\001\002\005\t\000\t\004\t\004\007\000\001\007\007\002\t\002\b\002\003\007\t\001\005\000\003\t\000\006\002\005\004\005\004\007\004\007\003\005\000\b\b\006\004\006\004\001\001\b\t\005\007\005\001\t\005\003\001\002\005\002\002\007\003\007\003\006\007\005\004\004\003\002\003\002\000\005\t\004\007\b\007\005\t\007\006\005\006\002\005\001\001\003\006\b\006\b\003\007\007\002\001\006\001\006\000\002\t\007\003\t\003\007\t\b\b\002\b\001\002\005\005\006\b\004\003\004\001\b\b\006\000\b\000\b\000\001\004\b\006\t\006\b\t\t\004\001\004\000\006\002\005\002\b\004\002\001\007\000\t\004\003\000\004\000\004\000\000\007\004\003\004\b\004\004\t\007\000\007\000\003\001\002\005\001\004\002\001\000\b\005\004\007\001\005\002\000\002\000\000\003\007\001\007\004\002\002\004\b\005\003\005\001\005\006\002\005\007\001\000\005\004\002\007\003\005\007\006\000\001\000\000\001\b\005\b\007\001\001\002\004\002\006\007\005\007\b\001\002\005\003\005\005\002\007\001\003\006\007\b\b\000\000\005\000\000\t\002\t\003\005\005\006\002\001\003\003\007\b\t\000\006\002\005\001\007\007\006\003\005\006\b\003\t\004\000\000\002\005\000\004\006\004\006\007\007\b\001\000\006\006\b\t\004\005\003\001\002\005\b\b\b\001\007\b\004\001\t\007\000\000\001\002\005\002\003\002\003\003\b\t\000\005\003\003\004\004\007\002\006\005\006\002\005\004\004\004\000\b\t\002\000\t\b\005\000\000\006\002\006\001\006\001\006\t\004\005\002\006\006\007\002\003\006\003\002\b\001\002\005\002\002\002\000\004\004\006\000\004\t\002\005\000\003\001\003\000\b\000\b\004\007\002\006\003\003\003\006\001\b\001\006\004\000\006\002\005\001\001\001\000\002\002\003\000\002\004\006\002\005\001\005\006\005\004\000\004\002\003\006\003\001\006\006\b\000\t\000\b\002\000\003\001\002\005\005\005\005\001\001\001\005\001\002\003\001\002\005\007\b\002\007\000\002\001\001\b\001\005\b\003\004\000\004\005\004\001\000\001\005\006\002\005\002\007\007\005\005\005\007\005\006\001\005\006\002\b\t\001\003\005\001\000\005\t\000\007\t\001\007\000\002\002\007\000\005\000\007\b\001\002\005\001\003\b\007\007\007\b\007\b\000\007\b\001\004\004\005\006\007\005\005\002\t\005\003\t\005\b\005\001\001\003\005\002\005\003\t\000\006\002\005\006\t\003\b\b\t\003\t\000\003\t\000\007\002\002\b\003\007\007\006\004\007\006\t\007\t\002\005\005\006\007\006\002\006\t\005\003\001\002\005\003\004\006\t\004\004\006\t\005\001\t\005\003\006\001\004\001\b\b\b\002\003\b\004\b\t\006\002\007\b\003\b\001\003\004\007\006\005\006\002\005\001\007\003\004\007\002\003\004\007\005\t\007\006\b\000\007\000\t\004\004\001\001\t\002\004\004\b\001\003\t\001\t\000\006\007\003\b\002\b\001\002\005\b\006\007\003\006\001\007\003\007\t\b\b\004\000\003\005\004\007\002\000\005\t\006\002\002\004\000\006\t\005\t\005\003\003\006\t\001\004\000\006\002\005"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.10, 1308

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.11,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.11,"a",%progbits
	.p2align	2
.Lanon.5beea011998fea4e4b11a776df4066f0.11:
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.0
	.asciz	"'\000\000\000R\001\000\000\021\000\000"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.11, 16

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.12,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.12,"a",%progbits
	.p2align	2
.Lanon.5beea011998fea4e4b11a776df4066f0.12:
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.0
	.asciz	"'\000\000\000V\001\000\000\023\000\000"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.12, 16

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.13,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.13,"a",%progbits
	.p2align	2
.Lanon.5beea011998fea4e4b11a776df4066f0.13:
	.asciz	"\000\000\200?\000\000 A\000\000\310B\000\000zD\000@\034F\000P\303G\000$tI\200\226\030K \274\276L(knN\371\002\025P\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.13, 64

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.130,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.130,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.130:
	.zero	2,46
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.130, 2

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.131,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.131,"a",%progbits
	.p2align	2
.Lanon.5beea011998fea4e4b11a776df4066f0.131:
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.130
	.asciz	"\002\000\000"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.131, 8

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.138,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.138,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.138:
	.ascii	"BorrowError"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.138, 11

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.140,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.140,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.140:
	.ascii	"BorrowMutError"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.140, 14

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.168,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.168,"a",%progbits
	.p2align	2
.Lanon.5beea011998fea4e4b11a776df4066f0.168:
	.long	CORE_PERIPHERALS
	.zero	4
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.397
	.asciz	"\001\000\000"
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.397
	.asciz	"\001\000\000"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.168, 24

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.169,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.169,"a",%progbits
	.p2align	2
.Lanon.5beea011998fea4e4b11a776df4066f0.169:
	.long	core::ptr::drop_in_place<&core::iter::adapters::copied::Copied<core::slice::iter::Iter<u8>>>::hceb1e8191151371b
	.asciz	"\000\000\000\000\001\000\000"
	.long	<T as core::any::Any>::type_id::h161986144a3fe9d9
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.169, 16

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.170,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.170,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.170:
	.ascii	"panicked at "
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.170, 12

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.171,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.171,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.171:
	.byte	39
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.171, 1

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.172,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.172,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.172:
	.ascii	"', "
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.172, 3

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.173,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.173,"a",%progbits
	.p2align	2
.Lanon.5beea011998fea4e4b11a776df4066f0.173:
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.171
	.asciz	"\001\000\000"
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.172
	.asciz	"\003\000\000"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.173, 16

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.175,%object
	.section	.rodata.cst32,"aM",%progbits,32
.Lanon.5beea011998fea4e4b11a776df4066f0.175:
	.ascii	"index out of bounds: the len is "
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.175, 32

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.176,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.176,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.176:
	.ascii	" but the index is "
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.176, 18

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.177,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.177,"a",%progbits
	.p2align	2
.Lanon.5beea011998fea4e4b11a776df4066f0.177:
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.175
	.asciz	" \000\000"
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.176
	.asciz	"\022\000\000"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.177, 16

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.186,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.186,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.186:
	.zero	2,61
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.186, 2

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.187,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.187,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.187:
	.ascii	"assertion failed: `(left "
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.187, 25

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.188,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.188,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.188:
	.ascii	" right)`\n  left: `"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.188, 18

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.189,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.189,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.189:
	.ascii	"`,\n right: `"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.189, 12

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.190,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.190,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.190:
	.ascii	"`: "
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.190, 3

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.191,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.191,"a",%progbits
	.p2align	2
.Lanon.5beea011998fea4e4b11a776df4066f0.191:
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.187
	.asciz	"\031\000\000"
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.188
	.asciz	"\022\000\000"
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.189
	.asciz	"\f\000\000"
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.190
	.asciz	"\003\000\000"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.191, 32

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.192,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.192,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.192:
	.byte	96
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.192, 1

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.193,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.193,"a",%progbits
	.p2align	2
.Lanon.5beea011998fea4e4b11a776df4066f0.193:
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.187
	.asciz	"\031\000\000"
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.188
	.asciz	"\022\000\000"
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.189
	.asciz	"\f\000\000"
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.192
	.asciz	"\001\000\000"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.193, 32

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.194,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.194,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.194:
	.ascii	": "
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.194, 2

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.195,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.195,"a",%progbits
	.p2align	2
.Lanon.5beea011998fea4e4b11a776df4066f0.195:
	.long	CORE_PERIPHERALS
	.zero	4
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.194
	.asciz	"\002\000\000"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.195, 16

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.196,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.196,"a",%progbits
	.p2align	2
.Lanon.5beea011998fea4e4b11a776df4066f0.196:
	.long	core::ptr::drop_in_place<&core::iter::adapters::copied::Copied<core::slice::iter::Iter<u8>>>::hceb1e8191151371b
	.asciz	"\f\000\000\000\004\000\000"
	.long	<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h55ae475bea881fc0
	.long	core::fmt::Write::write_char::hf323ece2521daa94
	.long	core::fmt::Write::write_fmt::hbf916f5b23354be0
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.196, 24

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.197,%object
	.section	.rodata.cst4,"aM",%progbits,4
.Lanon.5beea011998fea4e4b11a776df4066f0.197:
	.zero	4,32
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.197, 4

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.198,%object
	.section	.rodata.cst32,"aM",%progbits,32
.Lanon.5beea011998fea4e4b11a776df4066f0.198:
	.ascii	"library/core/src/fmt/builders.rs"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.198, 32

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.199,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.199,"a",%progbits
	.p2align	2
.Lanon.5beea011998fea4e4b11a776df4066f0.199:
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.198
	.asciz	" \000\000\000/\000\000\000!\000\000"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.199, 16

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.200,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.200,"a",%progbits
	.p2align	2
.Lanon.5beea011998fea4e4b11a776df4066f0.200:
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.198
	.asciz	" \000\000\0000\000\000\000\022\000\000"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.200, 16

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.201,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.201,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.201:
	.ascii	" {\n"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.201, 3

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.202,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.202,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.202:
	.ascii	",\n"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.202, 2

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.204,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.204,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.204:
	.ascii	" { "
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.204, 3

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.206,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.206,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.206:
	.byte	125
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.206, 1

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.209,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.209,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.209:
	.ascii	" }"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.209, 2

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.210,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.210,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.210:
	.ascii	"(\n"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.210, 2

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.211,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.211,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.211:
	.byte	40
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.211, 1

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.212,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.212,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.212:
	.byte	44
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.212, 1

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.213,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.213,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.213:
	.byte	41
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.213, 1

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.230,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.230,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.230:
	.ascii	"library/core/src/fmt/num.rs"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.230, 27

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.231,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.231,"a",%progbits
	.p2align	2
.Lanon.5beea011998fea4e4b11a776df4066f0.231:
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.230
	.asciz	"\033\000\000\000e\000\000\000\024\000\000"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.231, 16

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.232,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.232,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.232:
	.ascii	"0x"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.232, 2

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.238,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.238,"a",%progbits
	.p2align	2
.Lanon.5beea011998fea4e4b11a776df4066f0.238:
	.long	core::ptr::drop_in_place<&core::iter::adapters::copied::Copied<core::slice::iter::Iter<u8>>>::hceb1e8191151371b
	.asciz	"\004\000\000\000\004\000\000"
	.long	<&mut W as core::fmt::Write>::write_str::h06c25b6d30c4740c
	.long	<&mut W as core::fmt::Write>::write_char::h6ab6417501edfdb3
	.long	<&mut W as core::fmt::Write>::write_fmt::ha0996c23c8ea924f
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.238, 24

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.244,%object
	.section	.rodata.cst4,"aM",%progbits,4
.Lanon.5beea011998fea4e4b11a776df4066f0.244:
	.ascii	"true"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.244, 4

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.245,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.245,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.245:
	.ascii	"false"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.245, 5

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.251,%object
	.section	.rodata.cst32,"aM",%progbits,32
.Lanon.5beea011998fea4e4b11a776df4066f0.251:
	.ascii	"library/core/src/slice/memchr.rs"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.251, 32

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.252,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.252,"a",%progbits
	.p2align	2
.Lanon.5beea011998fea4e4b11a776df4066f0.252:
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.251
	.asciz	" \000\000\000[\000\000\000\005\000\000"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.252, 16

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.256,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.256,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.256:
	.ascii	"range start index "
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.256, 18

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.257,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.257,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.257:
	.ascii	" out of range for slice of length "
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.257, 34

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.258,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.258,"a",%progbits
	.p2align	2
.Lanon.5beea011998fea4e4b11a776df4066f0.258:
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.256
	.asciz	"\022\000\000"
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.257
	.asciz	"\"\000\000"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.258, 16

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.259,%object
	.section	.rodata.cst16,"aM",%progbits,16
.Lanon.5beea011998fea4e4b11a776df4066f0.259:
	.ascii	"range end index "
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.259, 16

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.260,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.260,"a",%progbits
	.p2align	2
.Lanon.5beea011998fea4e4b11a776df4066f0.260:
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.259
	.asciz	"\020\000\000"
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.257
	.asciz	"\"\000\000"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.260, 16

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.261,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.261,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.261:
	.ascii	"slice index starts at "
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.261, 22

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.262,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.262,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.262:
	.ascii	" but ends at "
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.262, 13

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.263,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.263,"a",%progbits
	.p2align	2
.Lanon.5beea011998fea4e4b11a776df4066f0.263:
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.261
	.asciz	"\026\000\000"
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.262
	.asciz	"\r\000\000"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.263, 16

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.277,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.277,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.277:
	.ascii	"source slice length ("
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.277, 21

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.278,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.278,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.278:
	.ascii	") does not match destination slice length ("
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.278, 43

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.279,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.279,"a",%progbits
	.p2align	2
.Lanon.5beea011998fea4e4b11a776df4066f0.279:
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.277
	.asciz	"\025\000\000"
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.278
	.asciz	"+\000\000"
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.213
	.asciz	"\001\000\000"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.279, 24

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.300,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.300,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.300:
	.asciz	
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.300, 256

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.321,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.321,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.321:
	.ascii	"[...]"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.321, 5

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.322,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.322,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.322:
	.ascii	"byte index "
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.322, 11

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.323,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.323,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.323:
	.ascii	" is out of bounds of `"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.323, 22

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.324,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.324,"a",%progbits
	.p2align	2
.Lanon.5beea011998fea4e4b11a776df4066f0.324:
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.322
	.asciz	"\013\000\000"
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.323
	.asciz	"\026\000\000"
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.192
	.asciz	"\001\000\000"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.324, 24

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.325,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.325,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.325:
	.ascii	"begin <= end ("
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.325, 14

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.326,%object
	.section	.rodata.cst4,"aM",%progbits,4
.Lanon.5beea011998fea4e4b11a776df4066f0.326:
	.ascii	" <= "
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.326, 4

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.327,%object
	.section	.rodata.cst16,"aM",%progbits,16
.Lanon.5beea011998fea4e4b11a776df4066f0.327:
	.ascii	") when slicing `"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.327, 16

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.328,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.328,"a",%progbits
	.p2align	2
.Lanon.5beea011998fea4e4b11a776df4066f0.328:
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.325
	.asciz	"\016\000\000"
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.326
	.asciz	"\004\000\000"
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.327
	.asciz	"\020\000\000"
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.192
	.asciz	"\001\000\000"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.328, 32

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.329,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.329,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.329:
	.ascii	" is not a char boundary; it is inside "
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.329, 38

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.330,%object
	.section	.rodata.cst8,"aM",%progbits,8
.Lanon.5beea011998fea4e4b11a776df4066f0.330:
	.ascii	" (bytes "
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.330, 8

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.331,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.331,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.331:
	.ascii	") of `"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.331, 6

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.332,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.332,"a",%progbits
	.p2align	2
.Lanon.5beea011998fea4e4b11a776df4066f0.332:
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.322
	.asciz	"\013\000\000"
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.329
	.asciz	"&\000\000"
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.330
	.asciz	"\b\000\000"
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.331
	.asciz	"\006\000\000"
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.192
	.asciz	"\001\000\000"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.332, 40

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.333,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.333,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.333:
	.ascii	"library/core/src/str/mod.rs"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.333, 27

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.334,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.334,"a",%progbits
	.p2align	2
.Lanon.5beea011998fea4e4b11a776df4066f0.334:
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.333
	.asciz	"\033\000\000\000\365\000\000\000\035\000\000"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.334, 16

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.356,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.356,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.356:
	.ascii	"library/core/src/unicode/printable.rs"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.356, 37

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.357,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.357,"a",%progbits
	.p2align	2
.Lanon.5beea011998fea4e4b11a776df4066f0.357:
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.356
	.asciz	"%\000\000\000\n\000\000\000\034\000\000"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.357, 16

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.358,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.358,"a",%progbits
	.p2align	2
.Lanon.5beea011998fea4e4b11a776df4066f0.358:
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.356
	.asciz	"%\000\000\000\032\000\000\0006\000\000"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.358, 16

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.359,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.359,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.359:
	.ascii	"\000\001\003\005\005\006\006\002\007\006\b\007\t\021\n\034\013\031\f\032\r\020\016\r\017\004\020\003\022\022\023\t\026\001\027\004\030\001\031\003\032\007\033\001\034\002\037\026 \003+\003-\013.\0010\0031\0022\001\247\002\251\002\252\004\253\b\372\002\373\005\375\002\376\003\377\t"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.359, 80

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.360,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.360,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.360:
	.ascii	"\255xy\213\215\2420WX\213\214\220\034\335\016\017KL\373\374./?\\]_\342\204\215\216\221\222\251\261\272\273\305\306\311\312\336\344\345\377\000\004\021\022)147:;=IJ]\204\216\222\251\261\264\272\273\306\312\316\317\344\345\000\004\r\016\021\022)14:;EFIJ^de\204\221\233\235\311\316\317\r\021):;EIW[\\^_de\215\221\251\264\272\273\305\311\337\344\345\360\r\021EIde\200\204\262\274\276\277\325\327\360\361\203\205\213\244\246\276\277\305\307\316\317\332\333H\230\275\315\306\316\317INOWY^_\211\216\217\261\266\267\277\301\306\307\327\021\026\027[\\\366\367\376\377\200mq\336\337\016\037no\034\035_}~\256\257\177\273\274\026\027\036\037FGNOXZ\\^~\177\265\305\324\325\334\360\361\365rs\217tu\226&./\247\257\267\277\307\317\327\337\232@\227\2300\217\037\322\324\316\377NOZ[\007\b\017\020'/\356\357no7=?BE\220\221Sgu\310\311\320\321\330\331\347\376\377"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.360, 288

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.361,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.361,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.361:
	.ascii	"\000 _\"\202\337\004\202D\b\033\004\006\021\201\254\016\200\253\005\037\t\201\033\003\031\b\001\004/\0044\004\007\003\001\007\006\007\021\nP\017\022\007U\007\003\004\034\n\t\003\b\003\007\003\002\003\003\003\f\004\005\003\013\006\001\016\025\005N\007\033\007W\007\002\006\026\rP\004C\003-\003\001\004\021\006\017\f:\004\035%_ m\004j%\200\310\005\202\260\003\032\006\202\375\003Y\007\026\t\030\t\024\f\024\fj\006\n\006\032\006Y\007+\005F\n,\004\f\004\001\0031\013,\004\032\006\013\003\200\254\006\n\006/1M\003\200\244\b<\003\017\003<\0078\b+\005\202\377\021\030\b/\021-\003!\017!\017\200\214\004\202\227\031\013\025\210\224\005/\005;\007\002\016\030\t\200\276\"t\f\200\326\032\f\005\200\377\005\200\337\f\362\235\0037\t\201\\\024\200\270\b\200\313\005\n\030;\003\n\0068\bF\b\f\006t\013\036\003Z\004Y\t\200\203\030\034\n\026\tL\004\200\212\006\253\244\f\027\0041\241\004\201\332&\007\f\005\005\200\246\020\201\365\007\001 *\006L\004\200\215\004\200\276\003\033\003\017\r"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.361, 303

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.362,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.362,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.362:
	.ascii	"\000\006\001\001\003\001\004\002\005\007\007\002\b\b\t\002\n\005\013\002\016\004\020\001\021\002\022\005\023\021\024\001\025\002\027\002\031\r\034\005\035\b$\001j\004k\002\257\003\274\002\317\002\321\002\324\f\325\t\326\002\327\002\332\001\340\005\341\002\347\004\350\002\356 \360\004\370\002\372\002\373\001"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.362, 84

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.363,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.363,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.363:
	.ascii	"\f';>NO\217\236\236\237{\213\223\226\242\262\272\206\261\006\007\t6=>V\363\320\321\004\024\03067VW\177\252\256\257\2755\340\022\207\211\216\236\004\r\016\021\022)14:EFIJNOde\\\266\267\033\034\007\b\n\013\024\02769:\250\251\330\331\t7\220\221\250\007\n;>fi\217\222o_\277\356\357Zb\364\374\377\232\233./'(U\235\240\241\243\244\247\250\255\272\274\304\006\013\f\025\035:?EQ\246\247\314\315\240\007\031\032\"%>?\347\354\357\377\305\306\004 #%&(38:HJLPSUVXZ\\^`cefksx}\177\212\244\252\257\260\300\320\256\257no\223"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.363, 192

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.364,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.364,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.364:
	.ascii	"^\"{\005\003\004-\003f\003\001/.\200\202\035\0031\017\034\004$\t\036\005+\005D\004\016*\200\252\006$\004$\004(\b4\013NC\2017\t\026\n\b\030;E9\003c\b\t0\026\005!\003\033\005\001@8\004K\005/\004\n\007\t\007@ '\004\f\t6\003:\005\032\007\004\f\007PI73\r3\007.\b\n\201&RN(\b*\026\032&\034\024\027\tN\004$\tD\r\031\007\n\006H\b'\tu\013?A*\006;\005\n\006Q\006\001\005\020\003\005\200\213b\036H\b\n\200\246^\"E\013\n\006\r\023:\006\n6,\004\027\200\271<dS\fH\t\nFE\033H\bS\rI\201\007F\n\035\003GI7\003\016\b\n\0069\007\n\2016\031\200\267\001\0172\r\203\233fu\013\200\304\212Lc\r\204/\217\321\202G\241\271\2029\007*\004\\\006&\nF\n(\005\023\202\260[eK\0049\007\021@\005\013\002\016\227\370\b\204\326*\t\242\347\2013-\003\021\004\b\201\214\211\004k\005\r\003\t\007\020\222`G\tt<\200\366\ns\bp\025F\200\232\024\fW\t\031\200\207\201G\003\205B\017\025\204P\037\200\341+\200\325-\003\032\004\002\201@\037\021:\005\001\204\340\200\367)L\004\n\004\002\203\021DL=\200\302<\006\001\004U\005\0334\002\201\016,\004d\fV\n\200\2568\035\r,\004\t\007\002\016\006\200\232\203\330\005\020\003\r\003t\fY\007\f\004\001\017\f\0048\b\n\006(\b\"N\201T\f\025\003\005\003\007\t\035\003\013\005\006\n\n\006\b\b\007\t\200\313%\n\204\006"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.364, 438

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.365,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.365,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.365:
	.ascii	"library/core/src/unicode/unicode_data.rs"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.365, 40

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.369,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.369,"a",%progbits
	.p2align	2
.Lanon.5beea011998fea4e4b11a776df4066f0.369:
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.365
	.asciz	"(\000\000\000K\000\000\000(\000\000"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.369, 16

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.370,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.370,"a",%progbits
	.p2align	2
.Lanon.5beea011998fea4e4b11a776df4066f0.370:
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.365
	.asciz	"(\000\000\000W\000\000\000\026\000\000"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.370, 16

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.371,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.371,"a",%progbits
	.p2align	2
.Lanon.5beea011998fea4e4b11a776df4066f0.371:
	.long	.Lanon.5beea011998fea4e4b11a776df4066f0.365
	.asciz	"(\000\000\000R\000\000\000>\000\000"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.371, 16

	.type	core::num::dec2flt::table::POWER_OF_FIVE_128::h0a265520c0249b55,%object
	.section	.rodata._ZN4core3num7dec2flt5table17POWER_OF_FIVE_12817h0a265520c0249b55E,"a",%progbits
	.p2align	3
core::num::dec2flt::table::POWER_OF_FIVE_128::h0a265520c0249b55:
	.ascii	"Z\326;\222\326S\364\356?;\241\006)\252?\021\370ee\033f\264X\225\007\305$\244Y\312\307Jv\277>\242\177\341\256\272I\366-\r\360\274y]So\316\212\337\231Z\351\334sy\020,,\330\364\224\005\301\266+\240\330\221i\350K\212\233\033\007y\371Fq\2446\310N\266\204\342\336l\202\342H\227\267\230\215MDz\342\343%\233\026\b#\033\033\375r\177x\260j\214m\216\367 \016\345\365\3600\376O\237\226\\\205\357\b\2625\251Q^3-\275\275#G\274\263f+\213\336\202\023\3465\200x,\255v\254U0 \373\026\2131\314\257!P\313;L\223\027k<\350\271\334\255=\277\033*$\276J\337x\335\205Kb\350S\331\r\257\2424\255m\035\327k\2523o=q\324\207h\255\345@\214dr\206\006\225\000\313\214\215\311\251\302\030\037Q\257\375\016hH\272\300\375\357\360;\324\362\336f%\033\275\022\002mt\230\376\225v\245\204WK`\3670\266K\001\210\221>~;\324\316\245-^85\275\243\236A\3525\316]J\211B\317\271u\206\202\254L\006R\262\341\240z\316\225\211\201\223\t\224\321\353\357Cs\037\032I\031B\373\353\241\370\013\371\305\346\353\024\020\246`\233\237\022\372f\312\366Nww\340&\032\324\3208\202G\227\270\000\375\264\"U\225\230\260 \211\202c\261\214^s \236\2605U]_n\264Ub\274\335/6\220\250\305\035\203\2524\367\211!\353{+\325\273C\264\022\367\344#\325\001u\354\351\245-;eU\252\260k\232n6%!\3113\262G\370\211\276\352\324\234\006\301\n\204ni\273\300\236\231v,n%\nDH\361\r%\312C\352p\006\300\312\333dW\206*\315\226(W^j\222\006\0048\274\022>\355'u\200\274\362\354\365\0047\b\005\306k\227\215\350q\222\240\353.h3\306DJ\206\367\243~X1\207[D\223\035!\340\373j\356\263zL\236\256\375hr\025\270d)\330\272\005\352`Y\337E\032=\003\317\032\346\2753\216)\207$\271o\253k0\006b\301\320\217V\340\370y\324\266\323\245\226\206\274\207\272\361\304\263l\030w\230\211\244H\217<\250\253)).\266\340\207\336\224\376\253\315\0323%I\013\272\331\334q\214\024\013\035\177\213\300\360\237o\033\216(\020T\216\257\331M\344^\256\360\354\007J\242\2612\024\351q\333Pa\235\366\331,\350\311n\005\257\237\2541'\211\322\\\":\b\0341\276\312\306\232\307\027\376p\253\006\364\252H\nc\275m}x\201\271\235=M\326\b\261\325\332\314\273,\tN\353\360\223\202F\360\205\245\216\305\b`\365\273%!&\3558#Xl\247N\362\366\n\270\362*\257\252o(\007,nG\321\341\256\264\rf\257\365\032\312Ey\204\333\244\314\202M\355\220\310\237\215\331P<\227\227e\022\316\177\243\240(\265\272\007\361\017\345\f}\375\376\226\301_\314\310rb\251I\355S\036O\334\274\276\374\261w\377z\017\273\023\234\350\350%\261\t6\367=\317\252\237\254\351T\214a\221\261w\035\214\003u\r\203\225\307\027$j\357\271\365\235\325%oD\322\320\343z\371\035\255Dk(s\005Kw\305j\203b\316\354\2332\354\nC\371g\343N\325vE$\373\001\350\302?\247\315\223\367A\234\"\212\324V\355y\002\242\363\017\021\301xuRCk\326DV4\214AE\230\251\252xk\211\023\n\203\f\326kA\357\221V\276S\325V\306k\230\314#\217\313\306\021k6\354\355\250\212\354\267\206\276\277,9?\034\353\002\242\263\224\251\326\3632\024\327\367{\007O\343\245\203\212\340\271S\314\260?\331\314\365\332\311\"\\\217$\255X\350h\377\234\217\017@\263\321\276\225\231\3316l7\221\241\037\302\271\t\b\020#-\373\377\217DG\205\265\212\2472(\f\n\324\253\371\371\377\263\025\231\346\342lQ?2\217\f\311\026;\374\177\220\255\037\320\215\343\222g\177\331\247=\256J\373\237\364\230'D\261\234wA\337\317\021\315\231\035\372\3071\1771\225\335\203\325\021\327CV@@R\374\034\177\357>}\212r%kf\3525(Hf;\344^\253\216\034\255\317\356\005\000eC2\332@J\2356V\262c\330\202j\007@>\324\276\220hN\"\342uO>\207\221\242\004\350\246DwZ\002\342\252ZS\343\r\2516\313\005\242\320\025\025q\203\232U1(\\Q\323\003>\207\312D[Z\r\221\200\325\036\231\331\022\204\302\206\224\376\nyX\350\266\340\212f\377\217\027\245r\2509\276M\227nb\343\230-@\377s]\316\217\022\310-!=\n\373\216\177\034\210\177h\372\200\231\013\235\2744f\346|r\237#j\237\0029\241\200N\304\353\301\377\037\034N\207\254DGC\207\311 b\265f\262\377'\243\"\251\327\025\031\024\351\373\250\272b\000\237\377\361K\265\311\246\255\217\254q\235\251\264=`\303?wo\"|\020\231\263\027\316\304\323!M8\264\017U\313+\233T\177\240\235\001\366Hj`F\241S*~\373\340\224O\204\002\301\231mB\374\313Dt\332.9\031zc%C1\300\bS\373\376U\021\221\372\210\237X\274\356\223=\360\312'\272~\253U5y\265c\2675u|&\226\336X4/\213U\301K\242<%\203\222\033\260\273\026o\001\373\355\252\261\236\313\213\356#w\"\234\352\334\312\301y\251\025^F_\027uv\212\225\241\222\311\036\031\354\211\315\372\0136]\022\024\355\372I\267{f\037g\354\200\371\316\204\364\026Y\250y\034\345\032@\347\200'\341\267\202\322X\2567\t\3141\217\020\210\220\260\270\354\262\321\007\357\231\205\013?\376\262\025\252\264\334\346\247\037\206\311j\000g\316\316\275\337\232\324\341\223\340\221\247g\275B`\000A\241\326\213\340$m\\,\273\310\340mSx@\221I\314\256\030n\210s\367\351\372XHh\226\220\365[\177\332\236\211jPu\2449\257-\001^zy\231\217\210\003\226BR\311\006\204mx\201\365\330\327\177\263\252\203;\323\246{\b\345\310\326\3412\317\315_`\325d\n\210\220\232J\036\373&\315\177\241\340;\\\205\177\006U\232\240\356\362\\o\300\337\311\330J\263\246\036H\352\300H\252/\364\213\260W\374\216\035`\320&\332$\361\332\224;\361W\316\266]y\022<\202X\b\267\326\b=\305v\355\201$\265\027\027\313\242n\312d\fK\214vTh\242m\242\335\334}\313\t\375}\317]/\224\251\002\013\t\013\025T]\376L|]C5;\371\323\341\246\345&\215T\372\236\257m\032J\001\305{\304\232\020\237p\260\351\270\306\033\t\241\234A\266\2325\300\324\306\214\034$g\370bK\311\003\322c\001\303\370D\374\327\221v@\233\035\317]Bc\336\340y6V\373M6\224\020\302\344B\365\022\374\025Y\230\304+z\341C\271\224\362\235\223\262\027{[o>Z[\354l\312\363\234\227B\234\317\356,\231\005\2471r'\b\2750\204\275S\203\203*x\377\306P\275N1J\354<\345\354(d$5V\277\370\2446\321^\256\023F\017\224\231\2766\341\225w\033\207\204\205\366\231\230\027\023\271?n\204Y{U\342(\345&t\300~\335W\347\317\211\345/\332\352\0323O\230H8o\352\226\220!v\357]\310\322\360?c\276Z\006\013\245\274\264\251Skuz\007\355\017\373m\361\307M\316\353\341\224(\306\022YI\350\323\275\344\366\234\360`3\215\\\331\273\253\327-qd\354\2354\304,9\200\260\263\317\252\226My\215\275g\305A\365wG\240\334\240\203U\374\240\327\360\354`\033I\371\252,\344\211Dr\265\235\304\206\026\3649b\233\267\3257]\254\325\316\"\305u(\0341\307:\202%\313\205t\327\213\202k6\2232c}\274dq\367\236\323\250\206\2271\003\002\234\377]\256\353\275M\265\206\bS\250\374\375\203\002\203\177\365\331f-\241b\250\312g\322{\375$\303c\337r\320`\274\244=\251\336\200\203m\036\367Y\236\313GBx\353\r\215S\026a\244\b\346t\360\205\276\331RVfQp\350[y\315\213\037\222l'.\220g\366\3372Fq\331k\200\266S\333\243\330\034\272\000\363\227\277\227\315\317\206\240\244(\322\314\016\244\350\200\360}\257\375\300\203\250\310\315\262\006\200\022\315\"al]\033=\261\244\322\372\201_\b W\200kyc\0321\306\356\246\303\234\260;\005t60\343\313\374`\275w\252\220\364\303\234\212\006\021D\374\333\276;\271\254\025\325\264\361\364D-H\025U\373\222\356\305\363\213-\005\021\027\231J\034M-\025\335\033u\266\360\356xF\325\\\277]c\240xZ\324b\322\344\254*\027\230\n4\3574|\310\026q\211\373\206\016\254z\016\237\206\200\225\240M=\256\3465]\324\022W\031\322F\250\340\272\t\241\314Y`\203t\211\327\254\237\206X\322\230\351K\311?p8\244\321+\006\314#Tw\203\377\221\317\335'F\243\006c{\b\277,)Ud\177\266B\325\261\027L\310;\032\312\356wsj=\037\344\223J\236\035_\272\312 >\365*\210b\206\223\216\234\356\202r{\264~T\215\2625*\373g8\262C\252#O\232a\236\3511\037\303\364\371\201\306\336\324\224\354\342\000\372\005d~\363\3718<\021<\213\004\335\323\215@\274\203\336^p8G\213\025\013\256E\324H\261P\253$\226v\214\006\031\356\332\215\331W\t\233\335$\326\255;\311\027\244\317\324\250\370\207\326\345\200\n\327\245L\345\274\035\215\003\n\323\366\251L\037!\315L\317\237^+ep\204\314\207t\324\037gi\000 \303Gv;?\306\322\337\324\310\204s\340A\000\364\331\354)\t\317w\307\027\n\373\245\220XR\000q\020h\364\314\302U\271\235\314y\317\264\356f@\215\024\202q\277\231\325\223\342\037\254\2010U@H\330L\361\306/\000\3138\333'\027\242|jPZ\016\240\255\270;\300\375\006\322\361\234\312\034\205\344\360\021\b\331\246J0\275\210F.D\375c\246\035m\026J\217\220.>v\025\354\234J\236\376\2072\004N\216Y\232\272\315\323\032'D\335\305\375)?\205\341\361\357@(\301\210\3410\225T\367|\364\216\346Y\356+\321\271x\365\214>\335\224\232\316X\0310\370t\273\202\347\32620\216\024:\301\001\257\037<6Rj\343\241\214?\274\261\231\210\361\301\232'\313\303\346D\334\345\267\247\025\017`\365\226\271\300\370^:\020\253)\336\245\021\333\022\270\262\274\347\360\266\366H\324\025tV\017\326\221\027f\337\353!\255d4[I\033\021\225\311%\273\316\237k\2234\354\276\000\331\r\261\312\373;\357i\302\207F\270B\247\356@OQ]=\372\nk\004\263)X\346\022Q*\021\243\245\264\f\334\346\302\342\017\032\367\217\253r\272\352\205\347\360G\223\240s\333\223\340\364\263V\017ieg!\355Y\270\210P\322\270\030\362\340,S\303>\301ih0sUr\203sO\227\214\373\023:\307\030BA\036\317\352NdP#\275\257\372\230\b\371\236\222\321\345\203\245b}$l\254\3339\277J\267F\367E\337r\247]\316\226\303K\211\203\267\2162\214\272\213kO\021\365\201|\264\236\253de2?/\251n\006\242Ur\242\233a\206\326\275\376\376\016{S\n\310\205u\207E\001\375\023\2066__\351,t\006\275\347R\351\226A\374\230\247\0047\267#8\021H,\240\247\243\374Q;\177\321\305\004\245,\206\025Z\367\304H\346=\023\205\357\202\373\"\347\333sM\230\232\365\332_\rXf\253\243\272\353\340\322\320`>\301\263\321\267\020\356?\226\314\250&\231\007\005\371\2151\037\306\345\224\351\317\273\377Rp\177IFw\361\375\323\233\017\375\361a\325\2373\246\357\355\213\352\266\376\310\202S|n\272\312\307\300\217k\351.\245d\376{ch\033\ni\275\371\260s\306\243z\316\375=->!Q\246a\026\234N\b\\\246\f\241\276\006\270\215i\345\017\372\033\303b\n\363\317OInH&\361\303\336\223\370\342\363\372\314\357\303\243\333\211Z\267v:k\\\333m\230\034\340uZF)\226\370e\024\t\2063R\211\276#X\023\361\227\263\273\366\177Y\213g\300\246+\356,.X\355}\240jt\357\027\267@8H\333\224\334\034W\264N\244\302\250\353\335\344PF\032\022\272\023\344labM\363\222f\025\036\345\327\240\226\350\027\035\310\371\272 \260w`\3152\357\206$^\221.\022\035\334t\024\316\n\270\200\377\252\250\255\265\265\272V$\023\222\231\201\r\346`\277\325\022\031#\343il\355\227\366\377\341\020\217\234\227\305\253\357\365\215\301c\364\036\372?\215\312\263\203\375\266\226ks\261\262|\261\246\370\2170\275\240\344\274d|F\320\335\336\333]\320\366\263|\254\344\016\366\276\r,\242\212k\251:Bz\360\315k\235\222\263.\021\267J\255\306S\311\322\230l\301\206Dw`z\325d\235\330\267\250{\007\277\307q\350\213J|l\005_b\207rI\255d\327\034G\021-]\233\307\306\366:\251\317\233\330=\r\344\230\325y4\202yx\264\211\323\303\302N\215\020\035\377J\313`\361K\313\0206\204\2729QX*r\337\316\376\270\355\036\376\224C\245(\210e\356\264N\227\302>'\251\246=z\224\3162\352\376)b\"=s\207\270)\210f\314\034\201_R?Z}5\006\b\250&4*\200\377c\241\367&\317\260\334\302\007\312R0\3014`\377\274\311\265\360\002\335\223\263\211\374g|\361A8?,\374\342\254C\324x \254\273\300\3556)\203\247\233\235\rL\252\204K\224K\3251\251\204\363c\221\002\305\021\337\324e^y\236\n}\323e\360\2745C\366\325\026J\377\265\027FM.\244?\026\226\001\352\231EN\216\277\321\316KP9\215\317\233\373\201d\300\326\341q/\206\302^\344\210p\303\202z\242}\360LZN\273'sv]U&\272\221\214\205N\226o\370\020\325\370\007j:\352\257(\266\357&\342\273\2136U\n\367\211\004\211\345\333\262\243\253\260\332\352.\204\352\314t\254E+o\311OFk\256\310\222\235\222\022\000\311\213\013;\313\273\343\027\006\332z\267D7\027@\273n\316\t\275\252\334\235\207\220Y\345\025\005\035\020j\nB\314\266\352\251\302T\372W\217-#\022J\202F\251\237deT\363\351\370-\263\371\253\226\334\"\230\223G\275~)p$w\371\337\367V\274\223+~xY6\357\031\306v\352\373\213Z\266U<\333N\353W\003k\240w\024\345\372\256\361#k\013\222\"\346\355\304\205\210\225Y\236\271\332\355\354E\2166\253_\351\233Su\375\367\002\264\210\024\264\353\030\002\313\333\021\201\250\322\374\265\003\341\252\031\241&\237\302\275R\326\242R\007|\243D\231\325_I\360F3m\347K\245\223\204-\346\312\177\205\333-V\f@\244po\216\270\345\270\237\275\337\246R\271k\017P\315L\313\262&\037\247\007\255\227\320\247\247F\023\244\000 ~/xs\310$\314^\202\310(\f\214f\000\324\216;V\220\372-\177\366\242\3722\017/\200\000\211r\312k4y\371\036\264\313\271\377\322:\240@+O\274\206\201\327\267&\241\376\250\277\207I\310\020\366\3426\364\260\3462\270$\237\311\327\364-}\312\331\rC1]\240?\346\355\306\273\rry\034=P\221\224}t\210\317_\251\370*\221\316\227cL\244u|\316H\265\341\333i\233\272\032\341>\276\257\206\311\033\002\233\"\332RD\302ha\231\316\255[\350\373\242\302A\253\220g\325\362\303\271?B\231r\342\372\245\031\tk\272`\305\227\032\324g\311\237\207\315\334\017`\313\005\351\270\266\275 \311\301\273\207\351\000T\0238>G#g$\355h;\262\252\351#\001)\013\343\206\fv\3006\224!e\257\nr\266\240\371\316\233\250\217\223pD\271i>[\215\016\344\b\370\302\302\222s\270\214\225\347\004\016\2620\022\035\013\266\271\271;H\363w\275\220\302Ho^+\362\306\261(\250J\032\360\325\354\264\363\032\0136\266\2568\0362R\335 l\013(\342\260\341\215\303c\332\306%_S\212\224#\007Y\215\016\2558Z~H\234W7\350\254y\354H\257\260Q\330\306\360\235Z\203-D\"\030\230'\033\333\334e\216\370lE1\344\370k\025\017\277\370\360\b\212\377X\033d\313\236\216\033\305\332\322\3566-\213\254?/\"=~Fr\342w\221\207\252\204\370\255\327\017\273j\314\035\330\016[\352\272\224\352R\273\314\206\351\264\302\237\022G\351\230\245\3519\245'\352\177\250$b\263G\327\230#?\016d\210\216\261\344\237\322\255:\240\031\r\177\354\216\211>\025\371\356\356\243\203\254$\0040h\317S\031+\216Z\267\252\352\214\244\327-\005<B\303\250_\26611eU%\260\315My\006\313\022\364\2227\021\277>_U\027\216\200\320\013\344\276\213\330\273\342\326n\016\267*\235\261\240\304\016\235\256\256\316j[\213\n\322du\004\336\310uRDZZ\202E\362.\215\006\276\222\205\025\373\022g\325\360\360\342\326\356=\030\304\266{s\355\234k`\205\226\326MFUL\036u\244Z\320(\304\206\270&<L\341\227\252\337e\222Mq\0043\365\250f0K\237\331=\325\253\177{\320\306\342?\231)@\376\216\003\250F\345\226_\232\204x\333\217\2773\320\275r\004R\230\336|\367\300\245V\322s\357@Dm\217\205f>\226\255\232\230'vc\250\225\250J\244y\023\000\347\335Y\301~\261S|\022\273R]\rX\030\300`U\257q\336\235h\033\327\351\246\264\020n\036\360\270\252\r\007\253b!q&\222\350p\312\004\023\226\263\312\321\310U\273i\r\260\266\"\r\375\305\227{`=\005;+*\304\020\\\344jP|\267}\232\270\214\343\004[\232z\212\271\216B\262\255\222\216`\363w\034\306\361@\031\355g\262\323\036Y7\2628\360U\2437.\221_\350\001\337\210f/\305\336Flk\306\342\274\272;1a\213\025\240=;K\254##w\033l\251\212}9\256\032\b\r\n^\227\354\253U\"\307S\355\334\307\331!J\220\2145\275\347\226uu\\T\024\352\034\210T.\332wA\326P~\322\222si\231$$\252\351\271\320\325\321\013\345\335\207w\320\303\277-\255\324d\350DK\306N^\225\264Jb\332\227<\354\204>\021\013\357;\361Z\275a\335\372\320\275K'\246\216\325\315\352\212\255\261\354\272\2249E\255\036\261\317\362J\201\245\355\030\336g\364\374CK,\263\316\201\327\316p\207\224\317\352\2001\374\024^\367_B\242\215\002M\251y\203%\241>;\2325\365\367\322\3120C\240\023X\344n\t\r\312\000\203\362\265\207\375\374S\210\030n\235\312\213H~\340\221\267\321t\236~4U\317d\242^w\332\235Xv%\006\022\306\236\201*\003\376J6\225Q\305\356\323\256\207\226\367\005\"\365\203\275\335\203:R;uD\315\024\276\232C5yr\226j\222\304'\212\222\225\000\232m\301\224\202\027\017<\005\267u\261,\367\272\200\000\311\3619c\335\022\213\306$S\356{\332tP\240\035\227\004^\312\353\026\374\366\323\352\032\021\222d\b\345\274\205\365\274\246\034\273\364\210\245a\225\266}J\036\354\3462l\320\343\3511+\007]\035\222\216\356\222\223\320\237Cb.2\377:I\264\24462\252w\270\303\207\324\372\271\376\276\t[\341M\304\276\224\225\346\264\251\211yh\276.L\331\254\260:\367|\035\220\021\n\366K\0017\235\017\017\330\\\t5\334$\264\225\214\363\236\301\204\204S\023\016\264KB\023.\341\272o\260\006\362\245e(\313\210Po\t\314\274\214\324E.D\267\207?\371\376\252$\313\013\377\353\257I\3279\025\245i\217\367\276\325\355\275\316\376\346\333\034M\210Z\016Ds\265\227\245\2646A_p\21110\225\370\210\nh1\374\316a\204\021w\314\253>|\2726+\r\302\375\274Bz\345\325\224\277\326M\033i\004v\2202=\265il\257\005\2757\206\020\261\301\302I\232?\246#\204G\033G\254\305\247T\035r3\334\200\317\017+e\031\342X\027\267\321\251\244N@\023a\303\323;\337O\215\227n\022\203\352&1\b\254\034Zd\n\327\243p=\n\327\243\244p=\n\327\243pk\356\000\000\000\000\000\000\000\000\000\000\000\000\000\371\002\225\000\000\000\000\000\000\000\000\000\000\000\000@\267C\272\000\000\000\000\000\000\000\000\000\000\000\000\020\245\324\350\000\000\000\000\000\000\000\000\000\000\000\000*\347\204\221\000\000\000\000\000\000\000\000\000\000\000\200\364 \346\265\000\000\000\000\000\000\000\000\000\000\000\2401\251_\343\000\000\000\000\000\000\000\000\000\000\000\004\277\311\033\216\000\000\000\000\000\000\000\000\000\000\000\305.\274\242\261\000\000\000\000\000\000\000\000\000\000@v:k\013\336\000\000\000\000\000\000\000\000\000\000\350\211\004#\307\212\000\000\000\000\000\000\000\000\000\000b\254\305\353x\255\000\000\000\000\000\000\000\000\000\200z\027\267&\327\330\000\000\000\000\000\000\000\000\000\220\254n2x\206\207\000\000\000\000\000\000\000\000\000\264W\n?\026h\251\000\000\000\000\000\000\000\000\000\241\355\314\316\033\302\323\000\000\000\000\000\000\000\000\240\204\024@aQY\204\000\000\000\000\000\000\000\000\310\245\031\220\271\245o\245\000\000\000\000\000\000\000\000:\017 \364'\217\313\316\000\000\000\000\000\000\000\000\204\t\224\370x9?\201\000\000\000\000\000\000\000@\345\013\2716\327\007\217\241\000\000\000\000\000\000\000P\336Ng\004\315\311\362\311\000\000\000\000\000\000\000\244\226\"\201E@|o\374\000\000\000\000\000\000\000M\235\265p+\250\255\305\235\000\000\000\000\000\000 \360\005\343L6\022\0317\305\000\000\000\000\000\000(l\306\033\340\303V\337\204\366\000\000\000\000\000\0002\307\\\021l:\226\013\023\232\000\000\000\000\000@\177<\263\025\007\311{\316\227\300\000\000\000\000\000\020\237K \333H\273\032\302\275\360\000\000\000\000\000\324\206\036\364\210\r\265P\231v\226\000\000\000\000\200D\024\0231\353P\342\244?\024\274\000\000\000\000\240U\331\027\375%\345\032\216O\031\353\000\000\000\000\b\253\317]\2767\317\320\270\321\357\222\000\000\000\000\345\312\241Z\255\005\003\005'\306\253\267\000\000\000@\236=J\361\031\307C\306\260\267\226\345\000\000\000\320\005\315\234mo\\\352{\3162~\217\000\000\000\242#\000\202\344\213\363\344\032\202\277]\263\000\000\200\212,\200\242\335n0\236\241b/5\340\000\000 \2557 \013\325E\336\002\245\235=!\214\000\0004\314\"\364&E\326\225C\016\005\215)\257\000\000A\177+\261p\226L{\324QF\360\363\332\000@\021_v\335\f<\017\315$\363+v\330\210\000\310j\373i\n\210\245S\000\356\357\266\223\016\253\000zEz\004\r\352\216h\200\351\253\2448\322\325\200\330\326\230E\220\244rA\360q\353fc\243\205PG\206\177+\332\246GQlN\246@<\f\247$\331g_\266\220\220\231e\007\342\317PK\317\320m\317A\367\343\264\364\377\237D\355\201\022\217\201\202\244!\211z\016\361\370\277\307\225h\"\327\362!\243\rj+\031R-\367\2579\273\002\353\214o\352\313\220Dv\237\246\370\364\233\bj\303%p\013\345\376\264\325SG\3206\362\002E\"\232\027&'O\237\220e\224,Bb\327\001\326\252\200\235\357\360\"\307\365~\271\267\322:MB\213\325\340\204+\255\353\370\262\336\247e\207\211\340\322w\205\f3;L\223\233/\353\210\237\364U\314c\325\246\317\377I\037x\302\373%k\307qk\277<\212\220\303\177\034'\026\363z\357E9NF\357\213V:\332\317q\330\355\227\254\265\313\343\360\213u\227\354\310\320C\216N\351\275\027\243\276\034\355\356R='\373\304\3241\242c\355\335K\356c\250\252\247L\370\034\373$_E^\224j\357t>\251\312\350\2176\3449\356\266\326u\271D+\022\216S\375\342\263D]\310\251dL\323\347\026\266\226q\250\274\333`J:\035\352\276\017\344\220\3151\376F\351U\211\274\335\210\244\244\256\023\035\265A\276\275\230c\253\253k\024\253\315M\232Xd\342\321-\355~<\226\226\306\354\212\240p`\267~\215\242<T\317\345\035\036\374\250\255\310\2148e\336\260\313K)C_\245%;\022\331\372\257\206\376\025\335\276\236\363\023\267\016\357I\253\307\374-\024\277-\2127Cxl2i5n\226\371{9\331.\271\254\004T\226\007\177\303\302I\373\367\332\207\217z\347\327\006\351{\311^t3\334\375\332\350\264\231\254\360\206\243q\355=\273(\240i\274\021#\"\300\327\254\250\f\316h\r\3522\b\304+\326\253*\260\r\330\322\220\001\303\220\244?\n\365\333e\253\032\216\b\307\203\372\340y\332\306g&yR?V\241\261\312\270\2448Y\030\221\270\001pW&\317\253\t^\375\346\315\206o^\265&\002L\355xa\013\306Z^\260\200\264\005[1X\201OT\3269\216w\361u\334\240!\307\261=\256aciL\310q\325m\223\023\311\3518\036\315\031:\274\003_:\316JIxX\373#\307e@\240H\253\004{\344\300\316-K\027\235v\234?(d\r\353b\232\035qB\371\035]\304\224\203O2\275\320\245;\000e\r\223wet\365yd\343~\354D\217\312 _\350\273j\277h\231\313\036N\317\023\213\231~\350v\342jE\357\302\277~\246!\303\330\355?\236\242\024\233\305\026\253\263\357\036\020\352\363N\351\317\305\345\354\200;\356J\320\225\022JrX\321\361\241\273\037(a\312\251]D\273\227\334\216\256En\212*&r\371<\024u\025\352\275\2232\032\327\t-\365X\347\033\246,iM\222V\234_p&&<Y.\341\242\317w\303\340\266l\203w\f\260/\213oz\231\213\303U\364\230\344Gd\225\017\234\373m\013\354?7\232\265\230\337\216\254^\275\211A\275$G\347\017\305\000\343~\227\262W\266,\354\221\354\355X\341S\366\300\233^=\337\355\3437g\266g)/l\364\231X![\206\213t\356\202\000\322\340y\275\207q\300\256\351\361g\256\021\252\243\200\006Y\330\354\351\215p\032d\356\001\332\225\224\314 Ho\016\350\262X\206\220\3764A\210\335\334\177\024\215\005\t1\336\356\2474>\202Q\252\025\324\237Y\360FK\275\226\352\321\301\315\342\345\324\032\311\007p\254\030\236l\2362#\231\300\255\017\205\260\335\004\306k\317\342\003E\377k\2770\231S\246\034\025\206\267F\203\333\204\026\377F\357|\177\350\317c\232ge\030d\022\346n_\214\025\256O\361\201~\300`?\217~\313OIw\357\232\231\243m\242\235\3608\0173^\276\343\034U\253\001\200\f\t\313\305,\007\323\277\365\255\\c*\026\002\240O\313\375\366\367\310\307/s\331s~\332M\001\304\021\237\236\372\232\335\334\375\347g(\035Q\241\0015\326F\306\270\001\025T\375\341\201\262e\245\tB\302\213\330\367&B\032\251|Z\"\037_\007FiYW\347\232Xi\260\351\215xu37\211\227\303/-\241\301\256\203\034d\261\326R\000\204k}\264{x\t\362\232\244#\275]\214g\3002c\316PM\353E\227\340F6\226\272\267@\370\377\373\001\245 f\027\275\230\330\303;\251\345P\266\377zB\316\250?]\354\276\316\264\212\023\037\345\243\337\214\351\200\311G\272\2237\001\2616l3o\306\027\360#\341\273\331\250\270\204A]DG\000\013\270\035\354l\331*\020\323\346\345\221t\025Y\300\r\246\222\023\344\307\032\352C\220/\333h\2557\230\310\207w\030\335y\241\344T\264\373\021\303\230E\276\272)\224^T\330\311\035j\341z\326\363\376\326m)\364\035\2734'\236R\342\214\ffX_\246\344\231\030\344\351\001\261E\347\032\260\217\177.\367\317]\300^]dB\035\027\241!\334s\037\372\364Cupv\272~Ir\256\004\225\211\250S\034yJI\006ji\336\333\016\332E\372\253\222hc\027\235\333\207\004\003\326\222\222P\327\370\326\266B<]\204\322\251E\302\305\233[\222\206[\206\262\251E\272\222#\212\0132\267\202\3626h\362\247\036\024\327hw\254l\216\377d#\257D\002\357\321&\331\fC\225\327\0072\037\037v\355ja5\203\270\007\350I\275\346D\177\347\246\323\250\305\271\002\244\246\tb\234l \026_\241\220\b\0237h\003\315\017\214z\303\207\250\3336dZ\345k\"!\"\200\211\227,\332TII\302\375\260\336\006k\251*\240l\275\267\020\252\233\333\362=]\226\310\305S5\310\307\254\345\224\224\202\222o\214\364\273:\267\250B\372\371\027\037\2729#w\313\327x\265\204r\251i\234\373nS\024\004v*\377\r\327\342%\317\023\204\303\272Jh\031\205\023\365\376\321\214[\357\302\030e\364i]\302_fX\262~\0028\231\325y/\277\230az\331\373?w/\357\003\206\377JX\373\356\276\372\330\317\372\017U\373\252\204g\277].\272\252\3568\317\203\371S*\272\225\262\240\227\372\\\264*\225\203a\362{tZ\224\335\337\210=9tau\272\344\371\356\232\021q\371\224\027\353\214G\321\271\022\351]\270\252\001V\3157z\356\022\270\314\"\264\253\221:\263\n\301U\340b\254\252\027\346\177+\241\026\266\t`M1k\230{W\224\235\337_vI\234\343\013\270\240\375\205~Z\355}\302\353\373\351\255A\216\007s\204\276\023\217X\024\034\263\346zd\031\322\261\310\217%\256\330\262nY\343_\240\231\275\237F\336\273\363\256\331\216_\312o\356;\004\200\326#\354\212TX\rH\271{\336%\351J\005 \314,\247\255j\256\020\232\247\032V\257\244\235\006(\377\367\020\331\004\332\224\200Q\241+\033\206\"\004y\377\232\252\207B\b]\360\322D\373\220(+EW\277A\225\251SJt\254\007\026:5\362u\026-/\222\372\323\350\\\221\227\211\233\210B\267\t.|]\233|\204\021\332\272\3765a\225i%\2149\3334\302\233\245\225\220i~\203\271\372C.\357\007\022\302\262\002\317\273\364\003^\344g\371\224}\365DK\271\257a\201\365x\302\272\356\340\033\035\3342\026\236\247\033\272\2412\027si*\331bd\223\277\233\205\221\242(\312\376\334\317\003u\217{}x\257\002\3475\313\262\374>\324\303DRs\332\\\253\255a\260\001\277\357\235\247d\372j\023\210\b:\026\031z\034\302\256k\305\320\375\270E\030\252\212\b[\237\230\243r\232\306\366E='W\236T\255\212\231c?\246\207 <\232K\206x\366\342T\2546\177<\317\217\251(\313\300\335\247\026\264\033jW\204\237\013\303\363\323\362\375\360\325Q\034\241\242DmeC\347Yx\304\267\236\226%\263\261\244\345Jd\237\024ap\226\265eF\274\356\037\336\r\237]=\207Yy\f\374\"\377W\353\352\247U\321\006\265\f\251\330\313\207\335u\377\026\223\362\210\325B$\361\247\t\316\276\351TS\277\334\267/\353\212Sm\355\021\f\201.$*(\357\323\345\372\245m\250\310h\026\217\020\235V\032yu\244\217\274\207Di}\001n\371UD\354`\327\222\215\263\254\251\225\303\334\201\3117jU'9\215\367p\340\027\024{\364S\342\273\205b\225\270C\270\232F\214\216\354\314xtm\225\223\273\272\246TfAX\257\262'\000\227\321\310z8ji\320\351\277Q.\333\2361\300\374\005{\231\006\342A\"\362\027\363\374\210\003\037\370\275\343\354\037DZ\322\252\356\335/<\253\303&v\255\034\350'\325\361\206Uj\325;\013\326t\260\323\330#\342q\212Vtube\005\307\205IN\204gV-\207\366l\321\022\273\276\3068\247\333ae\001\254\370(\264\307\205\327in\370\006\321R\272\276\001\32763\341\234\263&\002E[\244\202s4\027aF\002\300\354\204`\260B\026rM\243\220\001]\371\327\002\360'\245x\\\323\233\316 \314\364A\264\367\215\003\3541\316\2263\310B\002)\377qR\241uq\004g~A> \275i\241y\237\206\323\204\351\306b\000\017\321Mh,\304\tX\307h\b\346\243x{\300REa\20275\f.\371\202\212\337\314V\232p\247\313|\261B\241\307\274\233\221\266\013@v`\246\210\376\333]\223\211\371\253\3025\244\016\320\223\370\317j\376R5\370\353\367V\363CM\022\304\270\366\203\005\336S!{\363Z\026\230Jp\213z3zr\303\326\250\351Y\260\361\033\276\\L.Y\300\030Ot\f\023dp\034\356\242\355s\337yo\360\336b\021\347\213>\306\321\324\205\224\250+\254EV\313\335\212\341.\3167\006J\247\271\2226\027\327+>\225m\231\272\301\305\207\034\021\3507\004\335\314\266\215\372\310\240\024\231\333\324\261\n\221\242\"\n@\222\230\234\035\310Y\177\022J^M\265K\253\f\320\266\276\003%:0\037\227\334\265\240\342\035\326\017\204d\256D.$~s\336\251q\244\215\322\345\211\322\376\354\352\\\255]\020V\024\216\r\261G_,\207>\250%t\030u\224k\231\361P\335\031w\367(N\022/\321/\311<\343\377\226R\212o\252\232\331pk\275\202{\373\013\334\277<\347\254\013U\001\020M\306lcZ\372\016\323\357\013!\330N\252\001T\340\367G<x\\\351\343u\247\024\207q\n\2014\354\372\254e\226\263\343\\S\321\331\250\rM\241A\2479\030\177|\240\0344\250E\020\323P\240\t\022\021H\336\036M\344\221 \211+\352\2032\004F\253\n\355J\223`]\266hk\266\344\244?\205\027VM\250\035\370\271\364\343B\006\344\035\316\216f\235\253`\022%6\363x\316\351\203\256\322\200\031`Bk|+\327\3010\027B\344$Z\007\241\037\370\022\206[\366L\262\374\234R\035\2560I\311'\266\227g\3623\340\336<D\247\244\331|\233\373\261\243}\001\357@\230\026\245\212\350\006\b.A\235N\206\356`\225(\037\216N\255\242\b\212y\221\304\342'*\271\272\362\246\361\242X\313\212\354\327\265\365\333\261tgi\257\020\256e\027\277\326\363\246\221\231)\357\250\340\241m\312\254?\335n\314\260\020\366\277\363*\323X\n\t\375\027\216\224\212\377\334\224\363\357\260\365\007\357LK\374\335\331\234\266\037\n=\370\225\216\371d\025\020\257\275J\017D\244\247LLv\273\3617\276\032\324\032m\235\023U\215\321_\337S\352\355\305m!\211a\310\204,U\370\342\233kt\222\264\233\344\264\365<\3752wj\266\333\202\206\021\267\241\302\035\"3\214\274?\025\005\244\222#\350\325\344J3\245\352?\257\253\017-\203\246;\026\261\005\217\016@\247\362\207M\313)\370#\220\312[\035\307\262\022\020Q\357\351 >t\366,4\275\262\344x\337\026T%k$\251M\221\032\234@\266\357\216\253\213\216T\367\302\266\211\320\032 \303\320\243\253r\226\256\261)\265s$\254\204\241\350\363\304\214V\017<\332\036t\242\220-\327\345\311q\030\373\027\226\211e\210\222\210ez|\246/~\215\336\371\235\373\353~\252\267\352\376\230\033\220\273\3351Vx\205\372\246\036\325e\245>\177\"t*U\3365k\223\\(3\205_'\207\217\225\210:\325V\003F\270s\362\177\2467\361h\363\272*\211\212,\204W\246\020\357\037\320\205-C\260iu+-\233\262\366gj\365\023\202s\374)\016b);\234B_\364\001\305\362\230\242\217{\264\221\272\363I\203\023wqBv/?\313s\232!6\251p\034$\327\324\r\323S\373\016\376\020\001\252\203\323\214#\355\006\245\350c\024]\311\236\252@J2\00486\364H\316\342|Y\264{\306\325\320\334>\005\306C\261\332\201\033\334o\241\032\370\n\005\224\216\206\267\224\335(1\221\351\345\244\020\233&\203\034\031\264\362|\312r}\365c\037\316\324\301\360\243c\037a/\034\375\317\334\362<\247\001J\362\354\214<g9;c\274\001\312\027\206\bAn\227\023\330\205\340\003\005\276\325\202\274\235\247J\321I\275\030N\247\330D\206-K\242+\205Q\235E\234\354\236!\321\016\326\347\370\335E;\363R\202\253\341\223\003\265B\311\345\220\273\312\027\n\260\347b\026\332\270Cb\223;\037uj=\235\f\234\241\373\233\020\347\324:x\ng\022\305\f\342\207\001E}aj\220\305$\213f\200+\373'\332\351A\226\334\371\204\264\366\355-\200`\366\371\261Qd\322\273S8\246\341si9\240\370sx^\262~cU4\343\007\215\350\341#d{H\013\333_^\274j\001\334I\260b\332,=\232\032\316\221\367uk\305\001S\\\334\373\020x\314@\241Av\272)c\033\341\263\271\211\235\n\313\177\310\004\351\251)\364;b\331 (\254D\315\275\237\372EcT3\361\312\272\017)2\327\225@\255Gy\027|\251\300\326\276\324\251Y\177\206]H\314\314\253\216\355Ip\214\356I\0240\037\250tZ\377\277V\362h\\\214/j\\\031\374&\322\0211\377o\354.\203s\267]\302\331\217]X\203\253~\377\305S\3751\310%\3652\320\363t.\244U^\177\267\250|>\272o\262?\3040\022:\315\3535_\345\322\033\316(\205\317\247z^KD\200\263\201[\317c\321\200yf\303Q\0316^U\240\037b2\303\274\005\341\327@4\246\237\303\265j\310\247\372\376\363+G\331\215P\301\217\2074c\205\372Q\271\376\360\366\230O\261\322\330\271\324\000^\223\234\3233\237V\232\277\321n\007O\350\t\2015\270\303\310\000G\354\200/\206\n\310bbL\341B\246\364\372\300X'a\273'\315\275}\275\317\314\351\347\230\234x\227\270\034\3258\200,\335\254\003@\344!\277\303V\275\346c\nG\340x\024\230\004P]\352\356t\254l\340\374\314X\030\313\f\337\002RzR\225\310\353C\f\036\2007\017\375\317\226\203\346\030\247\272\272\346T\217%`\005\323\375\203|$ \337P\351i *\363.\270\306G~\322\315\026t\213\322\221AT\372W\0353\334L\035G\201\034Q.G\266R\351\370\255\344?\023\340\345\230\241c\345\371\330\343\246#w\331\335\017\030X\217\377D^/\234g\216Hv\352\247\352\t\017W"
	.size	core::num::dec2flt::table::POWER_OF_FIVE_128::h0a265520c0249b55, 10416

	.type	.Lanon.5beea011998fea4e4b11a776df4066f0.549,%object
	.section	.rodata..Lanon.5beea011998fea4e4b11a776df4066f0.549,"a",%progbits
.Lanon.5beea011998fea4e4b11a776df4066f0.549:
	.ascii	"Error"
	.size	.Lanon.5beea011998fea4e4b11a776df4066f0.549, 5

	.type	core::unicode::unicode_data::grapheme_extend::SHORT_OFFSET_RUNS::hd7959838885c27b1,%object
	.section	.rodata._ZN4core7unicode12unicode_data15grapheme_extend17SHORT_OFFSET_RUNS17hd7959838885c27b1E,"a",%progbits
	.p2align	2
core::unicode::unicode_data::grapheme_extend::SHORT_OFFSET_RUNS::hd7959838885c27b1:
	.ascii	"\000\003\000\000\203\004 \000\221\005`\000]\023\240\000\022\027 \037\f `\037\357,\240+*0 ,o\246\340,\002\250`-\036\373`.\000\376 6\236\377`6\375\001\3416\001\n!7$\r\3417\253\016a9/\030\24190\034\341G\363\036!L\360j\341OOo!P\235\274\241P\000\317aQe\321\241Q\000\332!R\000\340\341S0\341aU\256\342\241V\320\350\341V \000nW\360\001\377W"
	.size	core::unicode::unicode_data::grapheme_extend::SHORT_OFFSET_RUNS::hd7959838885c27b1, 128

	.type	core::unicode::unicode_data::grapheme_extend::OFFSETS::h1f88919e0ca598ac,%object
	.section	.rodata._ZN4core7unicode12unicode_data15grapheme_extend7OFFSETS17h1f88919e0ca598acE,"a",%progbits
core::unicode::unicode_data::grapheme_extend::OFFSETS::h1f88919e0ca598ac:
	.asciz	"\000p\000\007\000-\001\001\001\002\001\002\001\001H\0130\025\020\001e\007\002\006\002\002\001\004#\001\036\033[\013:\t\t\001\030\004\001\t\001\003\001\005+\003<\b*\030\001 7\001\001\001\004\b\004\001\003\007\n\002\035\001:\001\001\001\002\004\b\001\t\001\n\002\032\001\002\0029\001\004\002\004\002\002\003\003\001\036\002\003\001\013\0029\001\004\005\001\002\004\001\024\002\026\006\001\001:\001\001\002\001\004\b\001\007\003\n\002\036\001;\001\001\001\f\001\t\001(\001\003\0017\001\001\003\005\003\001\004\007\002\013\002\035\001:\001\002\001\002\001\003\001\005\002\007\002\013\002\034\0029\002\001\001\002\004\b\001\t\001\n\002\035\001H\001\004\001\002\003\001\001\b\001Q\001\002\007\f\bb\001\002\t\013\006J\002\033\001\001\001\001\0017\016\001\005\001\002\005\013\001$\t\001f\004\001\006\001\002\002\002\031\002\004\003\020\004\r\001\002\002\006\001\017\001\000\003\000\003\035\002\036\002\036\002@\002\001\007\b\001\002\013\t\001-\003\001\001u\002\"\001v\003\004\002\t\001\006\003\333\002\002\001:\001\001\007\001\001\001\001\002\b\006\n\002\0010\0371\0040\007\001\001\005\001(\t\f\002 \004\002\002\001\0038\001\001\002\003\001\001\003:\b\002\002\230\003\001\r\001\007\004\001\006\001\003\002\306@\000\001\303!\000\003\215\001` \000\006i\002\000\004\001\n \002P\002\000\001\003\001\004\001\031\002\005\001\227\002\032\022\r\001&\b\031\013.\0030\001\002\004\002\002'\001C\006\002\002\002\002\f\001\b\001/\0013\001\001\003\002\002\005\002\001\001*\002\b\001\356\001\002\001\004\001\000\001\000\020\020\020\000\002\000\001\342\001\225\005\000\003\001\002\005\004(\003\004\001\245\002\000\004\000\002\231\0131\004{\0016\017)\001\002\002\n\0031\004\002\002\007\001=\003$\005\001\b>\001\f\0024\t\n\004\002\001_\003\002\001\001\002\006\001\240\001\003\b\025\0029\002\001\001\001\001\026\001\016\007\003\005\303\b\002\003\001\001\027\001Q\001\002\006\001\001\002\001\001\002\001\002\353\001\002\004\006\002\001\002\033\002U\b\002\001\001\002j\001\001\001\002\006\001\001e\003\002\004\001\005\000\t\001\002\365\001\n\002\001\001\004\001\220\004\002\002\004\001 \n(\006\002\004\b\001\t\006\002\003.\r\001\002\000\007\001\006\001\001R\026\002\007\001\002\001\002z\006\003\001\001\002\001\007\001\001H\002\003\001\001\001\000\002\000\005;\007\000\001?\004Q\001\000\002\000.\002\027\000\001\001\003\004\005\b\b\002\007\036\004\224\003\0007\0042\b\001\016\001\026\005\001\017\000\007\001\021\002\007\001\002\001\005\000\007\000\001=\004\000\007m\007\000`\200\360"
	.size	core::unicode::unicode_data::grapheme_extend::OFFSETS::h1f88919e0ca598ac, 707

	.type	CORE_PERIPHERALS,%object
	.section	.rodata.CORE_PERIPHERALS,"a",%progbits
	.globl	CORE_PERIPHERALS
	.p2align	3
CORE_PERIPHERALS:
	.size	CORE_PERIPHERALS, 0

	.type	"error: cortex-m-rt appears more than once in the dependency graph",%object
	.section	".rodata.error: cortex-m-rt appears more than once in the dependency graph","a",%progbits
	.globl	"error: cortex-m-rt appears more than once in the dependency graph"
"error: cortex-m-rt appears more than once in the dependency graph":
	.size	"error: cortex-m-rt appears more than once in the dependency graph", 0

	.type	__RESET_VECTOR,%object
	.section	.vector_table.reset_vector,"a",%progbits
	.globl	__RESET_VECTOR
	.p2align	2
__RESET_VECTOR:
	.long	Reset
	.size	__RESET_VECTOR, 4

	.type	__EXCEPTIONS,%object
	.section	.vector_table.exceptions,"a",%progbits
	.globl	__EXCEPTIONS
	.p2align	2
__EXCEPTIONS:
	.long	NonMaskableInt
	.long	HardFaultTrampoline
	.long	MemoryManagement
	.long	BusFault
	.long	UsageFault
	.zero	16
	.long	SVCall
	.long	DebugMonitor
	.zero	4
	.long	PendSV
	.long	SysTick
	.size	__EXCEPTIONS, 56

	.type	"_defmt_version_ = 3",%object
	.section	.defmt.end,"a",%progbits
	.globl	"_defmt_version_ = 3"
"_defmt_version_ = 3":
	.zero	1
	.size	"_defmt_version_ = 3", 1

	.type	"_defmt_encoding_ = rzcobs",%object
	.globl	"_defmt_encoding_ = rzcobs"
"_defmt_encoding_ = rzcobs":
	.zero	1
	.size	"_defmt_encoding_ = rzcobs", 1

	.type	.Lanon.f2125f0e4e7c810e47e19edfd9da912c.5,%object
	.section	.rodata..Lanon.f2125f0e4e7c810e47e19edfd9da912c.5,"a",%progbits
.Lanon.f2125f0e4e7c810e47e19edfd9da912c.5:
	.byte	255
	.size	.Lanon.f2125f0e4e7c810e47e19edfd9da912c.5, 1

	.type	.Lanon.f2125f0e4e7c810e47e19edfd9da912c.6,%object
	.section	.rodata..Lanon.f2125f0e4e7c810e47e19edfd9da912c.6,"a",%progbits
.Lanon.f2125f0e4e7c810e47e19edfd9da912c.6:
	.ascii	"explicit panic"
	.size	.Lanon.f2125f0e4e7c810e47e19edfd9da912c.6, 14

	.type	.Lanon.f2125f0e4e7c810e47e19edfd9da912c.7,%object
	.section	.rodata..Lanon.f2125f0e4e7c810e47e19edfd9da912c.7,"a",%progbits
.Lanon.f2125f0e4e7c810e47e19edfd9da912c.7:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-0.3.0/src/lib.rs"
	.size	.Lanon.f2125f0e4e7c810e47e19edfd9da912c.7, 83

	.type	.Lanon.f2125f0e4e7c810e47e19edfd9da912c.8,%object
	.section	.rodata..Lanon.f2125f0e4e7c810e47e19edfd9da912c.8,"a",%progbits
	.p2align	2
.Lanon.f2125f0e4e7c810e47e19edfd9da912c.8:
	.long	.Lanon.f2125f0e4e7c810e47e19edfd9da912c.7
	.asciz	"S\000\000\000o\001\000\000\005\000\000"
	.size	.Lanon.f2125f0e4e7c810e47e19edfd9da912c.8, 16

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"Unwrap of a None option value\",\"disambiguator\":\"4025694437884228893\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"Unwrap of a None option value\",\"disambiguator\":\"4025694437884228893\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"Unwrap of a None option value\",\"disambiguator\":\"4025694437884228893\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"Unwrap of a None option value\",\"disambiguator\":\"4025694437884228893\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"Unwrap of a None option value\",\"disambiguator\":\"4025694437884228893\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=__internal_Debug}\",\"disambiguator\":\"14984942746365142769\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=__internal_Debug}\",\"disambiguator\":\"14984942746365142769\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=__internal_Debug}\",\"disambiguator\":\"14984942746365142769\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=__internal_Debug}\",\"disambiguator\":\"14984942746365142769\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=__internal_Debug}\",\"disambiguator\":\"14984942746365142769\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;0]}\",\"disambiguator\":\"6779969984778218899\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;0]}\",\"disambiguator\":\"6779969984778218899\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;0]}\",\"disambiguator\":\"6779969984778218899\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;0]}\",\"disambiguator\":\"6779969984778218899\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;0]}\",\"disambiguator\":\"6779969984778218899\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;1]}\",\"disambiguator\":\"17314251926038434388\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;1]}\",\"disambiguator\":\"17314251926038434388\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;1]}\",\"disambiguator\":\"17314251926038434388\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;1]}\",\"disambiguator\":\"17314251926038434388\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;1]}\",\"disambiguator\":\"17314251926038434388\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;2]}\",\"disambiguator\":\"4097127986128938593\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;2]}\",\"disambiguator\":\"4097127986128938593\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;2]}\",\"disambiguator\":\"4097127986128938593\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;2]}\",\"disambiguator\":\"4097127986128938593\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;2]}\",\"disambiguator\":\"4097127986128938593\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;3]}\",\"disambiguator\":\"755475262366270795\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;3]}\",\"disambiguator\":\"755475262366270795\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;3]}\",\"disambiguator\":\"755475262366270795\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;3]}\",\"disambiguator\":\"755475262366270795\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;3]}\",\"disambiguator\":\"755475262366270795\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;4]}\",\"disambiguator\":\"9730883597340706258\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;4]}\",\"disambiguator\":\"9730883597340706258\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;4]}\",\"disambiguator\":\"9730883597340706258\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;4]}\",\"disambiguator\":\"9730883597340706258\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;4]}\",\"disambiguator\":\"9730883597340706258\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;5]}\",\"disambiguator\":\"560442113099941666\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;5]}\",\"disambiguator\":\"560442113099941666\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;5]}\",\"disambiguator\":\"560442113099941666\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;5]}\",\"disambiguator\":\"560442113099941666\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;5]}\",\"disambiguator\":\"560442113099941666\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;6]}\",\"disambiguator\":\"12429059172692344541\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;6]}\",\"disambiguator\":\"12429059172692344541\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;6]}\",\"disambiguator\":\"12429059172692344541\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;6]}\",\"disambiguator\":\"12429059172692344541\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;6]}\",\"disambiguator\":\"12429059172692344541\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;7]}\",\"disambiguator\":\"11857548816872992476\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;7]}\",\"disambiguator\":\"11857548816872992476\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;7]}\",\"disambiguator\":\"11857548816872992476\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;7]}\",\"disambiguator\":\"11857548816872992476\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;7]}\",\"disambiguator\":\"11857548816872992476\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;8]}\",\"disambiguator\":\"6313330848653225934\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;8]}\",\"disambiguator\":\"6313330848653225934\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;8]}\",\"disambiguator\":\"6313330848653225934\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;8]}\",\"disambiguator\":\"6313330848653225934\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;8]}\",\"disambiguator\":\"6313330848653225934\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;9]}\",\"disambiguator\":\"6042420052648530567\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;9]}\",\"disambiguator\":\"6042420052648530567\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;9]}\",\"disambiguator\":\"6042420052648530567\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;9]}\",\"disambiguator\":\"6042420052648530567\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;9]}\",\"disambiguator\":\"6042420052648530567\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;10]}\",\"disambiguator\":\"16198937410866919349\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;10]}\",\"disambiguator\":\"16198937410866919349\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;10]}\",\"disambiguator\":\"16198937410866919349\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;10]}\",\"disambiguator\":\"16198937410866919349\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;10]}\",\"disambiguator\":\"16198937410866919349\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;11]}\",\"disambiguator\":\"17823205363115242996\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;11]}\",\"disambiguator\":\"17823205363115242996\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;11]}\",\"disambiguator\":\"17823205363115242996\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;11]}\",\"disambiguator\":\"17823205363115242996\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;11]}\",\"disambiguator\":\"17823205363115242996\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;12]}\",\"disambiguator\":\"14316429842788757878\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;12]}\",\"disambiguator\":\"14316429842788757878\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;12]}\",\"disambiguator\":\"14316429842788757878\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;12]}\",\"disambiguator\":\"14316429842788757878\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;12]}\",\"disambiguator\":\"14316429842788757878\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;13]}\",\"disambiguator\":\"922649818642307882\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;13]}\",\"disambiguator\":\"922649818642307882\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;13]}\",\"disambiguator\":\"922649818642307882\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;13]}\",\"disambiguator\":\"922649818642307882\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;13]}\",\"disambiguator\":\"922649818642307882\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;14]}\",\"disambiguator\":\"11630300173297861935\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;14]}\",\"disambiguator\":\"11630300173297861935\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;14]}\",\"disambiguator\":\"11630300173297861935\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;14]}\",\"disambiguator\":\"11630300173297861935\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;14]}\",\"disambiguator\":\"11630300173297861935\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;15]}\",\"disambiguator\":\"961673005826447516\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;15]}\",\"disambiguator\":\"961673005826447516\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;15]}\",\"disambiguator\":\"961673005826447516\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;15]}\",\"disambiguator\":\"961673005826447516\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;15]}\",\"disambiguator\":\"961673005826447516\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;16]}\",\"disambiguator\":\"9351669017836902323\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;16]}\",\"disambiguator\":\"9351669017836902323\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;16]}\",\"disambiguator\":\"9351669017836902323\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;16]}\",\"disambiguator\":\"9351669017836902323\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;16]}\",\"disambiguator\":\"9351669017836902323\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;17]}\",\"disambiguator\":\"8453357149946506516\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;17]}\",\"disambiguator\":\"8453357149946506516\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;17]}\",\"disambiguator\":\"8453357149946506516\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;17]}\",\"disambiguator\":\"8453357149946506516\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;17]}\",\"disambiguator\":\"8453357149946506516\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;18]}\",\"disambiguator\":\"14630721151900870079\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;18]}\",\"disambiguator\":\"14630721151900870079\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;18]}\",\"disambiguator\":\"14630721151900870079\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;18]}\",\"disambiguator\":\"14630721151900870079\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;18]}\",\"disambiguator\":\"14630721151900870079\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;19]}\",\"disambiguator\":\"8042066029762951796\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;19]}\",\"disambiguator\":\"8042066029762951796\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;19]}\",\"disambiguator\":\"8042066029762951796\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;19]}\",\"disambiguator\":\"8042066029762951796\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;19]}\",\"disambiguator\":\"8042066029762951796\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;20]}\",\"disambiguator\":\"9473054874328461955\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;20]}\",\"disambiguator\":\"9473054874328461955\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;20]}\",\"disambiguator\":\"9473054874328461955\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;20]}\",\"disambiguator\":\"9473054874328461955\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;20]}\",\"disambiguator\":\"9473054874328461955\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;21]}\",\"disambiguator\":\"17020301341588653317\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;21]}\",\"disambiguator\":\"17020301341588653317\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;21]}\",\"disambiguator\":\"17020301341588653317\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;21]}\",\"disambiguator\":\"17020301341588653317\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;21]}\",\"disambiguator\":\"17020301341588653317\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;22]}\",\"disambiguator\":\"1088265813215338894\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;22]}\",\"disambiguator\":\"1088265813215338894\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;22]}\",\"disambiguator\":\"1088265813215338894\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;22]}\",\"disambiguator\":\"1088265813215338894\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;22]}\",\"disambiguator\":\"1088265813215338894\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;23]}\",\"disambiguator\":\"7434423136138743525\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;23]}\",\"disambiguator\":\"7434423136138743525\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;23]}\",\"disambiguator\":\"7434423136138743525\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;23]}\",\"disambiguator\":\"7434423136138743525\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;23]}\",\"disambiguator\":\"7434423136138743525\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;24]}\",\"disambiguator\":\"14888748627164924703\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;24]}\",\"disambiguator\":\"14888748627164924703\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;24]}\",\"disambiguator\":\"14888748627164924703\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;24]}\",\"disambiguator\":\"14888748627164924703\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;24]}\",\"disambiguator\":\"14888748627164924703\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;25]}\",\"disambiguator\":\"12614456124590904852\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;25]}\",\"disambiguator\":\"12614456124590904852\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;25]}\",\"disambiguator\":\"12614456124590904852\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;25]}\",\"disambiguator\":\"12614456124590904852\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;25]}\",\"disambiguator\":\"12614456124590904852\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;26]}\",\"disambiguator\":\"9630700529951602745\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;26]}\",\"disambiguator\":\"9630700529951602745\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;26]}\",\"disambiguator\":\"9630700529951602745\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;26]}\",\"disambiguator\":\"9630700529951602745\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;26]}\",\"disambiguator\":\"9630700529951602745\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;27]}\",\"disambiguator\":\"4948511513187851749\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;27]}\",\"disambiguator\":\"4948511513187851749\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;27]}\",\"disambiguator\":\"4948511513187851749\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;27]}\",\"disambiguator\":\"4948511513187851749\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;27]}\",\"disambiguator\":\"4948511513187851749\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;28]}\",\"disambiguator\":\"1862938389895480667\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;28]}\",\"disambiguator\":\"1862938389895480667\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;28]}\",\"disambiguator\":\"1862938389895480667\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;28]}\",\"disambiguator\":\"1862938389895480667\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;28]}\",\"disambiguator\":\"1862938389895480667\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;29]}\",\"disambiguator\":\"7657790649122659948\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;29]}\",\"disambiguator\":\"7657790649122659948\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;29]}\",\"disambiguator\":\"7657790649122659948\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;29]}\",\"disambiguator\":\"7657790649122659948\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;29]}\",\"disambiguator\":\"7657790649122659948\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;30]}\",\"disambiguator\":\"14572096949597087164\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;30]}\",\"disambiguator\":\"14572096949597087164\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;30]}\",\"disambiguator\":\"14572096949597087164\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;30]}\",\"disambiguator\":\"14572096949597087164\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;30]}\",\"disambiguator\":\"14572096949597087164\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;31]}\",\"disambiguator\":\"6019249739288421449\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;31]}\",\"disambiguator\":\"6019249739288421449\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;31]}\",\"disambiguator\":\"6019249739288421449\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;31]}\",\"disambiguator\":\"6019249739288421449\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;31]}\",\"disambiguator\":\"6019249739288421449\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;32]}\",\"disambiguator\":\"4442858809665222661\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;32]}\",\"disambiguator\":\"4442858809665222661\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;32]}\",\"disambiguator\":\"4442858809665222661\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;32]}\",\"disambiguator\":\"4442858809665222661\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;32]}\",\"disambiguator\":\"4442858809665222661\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;64]}\",\"disambiguator\":\"11364546870229079167\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;64]}\",\"disambiguator\":\"11364546870229079167\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;64]}\",\"disambiguator\":\"11364546870229079167\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;64]}\",\"disambiguator\":\"11364546870229079167\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;64]}\",\"disambiguator\":\"11364546870229079167\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;128]}\",\"disambiguator\":\"14242145783693143048\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;128]}\",\"disambiguator\":\"14242145783693143048\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;128]}\",\"disambiguator\":\"14242145783693143048\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;128]}\",\"disambiguator\":\"14242145783693143048\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;128]}\",\"disambiguator\":\"14242145783693143048\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;256]}\",\"disambiguator\":\"4884325239977186802\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;256]}\",\"disambiguator\":\"4884325239977186802\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;256]}\",\"disambiguator\":\"4884325239977186802\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;256]}\",\"disambiguator\":\"4884325239977186802\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;256]}\",\"disambiguator\":\"4884325239977186802\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;512]}\",\"disambiguator\":\"16029985291940891848\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;512]}\",\"disambiguator\":\"16029985291940891848\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;512]}\",\"disambiguator\":\"16029985291940891848\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;512]}\",\"disambiguator\":\"16029985291940891848\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;512]}\",\"disambiguator\":\"16029985291940891848\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;1024]}\",\"disambiguator\":\"13239141268445422424\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;1024]}\",\"disambiguator\":\"13239141268445422424\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;1024]}\",\"disambiguator\":\"13239141268445422424\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;1024]}\",\"disambiguator\":\"13239141268445422424\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;1024]}\",\"disambiguator\":\"13239141268445422424\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;2048]}\",\"disambiguator\":\"13211670622577227583\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;2048]}\",\"disambiguator\":\"13211670622577227583\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;2048]}\",\"disambiguator\":\"13211670622577227583\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;2048]}\",\"disambiguator\":\"13211670622577227583\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;2048]}\",\"disambiguator\":\"13211670622577227583\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;4096]}\",\"disambiguator\":\"8461786311037463272\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;4096]}\",\"disambiguator\":\"8461786311037463272\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;4096]}\",\"disambiguator\":\"8461786311037463272\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;4096]}\",\"disambiguator\":\"8461786311037463272\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;4096]}\",\"disambiguator\":\"8461786311037463272\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;8192]}\",\"disambiguator\":\"11488021059917732957\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;8192]}\",\"disambiguator\":\"11488021059917732957\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;8192]}\",\"disambiguator\":\"11488021059917732957\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;8192]}\",\"disambiguator\":\"11488021059917732957\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;8192]}\",\"disambiguator\":\"11488021059917732957\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;16384]}\",\"disambiguator\":\"1424621482475998034\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;16384]}\",\"disambiguator\":\"1424621482475998034\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;16384]}\",\"disambiguator\":\"1424621482475998034\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;16384]}\",\"disambiguator\":\"1424621482475998034\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;16384]}\",\"disambiguator\":\"1424621482475998034\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;32768]}\",\"disambiguator\":\"10015255989181528901\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;32768]}\",\"disambiguator\":\"10015255989181528901\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;32768]}\",\"disambiguator\":\"10015255989181528901\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;32768]}\",\"disambiguator\":\"10015255989181528901\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;32768]}\",\"disambiguator\":\"10015255989181528901\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;65536]}\",\"disambiguator\":\"8014715528754569063\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;65536]}\",\"disambiguator\":\"8014715528754569063\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;65536]}\",\"disambiguator\":\"8014715528754569063\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;65536]}\",\"disambiguator\":\"8014715528754569063\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;65536]}\",\"disambiguator\":\"8014715528754569063\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;131072]}\",\"disambiguator\":\"14148024183002572784\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;131072]}\",\"disambiguator\":\"14148024183002572784\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;131072]}\",\"disambiguator\":\"14148024183002572784\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;131072]}\",\"disambiguator\":\"14148024183002572784\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;131072]}\",\"disambiguator\":\"14148024183002572784\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;262144]}\",\"disambiguator\":\"9002155039870752947\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;262144]}\",\"disambiguator\":\"9002155039870752947\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;262144]}\",\"disambiguator\":\"9002155039870752947\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;262144]}\",\"disambiguator\":\"9002155039870752947\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;262144]}\",\"disambiguator\":\"9002155039870752947\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;524288]}\",\"disambiguator\":\"11928297886688270020\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;524288]}\",\"disambiguator\":\"11928297886688270020\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;524288]}\",\"disambiguator\":\"11928297886688270020\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;524288]}\",\"disambiguator\":\"11928297886688270020\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;524288]}\",\"disambiguator\":\"11928297886688270020\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;1048576]}\",\"disambiguator\":\"3930909299167072232\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;1048576]}\",\"disambiguator\":\"3930909299167072232\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;1048576]}\",\"disambiguator\":\"3930909299167072232\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;1048576]}\",\"disambiguator\":\"3930909299167072232\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;1048576]}\",\"disambiguator\":\"3930909299167072232\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;2097152]}\",\"disambiguator\":\"15776452471928258256\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;2097152]}\",\"disambiguator\":\"15776452471928258256\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;2097152]}\",\"disambiguator\":\"15776452471928258256\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;2097152]}\",\"disambiguator\":\"15776452471928258256\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;2097152]}\",\"disambiguator\":\"15776452471928258256\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;4194304]}\",\"disambiguator\":\"1682054327314069905\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;4194304]}\",\"disambiguator\":\"1682054327314069905\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;4194304]}\",\"disambiguator\":\"1682054327314069905\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;4194304]}\",\"disambiguator\":\"1682054327314069905\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;4194304]}\",\"disambiguator\":\"1682054327314069905\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;8388608]}\",\"disambiguator\":\"5328971126831910530\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;8388608]}\",\"disambiguator\":\"5328971126831910530\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;8388608]}\",\"disambiguator\":\"5328971126831910530\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;8388608]}\",\"disambiguator\":\"5328971126831910530\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;8388608]}\",\"disambiguator\":\"5328971126831910530\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;16777216]}\",\"disambiguator\":\"8287400483570882276\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;16777216]}\",\"disambiguator\":\"8287400483570882276\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;16777216]}\",\"disambiguator\":\"8287400483570882276\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;16777216]}\",\"disambiguator\":\"8287400483570882276\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;16777216]}\",\"disambiguator\":\"8287400483570882276\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;33554432]}\",\"disambiguator\":\"13548910825227668045\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;33554432]}\",\"disambiguator\":\"13548910825227668045\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;33554432]}\",\"disambiguator\":\"13548910825227668045\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;33554432]}\",\"disambiguator\":\"13548910825227668045\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;33554432]}\",\"disambiguator\":\"13548910825227668045\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;67108864]}\",\"disambiguator\":\"7569589719056587733\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;67108864]}\",\"disambiguator\":\"7569589719056587733\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;67108864]}\",\"disambiguator\":\"7569589719056587733\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;67108864]}\",\"disambiguator\":\"7569589719056587733\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;67108864]}\",\"disambiguator\":\"7569589719056587733\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;134217728]}\",\"disambiguator\":\"806348008920849533\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;134217728]}\",\"disambiguator\":\"806348008920849533\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;134217728]}\",\"disambiguator\":\"806348008920849533\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;134217728]}\",\"disambiguator\":\"806348008920849533\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;134217728]}\",\"disambiguator\":\"806348008920849533\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;268435456]}\",\"disambiguator\":\"17233183494016379626\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;268435456]}\",\"disambiguator\":\"17233183494016379626\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;268435456]}\",\"disambiguator\":\"17233183494016379626\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;268435456]}\",\"disambiguator\":\"17233183494016379626\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;268435456]}\",\"disambiguator\":\"17233183494016379626\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;536870912]}\",\"disambiguator\":\"17192359343498334446\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;536870912]}\",\"disambiguator\":\"17192359343498334446\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;536870912]}\",\"disambiguator\":\"17192359343498334446\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;536870912]}\",\"disambiguator\":\"17192359343498334446\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;536870912]}\",\"disambiguator\":\"17192359343498334446\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;1073741824]}\",\"disambiguator\":\"11224231146575017072\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;1073741824]}\",\"disambiguator\":\"11224231146575017072\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;1073741824]}\",\"disambiguator\":\"11224231146575017072\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;1073741824]}\",\"disambiguator\":\"11224231146575017072\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;1073741824]}\",\"disambiguator\":\"11224231146575017072\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;100]}\",\"disambiguator\":\"3673476673180773997\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;100]}\",\"disambiguator\":\"3673476673180773997\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;100]}\",\"disambiguator\":\"3673476673180773997\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;100]}\",\"disambiguator\":\"3673476673180773997\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;100]}\",\"disambiguator\":\"3673476673180773997\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;1000]}\",\"disambiguator\":\"14466664652971550307\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;1000]}\",\"disambiguator\":\"14466664652971550307\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;1000]}\",\"disambiguator\":\"14466664652971550307\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;1000]}\",\"disambiguator\":\"14466664652971550307\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;1000]}\",\"disambiguator\":\"14466664652971550307\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;10000]}\",\"disambiguator\":\"2218435273322548587\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;10000]}\",\"disambiguator\":\"2218435273322548587\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;10000]}\",\"disambiguator\":\"2218435273322548587\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;10000]}\",\"disambiguator\":\"2218435273322548587\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;10000]}\",\"disambiguator\":\"2218435273322548587\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;100000]}\",\"disambiguator\":\"18254484311801561085\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;100000]}\",\"disambiguator\":\"18254484311801561085\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;100000]}\",\"disambiguator\":\"18254484311801561085\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;100000]}\",\"disambiguator\":\"18254484311801561085\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;100000]}\",\"disambiguator\":\"18254484311801561085\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;1000000]}\",\"disambiguator\":\"16928456770034869520\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;1000000]}\",\"disambiguator\":\"16928456770034869520\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;1000000]}\",\"disambiguator\":\"16928456770034869520\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;1000000]}\",\"disambiguator\":\"16928456770034869520\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;1000000]}\",\"disambiguator\":\"16928456770034869520\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;10000000]}\",\"disambiguator\":\"10944952830191449677\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;10000000]}\",\"disambiguator\":\"10944952830191449677\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;10000000]}\",\"disambiguator\":\"10944952830191449677\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;10000000]}\",\"disambiguator\":\"10944952830191449677\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;10000000]}\",\"disambiguator\":\"10944952830191449677\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;100000000]}\",\"disambiguator\":\"819222621914015239\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;100000000]}\",\"disambiguator\":\"819222621914015239\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;100000000]}\",\"disambiguator\":\"819222621914015239\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;100000000]}\",\"disambiguator\":\"819222621914015239\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;100000000]}\",\"disambiguator\":\"819222621914015239\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;1000000000]}\",\"disambiguator\":\"3884574021230638456\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;1000000000]}\",\"disambiguator\":\"3884574021230638456\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;1000000000]}\",\"disambiguator\":\"3884574021230638456\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;1000000000]}\",\"disambiguator\":\"3884574021230638456\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?;1000000000]}\",\"disambiguator\":\"3884574021230638456\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?]}\",\"disambiguator\":\"16807069391216549562\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?]}\",\"disambiguator\":\"16807069391216549562\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?]}\",\"disambiguator\":\"16807069391216549562\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?]}\",\"disambiguator\":\"16807069391216549562\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?]}\",\"disambiguator\":\"16807069391216549562\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"Layout {{ size: {}, align: {} }}\",\"disambiguator\":\"11457112448454625904\"}",%object
	.section	".defmt.{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"Layout {{ size: {}, align: {} }}\",\"disambiguator\":\"11457112448454625904\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"Layout {{ size: {}, align: {} }}\",\"disambiguator\":\"11457112448454625904\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"Layout {{ size: {}, align: {} }}\",\"disambiguator\":\"11457112448454625904\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"Layout {{ size: {}, align: {} }}\",\"disambiguator\":\"11457112448454625904\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"TryFromSliceError(())\",\"disambiguator\":\"10726039584585047783\"}",%object
	.section	".defmt.{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"TryFromSliceError(())\",\"disambiguator\":\"10726039584585047783\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"TryFromSliceError(())\",\"disambiguator\":\"10726039584585047783\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"TryFromSliceError(())\",\"disambiguator\":\"10726039584585047783\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"TryFromSliceError(())\",\"disambiguator\":\"10726039584585047783\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=i8}\",\"disambiguator\":\"18375507963436018388\"}",%object
	.section	".defmt.{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=i8}\",\"disambiguator\":\"18375507963436018388\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=i8}\",\"disambiguator\":\"18375507963436018388\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=i8}\",\"disambiguator\":\"18375507963436018388\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=i8}\",\"disambiguator\":\"18375507963436018388\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=i16}\",\"disambiguator\":\"3993733328859267767\"}",%object
	.section	".defmt.{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=i16}\",\"disambiguator\":\"3993733328859267767\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=i16}\",\"disambiguator\":\"3993733328859267767\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=i16}\",\"disambiguator\":\"3993733328859267767\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=i16}\",\"disambiguator\":\"3993733328859267767\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=i32}\",\"disambiguator\":\"15300193072970421622\"}",%object
	.section	".defmt.{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=i32}\",\"disambiguator\":\"15300193072970421622\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=i32}\",\"disambiguator\":\"15300193072970421622\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=i32}\",\"disambiguator\":\"15300193072970421622\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=i32}\",\"disambiguator\":\"15300193072970421622\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=i64}\",\"disambiguator\":\"6253616101204189377\"}",%object
	.section	".defmt.{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=i64}\",\"disambiguator\":\"6253616101204189377\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=i64}\",\"disambiguator\":\"6253616101204189377\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=i64}\",\"disambiguator\":\"6253616101204189377\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=i64}\",\"disambiguator\":\"6253616101204189377\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=i128}\",\"disambiguator\":\"13154497395711453522\"}",%object
	.section	".defmt.{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=i128}\",\"disambiguator\":\"13154497395711453522\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=i128}\",\"disambiguator\":\"13154497395711453522\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=i128}\",\"disambiguator\":\"13154497395711453522\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=i128}\",\"disambiguator\":\"13154497395711453522\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=isize}\",\"disambiguator\":\"4123638897610528758\"}",%object
	.section	".defmt.{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=isize}\",\"disambiguator\":\"4123638897610528758\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=isize}\",\"disambiguator\":\"4123638897610528758\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=isize}\",\"disambiguator\":\"4123638897610528758\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=isize}\",\"disambiguator\":\"4123638897610528758\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=u8}\",\"disambiguator\":\"9021652717390967558\"}",%object
	.section	".defmt.{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=u8}\",\"disambiguator\":\"9021652717390967558\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=u8}\",\"disambiguator\":\"9021652717390967558\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=u8}\",\"disambiguator\":\"9021652717390967558\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=u8}\",\"disambiguator\":\"9021652717390967558\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=u16}\",\"disambiguator\":\"12692326424872274800\"}",%object
	.section	".defmt.{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=u16}\",\"disambiguator\":\"12692326424872274800\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=u16}\",\"disambiguator\":\"12692326424872274800\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=u16}\",\"disambiguator\":\"12692326424872274800\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=u16}\",\"disambiguator\":\"12692326424872274800\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=u32}\",\"disambiguator\":\"8184056094656129351\"}",%object
	.section	".defmt.{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=u32}\",\"disambiguator\":\"8184056094656129351\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=u32}\",\"disambiguator\":\"8184056094656129351\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=u32}\",\"disambiguator\":\"8184056094656129351\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=u32}\",\"disambiguator\":\"8184056094656129351\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=u64}\",\"disambiguator\":\"13801678124804847112\"}",%object
	.section	".defmt.{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=u64}\",\"disambiguator\":\"13801678124804847112\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=u64}\",\"disambiguator\":\"13801678124804847112\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=u64}\",\"disambiguator\":\"13801678124804847112\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=u64}\",\"disambiguator\":\"13801678124804847112\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=u128}\",\"disambiguator\":\"1481970295109715972\"}",%object
	.section	".defmt.{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=u128}\",\"disambiguator\":\"1481970295109715972\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=u128}\",\"disambiguator\":\"1481970295109715972\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=u128}\",\"disambiguator\":\"1481970295109715972\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=u128}\",\"disambiguator\":\"1481970295109715972\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=usize}\",\"disambiguator\":\"10830836714375516743\"}",%object
	.section	".defmt.{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=usize}\",\"disambiguator\":\"10830836714375516743\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=usize}\",\"disambiguator\":\"10830836714375516743\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=usize}\",\"disambiguator\":\"10830836714375516743\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{=usize}\",\"disambiguator\":\"10830836714375516743\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"TryFromIntError(())\",\"disambiguator\":\"4791632537192768392\"}",%object
	.section	".defmt.{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"TryFromIntError(())\",\"disambiguator\":\"4791632537192768392\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"TryFromIntError(())\",\"disambiguator\":\"4791632537192768392\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"TryFromIntError(())\",\"disambiguator\":\"4791632537192768392\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"TryFromIntError(())\",\"disambiguator\":\"4791632537192768392\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{}..{}\",\"disambiguator\":\"13088046426575457180\"}",%object
	.section	".defmt.{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{}..{}\",\"disambiguator\":\"13088046426575457180\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{}..{}\",\"disambiguator\":\"13088046426575457180\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{}..{}\",\"disambiguator\":\"13088046426575457180\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{}..{}\",\"disambiguator\":\"13088046426575457180\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{}..\",\"disambiguator\":\"5409201822279259888\"}",%object
	.section	".defmt.{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{}..\",\"disambiguator\":\"5409201822279259888\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{}..\",\"disambiguator\":\"5409201822279259888\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{}..\",\"disambiguator\":\"5409201822279259888\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{}..\",\"disambiguator\":\"5409201822279259888\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"..\",\"disambiguator\":\"17012541085601014293\"}",%object
	.section	".defmt.{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"..\",\"disambiguator\":\"17012541085601014293\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"..\",\"disambiguator\":\"17012541085601014293\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"..\",\"disambiguator\":\"17012541085601014293\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"..\",\"disambiguator\":\"17012541085601014293\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{}..={}\",\"disambiguator\":\"6475246940016685048\"}",%object
	.section	".defmt.{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{}..={}\",\"disambiguator\":\"6475246940016685048\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{}..={}\",\"disambiguator\":\"6475246940016685048\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{}..={}\",\"disambiguator\":\"6475246940016685048\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{}..={}\",\"disambiguator\":\"6475246940016685048\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"..{}\",\"disambiguator\":\"6089353378847669125\"}",%object
	.section	".defmt.{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"..{}\",\"disambiguator\":\"6089353378847669125\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"..{}\",\"disambiguator\":\"6089353378847669125\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"..{}\",\"disambiguator\":\"6089353378847669125\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"..{}\",\"disambiguator\":\"6089353378847669125\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"..={}\",\"disambiguator\":\"6775466848670196296\"}",%object
	.section	".defmt.{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"..={}\",\"disambiguator\":\"6775466848670196296\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"..={}\",\"disambiguator\":\"6775466848670196296\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"..={}\",\"disambiguator\":\"6775466848670196296\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"..={}\",\"disambiguator\":\"6775466848670196296\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"ChunksExact(..)\",\"disambiguator\":\"15512328491876242683\"}",%object
	.section	".defmt.{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"ChunksExact(..)\",\"disambiguator\":\"15512328491876242683\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"ChunksExact(..)\",\"disambiguator\":\"15512328491876242683\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"ChunksExact(..)\",\"disambiguator\":\"15512328491876242683\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"ChunksExact(..)\",\"disambiguator\":\"15512328491876242683\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"Iter {{ slice: {=[?]}, position: ? }}\",\"disambiguator\":\"4021258244326384918\"}",%object
	.section	".defmt.{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"Iter {{ slice: {=[?]}, position: ? }}\",\"disambiguator\":\"4021258244326384918\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"Iter {{ slice: {=[?]}, position: ? }}\",\"disambiguator\":\"4021258244326384918\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"Iter {{ slice: {=[?]}, position: ? }}\",\"disambiguator\":\"4021258244326384918\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"Iter {{ slice: {=[?]}, position: ? }}\",\"disambiguator\":\"4021258244326384918\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"Windows(..)\",\"disambiguator\":\"10945514597346581973\"}",%object
	.section	".defmt.{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"Windows(..)\",\"disambiguator\":\"10945514597346581973\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"Windows(..)\",\"disambiguator\":\"10945514597346581973\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"Windows(..)\",\"disambiguator\":\"10945514597346581973\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"Windows(..)\",\"disambiguator\":\"10945514597346581973\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"None|Some({=?})\",\"disambiguator\":\"11173618854003648426\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"None|Some({=?})\",\"disambiguator\":\"11173618854003648426\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"None|Some({=?})\",\"disambiguator\":\"11173618854003648426\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"None|Some({=?})\",\"disambiguator\":\"11173618854003648426\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"None|Some({=?})\",\"disambiguator\":\"11173618854003648426\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"Err({=?})|Ok({=?})\",\"disambiguator\":\"9988302272461678251\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"Err({=?})|Ok({=?})\",\"disambiguator\":\"9988302272461678251\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"Err({=?})|Ok({=?})\",\"disambiguator\":\"9988302272461678251\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"Err({=?})|Ok({=?})\",\"disambiguator\":\"9988302272461678251\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"Err({=?})|Ok({=?})\",\"disambiguator\":\"9988302272461678251\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"PhantomData\",\"disambiguator\":\"11759817271520571220\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"PhantomData\",\"disambiguator\":\"11759817271520571220\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"PhantomData\",\"disambiguator\":\"11759817271520571220\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"PhantomData\",\"disambiguator\":\"11759817271520571220\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"PhantomData\",\"disambiguator\":\"11759817271520571220\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"Duration {{ secs: {=u64}, nanos: {=u32} }}\",\"disambiguator\":\"17734780464383736929\"}",%object
	.section	".defmt.{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"Duration {{ secs: {=u64}, nanos: {=u32} }}\",\"disambiguator\":\"17734780464383736929\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"Duration {{ secs: {=u64}, nanos: {=u32} }}\",\"disambiguator\":\"17734780464383736929\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"Duration {{ secs: {=u64}, nanos: {=u32} }}\",\"disambiguator\":\"17734780464383736929\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"Duration {{ secs: {=u64}, nanos: {=u32} }}\",\"disambiguator\":\"17734780464383736929\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"Zip(..)\",\"disambiguator\":\"11608962121371413646\"}",%object
	.section	".defmt.{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"Zip(..)\",\"disambiguator\":\"11608962121371413646\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"Zip(..)\",\"disambiguator\":\"11608962121371413646\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"Zip(..)\",\"disambiguator\":\"11608962121371413646\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"Zip(..)\",\"disambiguator\":\"11608962121371413646\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=i8}\",\"disambiguator\":\"17486739434049326467\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=i8}\",\"disambiguator\":\"17486739434049326467\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=i8}\",\"disambiguator\":\"17486739434049326467\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=i8}\",\"disambiguator\":\"17486739434049326467\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=i8}\",\"disambiguator\":\"17486739434049326467\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=i16}\",\"disambiguator\":\"10726338866268439499\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=i16}\",\"disambiguator\":\"10726338866268439499\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=i16}\",\"disambiguator\":\"10726338866268439499\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=i16}\",\"disambiguator\":\"10726338866268439499\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=i16}\",\"disambiguator\":\"10726338866268439499\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=i32}\",\"disambiguator\":\"7625360834307612502\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=i32}\",\"disambiguator\":\"7625360834307612502\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=i32}\",\"disambiguator\":\"7625360834307612502\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=i32}\",\"disambiguator\":\"7625360834307612502\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=i32}\",\"disambiguator\":\"7625360834307612502\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=i64}\",\"disambiguator\":\"9926281272095443501\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=i64}\",\"disambiguator\":\"9926281272095443501\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=i64}\",\"disambiguator\":\"9926281272095443501\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=i64}\",\"disambiguator\":\"9926281272095443501\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=i64}\",\"disambiguator\":\"9926281272095443501\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=i128}\",\"disambiguator\":\"2328289748313284024\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=i128}\",\"disambiguator\":\"2328289748313284024\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=i128}\",\"disambiguator\":\"2328289748313284024\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=i128}\",\"disambiguator\":\"2328289748313284024\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=i128}\",\"disambiguator\":\"2328289748313284024\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=isize}\",\"disambiguator\":\"17503738105349655007\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=isize}\",\"disambiguator\":\"17503738105349655007\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=isize}\",\"disambiguator\":\"17503738105349655007\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=isize}\",\"disambiguator\":\"17503738105349655007\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=isize}\",\"disambiguator\":\"17503738105349655007\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=u8}\",\"disambiguator\":\"7669804997276268660\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=u8}\",\"disambiguator\":\"7669804997276268660\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=u8}\",\"disambiguator\":\"7669804997276268660\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=u8}\",\"disambiguator\":\"7669804997276268660\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=u8}\",\"disambiguator\":\"7669804997276268660\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=u16}\",\"disambiguator\":\"13308751778170189519\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=u16}\",\"disambiguator\":\"13308751778170189519\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=u16}\",\"disambiguator\":\"13308751778170189519\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=u16}\",\"disambiguator\":\"13308751778170189519\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=u16}\",\"disambiguator\":\"13308751778170189519\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=u32}\",\"disambiguator\":\"5695562250973843400\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=u32}\",\"disambiguator\":\"5695562250973843400\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=u32}\",\"disambiguator\":\"5695562250973843400\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=u32}\",\"disambiguator\":\"5695562250973843400\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=u32}\",\"disambiguator\":\"5695562250973843400\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=u64}\",\"disambiguator\":\"9676746904310327727\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=u64}\",\"disambiguator\":\"9676746904310327727\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=u64}\",\"disambiguator\":\"9676746904310327727\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=u64}\",\"disambiguator\":\"9676746904310327727\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=u64}\",\"disambiguator\":\"9676746904310327727\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=u128}\",\"disambiguator\":\"17220985284962203734\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=u128}\",\"disambiguator\":\"17220985284962203734\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=u128}\",\"disambiguator\":\"17220985284962203734\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=u128}\",\"disambiguator\":\"17220985284962203734\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=u128}\",\"disambiguator\":\"17220985284962203734\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=usize}\",\"disambiguator\":\"537013311171971803\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=usize}\",\"disambiguator\":\"537013311171971803\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=usize}\",\"disambiguator\":\"537013311171971803\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=usize}\",\"disambiguator\":\"537013311171971803\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=usize}\",\"disambiguator\":\"537013311171971803\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=f32}\",\"disambiguator\":\"10578363905863365291\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=f32}\",\"disambiguator\":\"10578363905863365291\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=f32}\",\"disambiguator\":\"10578363905863365291\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=f32}\",\"disambiguator\":\"10578363905863365291\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=f32}\",\"disambiguator\":\"10578363905863365291\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=f64}\",\"disambiguator\":\"10089268207756982403\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=f64}\",\"disambiguator\":\"10089268207756982403\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=f64}\",\"disambiguator\":\"10089268207756982403\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=f64}\",\"disambiguator\":\"10089268207756982403\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=f64}\",\"disambiguator\":\"10089268207756982403\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=str}\",\"disambiguator\":\"1045110108756906471\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=str}\",\"disambiguator\":\"1045110108756906471\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=str}\",\"disambiguator\":\"1045110108756906471\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=str}\",\"disambiguator\":\"1045110108756906471\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=str}\",\"disambiguator\":\"1045110108756906471\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=bool}\",\"disambiguator\":\"15776407386901813238\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=bool}\",\"disambiguator\":\"15776407386901813238\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=bool}\",\"disambiguator\":\"15776407386901813238\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=bool}\",\"disambiguator\":\"15776407386901813238\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=bool}\",\"disambiguator\":\"15776407386901813238\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=istr}\",\"disambiguator\":\"7551301066159731031\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=istr}\",\"disambiguator\":\"7551301066159731031\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=istr}\",\"disambiguator\":\"7551301066159731031\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=istr}\",\"disambiguator\":\"7551301066159731031\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=istr}\",\"disambiguator\":\"7551301066159731031\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=char}\",\"disambiguator\":\"6172729115184770104\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=char}\",\"disambiguator\":\"6172729115184770104\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=char}\",\"disambiguator\":\"6172729115184770104\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=char}\",\"disambiguator\":\"6172729115184770104\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=char}\",\"disambiguator\":\"6172729115184770104\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?]}\",\"disambiguator\":\"15590890374740602665\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?]}\",\"disambiguator\":\"15590890374740602665\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?]}\",\"disambiguator\":\"15590890374740602665\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?]}\",\"disambiguator\":\"15590890374740602665\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=[?]}\",\"disambiguator\":\"15590890374740602665\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{:x}\",\"disambiguator\":\"8670884793995213051\"}",%object
	.section	".defmt.{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{:x}\",\"disambiguator\":\"8670884793995213051\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{:x}\",\"disambiguator\":\"8670884793995213051\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{:x}\",\"disambiguator\":\"8670884793995213051\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_write\",\"data\":\"{:x}\",\"disambiguator\":\"8670884793995213051\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"()\",\"disambiguator\":\"11374656303578550604\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"()\",\"disambiguator\":\"11374656303578550604\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"()\",\"disambiguator\":\"11374656303578550604\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"()\",\"disambiguator\":\"11374656303578550604\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"()\",\"disambiguator\":\"11374656303578550604\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?})\",\"disambiguator\":\"6878008354095212903\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?})\",\"disambiguator\":\"6878008354095212903\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?})\",\"disambiguator\":\"6878008354095212903\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?})\",\"disambiguator\":\"6878008354095212903\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?})\",\"disambiguator\":\"6878008354095212903\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?})\",\"disambiguator\":\"11961651545128696062\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?})\",\"disambiguator\":\"11961651545128696062\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?})\",\"disambiguator\":\"11961651545128696062\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?})\",\"disambiguator\":\"11961651545128696062\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?})\",\"disambiguator\":\"11961651545128696062\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?})\",\"disambiguator\":\"6708090862713608384\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?})\",\"disambiguator\":\"6708090862713608384\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?})\",\"disambiguator\":\"6708090862713608384\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?})\",\"disambiguator\":\"6708090862713608384\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?})\",\"disambiguator\":\"6708090862713608384\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"6748191133026501407\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"6748191133026501407\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"6748191133026501407\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"6748191133026501407\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"6748191133026501407\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"9483107963756829803\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"9483107963756829803\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"9483107963756829803\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"9483107963756829803\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"9483107963756829803\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"3710324503906628225\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"3710324503906628225\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"3710324503906628225\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"3710324503906628225\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"3710324503906628225\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"11927394754440105311\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"11927394754440105311\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"11927394754440105311\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"11927394754440105311\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"11927394754440105311\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"2691326729394351690\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"2691326729394351690\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"2691326729394351690\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"2691326729394351690\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"2691326729394351690\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"3347895889296378889\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"3347895889296378889\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"3347895889296378889\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"3347895889296378889\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"3347895889296378889\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"8559898247285054225\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"8559898247285054225\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"8559898247285054225\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"8559898247285054225\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"8559898247285054225\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"14896732426258144962\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"14896732426258144962\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"14896732426258144962\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"14896732426258144962\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"14896732426258144962\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"2057735375326358752\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"2057735375326358752\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"2057735375326358752\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"2057735375326358752\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"({=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?}, {=?})\",\"disambiguator\":\"2057735375326358752\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=__internal_FormatSequence}\",\"disambiguator\":\"5979353961022476528\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=__internal_FormatSequence}\",\"disambiguator\":\"5979353961022476528\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=__internal_FormatSequence}\",\"disambiguator\":\"5979353961022476528\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=__internal_FormatSequence}\",\"disambiguator\":\"5979353961022476528\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=__internal_FormatSequence}\",\"disambiguator\":\"5979353961022476528\"}", 1

	.type	.Lanon.f2125f0e4e7c810e47e19edfd9da912c.10,%object
	.section	.rodata..Lanon.f2125f0e4e7c810e47e19edfd9da912c.10,"a",%progbits
	.p2align	2
.Lanon.f2125f0e4e7c810e47e19edfd9da912c.10:
	.long	core::ptr::drop_in_place<bool>::h0b92a80a750bd66f
	.asciz	"\004\000\000\000\004\000\000"
	.long	<&mut W as core::fmt::Write>::write_str::hc08c0a6398143c4f
	.long	<&mut W as core::fmt::Write>::write_char::hb8314b2848965858
	.long	<&mut W as core::fmt::Write>::write_fmt::h87864b847c528cef
	.size	.Lanon.f2125f0e4e7c810e47e19edfd9da912c.10, 24

	.type	.Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.0,%object
	.section	.rodata..Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.0,"a",%progbits
.Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.0:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-rtt-0.3.1/src/channel.rs"
	.size	.Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.0, 91

	.type	.Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.1,%object
	.section	.rodata..Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.1,"a",%progbits
	.p2align	2
.Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.1:
	.long	.Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.0
	.asciz	"[\000\000\000!\000\000\000\032\000\000"
	.size	.Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.1, 16

	.type	.Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.2,%object
	.section	.rodata..Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.2,"a",%progbits
.Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.2:
	.ascii	"defmt logger taken reentrantly"
	.size	.Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.2, 30

	.type	.Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.3,%object
	.section	.rodata..Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.3,"a",%progbits
	.p2align	2
.Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.3:
	.long	.Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.2
	.asciz	"\036\000\000"
	.size	.Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.3, 8

	.type	.Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.5,%object
	.section	.rodata..Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.5,"a",%progbits
.Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.5:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/defmt-rtt-0.3.1/src/lib.rs"
	.size	.Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.5, 87

	.type	.Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.6,%object
	.section	.rodata..Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.6,"a",%progbits
	.p2align	2
.Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.6:
	.long	.Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.5
	.asciz	"W\000\000\0003\000\000\000\r\000\000"
	.size	.Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.6, 16

	.type	.Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.7,%object
	.section	.rodata..Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.7,"a",%progbits
.Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.7:
	.asciz	"defmt"
	.size	.Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.7, 6

	.type	_SEGGER_RTT,%object
	.section	.data._SEGGER_RTT,"aw",%progbits
	.globl	_SEGGER_RTT
	.p2align	2
_SEGGER_RTT:
	.asciz	"SEGGER RTT\000\000\000\000\000\000\001\000\000\000\000\000\000"
	.long	.Lanon.7d21d2d6a213c849a87c01ff3f05dc9a.7
	.long	defmt_rtt::handle::BUFFER::hde11259d09aa9754
	.asciz	"\000\004\000\000\000\000\000\000\000\000\000\000\001\000\000"
	.size	_SEGGER_RTT, 48

	.type	defmt_rtt::handle::BUFFER::hde11259d09aa9754,%object
	.section	".uninit.defmt-rtt.BUFFER","aw",%progbits
defmt_rtt::handle::BUFFER::hde11259d09aa9754:
	.zero	1024
	.size	defmt_rtt::handle::BUFFER::hde11259d09aa9754, 1024

	.type	str.0.833,%object
	.section	.rodata.str.0.833,"a",%progbits
	.p2align	4
str.0.833:
	.ascii	"attempt to divide by zero"
	.size	str.0.833, 25

	.type	.Lanon.12fdbf64440a522ae100401431f72384.23,%object
	.section	.rodata..Lanon.12fdbf64440a522ae100401431f72384.23,"a",%progbits
.Lanon.12fdbf64440a522ae100401431f72384.23:
	.ascii	"NotRunning"
	.size	.Lanon.12fdbf64440a522ae100401431f72384.23, 10

	.type	.Lanon.12fdbf64440a522ae100401431f72384.24,%object
	.section	.rodata..Lanon.12fdbf64440a522ae100401431f72384.24,"a",%progbits
.Lanon.12fdbf64440a522ae100401431f72384.24:
	.ascii	"Unspecified"
	.size	.Lanon.12fdbf64440a522ae100401431f72384.24, 11

	.type	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.2,%object
	.section	.rodata..Lanon.df8ce4529e13d3933241d72a4ca2f01e.2,"a",%progbits
.Lanon.df8ce4529e13d3933241d72a4ca2f01e.2:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-json-core-0.4.0/src/de/mod.rs"
	.size	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.2, 96

	.type	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.5,%object
	.section	.rodata..Lanon.df8ce4529e13d3933241d72a4ca2f01e.5,"a",%progbits
	.p2align	2
.Lanon.df8ce4529e13d3933241d72a4ca2f01e.5:
	.long	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.2
	.asciz	"`\000\000\000\253\001\000\000\t\000\000"
	.size	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.5, 16

	.type	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.8,%object
	.section	.rodata..Lanon.df8ce4529e13d3933241d72a4ca2f01e.8,"a",%progbits
	.p2align	2
.Lanon.df8ce4529e13d3933241d72a4ca2f01e.8:
	.long	core::ptr::drop_in_place<bool>::h0b92a80a750bd66f
	.asciz	"\004\000\000\000\004\000\000"
	.long	<&T as core::fmt::Debug>::fmt::h735aeb6e09b54eef
	.size	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.8, 16

	.type	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.10,%object
	.section	.rodata.cst8,"aM",%progbits,8
.Lanon.df8ce4529e13d3933241d72a4ca2f01e.10:
	.ascii	"BadIndex"
	.size	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.10, 8

	.type	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.11,%object
	.section	.rodata..Lanon.df8ce4529e13d3933241d72a4ca2f01e.11,"a",%progbits
.Lanon.df8ce4529e13d3933241d72a4ca2f01e.11:
	.ascii	"SerializationFailed"
	.size	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.11, 19

	.type	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.12,%object
	.section	.rodata..Lanon.df8ce4529e13d3933241d72a4ca2f01e.12,"a",%progbits
.Lanon.df8ce4529e13d3933241d72a4ca2f01e.12:
	.ascii	"Deserialization"
	.size	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.12, 15

	.type	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.13,%object
	.section	.rodata..Lanon.df8ce4529e13d3933241d72a4ca2f01e.13,"a",%progbits
	.p2align	2
.Lanon.df8ce4529e13d3933241d72a4ca2f01e.13:
	.long	core::ptr::drop_in_place<bool>::h0b92a80a750bd66f
	.asciz	"\004\000\000\000\004\000\000"
	.long	<&T as core::fmt::Debug>::fmt::ha689d2505e3cdc38
	.size	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.13, 16

	.type	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.14,%object
	.section	.rodata..Lanon.df8ce4529e13d3933241d72a4ca2f01e.14,"a",%progbits
.Lanon.df8ce4529e13d3933241d72a4ca2f01e.14:
	.ascii	"AtomicUpdateRequired"
	.size	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.14, 20

	.type	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.15,%object
	.section	.rodata..Lanon.df8ce4529e13d3933241d72a4ca2f01e.15,"a",%progbits
.Lanon.df8ce4529e13d3933241d72a4ca2f01e.15:
	.ascii	"PathTooShort"
	.size	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.15, 12

	.type	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.16,%object
	.section	.rodata..Lanon.df8ce4529e13d3933241d72a4ca2f01e.16,"a",%progbits
.Lanon.df8ce4529e13d3933241d72a4ca2f01e.16:
	.ascii	"PathTooLong"
	.size	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.16, 11

	.type	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.17,%object
	.section	.rodata..Lanon.df8ce4529e13d3933241d72a4ca2f01e.17,"a",%progbits
.Lanon.df8ce4529e13d3933241d72a4ca2f01e.17:
	.ascii	"PathNotFound"
	.size	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.17, 12

	.type	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.18,%object
	.section	.rodata..Lanon.df8ce4529e13d3933241d72a4ca2f01e.18,"a",%progbits
.Lanon.df8ce4529e13d3933241d72a4ca2f01e.18:
	.ascii	"InsufficientTopicLength"
	.size	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.18, 23

	.type	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.19,%object
	.section	.rodata..Lanon.df8ce4529e13d3933241d72a4ca2f01e.19,"a",%progbits
.Lanon.df8ce4529e13d3933241d72a4ca2f01e.19:
	.ascii	"InsufficientStateDepth"
	.size	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.19, 22

	.type	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.20,%object
	.section	.rodata..Lanon.df8ce4529e13d3933241d72a4ca2f01e.20,"a",%progbits
.Lanon.df8ce4529e13d3933241d72a4ca2f01e.20:
	.ascii	"\000\003\006\t\r\020\023\027\032\035!$'+.158;"
	.size	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.20, 19

	.type	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.21,%object
	.section	.rodata..Lanon.df8ce4529e13d3933241d72a4ca2f01e.21,"a",%progbits
	.p2align	3
.Lanon.df8ce4529e13d3933241d72a4ca2f01e.21:
	.asciz	"\001\000\000\000\000\000\000\000\n\000\000\000\000\000\000\000d\000\000\000\000\000\000\000\350\003\000\000\000\000\000\000\020'\000\000\000\000\000\000\240\206\001\000\000\000\000\000@B\017\000\000\000\000\000\200\226\230\000\000\000\000\000\000\341\365\005\000\000\000\000\000\312\232;\000\000\000\000\000\344\013T\002\000\000\000\000\350vH\027\000\000\000\000\020\245\324\350\000\000\000\000\240rN\030\t\000\000\000@z\020\363Z\000\000\000\200\306\244~\215\003"
	.size	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.21, 128

	.type	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.23,%object
	.section	.rodata..Lanon.df8ce4529e13d3933241d72a4ca2f01e.23,"a",%progbits
	.p2align	2
.Lanon.df8ce4529e13d3933241d72a4ca2f01e.23:
	.long	core::ptr::drop_in_place<bool>::h0b92a80a750bd66f
	.asciz	"\004\000\000\000\004\000\000"
	.long	<&mut W as core::fmt::Write>::write_str::h76dae6f71e4f6d54
	.long	<&mut W as core::fmt::Write>::write_char::hc6b40de4bedd7834
	.long	<&mut W as core::fmt::Write>::write_fmt::h33cd034270471a6d
	.size	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.23, 24

	.type	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.29,%object
	.section	.rodata..Lanon.df8ce4529e13d3933241d72a4ca2f01e.29,"a",%progbits
.Lanon.df8ce4529e13d3933241d72a4ca2f01e.29:
	.ascii	"/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/str/pattern.rs"
	.size	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.29, 79

	.type	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.30,%object
	.section	.rodata..Lanon.df8ce4529e13d3933241d72a4ca2f01e.30,"a",%progbits
	.p2align	2
.Lanon.df8ce4529e13d3933241d72a4ca2f01e.30:
	.long	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.29
	.asciz	"O\000\000\000\267\001\000\000&\000\000"
	.size	.Lanon.df8ce4529e13d3933241d72a4ca2f01e.30, 16

	.type	.Lanon.1dae7de82751de57b633ec762d574f68.0,%object
	.section	.rodata..Lanon.1dae7de82751de57b633ec762d574f68.0,"a",%progbits
.Lanon.1dae7de82751de57b633ec762d574f68.0:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/bit_field-0.10.1/src/lib.rs"
	.size	.Lanon.1dae7de82751de57b633ec762d574f68.0, 88

	.type	.Lanon.1dae7de82751de57b633ec762d574f68.1,%object
	.section	.rodata..Lanon.1dae7de82751de57b633ec762d574f68.1,"a",%progbits
	.p2align	2
.Lanon.1dae7de82751de57b633ec762d574f68.1:
	.long	.Lanon.1dae7de82751de57b633ec762d574f68.0
	.asciz	"X\000\000\000\021\001\000\000\001\000\000"
	.size	.Lanon.1dae7de82751de57b633ec762d574f68.1, 16

	.type	.Lanon.1dae7de82751de57b633ec762d574f68.2,%object
	.section	.rodata..Lanon.1dae7de82751de57b633ec762d574f68.2,"a",%progbits
.Lanon.1dae7de82751de57b633ec762d574f68.2:
	.ascii	"value does not fit into bit range"
	.size	.Lanon.1dae7de82751de57b633ec762d574f68.2, 33

	.type	.Lanon.1dae7de82751de57b633ec762d574f68.3,%object
	.section	.rodata..Lanon.1dae7de82751de57b633ec762d574f68.3,"a",%progbits
.Lanon.1dae7de82751de57b633ec762d574f68.3:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/minimq-0.5.2/src/ser/packet_writer.rs"
	.size	.Lanon.1dae7de82751de57b633ec762d574f68.3, 98

	.type	.Lanon.1dae7de82751de57b633ec762d574f68.4,%object
	.section	.rodata..Lanon.1dae7de82751de57b633ec762d574f68.4,"a",%progbits
	.p2align	2
.Lanon.1dae7de82751de57b633ec762d574f68.4:
	.long	.Lanon.1dae7de82751de57b633ec762d574f68.3
	.asciz	"b\000\000\000*\000\000\000\t\000\000"
	.size	.Lanon.1dae7de82751de57b633ec762d574f68.4, 16

	.type	.Lanon.1dae7de82751de57b633ec762d574f68.5,%object
	.section	.rodata..Lanon.1dae7de82751de57b633ec762d574f68.5,"a",%progbits
	.p2align	2
.Lanon.1dae7de82751de57b633ec762d574f68.5:
	.long	.Lanon.1dae7de82751de57b633ec762d574f68.3
	.asciz	"b\000\000\000\254\000\000\000\021\000\000"
	.size	.Lanon.1dae7de82751de57b633ec762d574f68.5, 16

	.type	.Lanon.1dae7de82751de57b633ec762d574f68.6,%object
	.section	.rodata..Lanon.1dae7de82751de57b633ec762d574f68.6,"a",%progbits
	.p2align	2
.Lanon.1dae7de82751de57b633ec762d574f68.6:
	.long	.Lanon.1dae7de82751de57b633ec762d574f68.3
	.asciz	"b\000\000\000\261\000\000\000\n\000\000"
	.size	.Lanon.1dae7de82751de57b633ec762d574f68.6, 16

	.type	.Lanon.1dae7de82751de57b633ec762d574f68.7,%object
	.section	.rodata..Lanon.1dae7de82751de57b633ec762d574f68.7,"a",%progbits
.Lanon.1dae7de82751de57b633ec762d574f68.7:
	.ascii	"Invalid integer"
	.size	.Lanon.1dae7de82751de57b633ec762d574f68.7, 15

	.type	.Lanon.1dae7de82751de57b633ec762d574f68.8,%object
	.section	.rodata..Lanon.1dae7de82751de57b633ec762d574f68.8,"a",%progbits
.Lanon.1dae7de82751de57b633ec762d574f68.8:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/minimq-0.5.2/src/ser/serialize.rs"
	.size	.Lanon.1dae7de82751de57b633ec762d574f68.8, 94

	.type	.Lanon.1dae7de82751de57b633ec762d574f68.9,%object
	.section	.rodata..Lanon.1dae7de82751de57b633ec762d574f68.9,"a",%progbits
	.p2align	2
.Lanon.1dae7de82751de57b633ec762d574f68.9:
	.long	.Lanon.1dae7de82751de57b633ec762d574f68.8
	.asciz	"^\000\000\000\022\000\000\000\t\000\000"
	.size	.Lanon.1dae7de82751de57b633ec762d574f68.9, 16

	.type	.Lanon.1dae7de82751de57b633ec762d574f68.47,%object
	.section	.rodata..Lanon.1dae7de82751de57b633ec762d574f68.47,"a",%progbits
.Lanon.1dae7de82751de57b633ec762d574f68.47:
	.ascii	"Invalid"
	.size	.Lanon.1dae7de82751de57b633ec762d574f68.47, 7

	.type	.Lanon.1dae7de82751de57b633ec762d574f68.48,%object
	.section	.rodata..Lanon.1dae7de82751de57b633ec762d574f68.48,"a",%progbits
.Lanon.1dae7de82751de57b633ec762d574f68.48:
	.ascii	"GuardFailed"
	.size	.Lanon.1dae7de82751de57b633ec762d574f68.48, 11

	.type	.Lanon.1dae7de82751de57b633ec762d574f68.49,%object
	.section	.rodata..Lanon.1dae7de82751de57b633ec762d574f68.49,"a",%progbits
	.p2align	2
.Lanon.1dae7de82751de57b633ec762d574f68.49:
	.long	core::ptr::drop_in_place<bool>::h0b92a80a750bd66f
	.asciz	"\004\000\000\000\004\000\000"
	.long	<&T as core::fmt::Debug>::fmt::h735aeb6e09b54eef
	.size	.Lanon.1dae7de82751de57b633ec762d574f68.49, 16

	.type	.Lanon.1dae7de82751de57b633ec762d574f68.50,%object
	.section	.rodata..Lanon.1dae7de82751de57b633ec762d574f68.50,"a",%progbits
.Lanon.1dae7de82751de57b633ec762d574f68.50:
	.ascii	"InvalidEvent"
	.size	.Lanon.1dae7de82751de57b633ec762d574f68.50, 12

	.type	.Lanon.1dae7de82751de57b633ec762d574f68.85,%object
	.section	.rodata..Lanon.1dae7de82751de57b633ec762d574f68.85,"a",%progbits
.Lanon.1dae7de82751de57b633ec762d574f68.85:
	.ascii	"InvalidProperty"
	.size	.Lanon.1dae7de82751de57b633ec762d574f68.85, 15

	.type	.Lanon.1dae7de82751de57b633ec762d574f68.86,%object
	.section	.rodata..Lanon.1dae7de82751de57b633ec762d574f68.86,"a",%progbits
.Lanon.1dae7de82751de57b633ec762d574f68.86:
	.ascii	"BufferSize"
	.size	.Lanon.1dae7de82751de57b633ec762d574f68.86, 10

	.type	.Lanon.1dae7de82751de57b633ec762d574f68.87,%object
	.section	.rodata..Lanon.1dae7de82751de57b633ec762d574f68.87,"a",%progbits
.Lanon.1dae7de82751de57b633ec762d574f68.87:
	.ascii	"UnsupportedPacket"
	.size	.Lanon.1dae7de82751de57b633ec762d574f68.87, 17

	.type	.Lanon.1dae7de82751de57b633ec762d574f68.88,%object
	.section	.rodata..Lanon.1dae7de82751de57b633ec762d574f68.88,"a",%progbits
.Lanon.1dae7de82751de57b633ec762d574f68.88:
	.ascii	"UnknownProperty"
	.size	.Lanon.1dae7de82751de57b633ec762d574f68.88, 15

	.type	.Lanon.1dae7de82751de57b633ec762d574f68.89,%object
	.section	.rodata.cst16,"aM",%progbits,16
.Lanon.1dae7de82751de57b633ec762d574f68.89:
	.ascii	"MalformedInteger"
	.size	.Lanon.1dae7de82751de57b633ec762d574f68.89, 16

	.type	.Lanon.1dae7de82751de57b633ec762d574f68.90,%object
	.section	.rodata..Lanon.1dae7de82751de57b633ec762d574f68.90,"a",%progbits
.Lanon.1dae7de82751de57b633ec762d574f68.90:
	.ascii	"MalformedPacket"
	.size	.Lanon.1dae7de82751de57b633ec762d574f68.90, 15

	.type	.Lanon.1dae7de82751de57b633ec762d574f68.91,%object
	.section	.rodata..Lanon.1dae7de82751de57b633ec762d574f68.91,"a",%progbits
.Lanon.1dae7de82751de57b633ec762d574f68.91:
	.ascii	"PacketSize"
	.size	.Lanon.1dae7de82751de57b633ec762d574f68.91, 10

	.type	.Lanon.1dae7de82751de57b633ec762d574f68.92,%object
	.section	.rodata..Lanon.1dae7de82751de57b633ec762d574f68.92,"a",%progbits
.Lanon.1dae7de82751de57b633ec762d574f68.92:
	.ascii	"Failed"
	.size	.Lanon.1dae7de82751de57b633ec762d574f68.92, 6

	.type	.Lanon.1dae7de82751de57b633ec762d574f68.93,%object
	.section	.rodata.cst8,"aM",%progbits,8
.Lanon.1dae7de82751de57b633ec762d574f68.93:
	.ascii	"DataSize"
	.size	.Lanon.1dae7de82751de57b633ec762d574f68.93, 8

	.type	.Lanon.1dae7de82751de57b633ec762d574f68.94,%object
	.section	.rodata..Lanon.1dae7de82751de57b633ec762d574f68.94,"a",%progbits
.Lanon.1dae7de82751de57b633ec762d574f68.94:
	.ascii	"Bounds"
	.size	.Lanon.1dae7de82751de57b633ec762d574f68.94, 6

	.type	.Lanon.bf09494b05510f7f30f8c8768d91b265.20,%object
	.section	.rodata..Lanon.bf09494b05510f7f30f8c8768d91b265.20,"a",%progbits
.Lanon.bf09494b05510f7f30f8c8768d91b265.20:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/no-std-net-0.5.0/src/parser.rs"
	.size	.Lanon.bf09494b05510f7f30f8c8768d91b265.20, 91

	.type	.Lanon.bf09494b05510f7f30f8c8768d91b265.21,%object
	.section	.rodata..Lanon.bf09494b05510f7f30f8c8768d91b265.21,"a",%progbits
	.p2align	2
.Lanon.bf09494b05510f7f30f8c8768d91b265.21:
	.long	.Lanon.bf09494b05510f7f30f8c8768d91b265.20
	.asciz	"[\000\000\000P\000\000\000\025\000\000"
	.size	.Lanon.bf09494b05510f7f30f8c8768d91b265.21, 16

	.type	.Lanon.bf09494b05510f7f30f8c8768d91b265.22,%object
	.section	.rodata..Lanon.bf09494b05510f7f30f8c8768d91b265.22,"a",%progbits
	.p2align	2
.Lanon.bf09494b05510f7f30f8c8768d91b265.22:
	.long	.Lanon.bf09494b05510f7f30f8c8768d91b265.20
	.asciz	"[\000\000\000\350\000\000\000(\000\000"
	.size	.Lanon.bf09494b05510f7f30f8c8768d91b265.22, 16

	.type	.Lanon.bf09494b05510f7f30f8c8768d91b265.23,%object
	.section	.rodata..Lanon.bf09494b05510f7f30f8c8768d91b265.23,"a",%progbits
	.p2align	2
.Lanon.bf09494b05510f7f30f8c8768d91b265.23:
	.long	.Lanon.bf09494b05510f7f30f8c8768d91b265.20
	.asciz	"[\000\000\000\350\000\000\000<\000\000"
	.size	.Lanon.bf09494b05510f7f30f8c8768d91b265.23, 16

	.type	.Lanon.bf09494b05510f7f30f8c8768d91b265.24,%object
	.section	.rodata..Lanon.bf09494b05510f7f30f8c8768d91b265.24,"a",%progbits
.Lanon.bf09494b05510f7f30f8c8768d91b265.24:
	.ascii	"assertion failed: head.len() + tail.len() <= 8"
	.size	.Lanon.bf09494b05510f7f30f8c8768d91b265.24, 46

	.type	.Lanon.bf09494b05510f7f30f8c8768d91b265.25,%object
	.section	.rodata..Lanon.bf09494b05510f7f30f8c8768d91b265.25,"a",%progbits
	.p2align	2
.Lanon.bf09494b05510f7f30f8c8768d91b265.25:
	.long	.Lanon.bf09494b05510f7f30f8c8768d91b265.20
	.asciz	"[\000\000\000\246\000\000\000\r\000\000"
	.size	.Lanon.bf09494b05510f7f30f8c8768d91b265.25, 16

	.type	.Lanon.bf09494b05510f7f30f8c8768d91b265.26,%object
	.section	.rodata..Lanon.bf09494b05510f7f30f8c8768d91b265.26,"a",%progbits
	.p2align	2
.Lanon.bf09494b05510f7f30f8c8768d91b265.26:
	.long	.Lanon.bf09494b05510f7f30f8c8768d91b265.20
	.asciz	"[\000\000\000\273\000\000\000\031\000\000"
	.size	.Lanon.bf09494b05510f7f30f8c8768d91b265.26, 16

	.type	.Lanon.bf09494b05510f7f30f8c8768d91b265.27,%object
	.section	.rodata..Lanon.bf09494b05510f7f30f8c8768d91b265.27,"a",%progbits
	.p2align	2
.Lanon.bf09494b05510f7f30f8c8768d91b265.27:
	.long	.Lanon.bf09494b05510f7f30f8c8768d91b265.20
	.asciz	"[\000\000\000\274\000\000\000\031\000\000"
	.size	.Lanon.bf09494b05510f7f30f8c8768d91b265.27, 16

	.type	.Lanon.bf09494b05510f7f30f8c8768d91b265.28,%object
	.section	.rodata..Lanon.bf09494b05510f7f30f8c8768d91b265.28,"a",%progbits
	.p2align	2
.Lanon.bf09494b05510f7f30f8c8768d91b265.28:
	.long	.Lanon.bf09494b05510f7f30f8c8768d91b265.20
	.asciz	"[\000\000\000\311\000\000\000 \000\000"
	.size	.Lanon.bf09494b05510f7f30f8c8768d91b265.28, 16

	.type	.Lanon.bf09494b05510f7f30f8c8768d91b265.43,%object
	.section	.rodata..Lanon.bf09494b05510f7f30f8c8768d91b265.43,"a",%progbits
.Lanon.bf09494b05510f7f30f8c8768d91b265.43:
	.ascii	"AddrParseError"
	.size	.Lanon.bf09494b05510f7f30f8c8768d91b265.43, 14

	.type	.Lanon.bf09494b05510f7f30f8c8768d91b265.44,%object
	.section	.rodata..Lanon.bf09494b05510f7f30f8c8768d91b265.44,"a",%progbits
	.p2align	2
.Lanon.bf09494b05510f7f30f8c8768d91b265.44:
	.long	core::ptr::drop_in_place<bool>::h0b92a80a750bd66f
	.asciz	"\004\000\000\000\004\000\000"
	.long	<&T as core::fmt::Debug>::fmt::h735aeb6e09b54eef
	.size	.Lanon.bf09494b05510f7f30f8c8768d91b265.44, 16

	.type	.Lanon.bf09494b05510f7f30f8c8768d91b265.49,%object
	.section	.rodata..Lanon.bf09494b05510f7f30f8c8768d91b265.49,"a",%progbits
.Lanon.bf09494b05510f7f30f8c8768d91b265.49:
	.ascii	"()"
	.size	.Lanon.bf09494b05510f7f30f8c8768d91b265.49, 2

	.type	_ZN11panic_probe3imp5panic8PANICKED17hf951954ea29682c6E.0,%object
	.section	.bss._ZN11panic_probe3imp5panic8PANICKED17hf951954ea29682c6E.0,"aw",%nobits
_ZN11panic_probe3imp5panic8PANICKED17hf951954ea29682c6E.0:
	.byte	0
	.size	_ZN11panic_probe3imp5panic8PANICKED17hf951954ea29682c6E.0, 1

	.type	"{\"package\":\"panic-probe\",\"tag\":\"defmt_error\",\"data\":\"{}\",\"disambiguator\":\"1034545429517152257\"}",%object
	.section	".defmt.{\"package\":\"panic-probe\",\"tag\":\"defmt_error\",\"data\":\"{}\",\"disambiguator\":\"1034545429517152257\"}","a",%progbits
	.globl	"{\"package\":\"panic-probe\",\"tag\":\"defmt_error\",\"data\":\"{}\",\"disambiguator\":\"1034545429517152257\"}"
"{\"package\":\"panic-probe\",\"tag\":\"defmt_error\",\"data\":\"{}\",\"disambiguator\":\"1034545429517152257\"}":
	.zero	1
	.size	"{\"package\":\"panic-probe\",\"tag\":\"defmt_error\",\"data\":\"{}\",\"disambiguator\":\"1034545429517152257\"}", 1

	.type	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=__internal_Display}\",\"disambiguator\":\"5091384029326657320\"}",%object
	.section	".defmt.prim.{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=__internal_Display}\",\"disambiguator\":\"5091384029326657320\"}","a",%progbits
	.globl	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=__internal_Display}\",\"disambiguator\":\"5091384029326657320\"}"
"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=__internal_Display}\",\"disambiguator\":\"5091384029326657320\"}":
	.zero	1
	.size	"{\"package\":\"defmt\",\"tag\":\"defmt_prim\",\"data\":\"{=__internal_Display}\",\"disambiguator\":\"5091384029326657320\"}", 1

	.type	.Lanon.464e5119cbb7cd21d9b5d296818f3990.0,%object
	.section	.rodata..Lanon.464e5119cbb7cd21d9b5d296818f3990.0,"a",%progbits
	.p2align	2
.Lanon.464e5119cbb7cd21d9b5d296818f3990.0:
	.long	core::ptr::drop_in_place<bool>::h0b92a80a750bd66f
	.asciz	"\004\000\000\000\004\000\000"
	.long	<&T as core::fmt::Display>::fmt::hf7cab8b09e0ee289
	.size	.Lanon.464e5119cbb7cd21d9b5d296818f3990.0, 16

	.type	.Lanon.58fbd25ae7aa87e0d2ef344e55c3bacf.0,%object
	.section	.rodata..Lanon.58fbd25ae7aa87e0d2ef344e55c3bacf.0,"a",%progbits
.Lanon.58fbd25ae7aa87e0d2ef344e55c3bacf.0:
	.ascii	"NaN"
	.size	.Lanon.58fbd25ae7aa87e0d2ef344e55c3bacf.0, 3

	.type	.Lanon.58fbd25ae7aa87e0d2ef344e55c3bacf.1,%object
	.section	.rodata.cst4,"aM",%progbits,4
.Lanon.58fbd25ae7aa87e0d2ef344e55c3bacf.1:
	.ascii	"-inf"
	.size	.Lanon.58fbd25ae7aa87e0d2ef344e55c3bacf.1, 4

	.type	.Lanon.58fbd25ae7aa87e0d2ef344e55c3bacf.2,%object
	.section	.rodata..Lanon.58fbd25ae7aa87e0d2ef344e55c3bacf.2,"a",%progbits
.Lanon.58fbd25ae7aa87e0d2ef344e55c3bacf.2:
	.ascii	"inf"
	.size	.Lanon.58fbd25ae7aa87e0d2ef344e55c3bacf.2, 3

	.type	ryu::d2s_full_table::DOUBLE_POW5_INV_SPLIT::h1e579245bcd5631b,%object
	.section	.rodata._ZN3ryu14d2s_full_table21DOUBLE_POW5_INV_SPLIT17h1e579245bcd5631bE,"a",%progbits
	.p2align	3
ryu::d2s_full_table::DOUBLE_POW5_INV_SPLIT::h1e579245bcd5631b:
	.ascii	"\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000 \232\231\231\231\231\231\231\231\231\231\231\231\231\231\231\031\025\256G\341z\024\256G\341z\024\256G\341z\024\336$\006\201\225C\213l\347\373\251\361\322Mb\020\226\324\th\"lxz\245,C\034\353\3426\032\253Cn\206\033\360\371a\204\360h\343\210\265\370\024\"6X8I\363\307\2646\215\355\265\240\367\306\020j#\215\300\016R\246\207WH\257\274\232\362\327\032\210O\327f\245A\270\237\3379\2140\342\216y\025\007\246\022\037Q\001-\346\262\224\326&\350\013.\021\244\tQ\313\201h\256\326\267\272\275\327\331\337|\033\352:\247\2424\355\361\336_\225dy\341\177\375\025\273\310\205\350\366\360'\177\031\021\352-\201\231\227\021\370\r\326@\276\264\fe\302\201vIh\302%\034\223q\3363\230\220p\352\001\233+\241\206\233\204\026C\301~)\340\246\363!\233\025V\347\236\257\003\022751\017\315\327\205i+\274\211\330\227\262\322\034\371\220Z?\327\3377!\211\226\324FF\365\016\027\372sH\314E\346_\347\240\253C\322\321]r\022]\206\rz<=f\2454\254\322\266O\311\203\035\261\236\327\224c\227\036Q]#B\222\f\241\234\027\301Ky\335\202\337~\332}O\233\016\n\264\343\022h\254[b\321\230d*\226\345^\027\020 9\036S\360\342\201\247\340\266\356DQ\262\022@\263-\030\251&O\316RM\222Xj\247\216\250\231\302W\023A\244~\260\267{P'\252\330}\332\365\320\362\0364Pe\300_\311\246R\273\023\313\256\304@\302\030\220\246\352\231L\324\353\016\311\017<\3626\232\316\023\200\n\021\303\255Sy\261A\031`P\276\366\260\037g\bt\002\213\334-\301gG\263\246\376^Z\031R\240)5o\260$4\206\237\302\353\376KH\024\333\031\356\220\362Y\035\220\236\177h\211e\3269\020_)\260\264\035\303\373L\2272\247\250\325#\366\031\262\272Y]\2615\226=\254[\037\272w\351\304\024(b\341}'^\253\227VIL\373\222\207\235\020\r\235h\311\330\311\253\362\360\016z\370\267\245\225\032>\027\272:z\241\274[Zr.-\223\204D\025\313E\373.\310\032\312\257\256\216\213\212B\235\003\021E\t\222\261\246\367\334\262J\344x\252\235\3738\033\004\241A\301\353\222}\365n\203-U\261/\307\025\003\264gg\211ud\304X\234Ww'&l\021\322\354\245\330\333\210mm\364\306%\362\013=\340\033\333#\353F\026\007\276\212\3038\036(\243\375L\026I\266U\322\021l\376n\234`KSO1\327\021\016\212\357\266O\023\227\261`gE\205\030\202\213\034\245\241\277\370r\017\254'\032\271j7\255\001\326\026\036N\231`\302rV\271\341`U,$\316D\022\225\026\302\315\003\036W\3655\316\273\023m\343:\035\253\253\001\013\003\030\254*+\330/v\212Ob\027V\2114o\002\340\274\273U\023\363\304n\f\265\022\211\250\355\261\320\314\307\222\357\036\270\324Jz\356\035\007\272W\216@\n\323\333\362K\223\020o\373\361\027\006\310\337q\000\325\250|\365o\017\332X\374'\023\326\ff\3513\273\247\372\273L\262)\216`\246\036\021\327\204\207)\374R\225\311\243\216T\013\032\205\030\016\254\320\322\272\311\250\252\007\203\330vo\256\235\023\343\254\032\036^\334\332\335\245\321\300W\262\260b\037O\212HKK\260H~QA\232\254\216\300\033\031\331\241\323\325\325Ym\313\332\315\341V\2453\026\024{\201\334w\021{W<\342\327\347\253\352\302\021\020*\317`Y\202^\362\3066&\246\254\252\004\266\031\273\245\200Gh\030\365k\305Q\353VU\235\221\024\226\204\000\006\355y*#\321\247\"\337\335}t\020V\0074\243\341\217\335\321\201\f\3211\226\374S\032El\366\350\032s\344\2474=\247\364D\375\017\025\236V\370S\342(\035S]\227R]j\227\331\020bW\215\271\003\333a\353.\362P\225\020\277\365\032\350E\244\307\317HN\274X[\332\335\246e\221\025 k\203l\331\323qc\255\342\341\027\037\036A\021\315\021\237\255(\206\034\237H\004\003\363dc\233\033\013\333\030\276Sk\260\345\006\2355\217\035\351\025\026\242\025G\313\017\211\363\352kJ\221r\344 \253\0217\274qxL\333\270DF\252\033\204m\001E\034_c\301\306\326\025\307\003\005UI\003\276\232\235\026\031\351\315kE\336867w\007i\376\256\027\022\301A\026F\242c\301VXXr\016\227\261\362\034\316g\253\321\201\034\001\337y\023\365q\022\216(\027\245\354UA\316\0264\177a\334\220\301\016\330\206\022nGV5}$ e\002\307\347h\344\214\244\035%9x\3670\035\200\352\001l\271 \035\327\266\027\204\372,\371\363\260\231\2734#aM\027\254\370\0229\367G(SN\\_T8h\025\362\254Z\036.,\323\271u\013}\177C`SD[\212H\030X#\334\307\367\3250\231\317\031\2516|;m\023&\322\371r\214\211\264\216\262\217\016\361\371+\025\037\270A.\217\243\007*r(\246\013\364\307\274\335\030\372\232\276\245O9\273\301\206\036\326\\\006\227\344\023\366\3670\t\031\302^\234\3270\360\372\326$\324\037\370_Z\007\024h\345Iy\215&/\337\203v\031`\346\341\005\020 Qn\307\nR\277\345\317^\024\032\205\201\321\f\200\332\361\005o\016\231\204\331K\020\365\324h\202\024\000\304O\326\344\343\364\240\365\022\032+w\355\001\252\231i\331\021\267\034\367\263\367\333\024\274\305\212\001\210\024\356\255t\222\260\305\\\371\257\020,\t\336h\246\355|IT\352\200o\224(\263\032$\324\344S\270W\312:\020U\232\277v \\\025\203v\035C`y;bs\252\256\377^\200\026\021\236\275\310\321f\365+\235\270\020\2612\3133W\033\177dmAR\304\274}`\r\364\216\242\\\337\025\314\266\212g\333i\375\312\346=\303\330N}\177\021\337\212wr\305\017/\253\327/\005\216\344.\377\033\200\325\222[\004s\362\210\254\214j>\035\277e\026fDBI\320(\365\323V=U\230J\377\352\021\243\240\003BMA\210\271W\225\273\363\0202\253\034\351\346\002h\327\3159ayw\374\302@[\357\026TR\002 yqa\347-\371\311h\315\025Y\022\206P\235\231\216\265h\245|[vt\025V[\035\322\246J\341>\221 Q\375\025\305\366\335D|\027\016\037\242\032\377@M\247\312D7\222\261\320\311\022J\313i\367d\316\256\013\021nXPO\264\017\036;<\356\305P\330\213<\247\361ys?\220\f\030\311\311\3617\332y\t\312\205\364\307\3022@=\023\333B\351\277\366\302\250\251o\272\f\236\267f\310\036\343\233\272\314+\317S!&\225p~,R\240\030\202I\225p\211r\251\032\270\335&e\360t\263\023\235u\210\032\017\204u\367\214/>\b\347\207\205\037\027^\240{r6\221_\n&\230\006\354\2377\031\337\344\031\226[\370@\031\325\204F\005\360\177,\024L\352G\253\257\306\000\341\0207\005\321\214\231#\020G\335?EL\244g\316\347$\325\264G\217\322\031\006\261\314\235\326\351R\330\037\267\335\303\237r\250\0248'\nKE\356\333y\031,~i\031\302\206\020Y\330\251\021\242\343_)\217F0\017\2176q\032z\023\273\247\201\034\263\272\245k\363\330\330^'\025/\251\225\354\232\343(bQ\211\217\255\340K\354\020\027u\357\340\3678\016\235\350\016L\257\232\254\023\033y*Y\032\223-\330\260Sr\326%\342V\251\025.UGH\017\276y\215\334\301\336\267\201ET\021|\273\013\332~\226\217\025\224\234\227\214\317\b\272\033\227/\326\024\377\021\246wv\260\337\326rm.\026y\214\336C\377\247Q\371\221\363\262x\365\275\276\021\216\255\375\322\376?\034\302\034\354\267Z\"cd\034\330\212dB23\260\001\027\360_\025\265\265\266\026F\242\203\233\216\302Y\001\254Y\346\335\220\304+\022\243\0039_\027\004\366\316\254\302\243\374\032\324\022\035\203\234-L\254i^r\275\233\034\312HCB\027\234\343\212\326\211T\030\365\375\342\026\b\007i\233\022\306\005\253\275\017T\215\356/k\361\f\330t\305\035\005k\"\376rv\327\276\214\"\301pF*\321\027\004\274N\313(\305\022\377\326Ng\215k\273\r\023\240\371}xt;Q\313$~\330{\022_|\036Ma\376\371)\311\r\t\2671\255\374A\177c\030\n\201\313\224!\324\327\240\305'$\3124\314\202\023w\316xT\317\271\277go\fmC!\2557\037\371q-\335\245\224\314\037Yp\212\317MW\371\030\307\364\275}Q\335\326\177z\363\241?>\254\372\023\013\356/\311\350.\276\377\303\270\2342\375y\367\037\326$\363\240 \2771f6\372\026\302\375\307\222\031x\035\\\032\032\314'\270^\373\253\001\313lu\024`\344|{\256\tS\223\030\311\274g\242\360]\020\231\240\224\305\260B\353\036\364t\224?j\347/\032\341\346v\004'\002\211\345\\*\3352\210\037\363\024\347\353+\235\205\316\240\267\260\356\260(\240\177\302\020\330\337\337aoJ\001Y\264JNt3\314\320\032\255L\346\347%\325\315\340)\242>\220\217\326s\025\361\326Q\206QwqM\356\264\313\331rx)\021\350W\351\326\350\276\350{\260T\254\217\204\215u\033 \023!\337S2\272\374Y\335\211\fj\244\367\025\200B\347\030C(\310c\256Jnp\356\351\222\021fj\330'8\r\r\006\027\021J\032\027C\036\034\353!\255\354,\244=k\022tn{\022\234~\026VNW\275\360\034\376\210\333\\X\374A\343\376\021#J%b\264\224\226A_a\215`6\005\313\034\351\324\035\350)\252\253g\177\347=M\370\320\b\027\207\335\027 \273!V\2712\271d\327\371sm\022\245\225\214f+i#\302\352\301:\362\302\354{\035\035\336\326\036\211\272\202\316\2734b[\002W\226\027\030\030\337K\007b5\245\374\366\264\342\001\254\336\022Y\363dy\330\234\210;\224\361\20776\0231\036\341\365\203\307FJm\374\334Z\006\306\221B'\030\032+\003\006\237nW0\027\257\236\321\247\233R\023\220\336\321<\313}%\032%\0301\034\246\222\352\036@\345\2470<\376\035H\267yZ\343\204\250\273\030\000Q\206\300\3111K\323\305\307\256\202\235S\311\023\315\264\243\315B\351\021R\t\246\027\321\310\205\250\037\244\220\034>\002!\333t\007\270\337@:\236S\031P\rJ\313\001\264\025\367\005`\031g\373\344B\024\247\n\b\t\233)\336\3707\263zR\374\2035\020\327\335\f\250\221B0\216Y\270*\267\2239\357\031\023K\n \016\002\215>\341\371\356\370Ba\277\024\017<\b\200>\233=e\347\307X\372\233\032\231\020\344,\r\000d\370\310n\245\f\216\220\371\220\216\032\352#\244\231\351\371\323\213\267\243q@a\332>\025\273\034P\341\272\224\251<\371\202\364\231\032\025\377\020+a\263\233\304\272u\307\216\321 \303]\2731\033\211\032)\026j\225\304\322\013\016\347h\261b\301\025\241{\272\021\210w\320\333o>\037\207'\202g\021\233\222]\034@\277\200,\346c\230>?\320\330\033Iu\344I3\3143\275Q\266Fe\377\fG\026\324]Pn\217\326\217\312\247^\005Q\314p\322\021S\311\263\343KW\031D\331\375nN\255\347\203\034\251:\366\202\tyG\003\341\227%\245\212\354\317\026\272\373\304h\324`l\317\200y\204\352n\360?\022*\371\007\016\2074z\345\232\365\323\020K\0323\035\"\2249\013l\220.Q\342*C\332\b\025\\\027\265\251\307\325\274\246\213\332\201U\317\341\323\020\260\022\207\017\331\".q\337\220\234U\345\002S\201\346\035l\f\024O\213ZL\332\026\336\035\317\250\232\353\027\212\243\251\245\242{\243\256x~\261\245 \342\"\023\251\005\251\242j_\322}'\227\265\242\2326\236\036T\321 \202\210\177\333\227\037\254\367N\025\222~\030w\247\200\316\006f|yL#\306\330\335t\230\023\361\013\001\344\np-\217\255k\243'\226TZ\037Z\326\000P\242Y$\f\276\357\265\037x\020\025\031\025E\232\331\201\024\035p\376\362\367\262\371\331\020\024wj{\024\233C\027\300\376[\306(.{\r\020\362C\222\355\304\005\362\314\312,\n\016}+\257\031\302\234\016\276\3207[\no\275\241q\312\"\214\024\316\343>\313s\371H\b\214\227\264'\325\033p\020\260\237dx\354[\016\332\254%T\fU\371L\032\300\177P`\360\257>{\275\267\251\326\020a\n\0253f@\200\363\277\313\225\227,\356\336s\032\325\020Rp\315fRf\254\357XG\260d\271\220\356\032\333Y\244\270\016\205#&Gl\363\266\372\246\213\025I\256\266\223\330\320\202\036l#)_\225\205<\021u\260\212\037\364\032\236\375\2548\250\376\356\b\224\033\367Y\325\262)\257\261\227\275\223\206\230%\007\020\026,{w\365\272%\216\254\227\334\236\023\036l\246\021\023\305X\"+\t}z\277-\376\270\311y=\034vj\255N\357\240\375a\314W\313`\241\224\227\026\305\356\275\013Y\032\376\347\t\023\t\347M\335\022\022:\261\374E[]c\246\334\204\016\330\257\373\352\034\310\2150k\257J\034\205\260\320>\023\363b\"\027\324\327&\274\362n\343\320&\332\313u\302\350\201\022\206\214\244\306\352\027\237\264\327)F\211\235\247\234\035kpP\005\357\337\030*F\356\004\241\027\206\260\027\211\363\331\235%\263\340Tk\213\235My\236\363\022tR\366bo\353\315\207xE/|(\227R\036]\250^\202\277\"\013\323\306j\277\311\206\022B\030\344\271Kh\314\033<\017\237\210\377:\322\016h\023m)y@z,`\030\230\332\230\221\203\344\f\037$!\2243\310V\263F\023\342\023\0166\035\327\030\266MC)\240x\2178\334\264\334\244\221J\337\023\212\257k\250f'\177Z`!a\241\202\252\313\037\242\277\357\271\353\2052\025M\264M\264\233\273o\031N\231\214a\211\321\216\252=\220\244\366\342bY\024\f\341\326\032\241\247\330\356\312\331\266+O\202G\020E\233$^\233r'~\021\366\212\337\261\003\f\032\004I\035\030I\365\205\376\r\370;\031[i\326\024\320\240J\023\324]\236\313\244\371/\024|\207\253\020M\001\021RS\311c\337:\\\346\271\371\013\254\032qg\332t\017\241\034\031/\260\036\373\372oV\025\301RH*\331\200\260\255%\300K//\363\021\0214Q\r\252\2164\347\025\t\315\022\262~\353O\033\304\rq\356>]\037\253m\n\017(2\211\331\025\235\244\215\213e\027\031\274W\b\f (\324z\021\224:|\022<\362\364,Y\r\340\314\331\271\367\033C\225\226\333\374\364\303\360\340=\263p\341\307_\026\003\021\022\026\227]6Z\032\313\365&\2019\346\021\004\350\034\360$\374V\220\220\336\"\0135\217\243\034\320\354\343\214\0350\337\331\246K\202\242]?\351\026\332#\203=\261Y\177\341\353\242\316N\2612T\022\\98/\265\302\313hy\321}\344N\204S\035\343-`\277]5\326S\224\247dPr\003v\027\034\213\346e\261*x\251v\354\266\246\216\317\304\022\372D\327o\265\252&\017\361\023\213\327}\262\007\036bj\337\277*\"R?'Co\254d(\006\030N\210\177\231\210N\333e\037\234\362\211P 8\023J\r\314(tJ\305oe\223\352\017\2643\300\036;\244\t\207\366\241jY\204\017\"s\366\302\231\030\226\266\007l\370\347\356\2556\331\264\365\2215\256\023VW\f\340\363?~I$\365\272\"\203\"}\037E\254\326L\366\377d\324\351\220\225\350h\3500\031\321\211x=\370\377\203C\356sD\355S '\024t\241\223\227\306\314\234\317\361\217\003\361\017M\037\020R\002\271%\244Ga\177\034\263\005\350\177\256\313\031\0175\307\267\351\322M\314\026\\\321\354\377\361\242\024\331\220\322_!\017\013=\022\260\332#3[\202\020\301\347P\231hK\253aP\263*\006\205+j\032g\271@\024\272\242\"N@\\Ukj\274!\025S\224\000\335\224\350N\013\315ID\274\356\311\347\020Q\355\000\310\207\332\027\022H\251\323\306Jv\f\033\332\275\000\240lHF\333l\207\334k\325\221\243\025\257d\315L\275\006\005I\212\237\343\357\335\247O\021\261:\342z\310\n\b\250C\3778\346/\246\262\033\364.\350\3739\2429Si\377\223\036\363\204(\026]\362\354/\373\264\307u\207\377\017\262\365\003\272\021.\352G\346\221!\331\"?\377\177\266\"\323\\\034\362T\006\205A\201z\265e\377\377\221\350\250\260\026\365C87\001\001b\304\26723\333\206\355&\022\356\237\363\361\001h6:Y\204\353\221\244\025\013\035\213\031\366'\233\271^\373\340i\274tP\021<\027\326z^\206\342\372~/\347\207c]@t\226\022V\221\375\326\320\367\227\345q\3318b\315\206\275\035\253\332\312x\r\223y\204\301z-\350=\322\312\027V\025o-qBa\320\232\310\212\2061\250\b\023\"\"\030\257NjhM\221\332\252=O@t\036\350\264y\362>\210S\244\332\256\210d?\000]\030\207]a(\377l\334\351\256XmP\314\231}\023\244\225h\re\256`\251\344\215H\032z\\/\037\203D\355=\267\276\263\272\203q\240\256a\260\362\0306\235\2121,2\366.6\301\346\276\347Y\365\023\360aw\202\023\035\275\344\211\233\327\227?\366\356\037ZN,5\251}\312\203\241\257\337\3372\370\213\031\025\245V\367 \376\241\234\347\362\262L\302\371o\024\252\035\022\371\2631\033J\271(\217p\233\224Y\020\335\225\266\301\354\265^C\365\r\345\200\305\355(\032J\336^\001W^\3455\304\244\035g\004\213\355\024\325\261\030\001\254~\267\304i\035~R\320\b\276\020\"\266Z\233y\227%\241\017/0\267\263\247\311\032\201^\025Ia\254\267M\331X\363\370\302\037n\025\233KD\007\201#\306\327\255\340\365\2235\346$\021+\254\323>\233\005=YI4V\206\"=n\033\274\211\334\313\025\236\375\340m\303\021\005\202\312\361\025c\241\343o\021\030\376\263$iA7\233;\216\021\321\233\322\177\265Yc\206\007u5%\305\305\026\034\016\343\0163\221\024\351\321\322\220\367P7\236x\026\013\034?\217\332v\272tu\r\306@,\030\372\021x\3061\345\220$\367\355\273H\243g\340Y\303\034-\005[\267@\035,\213\311\323\265\037M\256\002\027$\004|_\315}Vo\324\017+\346p\213h\022\006m\306\230H\311\360~\355\262\021=N\022t\035\237\275\236\340\006\241\300\230W\302\247\375\244\016\220\027\346\312KM\322\200\000Gy\233\354\312P\245\331\022\242DyH\035\316\000\330\216\305\255D\201\b)\036\202\320-m\027\3303\023?\321W\235\232\323 \030\316\246$$yF\366\250e\247\254J\025vM\023}\244:\240\216=\275to\245zw\210V\342\036dP\225\346>1d]\214\267\373\305\006\022\265\030\267\246\252\353\313\215\266Jp,\226\321k\016\304\023W\244\252\022\023\026$\021\032G\360\350\022\027\240\037\337\351\356\016\334D\203\332\024l\363SB\337L\031\200!\277\330|\235\002\342C#)Ch\177=\0243\2012z\375}hN6\034T\317\27121\020\270\316P\220\225\311@J\275\306\271K)Q\350\031\306\013\247\246w\3243\b1\322\307o\207\332\271\024k\t\354\036\306v)\240\215\016\323\277\322\256\224\020\337\333\254d\243WB\000I\027\270\377\035~\207\032\031\343#\352\265\337\001\315\240\022`\231\26119\025\256\265\034\210\221L\316pMu\346\255'\216\372\020\342U\224\246\265\255\343\032\257\273pI\f}*\033\350wC\205\304W\351{\362b\215\007=\227\273\025\207\3715\004jy\207\311\216\265\n\006d\337b\021q\302\274\006\020\217\245u\344\210w\326le\321\033'5\312k\246\245\267\367\351\323\222\253\360\035A\026\037\304\241\274\036\036\306_\356\017\017V\215\261\315\021e\323\002adc\243\377\026\263\261\211HO|\034Q\334\233MP\034\3512\337(\216\324\006\331\311\026\016}Iqs\343 \217\262 \330v\005\024;\022|.\017\202\205\005\233~\352\315Y\361;S+\035\312\276\245\001\2367\257\313\356\327G\364/\334U\027\241\230\2044K\371X\t\277\254l\303\214\026\253\022"
	.size	ryu::d2s_full_table::DOUBLE_POW5_INV_SPLIT::h1e579245bcd5631b, 5472

	.type	ryu::d2s_full_table::DOUBLE_POW5_SPLIT::hba4162dd50d31dad,%object
	.section	.rodata._ZN3ryu14d2s_full_table17DOUBLE_POW5_SPLIT17hba4162dd50d31dadE,"a",%progbits
	.p2align	3
ryu::d2s_full_table::DOUBLE_POW5_SPLIT::hba4162dd50d31dad:
	.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\020\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\024\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\031\000\000\000\000\000\000\000\000\000\000\000\000\000\000@\037\000\000\000\000\000\000\000\000\000\000\000\000\000\000\210\023\000\000\000\000\000\000\000\000\000\000\000\000\000\000j\030\000\000\000\000\000\000\000\000\000\000\000\000\000\200\204\036\000\000\000\000\000\000\000\000\000\000\000\000\000\320\022\023\000\000\000\000\000\000\000\000\000\000\000\000\000\204\327\027\000\000\000\000\000\000\000\000\000\000\000\000\000e\315\035\000\000\000\000\000\000\000\000\000\000\000\000 _\240\022\000\000\000\000\000\000\000\000\000\000\000\000\350vH\027\000\000\000\000\000\000\000\000\000\000\000\000\242\224\032\035\000\000\000\000\000\000\000\000\000\000\000@\345\2340\022\000\000\000\000\000\000\000\000\000\000\000\220\036\304\274\026\000\000\000\000\000\000\000\000\000\000\0004&\365k\034\000\000\000\000\000\000\000\000\000\000\200\3407y\303\021\000\000\000\000\000\000\000\000\000\000\240\330\205W4\026\000\000\000\000\000\000\000\000\000\000\310Ngm\301\033\000\000\000\000\000\000\000\000\000\000=\221`\344X\021\000\000\000\000\000\000\000\000\000@\214\265x\035\257\025\000\000\000\000\000\000\000\000\000P\357\342\326\344\032\033\000\000\000\000\000\000\000\000\000\222\325M\006\317\360\020\000\000\000\000\000\000\000\000\200\366J\341\307\002-\025\000\000\000\000\000\000\000\000 \264\235\331yCx\032\000\000\000\000\000\000\000\000\224\220\002(,*\213\020\000\000\000\000\000\000\000\000\2714\0032\267\364\255\024\000\000\000\000\000\000\000@\347\001\204\376\344q\331\031\000\000\000\000\000\000\000\2100\201\022\037/\347'\020\000\000\000\000\000\000\000\252|!\327\346\372\3401\024\000\000\000\000\000\000\200\324\333\351\214\2409Y>\031\000\000\000\000\000\000\240\311R$\260\b\210\357\215\037\000\000\000\000\000\000\004\276\263\026n\005\265\265\270\023\000\000\000\000\000\000\205\255`\234\311F\"\343\246\030\000\000\000\000\000@\346\330x\003|\330\352\233\320\036\000\000\000\000\000\350\217\207+\202M\307raB\023\000\000\000\000\000\342si\266\342 y\317\371\022\030\000\000\000\000\200\332\320\003d\033iWC\270\027\036\000\000\000\000\220\210b\202\036\261\241\026*\323\316\022\000\000\000\000\264*\373\"f\035J\234\364\207\202\027\000\000\000\000a\365\271\253\277\244\\\303\361)c\035\000\000\000\240\\9T\313\367\346\031\0327\372]\022\000\000\000\310\263G)\276\265`\240\340\304x\365\026\000\000\000\272\240\231\263-\343x\310\030\366\326\262\034\000\000@t\004@\220\374\215K}\317Y\306\357\021\000\000P\221\005P\264{q\236\\C\360\267k\026\000\000\244\365\006d\241\332\r\3063T\354\245\006\034\000\200\206Y\204\336\244\250\310[\240\264\263'\204\021\000 \350o%\026\316\322\272r\310\241\2401\345\025\000(\342\313\256\233\201\207i\217:\312\b~^\033\000Ym?M\001\261\364\241\231d~\305\016\033\021@\257H\217\240A\335q\n\300\375\335v\322a\025\020\333\032\263\b\222T\016\r0}\225\024G\272\032\352\310\360oE\333\364(\b>n\335ll\264\020$\373\354\313\026\02223\212\315\311\024\210\207\341\024\3559\350~\234\226\376\277\354@\374\031j\351\031\0324$Q\317!\036\377\367\223\250=P\3421P\020Am%C\252\345\376\365\270\022M\344Z>d\024\222\310\356\323\024\237~3gW`\235\361M}\031\266z\352\b\332F^\000Am\270\004n\241\334\037\262\214\222EH\354:\240HD\363\302\344\344\351\023\336/\367VZ\247I\310Z\025\260\363\035^\344\030\326\373\264\3540\021\\z\261\032\234p\245u\035\037e\035\361\223\276\212y\354\256\220af\207ir\023\277d\3558n\355\227\247\332\364\371?\351\003O\030\357\275(\307\311\350}Q\021r\370\217\343\304b\036\265vy\034~\261\356\322JG\3739\016\273\375\022b\324\227\243\335]\252\207\035\031z\310\321)\275\027{\311}\fU\365\224\351d\237\230:Ft\254\035\355\235\316'U\031\375\021\237c\237\344\253\310\213\022hE\302q\252_|\326\206<\307\335\326\272.\027\302\3262\016\225w\033\214\250\0139\225\214i\372\0349\306\337(\275*\221WI\247C\335\367\201\034\022\310\267\027sluu\255\033\221\224\324u\242\243\026\272\245\335\217\307\322\322\230b\265\271I\023\213L\034\224\207\352\271\274\303\203\237]\021\024\016\354\326\257\021y)e\350\253\264d\007\265\025\231\021\247\314\033\026\327s~\342\326\341=I\"[\377\325\320\277\242\033f\b\217M&\255\306m\365\230\277\205\342\267E\021\200\312\362\340oX8\3112\177/'\333%\227\025 }/\331\213n\206{\377^\373\360Q\357\374\0324\256\275g\027\0054\255_\033\2356\223\025\336\020\301\031\255A]\006\201\2307bD\004\370\232\025\0252`\030\222\364G\241~\305zU\005\266\001[\032\037<O\333\370\314$o\273lU\303\021\341x\020'\013#\0227\000\356J\352\307*4V\031\227\024\360\315\253\326D\200\251\335\344y5\301\253\337\274\031\266`+\006+\360\211\n/l\301X\313\013\026\020\3448\266\3075l,\315:\307\361.\276\216\033\024\035\307\2439C\207w\200\t9\256\272mr\"\031\344\270\f\b\024i\225\340K\307Y)\t\017k\037\216\363\007\205\254a]l\217\034\330\271e\351\242\023r\360I\246\027\272tG\263#N(\277\243\213\030\217l\334\217\235\350Q\031\240\254a\362\256\214\256\036\331\303\351yb1\323\017\344\013}W\355\027-\023\3174d\030\273\375\307\023\335N\\\255\350]\370\027\003B}\336)\375\271X\224b\263\330bu\366\035BI\016+:>t\267\234\035p\307]\t\272\022\222\333\321\265\310MQ\345\003%L9\265\213h\027wRF\343:\241\245\336D.\237\207\242\256B\035\212\363\013\316\304\204'\013\353|\303\224%\255I\022m\360\216\001\366e\361\315%\\\364\371n\030\334\026\210\254\362\201s\277mA/sq\270\212\036\223\034\325\25371\250\227\344\210\375\347F\263\026\363\333\021\312\226\205=\222\275\035\353\374\241\030`\334\357R\026}\374\346\314\366,\345%|\312\036x\323\253\347\033\316]\020@\032<\257\227\215>\023+d\313p\021Bu\024\320 \013\233\3750\016\3305=\376\314\025\222\222\031\004\351\315\001=\275\021N\203\314=@\033\233\373\217\242\261 !F\026\313\020\322\237&\b\021\202\3723\013\336h\251\327\333\375\224\306G0J\025#\371\000\216\025\303\223\315R=:\270Y\274\234\032\266\233\300x\355Y|\300Sf$\023\270\365\241\020\243\302\360\326hp\233\260\350\177\355\027&s\312\024L\363\254\f\203L\302\334\342\337\350\235\357\017\375\031\017\030\354\347\321o\371\311\355\213\261\302\365)>\020\023\036\347a\306\313w<\351\356]3s\264M\024\230\345`\372\267\276\225\213\243j5\000\220!a\031\376\036\371\370e.{nL\305B\000\364i\271\037_\263\233\273\377\374\f\305O\273)\2008\342\323\0237\240\202\252?<P\266#*4\240\306\332\310\030DH#\225OK\344\243\2544AHx\021\373\036+\r6\275\021\257n\346\353\300(-\353\352\\\023u\220\203,\326Z\n\340&\361r\370\245%4\030\223t\244\267\213\361\f\230p\255\217v\017/A\036\334\310\306R\367\026\b_f\314\031\252i\275\350\022\023{x'\265\034\312\366\177?\240\024\304\354\242\027\327\231Vq\342\243|\364_O\310\031\365\247\213\035& \326\206m\346\315\370\2331\0350\371Hw\0220\250\213\350\b`\001\367\002~$|7\033\025\027<\222\256\"\013\270\301\264\203\235-[\005b\332\034e\033\255\365\006\023\371Pr\202\374XC}\b\022?b\030\263\310W7\345\016\243;/\224\234\212\026\317z\336\337\272-\205\236\322\213\n;\271C-\034\301\f\353\313\224<\023\243c\227\346\304SJ\234\021\361\317\345\376\271\013\330\213<= \266\350\\\003\026\356C\237~\250\016\316\256\213L\250\343\"4\204\033u\212#O)\311@M\327/I\316\225\2402\021\022m\354\242s\373\220 \315{\333A\273H\177\025V\210\247\213P:\265h\300ZR\022\352\032\337\0326\265HWrDqA\270xsK\322p\313\020\203\342\032\355\216\225\315Q\346VP\336\006M\376\024$\233a\250\362\372@\346\237l\344\225H\340=\032\367\000=\251\327\234\350\357\343\303\256]-\254f\0204A\214\223\r\304\342\353\334t\032\2658W\200\024\201Qo\370\020u\333&\024\022a\342\006m\240\031\361\222E\233*)I\230L\253|M$D\004\020\255\367\026Bus[\276\037\326\333`-U\005\024\230\265\234\222RP\362\255\247\313\022\271x\252\006\031\377\342C7g\344n\231\221~W\347\026UH\037\337m\212\202\300N\345\377\032\257\226P.5\215\023W\t-\243p\242\336\277\341Z\274\344y\202p\030\255K\370\313\fK\326/\232q\353]\030\243\214\036L/{\377\347\356\345]\000'\263:\357\345\027\023\037\373Y\377\241j_u\300\360_\tk\337\335\027\347y0\177JE\267\222\360\354\267\313EW\325\0350L~\217N\213\262[\026\364R\237\213V\245\022<\337]3\".\237\362\033\261'\207.\254N\027\013W5\300\252\371F\357b\235\361(:W\"\035gV!\270\n\\\214\325]\002\227Y\204v5\022\001\254)f\rs\357J\365\302\374o%\324\302\026\001\027\264\277\320O\253\235\262\363\373\313.\211s\034`\216\320w\342\021\213\242Ox}?\2755\310\021\371\261\304\025[\326-\213c\326\\\217,C:\026w\3365\333\361K\371m\374\0134\263\367\323\310\033\n\253\001)w\317\273\304}\207\000\320z\204]\021\315\025B\363T\303\3525]\251\000\204\231\345\264\025@\233\0220*te\203\264\323\000\345\377\036\"\033\b\241\013^\232h\037\322P\204 \357_S\365\020J\211\216\365\300B\247\006e\245\350\3527\2502\025\235+\3622q\023QH\276\316\242\345ER\177\032B[\327\277&\2542\3556\301\205\257k\223\217\020\0222\315o0W\177\250\2041g\233Fx\263\024\227~\300\213\374,\237\322\345\375@BXV\340\031\036OX\327\035|\243\243\257\236h)\3675,\020\346b.M%[\214\214[\306\302\363tC7\024\237\373y\240\356q\257o\362w\2630R\024E\031\207z\230HjN\233\013\357U\340\274fY\226\037\224L_m\002\021Ag\2655\f6\340\367\275\023\272\037\267\bCU\021\301\"C\217C\330u\255\030\250\347\344\312\223\252Uq\353\023sTN\323\330\036\311\020\317^\234\212\325&s\354\307\364\020\204G\023\373\324\202vC\355\212\360\217\347\3711\025e\031\030:\212#T\224\250\255\354sax~Z\276\037\036d6\226\264\\\211\354s\350<\013\217\370\326\323\022\375\303\273\341\263\253\347\220\"\f\316\262\266\314\210\027\375\264*\332\240\226!5+\217\201_\344\377j\035\036\261Z\210$\3764\001{\371\260\273\356\337b\022e]q\252\255=\202\301\3317\235j\352\227\373\026\277\264\r\025\031\315\3421\320\205D\005\345}\272\034\367\220(\255/\300-\037\242\323J#\257\216\364\0215\265r\230;0\371\246\212\210\035\354Z\262q\026\202b\217~J|\267P\255\352$\247\361\036\016\034\221\235\031\217\256\255rR\254\022w\bW\323\210\021\366\004\3402\032Y\017gW\327\224\312,\b\353\0253\006\230\277`/\323@-\r:\3757\312e\033\340\003\277w\234\375\203H<HD\376b\236\037\021\330\304\256\225\003\375\244ZKZ\325\275\373\205g\025\016v\032{D<N1\336\260J\255zg\301\032\311\211\360\314\252\345\320\336\212\256N\254\254\340\270\020;\254,\200\025\037\205\226-Zb\327\327\030\347\024J\3277\340\332f&\374\270\360:\315\r\337 \032\216\346\"\314H\000\230\235s\326D\240h\213T\0202\240+\377Z\000\376\204\020\fV\310B\256i\024>\210\366\276q\200=\246\024\217kz\323\031\204\031N*\264.\216\340\314\317\331r\006YH \345\037p\2320\335X\f\340!\310\007\2447-4\357\023\r\301|\024o\017X*\272\t\215\2058\001\353\030P\361\233\331J\023\356\264(L\360\246\206\301%\037\322v\001\310\016\314\024q\231/V(\364\230w\023\206\324\001z\022\377Y\315\177\273k21\177U\030\250I\202\030\327~\260\300_\252\006\177\375\336j\036\tnQoFOn\330{*do^\313\002\023\213\311%\013\030\343\211\316\0325=\0136~\303\027\356;\357\r\336[,\202a\202\f\216\303]\264\035u\205\265\310j\271[\361|\321\3078\232\272\220\022\322\346\342z\305\247\262-\334\305\371\306@\3514\027\206\240\233\331\266Q\0379S7\270\370\220#\002\035TD\001H\022\223\263\003\224\"s\233:V!\022i\225\001\332\326w\240\0049\353OB\311\253\251\026\303\372\201\220\314\225\310E\007\346\343\222\273\026T\034\272<Q\332\237]\235\213\304o\316;5\216\264\021\350\213\345\320\007\265\204\256\265\013\302\212\302\261!\026\343\356\036\305I\342%\032\243\216r-3\036\252\033MU3\033n\255W\360%\231g\374\337RJ\021\241*\000\242\311\230mlo\177\201\373\227\347\234\025I5\200\n\374\376\210GK\337a\372}!\004\033N!\220\206]\237\265\f\217+}\274\356\224\342\020\241)4\3504\007\343\317rv\234k*:\033\025\n4A\"\002\311\333\203\017\224\203\006\265\bb\032\206\300hU\241]i\262\211<\022$qE}\020\247\360\302\252\t\265\003\037\254\313\026m\315\226\234\024\321\254s\025L\242\304&\227~\\\310\200\274\303\031\003Lh\215o\345:x\036\3179}\320U\032\020\003_\302p\313\236I\026\346B\210\234D\353 \024\304\366\362L~\006\334\233\237S\252\303\025&)\031v\264/\340\035\b\323\202\207\350\2244\233os\037\311\320\035\254\022\345\303\261T\021\335\000\301%\250\023\374D%WW\3364\336\251U\024A1/\222\030;\226\356,\355\025\302U\024kY\221\375\272\266\036\345\035\025<\264M\231\265\354\342\327z\33642\023^e\032K!\241\377\342\247\333\215\031\026\302\376\027\266\376\340\235i\211\277\333\221R\361\237\233r\376\0351\237\254\002\342\265W)\233\323\366C\241\007\277\022\376\306W\203Z\243\255\363\201\210\364\224\211\311n\027\275\270-$1\f\231p\242\2521\372\353{J\035v\223\234\266\236\247_\206\245\n_|s\215N\022T\270Cd\206\221\367\347N\315v[\3200\342\026i\246T\375\347u\365\241\242\200Tr\004\275\232\034\001\350T\376\260i9\245e\320t\307\"\266\340\021\002\"\352=\035\304\207\016\177\004Ry\253\343X\026\202\252d\215$\265)\322\236\205\246W\226\034\357\033\221\352^\3306\021ZC\203\023\310\366\335qu\0216\245v\216\204\2250\024d\030ztU\316\322\025\203N\024\262\345\272<\031}\236\230\321\352\201G\033\022\261L\217\317\364\305/\016c\377\3022\261\f\021V\335\037s\003r\267\273\321;\277s\177\335O\025\254\324\347O\204N\245*\306\n\257P\337\324\243\032\353\344\360\261\022Q\247\332\273fm\222\013e\246\020&\036m^W%Q\321j\300\bwN\376\317\024\260e\b6\255n\245\205\205\360\312\024\342\375\003\032\216?\305A,e\207sS\326\376L\255~B\020q\2176Rw>iP\350\213>\240X\036S\024N3\304&\025\216\203d\342.N\310\356\345g\031\"@up\232q\244\375\232\272azj\337\301\037\025HI\206\000\307\206\336\240\024}\214\242+\331\023\032\232\333\247\300x(\026\311Y\234/\213v\317\030\241\200\322\321\360\226\262[;p\203\373-T\003\037d\220#\203V\236O\031%&2\275\234\024b\023~t\354#\354\205\243_\256\257~\354\303\231:\030\235\221\347,gg\214\367\231[\236\3474@I\036\002\273\020|\240\300\267:@\371\302\020!\310\355\022\303\351\024\233\310\260eI\220\267\363T):\251\0273$\332\301\372\034\277[t\2450\252\263\210\223\035\240V(\271\034rW\271hg^Jp5|\022Hlr\347\243N\255\347B\001\366\\\314B\033\027Z\007O\341L\242\230\241\223\2013t\177\023\342\034\230d\321\fpe\377D\3740\240\250/L\r\022\276\275\005\020\314>?V;=\310\222;\237\220\026.-\007\024\177\016\317+\212Lzw\n\3074\034=|\204l\017ia[\326o\254\212f\374\240\021L\233\245GS\3039\362\313\213W-\200;\t\026\037\002\217\031(4\310\356\276n\2558`\212\213\033Sa\371\017\231 =U7el#|67\021\250\271\367S\277h\214*\205~G,\033\004\205\025\022\250\365(\357\202/u&^Y\367!E\346\032\013\211\231y\325\261=\t\330\332\227:5\353\317\020N\353\377\327J\036\215\013\216\321=\211\002\346\003\025\"\346\377\215\335ep\216\361E\215+\203\337D\032\325\357\277x\252?\006\371\266K8\373\261\013k\020\312\353\357\026\225\317G\267\244^\006z\236\316\205\024\275\346\253\\z\303\031\345M\366\207\030FB\247\0316p\353y,\0320\257\360\371T\317k\211\b\020CLf\230\267 \374\332l8*\303\306\253\n\024T\337\177~\345(\273\021\210\306\364s\270V\r\031*\327\037\336\036\363)\026*\370\361\220f\254P\037z\346\323J\3637\332M\032;\227\032\300k\222\023\031\340\210\035\360\305P\341\340\t=!\260\006w\030\037\030\353$l\367\244\031YL\214)\\\310\224\036\023\357\022\227\243\032\007\260\267\257\367\2319\375\034\023\330\252\327|L\341\b\234\245\233u\000\210<\344\027\216\225\r\234\237\031\013\003\217\002\223\000\252K\335\035y}\210\301\003\360\346a\231\341[@JO\252\022\327\234\352\261\004\254`\272\377\331r\320\034\343T\027\rDe\336\005\327\370\250\177\220\217\004\344\033*\035\210J\377\252c\206\233\311O\272\331\202nQ:\022*\035\277\225\374g\002\274\343(\220#\312\345\310\026t\344.\273\373\001\003\253\0343t\254<\037{\034\311N\375T=\341\341\352\361\237\310\353\205\363\314\021{\242<\252\214Y\232e\356\307\272fg0@\026\032\313\313\324\357\357\000\377\351yi@\201<\320\033\360^\377\344\365\225`?2\354A\310\320%b\021\2546?^s\2738\317>gR\372D\257\272\025W\004\3175P\352\006\203\016\001\3478\026[)\033\266b\241!rR\344\021\251`\220\343\355\330\371\020d\273\t\252\016g]V\323xt\\)O8\025=*\214T\322\300\364+\b\227\221\263\363b\206\032f\232\327t\203\370x\033e\376:P\330\375\223\020\000\201\rR\2446Wb\376\275IdN\375\270\024@\341\220fM\004\355\372}-\\\375\241<\347\031\310\214\032`\260\"\324\274n\234Y>\345\2050\020\372/!x\\+\tl\212\003\360\215^\247<\024\370{)\2263v\013\007m\004l16\321K\031\366\332\263{\300S\316H\210\005\307\275\203\305\236\037\332hPMX\364\200-uc\234Vr;\303\023\020\203\244`n1\341xR|C\354N\n\264\030"
	.size	ryu::d2s_full_table::DOUBLE_POW5_SPLIT::hba4162dd50d31dad, 5216

	.type	ryu::digit_table::DIGIT_TABLE::h67064246f2e4c187,%object
	.section	.rodata._ZN3ryu11digit_table11DIGIT_TABLE17h67064246f2e4c187E,"a",%progbits
ryu::digit_table::DIGIT_TABLE::h67064246f2e4c187:
	.ascii	"00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"
	.size	ryu::digit_table::DIGIT_TABLE::h67064246f2e4c187, 200

	.type	.Lanon.58fbd25ae7aa87e0d2ef344e55c3bacf.3,%object
	.section	.rodata..Lanon.58fbd25ae7aa87e0d2ef344e55c3bacf.3,"a",%progbits
.Lanon.58fbd25ae7aa87e0d2ef344e55c3bacf.3:
	.ascii	"0.0"
	.size	.Lanon.58fbd25ae7aa87e0d2ef344e55c3bacf.3, 3

	.type	.Lanon.c5389c40fbf9b668b5009946a4adcadf.24,%object
	.section	.rodata..Lanon.c5389c40fbf9b668b5009946a4adcadf.24,"a",%progbits
.Lanon.c5389c40fbf9b668b5009946a4adcadf.24:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-json-core-0.4.0/src/ser/mod.rs"
	.size	.Lanon.c5389c40fbf9b668b5009946a4adcadf.24, 97

	.type	.Lanon.c5389c40fbf9b668b5009946a4adcadf.25,%object
	.section	.rodata..Lanon.c5389c40fbf9b668b5009946a4adcadf.25,"a",%progbits
	.p2align	2
.Lanon.c5389c40fbf9b668b5009946a4adcadf.25:
	.long	.Lanon.c5389c40fbf9b668b5009946a4adcadf.24
	.asciz	"a\000\000\000N\000\000\000\t\000\000"
	.size	.Lanon.c5389c40fbf9b668b5009946a4adcadf.25, 16

	.type	.Lanon.c5389c40fbf9b668b5009946a4adcadf.33,%object
	.section	.rodata..Lanon.c5389c40fbf9b668b5009946a4adcadf.33,"a",%progbits
.Lanon.c5389c40fbf9b668b5009946a4adcadf.33:
	.ascii	"CustomError"
	.size	.Lanon.c5389c40fbf9b668b5009946a4adcadf.33, 11

	.type	.Lanon.c5389c40fbf9b668b5009946a4adcadf.34,%object
	.section	.rodata..Lanon.c5389c40fbf9b668b5009946a4adcadf.34,"a",%progbits
.Lanon.c5389c40fbf9b668b5009946a4adcadf.34:
	.ascii	"TrailingComma"
	.size	.Lanon.c5389c40fbf9b668b5009946a4adcadf.34, 13

	.type	.Lanon.c5389c40fbf9b668b5009946a4adcadf.35,%object
	.section	.rodata..Lanon.c5389c40fbf9b668b5009946a4adcadf.35,"a",%progbits
.Lanon.c5389c40fbf9b668b5009946a4adcadf.35:
	.ascii	"TrailingCharacters"
	.size	.Lanon.c5389c40fbf9b668b5009946a4adcadf.35, 18

	.type	.Lanon.c5389c40fbf9b668b5009946a4adcadf.36,%object
	.section	.rodata.cst16,"aM",%progbits,16
.Lanon.c5389c40fbf9b668b5009946a4adcadf.36:
	.ascii	"KeyMustBeAString"
	.size	.Lanon.c5389c40fbf9b668b5009946a4adcadf.36, 16

	.type	.Lanon.c5389c40fbf9b668b5009946a4adcadf.37,%object
	.section	.rodata..Lanon.c5389c40fbf9b668b5009946a4adcadf.37,"a",%progbits
.Lanon.c5389c40fbf9b668b5009946a4adcadf.37:
	.ascii	"InvalidUnicodeCodePoint"
	.size	.Lanon.c5389c40fbf9b668b5009946a4adcadf.37, 23

	.type	.Lanon.c5389c40fbf9b668b5009946a4adcadf.38,%object
	.section	.rodata..Lanon.c5389c40fbf9b668b5009946a4adcadf.38,"a",%progbits
.Lanon.c5389c40fbf9b668b5009946a4adcadf.38:
	.ascii	"InvalidType"
	.size	.Lanon.c5389c40fbf9b668b5009946a4adcadf.38, 11

	.type	.Lanon.c5389c40fbf9b668b5009946a4adcadf.39,%object
	.section	.rodata..Lanon.c5389c40fbf9b668b5009946a4adcadf.39,"a",%progbits
.Lanon.c5389c40fbf9b668b5009946a4adcadf.39:
	.ascii	"InvalidNumber"
	.size	.Lanon.c5389c40fbf9b668b5009946a4adcadf.39, 13

	.type	.Lanon.c5389c40fbf9b668b5009946a4adcadf.40,%object
	.section	.rodata..Lanon.c5389c40fbf9b668b5009946a4adcadf.40,"a",%progbits
.Lanon.c5389c40fbf9b668b5009946a4adcadf.40:
	.ascii	"ExpectedSomeValue"
	.size	.Lanon.c5389c40fbf9b668b5009946a4adcadf.40, 17

	.type	.Lanon.c5389c40fbf9b668b5009946a4adcadf.41,%object
	.section	.rodata..Lanon.c5389c40fbf9b668b5009946a4adcadf.41,"a",%progbits
.Lanon.c5389c40fbf9b668b5009946a4adcadf.41:
	.ascii	"ExpectedSomeIdent"
	.size	.Lanon.c5389c40fbf9b668b5009946a4adcadf.41, 17

	.type	.Lanon.c5389c40fbf9b668b5009946a4adcadf.42,%object
	.section	.rodata..Lanon.c5389c40fbf9b668b5009946a4adcadf.42,"a",%progbits
.Lanon.c5389c40fbf9b668b5009946a4adcadf.42:
	.ascii	"ExpectedObjectCommaOrEnd"
	.size	.Lanon.c5389c40fbf9b668b5009946a4adcadf.42, 24

	.type	.Lanon.c5389c40fbf9b668b5009946a4adcadf.43,%object
	.section	.rodata..Lanon.c5389c40fbf9b668b5009946a4adcadf.43,"a",%progbits
.Lanon.c5389c40fbf9b668b5009946a4adcadf.43:
	.ascii	"ExpectedListCommaOrEnd"
	.size	.Lanon.c5389c40fbf9b668b5009946a4adcadf.43, 22

	.type	.Lanon.c5389c40fbf9b668b5009946a4adcadf.44,%object
	.section	.rodata..Lanon.c5389c40fbf9b668b5009946a4adcadf.44,"a",%progbits
.Lanon.c5389c40fbf9b668b5009946a4adcadf.44:
	.ascii	"ExpectedColon"
	.size	.Lanon.c5389c40fbf9b668b5009946a4adcadf.44, 13

	.type	.Lanon.c5389c40fbf9b668b5009946a4adcadf.45,%object
	.section	.rodata..Lanon.c5389c40fbf9b668b5009946a4adcadf.45,"a",%progbits
.Lanon.c5389c40fbf9b668b5009946a4adcadf.45:
	.ascii	"EofWhileParsingValue"
	.size	.Lanon.c5389c40fbf9b668b5009946a4adcadf.45, 20

	.type	.Lanon.c5389c40fbf9b668b5009946a4adcadf.46,%object
	.section	.rodata..Lanon.c5389c40fbf9b668b5009946a4adcadf.46,"a",%progbits
.Lanon.c5389c40fbf9b668b5009946a4adcadf.46:
	.ascii	"EofWhileParsingNumber"
	.size	.Lanon.c5389c40fbf9b668b5009946a4adcadf.46, 21

	.type	.Lanon.c5389c40fbf9b668b5009946a4adcadf.47,%object
	.section	.rodata..Lanon.c5389c40fbf9b668b5009946a4adcadf.47,"a",%progbits
.Lanon.c5389c40fbf9b668b5009946a4adcadf.47:
	.ascii	"EofWhileParsingString"
	.size	.Lanon.c5389c40fbf9b668b5009946a4adcadf.47, 21

	.type	.Lanon.c5389c40fbf9b668b5009946a4adcadf.48,%object
	.section	.rodata..Lanon.c5389c40fbf9b668b5009946a4adcadf.48,"a",%progbits
.Lanon.c5389c40fbf9b668b5009946a4adcadf.48:
	.ascii	"EofWhileParsingObject"
	.size	.Lanon.c5389c40fbf9b668b5009946a4adcadf.48, 21

	.type	.Lanon.c5389c40fbf9b668b5009946a4adcadf.49,%object
	.section	.rodata..Lanon.c5389c40fbf9b668b5009946a4adcadf.49,"a",%progbits
.Lanon.c5389c40fbf9b668b5009946a4adcadf.49:
	.ascii	"EofWhileParsingList"
	.size	.Lanon.c5389c40fbf9b668b5009946a4adcadf.49, 19

	.type	.Lanon.c5389c40fbf9b668b5009946a4adcadf.50,%object
	.section	.rodata..Lanon.c5389c40fbf9b668b5009946a4adcadf.50,"a",%progbits
.Lanon.c5389c40fbf9b668b5009946a4adcadf.50:
	.ascii	"BufferFull"
	.size	.Lanon.c5389c40fbf9b668b5009946a4adcadf.50, 10

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.6,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.6,"a",%progbits
	.p2align	1
.Lanon.dc80c87ea47a70125c3d5d93959ab909.6:
	.ascii	"\000\000\000\000\000\000\000\000\000\000\377\377"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.6, 12

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.7,%object
	.section	.rodata.cst16,"aM",%progbits,16
	.p2align	1
.Lanon.dc80c87ea47a70125c3d5d93959ab909.7:
	.zero	16
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.7, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.8,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.8,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.8:
	.zero	2,58
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.8, 2

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.11,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.11,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.11:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/byteorder-1.4.3/src/lib.rs"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.11, 87

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.12,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.12,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.12:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.11
	.asciz	"W\000\000\000\265\007\000\000\034\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.12, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.13,%object
	.section	.rodata.cst32,"aM",%progbits,32
.Lanon.dc80c87ea47a70125c3d5d93959ab909.13:
	.ascii	"assertion failed: 2 <= buf.len()"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.13, 32

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.14,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.14,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.14:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.11
	.asciz	"W\000\000\000\347\007\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.14, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.15,%object
	.section	.rodata.cst32,"aM",%progbits,32
.Lanon.dc80c87ea47a70125c3d5d93959ab909.15:
	.ascii	"assertion failed: 4 <= buf.len()"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.15, 32

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.16,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.16,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.16:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.11
	.asciz	"W\000\000\000\354\007\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.16, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.17,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.17,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.17:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/managed-0.8.0/src/map.rs"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.17, 85

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.19,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.19,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.19:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.17
	.asciz	"U\000\000\000\327\000\000\000%\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.19, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.20,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.20,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.20:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.17
	.asciz	"U\000\000\000\340\000\000\000/\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.20, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.21,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.21,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.21:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.17
	.asciz	"U\000\000\000/\001\000\0003\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.21, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.23,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.23,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.23:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.17
	.asciz	"U\000\000\0001\001\000\000!\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.23, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.24,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.24,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.24:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.17
	.asciz	"U\000\000\000G\001\000\000\031\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.24, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.25,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.25,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.25:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.17
	.asciz	"U\000\000\000H\001\000\000!\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.25, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.26,%object
	.section	.rodata.cst16,"aM",%progbits,16
.Lanon.dc80c87ea47a70125c3d5d93959ab909.26:
	.ascii	"broken invariant"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.26, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.27,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.27,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.27:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.17
	.asciz	"U\000\000\000H\001\000\000\031\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.27, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.28,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.28,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.28:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.17
	.asciz	"U\000\000\000N\001\000\000(\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.28, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.29,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.29,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.29:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.17
	.asciz	"U\000\000\000O\001\000\0007\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.29, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.30,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.30,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.30:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.17
	.asciz	"U\000\000\000`\001\000\000-\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.30, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.31,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.31,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.31:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.17
	.asciz	"U\000\000\000`\001\000\000?\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.31, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.32,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.32,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.32:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/smoltcp-0.8.0/src/iface/interface.rs"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.32, 97

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.33,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.33,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.33:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.32
	.asciz	"a\000\000\000\240\001\000\0007\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.33, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.34,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.34,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.34:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.32
	.asciz	"a\000\000\000\247\001\000\000\033\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.34, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.36,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.36,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.36:
	.ascii	" is not unicast"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.36, 15

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.39,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.39,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.39:
	.ascii	"IP address "
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.39, 11

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.40,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.40,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.40:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.39
	.asciz	"\013\000\000"
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.36
	.asciz	"\017\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.40, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.41,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.41,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.41:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.32
	.asciz	"a\000\000\000e\004\000\000\021\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.41, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.42,%object
	.section	.rodata.cst16,"aM",%progbits,16
.Lanon.dc80c87ea47a70125c3d5d93959ab909.42:
	.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.42, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.43,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.43,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.43:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.32
	.asciz	"a\000\000\000\276\005\000\000\033\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.43, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.44,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.44,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.44:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.32
	.asciz	"a\000\000\0002\007\000\000\036\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.44, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.45,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.45,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.45:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.32
	.asciz	"a\000\000\0008\007\000\000\036\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.45, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.46,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.46,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.46:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.32
	.asciz	"a\000\000\000H\007\000\0002\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.46, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.47,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.47,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.47:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.32
	.asciz	"a\000\000\000T\007\000\0009\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.47, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.48,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.48,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.48:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.32
	.asciz	"a\000\000\000\273\b\000\000\026\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.48, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.49,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.49,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.49:
	.ascii	"empty neighbor cache storage"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.49, 28

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.50,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.50,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.50:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/smoltcp-0.8.0/src/iface/neighbor.rs"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.50, 96

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.51,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.51,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.51:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.50
	.asciz	"`\000\000\000\253\000\000\000\036\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.51, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.52,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.52,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.52:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.50
	.asciz	"`\000\000\000\254\000\000\000\036\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.52, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.53,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.53,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.53:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.50
	.asciz	"`\000\000\000\264\000\000\000M\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.53, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.54,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.54,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.54:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.50
	.asciz	"`\000\000\000\300\000\000\000\032\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.54, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.55,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.55,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.55:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.50
	.asciz	"`\000\000\000\250\000\000\000K\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.55, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.56,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.56,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.56:
	.ascii	"assertion failed: protocol_addr.is_unicast()"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.56, 44

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.57,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.57,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.57:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.50
	.asciz	"`\000\000\000\307\000\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.57, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.58,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.58,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.58:
	.ascii	"assertion failed: addr.is_unicast()"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.58, 35

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.59,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.59,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.59:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/smoltcp-0.8.0/src/iface/route.rs"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.59, 93

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.60,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.60,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.60:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.59
	.asciz	"]\000\000\000\202\000\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.60, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.68,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.68,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.68:
	.ascii	"assertion failed: repr.src_port == DHCP_SERVER_PORT && repr.dst_port == DHCP_CLIENT_PORT"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.68, 88

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.69,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.69,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.69:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/smoltcp-0.8.0/src/socket/dhcpv4.rs"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.69, 95

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.70,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.70,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.70:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.69
	.asciz	"_\000\000\000\313\000\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.70, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.71,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.71,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.71:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.69
	.asciz	"_\000\000\000b\001\000\000\025\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.71, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.72,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.72,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.72:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/smoltcp-0.8.0/src/socket/raw.rs"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.72, 92

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.74,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.74,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.74:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.72
	.asciz	"\\\000\000\000\342\000\000\000\033\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.74, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.75,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.75,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.75:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.72
	.asciz	"\\\000\000\000\343\000\000\000\"\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.75, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.99,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.99,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.99:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/smoltcp-0.8.0/src/socket/tcp.rs"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.99, 92

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.102,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.102,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.102:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.99
	.asciz	"\\\000\000\000/\005\000\000,\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.102, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.104,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.104,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.104:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.99
	.asciz	"\\\000\000\000\247\007\000\000'\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.104, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.105,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.105,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.105:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/smoltcp-0.8.0/src/socket/udp.rs"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.105, 92

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.108,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.108,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.108:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.105
	.asciz	"\\\000\000\000G\001\000\000\016\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.108, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.111,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.111,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.111:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/smoltcp-0.8.0/src/storage/assembler.rs"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.111, 99

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.114,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.114,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.114:
	.long	CORE_PERIPHERALS
	.zero	4
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.114, 8

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.121,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.121,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.121:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.111
	.asciz	"c\000\000\000\340\000\000\000\021\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.121, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.125,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.125,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.125:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/smoltcp-0.8.0/src/storage/ring_buffer.rs"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.125, 101

	.type	str.0.1011,%object
	.section	.rodata.str.0.1011,"a",%progbits
	.p2align	4
str.0.1011:
	.ascii	"attempt to calculate the remainder with a divisor of zero"
	.size	str.0.1011, 57

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.126,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.126,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.126:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.125
	.asciz	"e\000\000\000m\000\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.126, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.128,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.128,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.128:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.125
	.asciz	"e\000\000\000\303\000\000\000%\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.128, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.129,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.129,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.129:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.125
	.asciz	"e\000\000\000\367\000\000\000%\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.129, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.130,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.130,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.130:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.125
	.asciz	"e\000\000\000<\001\000\000\016\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.130, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.131,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.131,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.131:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.125
	.asciz	"e\000\000\000J\001\000\000$\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.131, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.132,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.132,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.132:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.125
	.asciz	"e\000\000\000P\001\000\000$\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.132, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.133,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.133,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.133:
	.ascii	"assertion failed: count <= self.window()"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.133, 40

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.134,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.134,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.134:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.125
	.asciz	"e\000\000\000[\001\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.134, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.136,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.136,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.136:
	.ascii	"assertion failed: count <= self.len()"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.136, 37

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.137,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.137,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.137:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.125
	.asciz	"e\000\000\000\220\001\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.137, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.139,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.139,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.139:
	.byte	46
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.139, 1

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.181,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.181,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.181:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/smoltcp-0.8.0/src/wire/dhcpv4.rs"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.181, 93

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.182,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.182,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.182:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.181
	.asciz	"]\000\000\000}\000\000\000&\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.182, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.183,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.183,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.183:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.181
	.asciz	"]\000\000\000}\000\000\000/\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.183, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.184,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.184,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.184:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.181
	.asciz	"]\000\000\000}\000\000\0008\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.184, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.185,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.185,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.185:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.181
	.asciz	"]\000\000\000x\000\000\000\035\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.185, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.186,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.186,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.186:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.181
	.asciz	"]\000\000\000x\000\000\000&\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.186, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.187,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.187,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.187:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.181
	.asciz	"]\000\000\000\211\000\000\000\016\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.187, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.188,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.188,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.188:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.181
	.asciz	"]\000\000\000\251\000\000\000\021\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.188, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.189,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.189,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.189:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.181
	.asciz	"]\000\000\000\322\000\000\000\031\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.189, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.190,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.190,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.190:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.181
	.asciz	"]\000\000\000\322\000\000\0000\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.190, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.191,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.191,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.191:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.181
	.asciz	"]\000\000\000\307\000\000\000\031\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.191, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.192,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.192,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.192:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.181
	.asciz	"]\000\000\000\303\000\000\000\031\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.192, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.193,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.193,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.193:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.181
	.asciz	"]\000\000\000\277\000\000\000\031\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.193, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.194,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.194,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.194:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.181
	.asciz	"]\000\000\000\313\000\000\000\031\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.194, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.195,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.195,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.195:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.181
	.asciz	"]\000\000\000\273\000\000\000\031\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.195, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.196,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.196,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.196:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.181
	.asciz	"]\000\000\000\262\000\000\000\031\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.196, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.197,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.197,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.197:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.181
	.asciz	"]\000\000\000\263\000\000\000\031\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.197, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.198,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.198,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.198:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.181
	.asciz	"]\000\000\000\267\000\000\000\031\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.198, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.199,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.199,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.199:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.181
	.asciz	"]\000\000\000\256\000\000\000\031\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.199, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.200,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.200,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.200:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.181
	.asciz	"]\000\000\000\245\000\000\000\021\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.200, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.201,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.201,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.201:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.181
	.asciz	"]\000\000\000\241\000\000\000\021\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.201, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.202,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.202,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.202:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.181
	.asciz	"]\000\000\000\327\000\000\000\016\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.202, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.204,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.204,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.204:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.181
	.asciz	"]\000\000\000\345\001\000\000\032\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.204, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.205,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.205,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.205:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.181
	.asciz	"]\000\000\000\350\001\000\000\032\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.205, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.206,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.206,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.206:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.181
	.asciz	"]\000\000\000(\002\000\000\032\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.206, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.207,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.207,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.207:
	.zero	12
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.207, 12

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.217,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.217,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.217:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/smoltcp-0.8.0/src/wire/ethernet.rs"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.217, 95

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.218,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.218,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.218:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.217
	.asciz	"_\000\000\000)\000\000\000\017\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.218, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.219,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.219,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.219:
	.byte	45
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.219, 1

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.220,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.220,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.220:
	.long	CORE_PERIPHERALS
	.zero	4
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.219
	.asciz	"\001\000\000"
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.219
	.asciz	"\001\000\000"
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.219
	.asciz	"\001\000\000"
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.219
	.asciz	"\001\000\000"
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.219
	.asciz	"\001\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.220, 48

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.221,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.221,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.221:
	.asciz	"\000\000\000\000 \000\000\000\b\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000 \000\000\000\b\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\003\000\000\000\002\000\000\000 \000\000\000\b\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\003\000\000\000\003\000\000\000 \000\000\000\b\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\003\000\000\000\004\000\000\000 \000\000\000\b\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\003\000\000\000\005\000\000\000 \000\000\000\b\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\002\000\000\000\003\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.221, 192

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.234,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.234,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.234:
	.ascii	"parameter problem"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.234, 17

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.235,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.235,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.235:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.234
	.asciz	"\021\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.235, 8

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.236,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.236,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.236:
	.ascii	"time exceeded"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.236, 13

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.237,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.237,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.237:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.236
	.asciz	"\r\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.237, 8

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.238,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.238,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.238:
	.ascii	"router solicitation"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.238, 19

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.239,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.239,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.239:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.238
	.asciz	"\023\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.239, 8

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.240,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.240,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.240:
	.ascii	"router advertisement"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.240, 20

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.241,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.241,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.241:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.240
	.asciz	"\024\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.241, 8

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.242,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.242,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.242:
	.ascii	"echo request"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.242, 12

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.243,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.243,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.243:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.242
	.asciz	"\f\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.243, 8

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.246,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.246,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.246:
	.ascii	"destination unreachable"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.246, 23

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.247,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.247,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.247:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.246
	.asciz	"\027\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.247, 8

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.248,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.248,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.248:
	.ascii	"echo reply"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.248, 10

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.249,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.249,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.249:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.248
	.asciz	"\n\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.249, 8

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.282,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.282,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.282:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/smoltcp-0.8.0/src/wire/icmpv4.rs"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.282, 93

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.288,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.288,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.288:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.282
	.asciz	"]\000\000\000*\001\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.288, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.289,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.289,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.289:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.282
	.asciz	"]\000\000\000;\001\000\000'\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.289, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.290,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.290,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.290:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.282
	.asciz	"]\000\000\000E\001\000\000'\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.290, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.291,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.291,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.291:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.282
	.asciz	"]\000\000\000Y\001\000\000\016\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.291, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.293,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.293,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.293:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.282
	.asciz	"]\000\000\000\347\001\000\000$\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.293, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.294,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.294,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.294:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.282
	.asciz	"]\000\000\000\350\001\000\000\031\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.294, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.308,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.308,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.308:
	.ascii	"multicast listener report"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.308, 25

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.309,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.309,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.309:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.308
	.asciz	"\031\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.309, 8

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.310,%object
	.section	.rodata.cst8,"aM",%progbits,8
.Lanon.dc80c87ea47a70125c3d5d93959ab909.310:
	.ascii	"redirect"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.310, 8

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.311,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.311,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.311:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.310
	.asciz	"\b\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.311, 8

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.312,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.312,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.312:
	.ascii	"neighbor advert"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.312, 15

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.313,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.313,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.313:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.312
	.asciz	"\017\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.313, 8

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.314,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.314,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.314:
	.ascii	"neighbor solicitation"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.314, 21

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.315,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.315,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.315:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.314
	.asciz	"\025\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.315, 8

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.316,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.316,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.316:
	.ascii	"multicast listener query"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.316, 24

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.317,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.317,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.317:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.316
	.asciz	"\030\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.317, 8

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.318,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.318,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.318:
	.ascii	"packet too big"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.318, 14

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.319,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.319,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.319:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.318
	.asciz	"\016\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.319, 8

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.344,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.344,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.344:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/smoltcp-0.8.0/src/wire/icmpv6.rs"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.344, 93

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.345,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.345,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.345:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.344
	.asciz	"]\000\000\000\034\001\000\000\027\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.345, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.346,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.346,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.346:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.344
	.asciz	"]\000\000\000x\001\000\000\n\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.346, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.347,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.347,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.347:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.344
	.asciz	"]\000\000\000\201\001\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.347, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.348,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.348,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.348:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.344
	.asciz	"]\000\000\000\210\001\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.348, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.349,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.349,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.349:
	.ascii	"Message type `"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.349, 14

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.350,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.350,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.350:
	.ascii	"` does not have any reserved fields."
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.350, 36

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.351,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.351,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.351:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.349
	.asciz	"\016\000\000"
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.350
	.asciz	"$\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.351, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.352,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.352,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.352:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.344
	.asciz	"]\000\000\000\245\001\000\000\023\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.352, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.353,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.353,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.353:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.344
	.asciz	"]\000\000\000\243\001\000\000/\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.353, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.354,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.354,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.354:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.344
	.asciz	"]\000\000\000\232\001\000\000/\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.354, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.355,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.355,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.355:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.344
	.asciz	"]\000\000\000\236\001\000\000/\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.355, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.356,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.356,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.356:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.344
	.asciz	"]\000\000\000\237\001\000\000\021\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.356, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.357,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.357,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.357:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.344
	.asciz	"]\000\000\000\254\001\000\000'\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.357, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.358,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.358,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.358:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.344
	.asciz	"]\000\000\000\266\001\000\000'\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.358, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.359,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.359,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.359:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.344
	.asciz	"]\000\000\000\300\001\000\000'\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.359, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.360,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.360,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.360:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.344
	.asciz	"]\000\000\000\312\001\000\000'\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.360, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.361,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.361,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.361:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.344
	.asciz	"]\000\000\000\324\001\000\000'\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.361, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.362,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.362,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.362:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.344
	.asciz	"]\000\000\000\351\001\000\000\016\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.362, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.363,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.363,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.363:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.344
	.asciz	"]\000\000\000.\002\000\000\034\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.363, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.366,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.366,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.366:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.344
	.asciz	"]\000\000\000\223\002\000\000 \000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.366, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.367,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.367,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.367:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.344
	.asciz	"]\000\000\000\224\002\000\000\025\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.367, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.368,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.368,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.368:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/smoltcp-0.8.0/src/wire/ip.rs"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.368, 89

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.369,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.369,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.369:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.368
	.asciz	"Y\000\000\000\035\000\000\000\017\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.369, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.393,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.393,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.393:
	.byte	42
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.393, 1

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.394,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.394,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.394:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.393
	.asciz	"\001\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.394, 8

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.397,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.397,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.397:
	.byte	58
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.397, 1

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.399,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.399,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.399:
	.ascii	"source and destination IP address families do not match"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.399, 55

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.400,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.400,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.400:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.368
	.asciz	"Y\000\000\000\365\002\000\000\021\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.400, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.401,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.401,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.401:
	.ascii	"unspecified IP representation"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.401, 29

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.402,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.402,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.402:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.368
	.asciz	"Y\000\000\000\000\003\000\000)\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.402, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.403,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.403,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.403:
	.ascii	"Unexpected pseudo header addresses: "
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.403, 36

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.404,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.404,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.404:
	.ascii	", "
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.404, 2

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.405,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.405,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.405:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.403
	.asciz	"$\000\000"
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.404
	.asciz	"\002\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.405, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.406,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.406,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.406:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.368
	.asciz	"Y\000\000\000z\003\000\000\022\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.406, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.412,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.412,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.412:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/smoltcp-0.8.0/src/wire/ipv4.rs"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.412, 91

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.413,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.413,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.413:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.412
	.asciz	"[\000\000\0004\000\000\000\017\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.413, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.414,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.414,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.414:
	.long	CORE_PERIPHERALS
	.zero	4
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.139
	.asciz	"\001\000\000"
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.139
	.asciz	"\001\000\000"
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.139
	.asciz	"\001\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.414, 32

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.415,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.415,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.415:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.412
	.asciz	"[\000\000\000\220\000\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.415, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.417,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.417,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.417:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.412
	.asciz	"[\000\000\000V\001\000\000\n\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.417, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.418,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.418,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.418:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.412
	.asciz	"[\000\000\000i\001\000\000\"\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.418, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.420,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.420,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.420:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.412
	.asciz	"[\000\000\000\277\001\000\000\n\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.420, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.421,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.421,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.421:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.412
	.asciz	"[\000\000\000\310\001\000\000!\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.421, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.422,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.422,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.422:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.412
	.asciz	"[\000\000\000\325\001\000\000\"\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.422, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.423,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.423,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.423:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.412
	.asciz	"[\000\000\000\342\001\000\000'\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.423, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.424,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.424,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.424:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.412
	.asciz	"[\000\000\000\351\001\000\000'\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.424, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.425,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.425,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.425:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.412
	.asciz	"[\000\000\000\360\001\000\000,\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.425, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.426,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.426,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.426:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.412
	.asciz	"[\000\000\000\024\002\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.426, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.427,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.427,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.427:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.412
	.asciz	"[\000\000\000\033\002\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.427, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.428,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.428,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.428:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.412
	.asciz	"[\000\000\000)\002\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.428, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.429,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.429,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.429:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.412
	.asciz	"[\000\000\0000\002\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.429, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.433,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.433,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.433:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/smoltcp-0.8.0/src/wire/ipv6.rs"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.433, 91

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.438,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.438,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.438:
	.ascii	"assertion failed: mask <= 128"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.438, 29

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.439,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.439,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.439:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.433
	.asciz	"[\000\000\000\246\000\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.439, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.440,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.440,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.440:
	.ascii	"assertion failed: self.is_unicast()"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.440, 35

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.441,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.441,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.441:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.433
	.asciz	"[\000\000\000\271\000\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.441, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.442,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.442,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.442:
	.ascii	"::ffff:"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.442, 7

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.443,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.443,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.443:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.442
	.asciz	"\007\000\000"
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.139
	.asciz	"\001\000\000"
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.139
	.asciz	"\001\000\000"
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.139
	.asciz	"\001\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.443, 32

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.444,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.444,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.444:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.397
	.asciz	"\001\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.444, 8

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.445,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.445,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.445:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.8
	.asciz	"\002\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.445, 8

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.449,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.449,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.449:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.433
	.asciz	"[\000\000\000\020\002\000\000\024\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.449, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.450,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.450,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.450:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.433
	.asciz	"[\000\000\000\034\002\000\000\024\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.450, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.451,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.451,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.451:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.433
	.asciz	"[\000\000\000%\002\000\000'\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.451, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.452,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.452,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.452:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.433
	.asciz	"[\000\000\000,\002\000\000'\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.452, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.453,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.453,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.453:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.433
	.asciz	"[\000\000\000:\002\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.453, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.454,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.454,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.454:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.433
	.asciz	"[\000\000\000A\002\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.454, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.455,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.455,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.455:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.433
	.asciz	"[\000\000\000H\002\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.455, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.465,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.465,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.465:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/smoltcp-0.8.0/src/wire/ipv6hopbyhop.rs"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.465, 99

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.466,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.466,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.466:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.465
	.asciz	"c\000\000\000t\000\000\000\n\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.466, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.518,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.518,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.518:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/smoltcp-0.8.0/src/wire/mld.rs"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.518, 90

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.519,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.519,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.519:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.518
	.asciz	"Z\000\000\0004\000\000\000\"\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.519, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.520,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.520,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.520:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.518
	.asciz	"Z\000\000\000;\000\000\000\n\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.520, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.521,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.521,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.521:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.518
	.asciz	"Z\000\000\000I\000\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.521, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.522,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.522,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.522:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.518
	.asciz	"Z\000\000\000P\000\000\000\"\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.522, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.523,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.523,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.523:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.518
	.asciz	"Z\000\000\000j\000\000\000'\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.523, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.524,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.524,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.524:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.518
	.asciz	"Z\000\000\000q\000\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.524, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.525,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.525,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.525:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.518
	.asciz	"Z\000\000\000x\000\000\000\027\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.525, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.526,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.526,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.526:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.518
	.asciz	"Z\000\000\000\200\000\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.526, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.527,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.527,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.527:
	.ascii	"assertion failed: value < 8"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.527, 27

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.528,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.528,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.528:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.518
	.asciz	"Z\000\000\000\206\000\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.528, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.529,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.529,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.529:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.518
	.asciz	"Z\000\000\000\217\000\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.529, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.530,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.530,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.530:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.518
	.asciz	"Z\000\000\000\226\000\000\000'\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.530, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.531,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.531,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.531:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.518
	.asciz	"Z\000\000\000\243\000\000\000'\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.531, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.532,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.532,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.532:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.518
	.asciz	"Z\000\000\000\202\001\000\000&\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.532, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.533,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.533,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.533:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.518
	.asciz	"Z\000\000\000x\001\000\000&\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.533, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.534,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.534,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.534:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/smoltcp-0.8.0/src/wire/ndisc.rs"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.534, 92

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.535,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.535,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.535:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.534
	.asciz	"\\\000\000\000y\000\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.535, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.536,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.536,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.536:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.534
	.asciz	"\\\000\000\000\177\000\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.536, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.537,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.537,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.537:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.534
	.asciz	"\\\000\000\000\206\000\000\000'\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.537, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.538,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.538,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.538:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.534
	.asciz	"\\\000\000\000\215\000\000\000'\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.538, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.539,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.539,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.539:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.534
	.asciz	"\\\000\000\000\224\000\000\000'\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.539, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.540,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.540,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.540:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.534
	.asciz	"\\\000\000\000\243\000\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.540, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.541,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.541,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.541:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.534
	.asciz	"\\\000\000\000\257\000\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.541, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.542,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.542,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.542:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.534
	.asciz	"\\\000\000\000\274\000\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.542, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.543,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.543,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.543:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.534
	.asciz	"\\\000\000\000:\001\000\0009\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.543, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.544,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.544,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.544:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.534
	.asciz	"\\\000\000\000E\001\000\000@\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.544, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.545,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.545,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.545:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.534
	.asciz	"\\\000\000\000G\001\000\000-\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.545, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.546,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.546,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.546:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.534
	.asciz	"\\\000\000\000\374\000\000\0009\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.546, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.547,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.547,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.547:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.534
	.asciz	"\\\000\000\000\366\001\000\0009\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.547, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.548,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.548,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.548:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.534
	.asciz	"\\\000\000\000\270\001\000\0009\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.548, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.549,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.549,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.549:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.534
	.asciz	"\\\000\000\000\276\001\000\0009\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.549, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.560,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.560,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.560:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/smoltcp-0.8.0/src/wire/ndiscoption.rs"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.560, 98

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.561,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.561,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.561:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.560
	.asciz	"b\000\000\000\320\000\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.561, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.562,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.562,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.562:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.560
	.asciz	"b\000\000\000\333\000\000\000)\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.562, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.563,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.563,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.563:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.560
	.asciz	"b\000\000\000\002\001\000\0006\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.563, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.564,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.564,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.564:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.560
	.asciz	"b\000\000\000\t\001\000\000\"\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.564, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.565,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.565,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.565:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.560
	.asciz	"b\000\000\000\023\001\000\000\n\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.565, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.566,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.566,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.566:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.560
	.asciz	"b\000\000\000\035\001\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.566, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.567,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.567,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.567:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.560
	.asciz	"b\000\000\000$\001\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.567, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.568,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.568,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.568:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.560
	.asciz	"b\000\000\000.\001\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.568, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.569,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.569,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.569:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.560
	.asciz	"b\000\000\0008\001\000\000'\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.569, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.570,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.570,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.570:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.560
	.asciz	"b\000\000\000\\\001\000\000'\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.570, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.571,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.571,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.571:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.560
	.asciz	"b\000\000\000c\001\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.571, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.572,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.572,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.572:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.560
	.asciz	"b\000\000\000m\001\000\000'\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.572, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.573,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.573,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.573:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.560
	.asciz	"b\000\000\000w\001\000\000\016\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.573, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.574,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.574,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.574:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.560
	.asciz	"b\000\000\000\325\001\000\000 \000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.574, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.575,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.575,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.575:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.560
	.asciz	"b\000\000\0002\002\000\000 \000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.575, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.576,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.576,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.576:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.560
	.asciz	"b\000\000\000!\002\000\0004\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.576, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.577,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.577,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.577:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.560
	.asciz	"b\000\000\000#\002\000\000$\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.577, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.578,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.578,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.578:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.560
	.asciz	"b\000\000\000$\002\000\000\031\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.578, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.593,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.593,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.593:
	.ascii	"attempt to add to sequence number with unsigned overflow"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.593, 56

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.594,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.594,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.594:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/smoltcp-0.8.0/src/wire/tcp.rs"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.594, 90

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.595,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.595,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.595:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.594
	.asciz	"Z\000\000\000\034\000\000\000\r\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.595, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.598,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.598,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.598:
	.ascii	"attempt to subtract sequence numbers with underflow"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.598, 51

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.599,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.599,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.599:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.594
	.asciz	"Z\000\000\0009\000\000\000\r\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.599, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.606,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.606,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.606:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.594
	.asciz	"Z\000\000\000\017\001\000\000\"\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.606, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.608,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.608,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.608:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.594
	.asciz	"Z\000\000\000f\001\000\000\n\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.608, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.609,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.609,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.609:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.594
	.asciz	"Z\000\000\000n\001\000\000\n\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.609, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.610,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.610,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.610:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.594
	.asciz	"Z\000\000\000w\001\000\000'\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.610, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.611,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.611,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.611:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.594
	.asciz	"Z\000\000\000~\001\000\000'\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.611, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.612,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.612,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.612:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.594
	.asciz	"Z\000\000\000\205\001\000\000'\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.612, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.613,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.613,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.613:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.594
	.asciz	"Z\000\000\000\214\001\000\000'\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.613, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.614,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.614,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.614:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.594
	.asciz	"Z\000\000\000\032\002\000\000'\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.614, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.615,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.615,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.615:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.594
	.asciz	"Z\000\000\000(\002\000\000'\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.615, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.616,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.616,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.616:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.594
	.asciz	"Z\000\000\000A\002\000\000\016\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.616, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.617,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.617,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.617:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.594
	.asciz	"Z\000\000\000I\002\000\000\016\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.617, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.618,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.618,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.618:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.594
	.asciz	"Z\000\000\000u\002\000\000K\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.618, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.619,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.619,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.619:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.594
	.asciz	"Z\000\000\000\240\002\000\000\016\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.619, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.620,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.620,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.620:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.594
	.asciz	"Z\000\000\000\223\002\000\000K\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.620, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.621,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.621,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.621:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.594
	.asciz	"Z\000\000\000\224\002\000\000L\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.621, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.622,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.622,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.622:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.594
	.asciz	"Z\000\000\000\277\002\000\000\021\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.622, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.623,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.623,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.623:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.594
	.asciz	"Z\000\000\000\337\002\000\000%\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.623, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.624,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.624,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.624:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.594
	.asciz	"Z\000\000\000\310\002\000\000\031\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.624, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.625,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.625,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.625:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.594
	.asciz	"Z\000\000\000\273\002\000\000\021\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.625, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.626,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.626,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.626:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.594
	.asciz	"Z\000\000\000\344\002\000\000\016\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.626, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.627,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.627,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.627:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.594
	.asciz	"Z\000\000\000\326\002\000\000?\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.627, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.628,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.628,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.628:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.594
	.asciz	"Z\000\000\000\327\002\000\000?\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.628, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.629,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.629,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.629:
	.asciz	"\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.629, 40

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.630,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.630,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.630:
	.zero	40
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.630, 40

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.631,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.631,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.631:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.594
	.asciz	"Z\000\000\000\304\003\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.631, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.667,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.667,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.667:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/smoltcp-0.8.0/src/wire/udp.rs"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.667, 90

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.669,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.669,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.669:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.667
	.asciz	"Z\000\000\000Z\000\000\000\"\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.669, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.670,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.670,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.670:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.667
	.asciz	"Z\000\000\000a\000\000\000\"\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.670, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.672,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.672,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.672:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.667
	.asciz	"Z\000\000\000{\000\000\000\035\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.672, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.673,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.673,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.673:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.667
	.asciz	"Z\000\000\000\206\000\000\000\n\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.673, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.674,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.674,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.674:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.667
	.asciz	"Z\000\000\000\217\000\000\000'\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.674, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.675,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.675,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.675:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.667
	.asciz	"Z\000\000\000\226\000\000\000'\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.675, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.676,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.676,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.676:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.667
	.asciz	"Z\000\000\000\235\000\000\000'\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.676, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.677,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.677,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.677:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.667
	.asciz	"Z\000\000\000\244\000\000\000'\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.677, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.678,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.678,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.678:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.667
	.asciz	"Z\000\000\000\262\000\000\000!\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.678, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.679,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.679,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.679:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.667
	.asciz	"Z\000\000\000\301\000\000\000\016\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.679, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.683,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.683,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.683:
	.ascii	"/home/norman/.cargo/registry/src/github.com-1ecc6299db9ec823/smoltcp-0.8.0/src/wire/mod.rs"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.683, 90

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.685,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.685,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.685:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.683
	.asciz	"Z\000\000\000W\001\000\000\n\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.685, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.762,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.762,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.762:
	.ascii	"SocketHandle"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.762, 12

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.763,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.763,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.763:
	.long	core::ptr::drop_in_place<bool>::h0b92a80a750bd66f
	.asciz	"\004\000\000\000\004\000\000"
	.long	<&T as core::fmt::Debug>::fmt::h45af9a73fc454a88
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.763, 16

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.1194,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.1194,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.1194:
	.ascii	"NotSupported"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.1194, 12

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.1195,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.1195,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.1195:
	.ascii	"Dropped"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.1195, 7

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.1196,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.1196,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.1196:
	.ascii	"Malformed"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.1196, 9

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.1197,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.1197,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.1197:
	.ascii	"Fragmented"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.1197, 10

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.1198,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.1198,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.1198:
	.ascii	"Unrecognized"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.1198, 12

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.1199,%object
	.section	.rodata.cst8,"aM",%progbits,8
.Lanon.dc80c87ea47a70125c3d5d93959ab909.1199:
	.ascii	"Checksum"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.1199, 8

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.1200,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.1200,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.1200:
	.ascii	"Truncated"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.1200, 9

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.1201,%object
	.section	.rodata.cst8,"aM",%progbits,8
.Lanon.dc80c87ea47a70125c3d5d93959ab909.1201:
	.ascii	"Finished"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.1201, 8

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.1202,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.1202,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.1202:
	.ascii	"Unaddressable"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.1202, 13

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.1203,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.1203,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.1203:
	.ascii	"Illegal"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.1203, 7

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.1204,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.1204,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.1204:
	.ascii	"Exhausted"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.1204, 9

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.1218,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.1218,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.1218:
	.ascii	"/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/slice/mod.rs"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.1218, 77

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.1219,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.1219,"a",%progbits
.Lanon.dc80c87ea47a70125c3d5d93959ab909.1219:
	.ascii	"assertion failed: mid <= self.len()"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.1219, 35

	.type	.Lanon.dc80c87ea47a70125c3d5d93959ab909.1220,%object
	.section	.rodata..Lanon.dc80c87ea47a70125c3d5d93959ab909.1220,"a",%progbits
	.p2align	2
.Lanon.dc80c87ea47a70125c3d5d93959ab909.1220:
	.long	.Lanon.dc80c87ea47a70125c3d5d93959ab909.1218
	.asciz	"M\000\000\000v\013\000\000\t\000\000"
	.size	.Lanon.dc80c87ea47a70125c3d5d93959ab909.1220, 16

	.type	.Lanon.d60fa0a6be4cd9bff433fd8cd5be529e.0,%object
	.section	.rodata..Lanon.d60fa0a6be4cd9bff433fd8cd5be529e.0,"a",%progbits
.Lanon.d60fa0a6be4cd9bff433fd8cd5be529e.0:
	.ascii	"NoIpAddress"
	.size	.Lanon.d60fa0a6be4cd9bff433fd8cd5be529e.0, 11

	.type	.Lanon.d60fa0a6be4cd9bff433fd8cd5be529e.1,%object
	.section	.rodata..Lanon.d60fa0a6be4cd9bff433fd8cd5be529e.1,"a",%progbits
.Lanon.d60fa0a6be4cd9bff433fd8cd5be529e.1:
	.ascii	"Unsupported"
	.size	.Lanon.d60fa0a6be4cd9bff433fd8cd5be529e.1, 11

	.type	.Lanon.d60fa0a6be4cd9bff433fd8cd5be529e.2,%object
	.section	.rodata..Lanon.d60fa0a6be4cd9bff433fd8cd5be529e.2,"a",%progbits
.Lanon.d60fa0a6be4cd9bff433fd8cd5be529e.2:
	.ascii	"WriteFailure"
	.size	.Lanon.d60fa0a6be4cd9bff433fd8cd5be529e.2, 12

	.type	.Lanon.d60fa0a6be4cd9bff433fd8cd5be529e.3,%object
	.section	.rodata..Lanon.d60fa0a6be4cd9bff433fd8cd5be529e.3,"a",%progbits
.Lanon.d60fa0a6be4cd9bff433fd8cd5be529e.3:
	.ascii	"ReadFailure"
	.size	.Lanon.d60fa0a6be4cd9bff433fd8cd5be529e.3, 11

	.type	.Lanon.d60fa0a6be4cd9bff433fd8cd5be529e.4,%object
	.section	.rodata..Lanon.d60fa0a6be4cd9bff433fd8cd5be529e.4,"a",%progbits
.Lanon.d60fa0a6be4cd9bff433fd8cd5be529e.4:
	.ascii	"ConnectionFailure"
	.size	.Lanon.d60fa0a6be4cd9bff433fd8cd5be529e.4, 17

	.type	.Lanon.d60fa0a6be4cd9bff433fd8cd5be529e.5,%object
	.section	.rodata.cst8,"aM",%progbits,8
.Lanon.d60fa0a6be4cd9bff433fd8cd5be529e.5:
	.ascii	"NoSocket"
	.size	.Lanon.d60fa0a6be4cd9bff433fd8cd5be529e.5, 8

	.type	__INTERRUPTS,%object
	.section	.vector_table.interrupts,"a",%progbits
	.globl	__INTERRUPTS
	.p2align	2
__INTERRUPTS:
	.long	WWDG1
	.long	PVD_PVM
	.long	RTC_TAMP_STAMP_CSS_LSE
	.long	RTC_WKUP
	.long	FLASH
	.long	RCC
	.long	EXTI0
	.long	EXTI1
	.long	EXTI2
	.long	EXTI3
	.long	EXTI4
	.long	DMA1_STR0
	.long	DMA1_STR1
	.long	DMA1_STR2
	.long	DMA1_STR3
	.long	DMA1_STR4
	.long	DMA1_STR5
	.long	DMA1_STR6
	.long	ADC1_2
	.long	FDCAN1_IT0
	.long	FDCAN2_IT0
	.long	FDCAN1_IT1
	.long	FDCAN2_IT1
	.long	EXTI9_5
	.long	TIM1_BRK
	.long	TIM1_UP
	.long	TIM1_TRG_COM
	.long	TIM_CC
	.long	TIM2
	.long	TIM3
	.long	TIM4
	.long	I2C1_EV
	.long	I2C1_ER
	.long	I2C2_EV
	.long	I2C2_ER
	.long	SPI1
	.long	SPI2
	.long	USART1
	.long	USART2
	.long	USART3
	.long	EXTI15_10
	.long	RTC_ALARM
	.zero	4
	.long	TIM8_BRK_TIM12
	.long	TIM8_UP_TIM13
	.long	TIM8_TRG_COM_TIM14
	.long	TIM8_CC
	.long	DMA1_STR7
	.long	FMC
	.long	SDMMC1
	.long	TIM5
	.long	SPI3
	.long	UART4
	.long	UART5
	.long	TIM6_DAC
	.long	TIM7
	.long	DMA2_STR0
	.long	DMA2_STR1
	.long	DMA2_STR2
	.long	DMA2_STR3
	.long	DMA2_STR4
	.long	ETH
	.long	ETH_WKUP
	.long	FDCAN_CAL
	.zero	16
	.long	DMA2_STR5
	.long	DMA2_STR6
	.long	DMA2_STR7
	.long	USART6
	.long	I2C3_EV
	.long	I2C3_ER
	.long	OTG_HS_EP1_OUT
	.long	OTG_HS_EP1_IN
	.long	OTG_HS_WKUP
	.long	OTG_HS
	.long	DCMI
	.zero	8
	.long	FPU
	.long	UART7
	.long	UART8
	.long	SPI4
	.long	SPI5
	.long	SPI6
	.long	SAI1
	.long	LTDC
	.long	LTDC_ER
	.long	DMA2D
	.long	SAI2
	.long	QUADSPI
	.long	LPTIM1
	.long	CEC
	.long	I2C4_EV
	.long	I2C4_ER
	.long	SPDIF
	.long	OTG_FS_EP1_OUT
	.long	OTG_FS_EP1_IN
	.long	OTG_FS_WKUP
	.long	OTG_FS
	.long	DMAMUX1_OV
	.long	HRTIM1_MST
	.long	HRTIM1_TIMA
	.long	HRTIM_TIMB
	.long	HRTIM1_TIMC
	.long	HRTIM1_TIMD
	.long	HRTIM_TIME
	.long	HRTIM1_FLT
	.long	DFSDM1_FLT0
	.long	DFSDM1_FLT1
	.long	DFSDM1_FLT2
	.long	DFSDM1_FLT3
	.long	SAI3
	.long	SWPMI1
	.long	TIM15
	.long	TIM16
	.long	TIM17
	.long	MDIOS_WKUP
	.long	MDIOS
	.long	JPEG
	.long	MDMA
	.zero	4
	.long	SDMMC
	.long	HSEM0
	.zero	4
	.long	ADC3
	.long	DMAMUX2_OVR
	.long	BDMA_CH1
	.long	BDMA_CH2
	.long	BDMA_CH3
	.long	BDMA_CH4
	.long	BDMA_CH5
	.long	BDMA_CH6
	.long	BDMA_CH7
	.long	BDMA_CH8
	.long	COMP
	.long	LPTIM2
	.long	LPTIM3
	.long	LPTIM4
	.long	LPTIM5
	.long	LPUART
	.long	WWDG1_RST
	.long	CRS
	.long	RAMECC
	.long	SAI4
	.zero	8
	.long	WKUP
	.size	__INTERRUPTS, 600

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.3,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.3,"a",%progbits
.Lanon.a766a8867b32155983aeb12c9f88ad10.3:
	.ascii	"/home/norman/.cargo/git/checkouts/stm32h7xx-hal-6d4075b8f01f2ff9/0d984a2/src/adc.rs"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.3, 83

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.5,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.5,"a",%progbits
.Lanon.a766a8867b32155983aeb12c9f88ad10.5:
	.ascii	"internal error: entered unreachable code"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.5, 40

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.10,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.10,"a",%progbits
.Lanon.a766a8867b32155983aeb12c9f88ad10.10:
	.ascii	"not implemented"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.10, 15

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.39,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.39,"a",%progbits
.Lanon.a766a8867b32155983aeb12c9f88ad10.39:
	.ascii	"/home/norman/.cargo/git/checkouts/stm32h7xx-hal-6d4075b8f01f2ff9/0d984a2/src/rcc/mod.rs"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.39, 87

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.43,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.43,"a",%progbits
.Lanon.a766a8867b32155983aeb12c9f88ad10.43:
	.ascii	"HSI oscillator must be on!"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.43, 26

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.44,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.44,"a",%progbits
	.p2align	2
.Lanon.a766a8867b32155983aeb12c9f88ad10.44:
	.long	.Lanon.a766a8867b32155983aeb12c9f88ad10.43
	.asciz	"\032\000\000"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.44, 8

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.45,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.45,"a",%progbits
	.p2align	2
.Lanon.a766a8867b32155983aeb12c9f88ad10.45:
	.long	.Lanon.a766a8867b32155983aeb12c9f88ad10.39
	.asciz	"W\000\000\000\275\002\000\000\t\000\000"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.45, 16

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.46,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.46,"a",%progbits
.Lanon.a766a8867b32155983aeb12c9f88ad10.46:
	.ascii	"assertion failed: rcc.cr.read().hsidiv().is_div1()"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.46, 50

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.47,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.47,"a",%progbits
	.p2align	2
.Lanon.a766a8867b32155983aeb12c9f88ad10.47:
	.long	.Lanon.a766a8867b32155983aeb12c9f88ad10.39
	.asciz	"W\000\000\000\276\002\000\000\t\000\000"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.47, 16

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.65,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.65,"a",%progbits
.Lanon.a766a8867b32155983aeb12c9f88ad10.65:
	.ascii	"assertion failed: rcc.cr.read().csirdy().is_ready()"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.65, 51

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.66,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.66,"a",%progbits
	.p2align	2
.Lanon.a766a8867b32155983aeb12c9f88ad10.66:
	.long	.Lanon.a766a8867b32155983aeb12c9f88ad10.39
	.asciz	"W\000\000\000\305\003\000\000\t\000\000"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.66, 16

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.69,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.69,"a",%progbits
.Lanon.a766a8867b32155983aeb12c9f88ad10.69:
	.ascii	"/home/norman/.cargo/git/checkouts/stm32h7xx-hal-6d4075b8f01f2ff9/0d984a2/src/rng.rs"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.69, 83

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.71,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.71,"a",%progbits
	.p2align	2
.Lanon.a766a8867b32155983aeb12c9f88ad10.71:
	.long	.Lanon.a766a8867b32155983aeb12c9f88ad10.69
	.asciz	"S\000\000\000)\000\000\000\037\000\000"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.71, 16

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.72,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.72,"a",%progbits
.Lanon.a766a8867b32155983aeb12c9f88ad10.72:
	.ascii	"RNG: PLL1_Q must be enabled"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.72, 27

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.73,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.73,"a",%progbits
	.p2align	2
.Lanon.a766a8867b32155983aeb12c9f88ad10.73:
	.long	.Lanon.a766a8867b32155983aeb12c9f88ad10.69
	.asciz	"S\000\000\000'\000\000\000$\000\000"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.73, 16

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.76,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.76,"a",%progbits
.Lanon.a766a8867b32155983aeb12c9f88ad10.76:
	.ascii	"RNG: Clock too slow"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.76, 19

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.77,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.77,"a",%progbits
	.p2align	2
.Lanon.a766a8867b32155983aeb12c9f88ad10.77:
	.long	.Lanon.a766a8867b32155983aeb12c9f88ad10.76
	.asciz	"\023\000\000"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.77, 8

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.78,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.78,"a",%progbits
	.p2align	2
.Lanon.a766a8867b32155983aeb12c9f88ad10.78:
	.long	.Lanon.a766a8867b32155983aeb12c9f88ad10.69
	.asciz	"S\000\000\000>\000\000\000\t\000\000"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.78, 16

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.154,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.154,"a",%progbits
.Lanon.a766a8867b32155983aeb12c9f88ad10.154:
	.ascii	"Cannot start calibration when the ADC is enabled"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.154, 48

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.155,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.155,"a",%progbits
	.p2align	2
.Lanon.a766a8867b32155983aeb12c9f88ad10.155:
	.long	.Lanon.a766a8867b32155983aeb12c9f88ad10.154
	.asciz	"0\000\000"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.155, 8

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.156,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.156,"a",%progbits
	.p2align	2
.Lanon.a766a8867b32155983aeb12c9f88ad10.156:
	.long	.Lanon.a766a8867b32155983aeb12c9f88ad10.3
	.asciz	"S\000\000\000p\003\000\000\001\000\000"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.156, 16

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.157,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.157,"a",%progbits
.Lanon.a766a8867b32155983aeb12c9f88ad10.157:
	.ascii	"Cannot start calibration when the ADC is in deeppowerdown-mode"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.157, 62

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.158,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.158,"a",%progbits
	.p2align	2
.Lanon.a766a8867b32155983aeb12c9f88ad10.158:
	.long	.Lanon.a766a8867b32155983aeb12c9f88ad10.157
	.asciz	">\000\000"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.158, 8

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.159,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.159,"a",%progbits
.Lanon.a766a8867b32155983aeb12c9f88ad10.159:
	.ascii	"Cannot start calibration when the ADC voltage regulator is disabled"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.159, 67

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.160,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.160,"a",%progbits
	.p2align	2
.Lanon.a766a8867b32155983aeb12c9f88ad10.160:
	.long	.Lanon.a766a8867b32155983aeb12c9f88ad10.159
	.asciz	"C\000\000"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.160, 8

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.161,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.161,"a",%progbits
.Lanon.a766a8867b32155983aeb12c9f88ad10.161:
	.ascii	"No channel was selected, use start_conversion first"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.161, 51

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.162,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.162,"a",%progbits
.Lanon.a766a8867b32155983aeb12c9f88ad10.162:
	.ascii	"Cannot start conversion because a regular conversion is ongoing"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.162, 63

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.163,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.163,"a",%progbits
	.p2align	2
.Lanon.a766a8867b32155983aeb12c9f88ad10.163:
	.long	.Lanon.a766a8867b32155983aeb12c9f88ad10.162
	.asciz	"?\000\000"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.163, 8

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.164,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.164,"a",%progbits
.Lanon.a766a8867b32155983aeb12c9f88ad10.164:
	.ascii	"Cannot start conversion because an injected conversion is ongoing"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.164, 65

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.165,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.165,"a",%progbits
	.p2align	2
.Lanon.a766a8867b32155983aeb12c9f88ad10.165:
	.long	.Lanon.a766a8867b32155983aeb12c9f88ad10.164
	.asciz	"A\000\000"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.165, 8

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.166,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.166,"a",%progbits
.Lanon.a766a8867b32155983aeb12c9f88ad10.166:
	.ascii	"Cannot start conversion because ADC is currently disabled"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.166, 57

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.167,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.167,"a",%progbits
	.p2align	2
.Lanon.a766a8867b32155983aeb12c9f88ad10.167:
	.long	.Lanon.a766a8867b32155983aeb12c9f88ad10.166
	.asciz	"9\000\000"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.167, 8

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.168,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.168,"a",%progbits
.Lanon.a766a8867b32155983aeb12c9f88ad10.168:
	.ascii	"Cannot start conversion because there is a pending request to disable the ADC"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.168, 77

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.169,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.169,"a",%progbits
	.p2align	2
.Lanon.a766a8867b32155983aeb12c9f88ad10.169:
	.long	.Lanon.a766a8867b32155983aeb12c9f88ad10.168
	.asciz	"M\000\000"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.169, 8

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.170,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.170,"a",%progbits
	.p2align	2
.Lanon.a766a8867b32155983aeb12c9f88ad10.170:
	.long	.Lanon.a766a8867b32155983aeb12c9f88ad10.3
	.asciz	"S\000\000\000v\003\000\000\001\000\000"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.170, 16

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.275,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.275,"a",%progbits
.Lanon.a766a8867b32155983aeb12c9f88ad10.275:
	.ascii	"called `Option::unwrap()` on a `None` value"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.275, 43

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.305,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.305,"a",%progbits
.Lanon.a766a8867b32155983aeb12c9f88ad10.305:
	.ascii	"/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/library/core/src/ops/arith.rs"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.305, 77

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.306,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.306,"a",%progbits
	.p2align	2
.Lanon.a766a8867b32155983aeb12c9f88ad10.306:
	.long	.Lanon.a766a8867b32155983aeb12c9f88ad10.305
	.asciz	"M\000\000\000\373\001\000\000\001\000\000"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.306, 16

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.339,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.339,"a",%progbits
.Lanon.a766a8867b32155983aeb12c9f88ad10.339:
	.ascii	"SeedError"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.339, 9

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.340,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.340,"a",%progbits
.Lanon.a766a8867b32155983aeb12c9f88ad10.340:
	.ascii	"ClockError"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.340, 10

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.387,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.387,"a",%progbits
.Lanon.a766a8867b32155983aeb12c9f88ad10.387:
	.ascii	"Overrun"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.387, 7

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.426,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.426,"a",%progbits
.Lanon.a766a8867b32155983aeb12c9f88ad10.426:
	.ascii	"BufferTooBig"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.426, 12

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.427,%object
	.section	.rodata.cst8,"aM",%progbits,8
.Lanon.a766a8867b32155983aeb12c9f88ad10.427:
	.ascii	"max_size"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.427, 8

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.428,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.428,"a",%progbits
	.p2align	2
.Lanon.a766a8867b32155983aeb12c9f88ad10.428:
	.long	core::ptr::drop_in_place<bool>::h0b92a80a750bd66f
	.asciz	"\004\000\000\000\004\000\000"
	.long	<&T as core::fmt::Debug>::fmt::h45af9a73fc454a88
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.428, 16

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.429,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.429,"a",%progbits
.Lanon.a766a8867b32155983aeb12c9f88ad10.429:
	.ascii	"TransactionAlreadyStarted"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.429, 25

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.430,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.430,"a",%progbits
.Lanon.a766a8867b32155983aeb12c9f88ad10.430:
	.ascii	"InvalidCall"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.430, 11

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.431,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.431,"a",%progbits
.Lanon.a766a8867b32155983aeb12c9f88ad10.431:
	.ascii	"Crc"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.431, 3

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.432,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.432,"a",%progbits
.Lanon.a766a8867b32155983aeb12c9f88ad10.432:
	.ascii	"ModeFault"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.432, 9

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.437,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.437,"a",%progbits
.Lanon.a766a8867b32155983aeb12c9f88ad10.437:
	.ascii	"/home/norman/.cargo/git/checkouts/stm32h7xx-hal-6d4075b8f01f2ff9/0d984a2/src/spi.rs"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.437, 83

	.type	.Lanon.a766a8867b32155983aeb12c9f88ad10.438,%object
	.section	.rodata..Lanon.a766a8867b32155983aeb12c9f88ad10.438,"a",%progbits
	.p2align	2
.Lanon.a766a8867b32155983aeb12c9f88ad10.438:
	.long	.Lanon.a766a8867b32155983aeb12c9f88ad10.437
	.asciz	"S\000\000\000f\005\000\000\001\000\000"
	.size	.Lanon.a766a8867b32155983aeb12c9f88ad10.438, 16

	.type	.Lswitch.table._ZN6minimq2de13packet_reader21PacketReader$LT$_$GT$15read_properties17hf2ea26764b522615E,%object
	.section	".rodata..Lswitch.table._ZN6minimq2de13packet_reader21PacketReader$LT$_$GT$15read_properties17hf2ea26764b522615E","a",%progbits
	.p2align	2
.Lswitch.table._ZN6minimq2de13packet_reader21PacketReader$LT$_$GT$15read_properties17hf2ea26764b522615E:
	.long	4294967295
	.long	1
	.long	2
	.long	3
	.long	8
	.long	9
	.long	11
	.long	17
	.long	18
	.long	19
	.long	21
	.long	22
	.long	23
	.long	24
	.long	25
	.long	26
	.long	28
	.long	31
	.long	33
	.long	34
	.long	35
	.long	36
	.long	37
	.long	38
	.long	39
	.long	40
	.long	41
	.long	42
	.size	.Lswitch.table._ZN6minimq2de13packet_reader21PacketReader$LT$_$GT$15read_properties17hf2ea26764b522615E, 112

	.type	.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal17read_p3v3_voltage17h6384078c1e9603b1E,%object
	.section	.rodata.cst32,"aM",%progbits,32
	.p2align	2
.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal17read_p3v3_voltage17h6384078c1e9603b1E:
	.long	2048
	.long	2560
	.long	3072
	.long	3584
	.long	0
	.long	512
	.long	1024
	.long	1536
	.size	.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal17read_p3v3_voltage17h6384078c1e9603b1E, 32

	.type	.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal17read_p3v3_voltage17h6384078c1e9603b1E.1516,%object
	.section	.rodata..Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal17read_p3v3_voltage17h6384078c1e9603b1E.1516,"a",%progbits
	.p2align	2
.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal17read_p3v3_voltage17h6384078c1e9603b1E.1516:
	.long	8
	.long	16
	.long	14
	.long	12
	.long	10
	.size	.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal17read_p3v3_voltage17h6384078c1e9603b1E.1516, 20

	.type	.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal16read_p5v_voltage17hd7943cf86bed6258E,%object
	.section	.rodata.cst32,"aM",%progbits,32
	.p2align	2
.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal16read_p5v_voltage17hd7943cf86bed6258E:
	.long	4
	.long	5
	.long	6
	.long	7
	.long	0
	.long	1
	.long	2
	.long	3
	.size	.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal16read_p5v_voltage17hd7943cf86bed6258E, 32

	.type	.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal16read_p5v_voltage17hd7943cf86bed6258E.1517,%object
	.section	.rodata..Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal16read_p5v_voltage17hd7943cf86bed6258E.1517,"a",%progbits
	.p2align	2
.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal16read_p5v_voltage17hd7943cf86bed6258E.1517:
	.long	8
	.long	16
	.long	14
	.long	12
	.long	10
	.size	.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal16read_p5v_voltage17hd7943cf86bed6258E.1517, 20

	.type	.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal17read_p12v_voltage17h207bff0f1b1841c3E,%object
	.section	.rodata.cst32,"aM",%progbits,32
	.p2align	2
.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal17read_p12v_voltage17h207bff0f1b1841c3E:
	.long	256
	.long	320
	.long	384
	.long	448
	.long	0
	.long	64
	.long	128
	.long	192
	.size	.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal17read_p12v_voltage17h207bff0f1b1841c3E, 32

	.type	.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal17read_p12v_voltage17h207bff0f1b1841c3E.1518,%object
	.section	.rodata..Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal17read_p12v_voltage17h207bff0f1b1841c3E.1518,"a",%progbits
	.p2align	2
.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal17read_p12v_voltage17h207bff0f1b1841c3E.1518:
	.long	8
	.long	16
	.long	14
	.long	12
	.long	10
	.size	.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal17read_p12v_voltage17h207bff0f1b1841c3E.1518, 20

	.type	.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal17read_p12v_current17hf5e87fe4806b3249E,%object
	.section	.rodata.cst32,"aM",%progbits,32
	.p2align	2
.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal17read_p12v_current17hf5e87fe4806b3249E:
	.long	8388608
	.long	10485760
	.long	12582912
	.long	14680064
	.long	0
	.long	2097152
	.long	4194304
	.long	6291456
	.size	.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal17read_p12v_current17hf5e87fe4806b3249E, 32

	.type	.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal17read_p12v_current17hf5e87fe4806b3249E.1519,%object
	.section	.rodata..Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal17read_p12v_current17hf5e87fe4806b3249E.1519,"a",%progbits
	.p2align	2
.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal17read_p12v_current17hf5e87fe4806b3249E.1519:
	.long	8
	.long	16
	.long	14
	.long	12
	.long	10
	.size	.Lswitch.table._ZN14thermostat_eem8hardware12adc_internal11AdcInternal17read_p12v_current17hf5e87fe4806b3249E.1519, 20

	.type	.Lswitch.table._ZN14thermostat_eem3net25NetworkUsers$LT$S$C$T$GT$6update17hb27cd5067be64adfE,%object
	.section	".rodata..Lswitch.table._ZN14thermostat_eem3net25NetworkUsers$LT$S$C$T$GT$6update17hb27cd5067be64adfE","a",%progbits
	.p2align	2
.Lswitch.table._ZN14thermostat_eem3net25NetworkUsers$LT$S$C$T$GT$6update17hb27cd5067be64adfE:
	.long	8
	.long	22
	.long	22
	.long	13
	.long	7
	.size	.Lswitch.table._ZN14thermostat_eem3net25NetworkUsers$LT$S$C$T$GT$6update17hb27cd5067be64adfE, 20

	.type	.Lswitch.table.DCMI,%object
	.section	.rodata.cst32,"aM",%progbits,32
	.p2align	2
.Lswitch.table.DCMI:
	.long	131072
	.long	163840
	.long	196608
	.long	229376
	.long	0
	.long	32768
	.long	65536
	.long	98304
	.size	.Lswitch.table.DCMI, 32

	.type	.Lswitch.table.DCMI.1520,%object
	.p2align	2
.Lswitch.table.DCMI.1520:
	.long	536870912
	.long	671088640
	.long	805306368
	.long	939524096
	.long	0
	.long	134217728
	.long	268435456
	.long	402653184
	.size	.Lswitch.table.DCMI.1520, 32

	.type	.Lswitch.table.DCMI.1521,%object
	.p2align	2
.Lswitch.table.DCMI.1521:
	.long	16384
	.long	20480
	.long	24576
	.long	28672
	.long	0
	.long	4096
	.long	8192
	.long	12288
	.size	.Lswitch.table.DCMI.1521, 32

	.type	.Lswitch.table.DCMI.1522,%object
	.p2align	2
.Lswitch.table.DCMI.1522:
	.long	67108864
	.long	83886080
	.long	100663296
	.long	117440512
	.long	0
	.long	16777216
	.long	33554432
	.long	50331648
	.size	.Lswitch.table.DCMI.1522, 32

	.type	.Lswitch.table.DCMI.1523,%object
	.p2align	2
.Lswitch.table.DCMI.1523:
	.long	2048
	.long	2560
	.long	3072
	.long	3584
	.long	0
	.long	512
	.long	1024
	.long	1536
	.size	.Lswitch.table.DCMI.1523, 32

	.type	.Lswitch.table.DCMI.1524,%object
	.p2align	2
.Lswitch.table.DCMI.1524:
	.long	1048576
	.long	1310720
	.long	1572864
	.long	1835008
	.long	0
	.long	262144
	.long	524288
	.long	786432
	.size	.Lswitch.table.DCMI.1524, 32

	.type	.Lswitch.table.DCMI.1525,%object
	.p2align	2
.Lswitch.table.DCMI.1525:
	.long	131072
	.long	163840
	.long	196608
	.long	229376
	.long	0
	.long	32768
	.long	65536
	.long	98304
	.size	.Lswitch.table.DCMI.1525, 32

	.type	.Lswitch.table.DCMI.1526,%object
	.p2align	2
.Lswitch.table.DCMI.1526:
	.long	67108864
	.long	83886080
	.long	100663296
	.long	117440512
	.long	0
	.long	16777216
	.long	33554432
	.long	50331648
	.size	.Lswitch.table.DCMI.1526, 32

	.type	.Lswitch.table.DCMI.1527,%object
	.p2align	2
.Lswitch.table.DCMI.1527:
	.long	536870912
	.long	671088640
	.long	805306368
	.long	939524096
	.long	0
	.long	134217728
	.long	268435456
	.long	402653184
	.size	.Lswitch.table.DCMI.1527, 32

	.type	.Lswitch.table.DCMI.1528,%object
	.p2align	2
.Lswitch.table.DCMI.1528:
	.long	2048
	.long	2560
	.long	3072
	.long	3584
	.long	0
	.long	512
	.long	1024
	.long	1536
	.size	.Lswitch.table.DCMI.1528, 32

	.type	.Lswitch.table.DCMI.1529,%object
	.p2align	2
.Lswitch.table.DCMI.1529:
	.long	536870912
	.long	671088640
	.long	805306368
	.long	939524096
	.long	0
	.long	134217728
	.long	268435456
	.long	402653184
	.size	.Lswitch.table.DCMI.1529, 32

	.type	.Lswitch.table.DCMI.1530,%object
	.p2align	2
.Lswitch.table.DCMI.1530:
	.long	131072
	.long	163840
	.long	196608
	.long	229376
	.long	0
	.long	32768
	.long	65536
	.long	98304
	.size	.Lswitch.table.DCMI.1530, 32

	.type	.Lswitch.table.DCMI.1531,%object
	.section	.rodata..Lswitch.table.DCMI.1531,"a",%progbits
	.p2align	2
.Lswitch.table.DCMI.1531:
	.long	8
	.long	16
	.long	14
	.long	12
	.long	10
	.size	.Lswitch.table.DCMI.1531, 20

	.type	.Lswitch.table.DCMI.1532,%object
	.section	.rodata..Lswitch.table.DCMI.1532,"a",%progbits
	.p2align	2
.Lswitch.table.DCMI.1532:
	.long	8
	.long	16
	.long	14
	.long	12
	.long	10
	.size	.Lswitch.table.DCMI.1532, 20

	.type	.Lswitch.table.DCMI.1533,%object
	.section	.rodata..Lswitch.table.DCMI.1533,"a",%progbits
	.p2align	2
.Lswitch.table.DCMI.1533:
	.long	8
	.long	16
	.long	14
	.long	12
	.long	10
	.size	.Lswitch.table.DCMI.1533, 20

	.type	.Lswitch.table._ZN14thermostat_eem3app8rtic_ext4main21__rtic_init_resources17h9d4547472bd32894E,%object
	.section	.rodata..Lswitch.table._ZN14thermostat_eem3app8rtic_ext4main21__rtic_init_resources17h9d4547472bd32894E,"a",%progbits
	.p2align	2
.Lswitch.table._ZN14thermostat_eem3app8rtic_ext4main21__rtic_init_resources17h9d4547472bd32894E:
	.long	8
	.long	22
	.long	22
	.long	13
	.long	7
	.size	.Lswitch.table._ZN14thermostat_eem3app8rtic_ext4main21__rtic_init_resources17h9d4547472bd32894E, 20

	.type	.Lswitch.table._ZN151_$LT$miniconf..mqtt_client..messages..SettingsResponse$u20$as$u20$core..convert..From$LT$core..result..Result$LT$$LP$$RP$$C$miniconf..Error$GT$$GT$$GT$4from17h7c53701d03be7865E,%object
	.section	".rodata..Lswitch.table._ZN151_$LT$miniconf..mqtt_client..messages..SettingsResponse$u20$as$u20$core..convert..From$LT$core..result..Result$LT$$LP$$RP$$C$miniconf..Error$GT$$GT$$GT$4from17h7c53701d03be7865E","a",%progbits
.Lswitch.table._ZN151_$LT$miniconf..mqtt_client..messages..SettingsResponse$u20$as$u20$core..convert..From$LT$core..result..Result$LT$$LP$$RP$$C$miniconf..Error$GT$$GT$$GT$4from17h7c53701d03be7865E:
	.ascii	"\001\002\003\004\005\007\006"
	.size	.Lswitch.table._ZN151_$LT$miniconf..mqtt_client..messages..SettingsResponse$u20$as$u20$core..convert..From$LT$core..result..Result$LT$$LP$$RP$$C$miniconf..Error$GT$$GT$$GT$4from17h7c53701d03be7865E, 7

	.type	.Lswitch.table._ZN7smoltcp5iface9interface8IpPacket12emit_payload17hc58717c03a59069eE,%object
	.section	.rodata.str1.1,"aMS",%progbits,1
.Lswitch.table._ZN7smoltcp5iface9interface8IpPacket12emit_payload17hc58717c03a59069eE:
	.asciz	"\001\002\001\001\002\002\001\001"
	.size	.Lswitch.table._ZN7smoltcp5iface9interface8IpPacket12emit_payload17hc58717c03a59069eE, 9

	.type	.Lswitch.table._ZN7smoltcp4wire2ip8checksum13pseudo_header17ha771da54de6c08b8E,%object
	.section	.rodata..Lswitch.table._ZN7smoltcp4wire2ip8checksum13pseudo_header17ha771da54de6c08b8E,"a",%progbits
.Lswitch.table._ZN7smoltcp4wire2ip8checksum13pseudo_header17ha771da54de6c08b8E:
	.ascii	"\006\021+,:"
	.size	.Lswitch.table._ZN7smoltcp4wire2ip8checksum13pseudo_header17ha771da54de6c08b8E, 5

	.type	.Lswitch.table._ZN7smoltcp4wire2ip8checksum13pseudo_header17ha771da54de6c08b8E.1534,%object
	.section	.rodata..Lswitch.table._ZN7smoltcp4wire2ip8checksum13pseudo_header17ha771da54de6c08b8E.1534,"a",%progbits
.Lswitch.table._ZN7smoltcp4wire2ip8checksum13pseudo_header17ha771da54de6c08b8E.1534:
	.ascii	"\006\021+,:"
	.size	.Lswitch.table._ZN7smoltcp4wire2ip8checksum13pseudo_header17ha771da54de6c08b8E.1534, 5

	.type	.Lswitch.table._ZN7smoltcp5iface9interface14InterfaceInner15process_nxt_hdr17ha5140fab79ee143bE,%object
	.section	.rodata.cst32,"aM",%progbits,32
	.p2align	2
.Lswitch.table._ZN7smoltcp5iface9interface14InterfaceInner15process_nxt_hdr17ha5140fab79ee143bE:
	.long	28
	.long	40
	.long	40
	.long	40
	.long	16
	.long	24
	.long	24
	.long	40
	.size	.Lswitch.table._ZN7smoltcp5iface9interface14InterfaceInner15process_nxt_hdr17ha5140fab79ee143bE, 32

	.type	.L_MergedGlobals,%object
	.section	.bss..L_MergedGlobals,"aw",%nobits
	.p2align	3
.L_MergedGlobals:
	.zero	80
	.size	.L_MergedGlobals, 80

	.section	.debug_abbrev,"",%progbits
	.byte	1
	.byte	17
	.byte	1
	.byte	37
	.byte	14
	.byte	19
	.byte	5
	.byte	3
	.byte	14
	.byte	16
	.byte	23
	.byte	27
	.byte	14
	.ascii	"\264B"
	.byte	25
	.byte	17
	.byte	1
	.byte	85
	.byte	23
	.byte	0
	.byte	0
	.byte	2
	.byte	57
	.byte	1
	.byte	3
	.byte	14
	.byte	0
	.byte	0
	.byte	3
	.byte	46
	.byte	0
	.byte	110
	.byte	14
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	32
	.byte	11
	.byte	0
	.byte	0
	.byte	4
	.byte	46
	.byte	0
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	110
	.byte	14
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	0
	.byte	0
	.byte	5
	.byte	46
	.byte	0
	.byte	110
	.byte	14
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	32
	.byte	11
	.byte	0
	.byte	0
	.byte	6
	.byte	46
	.byte	0
	.byte	110
	.byte	14
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	63
	.byte	25
	.byte	32
	.byte	11
	.byte	0
	.byte	0
	.byte	7
	.byte	46
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	110
	.byte	14
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	63
	.byte	25
	.byte	0
	.byte	0
	.byte	8
	.byte	29
	.byte	0
	.byte	49
	.byte	19
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	88
	.byte	11
	.byte	89
	.byte	5
	.byte	87
	.byte	11
	.byte	0
	.byte	0
	.byte	9
	.byte	29
	.byte	1
	.byte	49
	.byte	19
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	88
	.byte	11
	.byte	89
	.byte	5
	.byte	87
	.byte	11
	.byte	0
	.byte	0
	.byte	10
	.byte	29
	.byte	0
	.byte	49
	.byte	19
	.byte	85
	.byte	23
	.byte	88
	.byte	11
	.byte	89
	.byte	11
	.byte	87
	.byte	11
	.byte	0
	.byte	0
	.byte	11
	.byte	29
	.byte	0
	.byte	49
	.byte	19
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	88
	.byte	11
	.byte	89
	.byte	11
	.byte	87
	.byte	11
	.byte	0
	.byte	0
	.byte	12
	.byte	29
	.byte	0
	.byte	49
	.byte	19
	.byte	85
	.byte	23
	.byte	88
	.byte	11
	.byte	89
	.byte	5
	.byte	87
	.byte	11
	.byte	0
	.byte	0
	.byte	13
	.byte	46
	.byte	0
	.byte	110
	.byte	14
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	63
	.byte	25
	.byte	32
	.byte	11
	.byte	0
	.byte	0
	.byte	14
	.byte	46
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	110
	.byte	14
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	63
	.byte	25
	.byte	0
	.byte	0
	.byte	15
	.byte	29
	.byte	1
	.byte	49
	.byte	19
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	88
	.byte	11
	.byte	89
	.byte	11
	.byte	87
	.byte	11
	.byte	0
	.byte	0
	.byte	16
	.byte	46
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	110
	.byte	14
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	0
	.byte	0
	.byte	17
	.byte	29
	.byte	1
	.byte	49
	.byte	19
	.byte	85
	.byte	23
	.byte	88
	.byte	11
	.byte	89
	.byte	11
	.byte	87
	.byte	11
	.byte	0
	.byte	0
	.byte	18
	.byte	29
	.byte	1
	.byte	49
	.byte	19
	.byte	85
	.byte	23
	.byte	88
	.byte	11
	.byte	89
	.byte	5
	.byte	87
	.byte	11
	.byte	0
	.byte	0
	.byte	19
	.byte	46
	.byte	0
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	49
	.byte	19
	.byte	0
	.byte	0
	.byte	20
	.byte	46
	.byte	0
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	110
	.byte	14
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	63
	.byte	25
	.byte	0
	.byte	0
	.byte	21
	.byte	46
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	49
	.byte	19
	.byte	0
	.byte	0
	.byte	22
	.byte	46
	.byte	0
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	110
	.byte	14
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	0
	.byte	0
	.byte	23
	.byte	46
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	110
	.byte	14
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	0
	.byte	0
	.byte	24
	.byte	46
	.byte	0
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	110
	.byte	14
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	63
	.byte	25
	.byte	0
	.byte	0
	.byte	25
	.byte	46
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	110
	.byte	14
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.byte	63
	.byte	25
	.ascii	"\207\001"
	.byte	25
	.byte	0
	.byte	0
	.byte	26
	.byte	46
	.byte	0
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	110
	.byte	14
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.ascii	"\207\001"
	.byte	25
	.byte	0
	.byte	0
	.byte	27
	.byte	46
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	110
	.byte	14
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	11
	.ascii	"\207\001"
	.byte	25
	.byte	0
	.byte	0
	.byte	28
	.byte	46
	.byte	1
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	110
	.byte	14
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	63
	.byte	25
	.ascii	"\207\001"
	.byte	25
	.byte	0
	.byte	0
	.byte	29
	.byte	46
	.byte	0
	.byte	17
	.byte	1
	.byte	18
	.byte	6
	.byte	64
	.byte	24
	.byte	110
	.byte	14
	.byte	3
	.byte	14
	.byte	58
	.byte	11
	.byte	59
	.byte	5
	.byte	63
	.byte	25
	.ascii	"\207\001"
	.byte	25
	.byte	0
	.byte	0
	.byte	0
	.section	.debug_info,"",%progbits
.Lcu_begin0:
	.long	.Ldebug_info_end0-.Ldebug_info_start0
.Ldebug_info_start0:
	.short	4
	.long	.debug_abbrev
	.byte	4
	.byte	1
	.long	.Linfo_string0
	.short	28
	.long	.Linfo_string1
	.long	.Lline_table_start0
	.long	.Linfo_string2

	.long	0
	.long	.Ldebug_ranges286
	.byte	2
	.long	.Linfo_string3
	.byte	2
	.long	.Linfo_string4
	.byte	3
	.long	.Linfo_string5
	.long	.Linfo_string6
	.byte	2
	.short	1050
	.byte	1
	.byte	2
	.long	.Linfo_string41
	.byte	2
	.long	.Linfo_string42
	.byte	3
	.long	.Linfo_string43
	.long	.Linfo_string44
	.byte	10
	.short	300
	.byte	1
	.byte	3
	.long	.Linfo_string197
	.long	.Linfo_string173
	.byte	10
	.short	685
	.byte	1
	.byte	3
	.long	.Linfo_string366
	.long	.Linfo_string353
	.byte	10
	.short	300
	.byte	1
	.byte	0
	.byte	0
	.byte	4
	.long	.Lfunc_begin70
	.long	.Lfunc_end70-.Lfunc_begin70
	.byte	1
	.byte	87
	.long	.Linfo_string667
	.long	.Linfo_string668
	.byte	2
	.byte	188
	.byte	3
	.long	.Linfo_string104
	.long	.Linfo_string105
	.byte	2
	.short	880
	.byte	1
	.byte	3
	.long	.Linfo_string106
	.long	.Linfo_string107
	.byte	2
	.short	880
	.byte	1
	.byte	2
	.long	.Linfo_string170
	.byte	2
	.long	.Linfo_string42
	.byte	3
	.long	.Linfo_string171
	.long	.Linfo_string44
	.byte	31
	.short	290
	.byte	1
	.byte	3
	.long	.Linfo_string172
	.long	.Linfo_string173
	.byte	31
	.short	571
	.byte	1
	.byte	3
	.long	.Linfo_string352
	.long	.Linfo_string353
	.byte	31
	.short	290
	.byte	1
	.byte	3
	.long	.Linfo_string354
	.long	.Linfo_string355
	.byte	31
	.short	571
	.byte	1
	.byte	3
	.long	.Linfo_string386
	.long	.Linfo_string387
	.byte	31
	.short	290
	.byte	1
	.byte	3
	.long	.Linfo_string388
	.long	.Linfo_string389
	.byte	31
	.short	571
	.byte	1
	.byte	3
	.long	.Linfo_string427
	.long	.Linfo_string428
	.byte	31
	.short	290
	.byte	1
	.byte	3
	.long	.Linfo_string429
	.long	.Linfo_string430
	.byte	31
	.short	571
	.byte	1
	.byte	2
	.long	.Linfo_string474
	.byte	3
	.long	.Linfo_string475
	.long	.Linfo_string476
	.byte	31
	.short	951
	.byte	1
	.byte	0
	.byte	3
	.long	.Linfo_string481
	.long	.Linfo_string320
	.byte	31
	.short	943
	.byte	1
	.byte	0
	.byte	0
	.byte	3
	.long	.Linfo_string181
	.long	.Linfo_string182
	.byte	2
	.short	784
	.byte	1
	.byte	3
	.long	.Linfo_string201
	.long	.Linfo_string202
	.byte	2
	.short	977
	.byte	1
	.byte	3
	.long	.Linfo_string319
	.long	.Linfo_string320
	.byte	2
	.short	1147
	.byte	1
	.byte	2
	.long	.Linfo_string346
	.byte	2
	.long	.Linfo_string347
	.byte	5
	.long	.Linfo_string348
	.long	.Linfo_string349
	.byte	42
	.byte	194
	.byte	1
	.byte	0
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string7
	.byte	2
	.long	.Linfo_string8
	.byte	3
	.long	.Linfo_string9
	.long	.Linfo_string10
	.byte	3
	.short	305
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string28
	.byte	3
	.long	.Linfo_string29
	.long	.Linfo_string30
	.byte	3
	.short	383
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string14
	.byte	2
	.long	.Linfo_string32
	.byte	6
	.long	.Linfo_string33
	.long	.Linfo_string34
	.byte	8
	.byte	44

	.byte	1
	.byte	6
	.long	.Linfo_string645
	.long	.Linfo_string418
	.byte	8
	.byte	42

	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string35
	.byte	5
	.long	.Linfo_string36
	.long	.Linfo_string37
	.byte	8
	.byte	211
	.byte	1
	.byte	2
	.long	.Linfo_string45
	.byte	7
	.long	.Lfunc_begin68
	.long	.Lfunc_end68-.Lfunc_begin68
	.byte	1
	.byte	87
	.long	.Linfo_string664
	.long	.Linfo_string7
	.byte	8
	.short	279

	.byte	8
	.long	424
	.long	.Ltmp13
	.long	.Ltmp14-.Ltmp13
	.byte	8
	.short	282
	.byte	21
	.byte	9
	.long	454
	.long	.Ltmp14
	.long	.Ltmp29-.Ltmp14
	.byte	8
	.short	287
	.byte	17
	.byte	10
	.long	12987
	.long	.Ldebug_ranges2
	.byte	8
	.byte	241
	.byte	21
	.byte	11
	.long	12987
	.long	.Ltmp19
	.long	.Ltmp20-.Ltmp19
	.byte	8
	.byte	242
	.byte	21
	.byte	12
	.long	12987
	.long	.Ldebug_ranges3
	.byte	8
	.short	263
	.byte	21
	.byte	11
	.long	12987
	.long	.Ltmp25
	.long	.Ltmp26-.Ltmp25
	.byte	8
	.byte	253
	.byte	21
	.byte	8
	.long	71
	.long	.Ltmp27
	.long	.Ltmp28-.Ltmp27
	.byte	8
	.short	271
	.byte	43
	.byte	0
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string372
	.byte	13
	.long	.Linfo_string560
	.long	.Linfo_string7
	.byte	8
	.short	279

	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string140
	.byte	7
	.long	.Lfunc_begin131
	.long	.Lfunc_end131-.Lfunc_begin131
	.byte	1
	.byte	87
	.long	.Linfo_string751
	.long	.Linfo_string7
	.byte	8
	.short	279

	.byte	8
	.long	1665
	.long	.Ltmp1407
	.long	.Ltmp1408-.Ltmp1407
	.byte	8
	.short	282
	.byte	21
	.byte	9
	.long	454
	.long	.Ltmp1408
	.long	.Ltmp1418-.Ltmp1408
	.byte	8
	.short	287
	.byte	17
	.byte	11
	.long	169
	.long	.Ltmp1409
	.long	.Ltmp1410-.Ltmp1409
	.byte	8
	.byte	253
	.byte	46
	.byte	11
	.long	12987
	.long	.Ltmp1411
	.long	.Ltmp1412-.Ltmp1411
	.byte	8
	.byte	253
	.byte	21
	.byte	8
	.long	169
	.long	.Ltmp1413
	.long	.Ltmp1414-.Ltmp1413
	.byte	8
	.short	263
	.byte	46
	.byte	8
	.long	12987
	.long	.Ltmp1414
	.long	.Ltmp1415-.Ltmp1414
	.byte	8
	.short	263
	.byte	21
	.byte	8
	.long	71
	.long	.Ltmp1416
	.long	.Ltmp1417-.Ltmp1416
	.byte	8
	.short	271
	.byte	43
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string411
	.byte	6
	.long	.Linfo_string412
	.long	.Linfo_string413
	.byte	8
	.byte	135

	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string414
	.byte	5
	.long	.Linfo_string415
	.long	.Linfo_string416
	.byte	8
	.byte	67
	.byte	1
	.byte	5
	.long	.Linfo_string563
	.long	.Linfo_string564
	.byte	8
	.byte	67
	.byte	1
	.byte	5
	.long	.Linfo_string569
	.long	.Linfo_string570
	.byte	8
	.byte	67
	.byte	1
	.byte	5
	.long	.Linfo_string642
	.long	.Linfo_string643
	.byte	8
	.byte	67
	.byte	1
	.byte	5
	.long	.Linfo_string646
	.long	.Linfo_string647
	.byte	8
	.byte	67
	.byte	1
	.byte	5
	.long	.Linfo_string651
	.long	.Linfo_string652
	.byte	8
	.byte	67
	.byte	1
	.byte	5
	.long	.Linfo_string653
	.long	.Linfo_string654
	.byte	8
	.byte	67
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string126
	.byte	6
	.long	.Linfo_string417
	.long	.Linfo_string418
	.byte	8
	.byte	42

	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string71
	.byte	14
	.long	.Lfunc_begin97
	.long	.Lfunc_end97-.Lfunc_begin97
	.byte	1
	.byte	87
	.long	.Linfo_string711
	.long	.Linfo_string7
	.byte	8
	.byte	154

	.byte	15
	.long	794
	.long	.Ltmp839
	.long	.Ltmp859-.Ltmp839
	.byte	8
	.byte	155
	.byte	17
	.byte	10
	.long	776
	.long	.Ldebug_ranges152
	.byte	8
	.byte	81
	.byte	28
	.byte	10
	.long	884
	.long	.Ldebug_ranges153
	.byte	8
	.byte	81
	.byte	40
	.byte	10
	.long	15757
	.long	.Ldebug_ranges154
	.byte	8
	.byte	81
	.byte	17
	.byte	10
	.long	7984
	.long	.Ldebug_ranges155
	.byte	8
	.byte	80
	.byte	21
	.byte	15
	.long	16042
	.long	.Ltmp857
	.long	.Ltmp858-.Ltmp857
	.byte	8
	.byte	101
	.byte	20
	.byte	9
	.long	13720
	.long	.Ltmp857
	.long	.Ltmp858-.Ltmp857
	.byte	28
	.short	287
	.byte	9
	.byte	15
	.long	13677
	.long	.Ltmp857
	.long	.Ltmp858-.Ltmp857
	.byte	25
	.byte	15
	.byte	9
	.byte	9
	.long	13664
	.long	.Ltmp857
	.long	.Ltmp858-.Ltmp857
	.byte	25
	.short	332
	.byte	20
	.byte	9
	.long	13848
	.long	.Ltmp857
	.long	.Ltmp858-.Ltmp857
	.byte	25
	.short	317
	.byte	18
	.byte	15
	.long	260
	.long	.Ltmp857
	.long	.Ltmp858-.Ltmp857
	.byte	25
	.byte	229
	.byte	44
	.byte	8
	.long	247
	.long	.Ltmp857
	.long	.Ltmp858-.Ltmp857
	.byte	31
	.short	576
	.byte	18
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string561
	.byte	6
	.long	.Linfo_string562
	.long	.Linfo_string418
	.byte	8
	.byte	42

	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string565
	.byte	6
	.long	.Linfo_string566
	.long	.Linfo_string7
	.byte	8
	.byte	154

	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string571
	.byte	6
	.long	.Linfo_string572
	.long	.Linfo_string7
	.byte	8
	.byte	154

	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string573
	.byte	6
	.long	.Linfo_string574
	.long	.Linfo_string413
	.byte	8
	.byte	135

	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string575
	.byte	16
	.long	.Lfunc_begin109
	.long	.Lfunc_end109-.Lfunc_begin109
	.byte	1
	.byte	87
	.long	.Linfo_string731
	.long	.Linfo_string7
	.byte	8
	.byte	185
	.byte	11
	.long	4912
	.long	.Ltmp1093
	.long	.Ltmp1094-.Ltmp1093
	.byte	8
	.byte	186
	.byte	20
	.byte	17
	.long	609
	.long	.Ldebug_ranges208
	.byte	8
	.byte	191
	.byte	21
	.byte	18
	.long	454
	.long	.Ldebug_ranges209
	.byte	8
	.short	287
	.byte	17
	.byte	10
	.long	12987
	.long	.Ldebug_ranges210
	.byte	8
	.byte	241
	.byte	21
	.byte	11
	.long	12987
	.long	.Ltmp1100
	.long	.Ltmp1101-.Ltmp1100
	.byte	8
	.byte	242
	.byte	21
	.byte	12
	.long	169
	.long	.Ldebug_ranges211
	.byte	8
	.short	263
	.byte	46
	.byte	8
	.long	12987
	.long	.Ltmp1105
	.long	.Ltmp1106-.Ltmp1105
	.byte	8
	.short	263
	.byte	21
	.byte	11
	.long	169
	.long	.Ltmp1162
	.long	.Ltmp1163-.Ltmp1162
	.byte	8
	.byte	253
	.byte	46
	.byte	11
	.long	12987
	.long	.Ltmp1164
	.long	.Ltmp1165-.Ltmp1164
	.byte	8
	.byte	253
	.byte	21
	.byte	8
	.long	71
	.long	.Ltmp1166
	.long	.Ltmp1167-.Ltmp1166
	.byte	8
	.short	271
	.byte	43
	.byte	0
	.byte	0
	.byte	17
	.long	1135
	.long	.Ldebug_ranges212
	.byte	8
	.byte	187
	.byte	21
	.byte	17
	.long	806
	.long	.Ldebug_ranges213
	.byte	8
	.byte	155
	.byte	17
	.byte	10
	.long	1117
	.long	.Ldebug_ranges214
	.byte	8
	.byte	81
	.byte	40
	.byte	10
	.long	776
	.long	.Ldebug_ranges215
	.byte	8
	.byte	81
	.byte	28
	.byte	10
	.long	15757
	.long	.Ldebug_ranges216
	.byte	8
	.byte	81
	.byte	17
	.byte	10
	.long	8003
	.long	.Ldebug_ranges217
	.byte	8
	.byte	80
	.byte	21
	.byte	17
	.long	16042
	.long	.Ldebug_ranges218
	.byte	8
	.byte	101
	.byte	20
	.byte	18
	.long	13720
	.long	.Ldebug_ranges219
	.byte	28
	.short	287
	.byte	9
	.byte	17
	.long	13677
	.long	.Ldebug_ranges220
	.byte	25
	.byte	15
	.byte	9
	.byte	9
	.long	13664
	.long	.Ltmp1172
	.long	.Ltmp1173-.Ltmp1172
	.byte	25
	.short	332
	.byte	20
	.byte	8
	.long	13848
	.long	.Ltmp1172
	.long	.Ltmp1173-.Ltmp1172
	.byte	25
	.short	317
	.byte	18
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	17
	.long	1153
	.long	.Ldebug_ranges221
	.byte	8
	.byte	189
	.byte	21
	.byte	17
	.long	818
	.long	.Ldebug_ranges222
	.byte	8
	.byte	155
	.byte	17
	.byte	10
	.long	1117
	.long	.Ldebug_ranges223
	.byte	8
	.byte	81
	.byte	40
	.byte	10
	.long	1171
	.long	.Ldebug_ranges224
	.byte	8
	.byte	81
	.byte	28
	.byte	10
	.long	15757
	.long	.Ldebug_ranges225
	.byte	8
	.byte	81
	.byte	17
	.byte	10
	.long	8003
	.long	.Ldebug_ranges226
	.byte	8
	.byte	80
	.byte	21
	.byte	17
	.long	16042
	.long	.Ldebug_ranges227
	.byte	8
	.byte	101
	.byte	20
	.byte	18
	.long	13720
	.long	.Ldebug_ranges228
	.byte	28
	.short	287
	.byte	9
	.byte	17
	.long	13677
	.long	.Ldebug_ranges229
	.byte	25
	.byte	15
	.byte	9
	.byte	9
	.long	13664
	.long	.Ltmp1179
	.long	.Ltmp1180-.Ltmp1179
	.byte	25
	.short	332
	.byte	20
	.byte	8
	.long	13848
	.long	.Ltmp1179
	.long	.Ltmp1180-.Ltmp1179
	.byte	25
	.short	317
	.byte	18
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string307
	.byte	6
	.long	.Linfo_string641
	.long	.Linfo_string34
	.byte	8
	.byte	44

	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string644
	.byte	14
	.long	.Lfunc_begin132
	.long	.Lfunc_end132-.Lfunc_begin132
	.byte	1
	.byte	87
	.long	.Linfo_string752
	.long	.Linfo_string7
	.byte	8
	.byte	154

	.byte	15
	.long	830
	.long	.Ltmp1421
	.long	.Ltmp1425-.Ltmp1421
	.byte	8
	.byte	155
	.byte	17
	.byte	11
	.long	15757
	.long	.Ltmp1421
	.long	.Ltmp1422-.Ltmp1421
	.byte	8
	.byte	81
	.byte	17
	.byte	15
	.long	16042
	.long	.Ltmp1423
	.long	.Ltmp1424-.Ltmp1423
	.byte	8
	.byte	101
	.byte	20
	.byte	9
	.long	13720
	.long	.Ltmp1423
	.long	.Ltmp1424-.Ltmp1423
	.byte	28
	.short	287
	.byte	9
	.byte	15
	.long	13677
	.long	.Ltmp1423
	.long	.Ltmp1424-.Ltmp1423
	.byte	25
	.byte	15
	.byte	9
	.byte	9
	.long	13664
	.long	.Ltmp1423
	.long	.Ltmp1424-.Ltmp1423
	.byte	25
	.short	332
	.byte	20
	.byte	9
	.long	13848
	.long	.Ltmp1423
	.long	.Ltmp1424-.Ltmp1423
	.byte	25
	.short	317
	.byte	18
	.byte	15
	.long	260
	.long	.Ltmp1423
	.long	.Ltmp1424-.Ltmp1423
	.byte	25
	.byte	229
	.byte	44
	.byte	8
	.long	247
	.long	.Ltmp1423
	.long	.Ltmp1424-.Ltmp1423
	.byte	31
	.short	576
	.byte	18
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string650
	.byte	14
	.long	.Lfunc_begin133
	.long	.Lfunc_end133-.Lfunc_begin133
	.byte	1
	.byte	87
	.long	.Linfo_string753
	.long	.Linfo_string7
	.byte	8
	.byte	154

	.byte	17
	.long	842
	.long	.Ldebug_ranges266
	.byte	8
	.byte	155
	.byte	17
	.byte	10
	.long	436
	.long	.Ldebug_ranges267
	.byte	8
	.byte	81
	.byte	40
	.byte	10
	.long	776
	.long	.Ldebug_ranges268
	.byte	8
	.byte	81
	.byte	28
	.byte	10
	.long	15757
	.long	.Ldebug_ranges269
	.byte	8
	.byte	81
	.byte	17
	.byte	10
	.long	8022
	.long	.Ldebug_ranges270
	.byte	8
	.byte	80
	.byte	21
	.byte	17
	.long	16042
	.long	.Ldebug_ranges271
	.byte	8
	.byte	101
	.byte	20
	.byte	18
	.long	13720
	.long	.Ldebug_ranges272
	.byte	28
	.short	287
	.byte	9
	.byte	17
	.long	13677
	.long	.Ldebug_ranges273
	.byte	25
	.byte	15
	.byte	9
	.byte	18
	.long	13664
	.long	.Ldebug_ranges274
	.byte	25
	.short	332
	.byte	20
	.byte	18
	.long	13848
	.long	.Ldebug_ranges275
	.byte	25
	.short	317
	.byte	18
	.byte	15
	.long	260
	.long	.Ltmp1458
	.long	.Ltmp1459-.Ltmp1458
	.byte	25
	.byte	229
	.byte	44
	.byte	8
	.long	247
	.long	.Ltmp1458
	.long	.Ltmp1459-.Ltmp1458
	.byte	31
	.short	576
	.byte	18
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string154
	.byte	14
	.long	.Lfunc_begin134
	.long	.Lfunc_end134-.Lfunc_begin134
	.byte	1
	.byte	87
	.long	.Linfo_string754
	.long	.Linfo_string7
	.byte	8
	.byte	154

	.byte	15
	.long	854
	.long	.Ltmp1464
	.long	.Ltmp1468-.Ltmp1464
	.byte	8
	.byte	155
	.byte	17
	.byte	11
	.long	15757
	.long	.Ltmp1464
	.long	.Ltmp1465-.Ltmp1464
	.byte	8
	.byte	81
	.byte	17
	.byte	15
	.long	16042
	.long	.Ltmp1466
	.long	.Ltmp1467-.Ltmp1466
	.byte	8
	.byte	101
	.byte	20
	.byte	9
	.long	13720
	.long	.Ltmp1466
	.long	.Ltmp1467-.Ltmp1466
	.byte	28
	.short	287
	.byte	9
	.byte	15
	.long	13677
	.long	.Ltmp1466
	.long	.Ltmp1467-.Ltmp1466
	.byte	25
	.byte	15
	.byte	9
	.byte	9
	.long	13664
	.long	.Ltmp1466
	.long	.Ltmp1467-.Ltmp1466
	.byte	25
	.short	332
	.byte	20
	.byte	9
	.long	13848
	.long	.Ltmp1466
	.long	.Ltmp1467-.Ltmp1466
	.byte	25
	.short	317
	.byte	18
	.byte	15
	.long	260
	.long	.Ltmp1466
	.long	.Ltmp1467-.Ltmp1466
	.byte	25
	.byte	229
	.byte	44
	.byte	8
	.long	247
	.long	.Ltmp1466
	.long	.Ltmp1467-.Ltmp1466
	.byte	31
	.short	576
	.byte	18
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string655
	.byte	14
	.long	.Lfunc_begin135
	.long	.Lfunc_end135-.Lfunc_begin135
	.byte	1
	.byte	87
	.long	.Linfo_string755
	.long	.Linfo_string7
	.byte	8
	.byte	154

	.byte	17
	.long	866
	.long	.Ldebug_ranges276
	.byte	8
	.byte	155
	.byte	17
	.byte	10
	.long	436
	.long	.Ldebug_ranges277
	.byte	8
	.byte	81
	.byte	40
	.byte	10
	.long	1171
	.long	.Ldebug_ranges278
	.byte	8
	.byte	81
	.byte	28
	.byte	10
	.long	15757
	.long	.Ldebug_ranges279
	.byte	8
	.byte	81
	.byte	17
	.byte	10
	.long	8022
	.long	.Ldebug_ranges280
	.byte	8
	.byte	80
	.byte	21
	.byte	17
	.long	16042
	.long	.Ldebug_ranges281
	.byte	8
	.byte	101
	.byte	20
	.byte	18
	.long	13720
	.long	.Ldebug_ranges282
	.byte	28
	.short	287
	.byte	9
	.byte	17
	.long	13677
	.long	.Ldebug_ranges283
	.byte	25
	.byte	15
	.byte	9
	.byte	18
	.long	13664
	.long	.Ldebug_ranges284
	.byte	25
	.short	332
	.byte	20
	.byte	18
	.long	13848
	.long	.Ldebug_ranges285
	.byte	25
	.short	317
	.byte	18
	.byte	15
	.long	260
	.long	.Ltmp1501
	.long	.Ltmp1502-.Ltmp1501
	.byte	25
	.byte	229
	.byte	44
	.byte	8
	.long	247
	.long	.Ltmp1501
	.long	.Ltmp1502-.Ltmp1501
	.byte	31
	.short	576
	.byte	18
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string52
	.byte	13
	.long	.Linfo_string53
	.long	.Linfo_string54
	.byte	3
	.short	1822

	.byte	1
	.byte	3
	.long	.Linfo_string55
	.long	.Linfo_string56
	.byte	3
	.short	1486
	.byte	1
	.byte	7
	.long	.Lfunc_begin72
	.long	.Lfunc_end72-.Lfunc_begin72
	.byte	1
	.byte	87
	.long	.Linfo_string671
	.long	.Linfo_string127
	.byte	3
	.short	1342

	.byte	8
	.long	2432
	.long	.Ltmp37
	.long	.Ltmp38-.Ltmp37
	.byte	3
	.short	1349
	.byte	19
	.byte	18
	.long	2445
	.long	.Ldebug_ranges4
	.byte	3
	.short	1399
	.byte	36
	.byte	9
	.long	12378
	.long	.Ltmp64
	.long	.Ltmp66-.Ltmp64
	.byte	3
	.short	1502
	.byte	18
	.byte	9
	.long	12359
	.long	.Ltmp64
	.long	.Ltmp66-.Ltmp64
	.byte	6
	.short	711
	.byte	9
	.byte	8
	.long	15788
	.long	.Ltmp64
	.long	.Ltmp65-.Ltmp64
	.byte	6
	.short	621
	.byte	12
	.byte	0
	.byte	0
	.byte	0
	.byte	9
	.long	14857
	.long	.Ltmp43
	.long	.Ltmp49-.Ltmp43
	.byte	3
	.short	1355
	.byte	22
	.byte	15
	.long	14780
	.long	.Ltmp43
	.long	.Ltmp49-.Ltmp43
	.byte	24
	.byte	49
	.byte	9
	.byte	15
	.long	14768
	.long	.Ltmp43
	.long	.Ltmp49-.Ltmp43
	.byte	23
	.byte	32
	.byte	9
	.byte	15
	.long	12593
	.long	.Ltmp43
	.long	.Ltmp49-.Ltmp43
	.byte	23
	.byte	135
	.byte	5
	.byte	15
	.long	12439
	.long	.Ltmp43
	.long	.Ltmp49-.Ltmp43
	.byte	22
	.byte	83
	.byte	9
	.byte	9
	.long	12503
	.long	.Ltmp43
	.long	.Ltmp49-.Ltmp43
	.byte	14
	.short	3202
	.byte	9
	.byte	15
	.long	12551
	.long	.Ltmp43
	.long	.Ltmp49-.Ltmp43
	.byte	16
	.byte	42
	.byte	17
	.byte	15
	.long	12426
	.long	.Ltmp43
	.long	.Ltmp49-.Ltmp43
	.byte	21
	.byte	124
	.byte	9
	.byte	12
	.long	13329
	.long	.Ldebug_ranges5
	.byte	14
	.short	2284
	.byte	29
	.byte	18
	.long	12569
	.long	.Ldebug_ranges6
	.byte	14
	.short	2285
	.byte	21
	.byte	15
	.long	12615
	.long	.Ltmp45
	.long	.Ltmp46-.Ltmp45
	.byte	21
	.byte	84
	.byte	28
	.byte	15
	.long	14797
	.long	.Ltmp45
	.long	.Ltmp46-.Ltmp45
	.byte	22
	.byte	80
	.byte	22
	.byte	11
	.long	14906
	.long	.Ltmp45
	.long	.Ltmp46-.Ltmp45
	.byte	23
	.byte	135
	.byte	31
	.byte	0
	.byte	0
	.byte	11
	.long	12520
	.long	.Ltmp48
	.long	.Ltmp49-.Ltmp48
	.byte	21
	.byte	84
	.byte	21
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	18
	.long	15721
	.long	.Ldebug_ranges7
	.byte	3
	.short	1387
	.byte	32
	.byte	12
	.long	133
	.long	.Ldebug_ranges8
	.byte	17
	.short	840
	.byte	9
	.byte	0
	.byte	18
	.long	15734
	.long	.Ldebug_ranges9
	.byte	3
	.short	1388
	.byte	33
	.byte	8
	.long	146
	.long	.Ltmp56
	.long	.Ltmp57-.Ltmp56
	.byte	17
	.short	840
	.byte	9
	.byte	0
	.byte	9
	.long	2445
	.long	.Ltmp58
	.long	.Ltmp62-.Ltmp58
	.byte	3
	.short	1390
	.byte	36
	.byte	9
	.long	12378
	.long	.Ltmp59
	.long	.Ltmp61-.Ltmp59
	.byte	3
	.short	1502
	.byte	18
	.byte	9
	.long	12359
	.long	.Ltmp59
	.long	.Ltmp61-.Ltmp59
	.byte	6
	.short	711
	.byte	9
	.byte	8
	.long	15788
	.long	.Ltmp59
	.long	.Ltmp60-.Ltmp59
	.byte	6
	.short	621
	.byte	12
	.byte	0
	.byte	0
	.byte	0
	.byte	8
	.long	15910
	.long	.Ltmp67
	.long	.Ltmp68-.Ltmp67
	.byte	3
	.short	1399
	.byte	36
	.byte	18
	.long	5115
	.long	.Ldebug_ranges10
	.byte	3
	.short	1402
	.byte	17
	.byte	18
	.long	12378
	.long	.Ldebug_ranges11
	.byte	3
	.short	1268
	.byte	18
	.byte	18
	.long	12359
	.long	.Ldebug_ranges12
	.byte	6
	.short	711
	.byte	9
	.byte	9
	.long	12397
	.long	.Ltmp71
	.long	.Ltmp72-.Ltmp71
	.byte	6
	.short	623
	.byte	30
	.byte	11
	.long	12133
	.long	.Ltmp71
	.long	.Ltmp72-.Ltmp71
	.byte	6
	.byte	191
	.byte	22
	.byte	0
	.byte	8
	.long	15788
	.long	.Ltmp74
	.long	.Ltmp75-.Ltmp74
	.byte	6
	.short	621
	.byte	12
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	7
	.long	.Lfunc_begin86
	.long	.Lfunc_end86-.Lfunc_begin86
	.byte	1
	.byte	87
	.long	.Linfo_string697
	.long	.Linfo_string698
	.byte	3
	.short	1436

	.byte	9
	.long	15010
	.long	.Ltmp384
	.long	.Ltmp385-.Ltmp384
	.byte	3
	.short	1447
	.byte	35
	.byte	9
	.long	14997
	.long	.Ltmp384
	.long	.Ltmp385-.Ltmp384
	.byte	39
	.short	815
	.byte	46
	.byte	9
	.long	14066
	.long	.Ltmp384
	.long	.Ltmp385-.Ltmp384
	.byte	39
	.short	758
	.byte	23
	.byte	9
	.long	13478
	.long	.Ltmp384
	.long	.Ltmp385-.Ltmp384
	.byte	30
	.short	706
	.byte	9
	.byte	15
	.long	182
	.long	.Ltmp384
	.long	.Ltmp385-.Ltmp384
	.byte	41
	.byte	96
	.byte	17
	.byte	8
	.long	169
	.long	.Ltmp384
	.long	.Ltmp385-.Ltmp384
	.byte	31
	.short	576
	.byte	18
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	18
	.long	12465
	.long	.Ldebug_ranges91
	.byte	3
	.short	1447
	.byte	35
	.byte	18
	.long	14887
	.long	.Ldebug_ranges92
	.byte	14
	.short	324
	.byte	9
	.byte	17
	.long	14869
	.long	.Ldebug_ranges93
	.byte	24
	.byte	140
	.byte	15
	.byte	17
	.long	14918
	.long	.Ldebug_ranges94
	.byte	24
	.byte	44
	.byte	18
	.byte	11
	.long	13329
	.long	.Ltmp385
	.long	.Ltmp386-.Ltmp385
	.byte	15
	.byte	38
	.byte	14
	.byte	11
	.long	14930
	.long	.Ltmp408
	.long	.Ltmp409-.Ltmp408
	.byte	15
	.byte	57
	.byte	19
	.byte	11
	.long	14930
	.long	.Ltmp410
	.long	.Ltmp411-.Ltmp410
	.byte	15
	.byte	50
	.byte	18
	.byte	11
	.long	14930
	.long	.Ltmp411
	.long	.Ltmp412-.Ltmp411
	.byte	15
	.byte	65
	.byte	37
	.byte	0
	.byte	0
	.byte	0
	.byte	9
	.long	12478
	.long	.Ltmp390
	.long	.Ltmp402-.Ltmp390
	.byte	14
	.short	323
	.byte	9
	.byte	18
	.long	14887
	.long	.Ldebug_ranges95
	.byte	14
	.short	276
	.byte	13
	.byte	15
	.long	14869
	.long	.Ltmp394
	.long	.Ltmp401-.Ltmp394
	.byte	24
	.byte	140
	.byte	15
	.byte	15
	.long	14918
	.long	.Ltmp394
	.long	.Ltmp401-.Ltmp394
	.byte	24
	.byte	44
	.byte	18
	.byte	11
	.long	13329
	.long	.Ltmp394
	.long	.Ltmp395-.Ltmp394
	.byte	15
	.byte	38
	.byte	14
	.byte	11
	.long	14930
	.long	.Ltmp396
	.long	.Ltmp397-.Ltmp396
	.byte	15
	.byte	50
	.byte	18
	.byte	11
	.long	14930
	.long	.Ltmp398
	.long	.Ltmp399-.Ltmp398
	.byte	15
	.byte	57
	.byte	19
	.byte	11
	.long	14930
	.long	.Ltmp399
	.long	.Ltmp400-.Ltmp399
	.byte	15
	.byte	65
	.byte	37
	.byte	0
	.byte	0
	.byte	0
	.byte	18
	.long	12378
	.long	.Ldebug_ranges96
	.byte	14
	.short	275
	.byte	18
	.byte	18
	.long	12359
	.long	.Ldebug_ranges97
	.byte	6
	.short	711
	.byte	9
	.byte	8
	.long	15788
	.long	.Ltmp391
	.long	.Ltmp392-.Ltmp391
	.byte	6
	.short	621
	.byte	12
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	18
	.long	15035
	.long	.Ldebug_ranges98
	.byte	3
	.short	1452
	.byte	17
	.byte	18
	.long	15084
	.long	.Ldebug_ranges99
	.byte	39
	.short	423
	.byte	9
	.byte	11
	.long	15023
	.long	.Ltmp387
	.long	.Ltmp388-.Ltmp387
	.byte	40
	.byte	254
	.byte	12
	.byte	0
	.byte	0
	.byte	8
	.long	16105
	.long	.Ltmp405
	.long	.Ltmp406-.Ltmp405
	.byte	3
	.short	1452
	.byte	17
	.byte	9
	.long	14857
	.long	.Ltmp415
	.long	.Ltmp763-.Ltmp415
	.byte	3
	.short	1465
	.byte	35
	.byte	15
	.long	14780
	.long	.Ltmp415
	.long	.Ltmp763-.Ltmp415
	.byte	24
	.byte	49
	.byte	9
	.byte	17
	.long	14768
	.long	.Ldebug_ranges100
	.byte	23
	.byte	32
	.byte	9
	.byte	17
	.long	12593
	.long	.Ldebug_ranges101
	.byte	23
	.byte	135
	.byte	5
	.byte	17
	.long	12439
	.long	.Ldebug_ranges102
	.byte	22
	.byte	83
	.byte	9
	.byte	18
	.long	12503
	.long	.Ldebug_ranges103
	.byte	14
	.short	3202
	.byte	9
	.byte	17
	.long	12551
	.long	.Ldebug_ranges104
	.byte	16
	.byte	42
	.byte	17
	.byte	17
	.long	12426
	.long	.Ldebug_ranges105
	.byte	21
	.byte	124
	.byte	9
	.byte	18
	.long	13329
	.long	.Ldebug_ranges106
	.byte	14
	.short	2284
	.byte	29
	.byte	15
	.long	13490
	.long	.Ltmp494
	.long	.Ltmp495-.Ltmp494
	.byte	13
	.byte	149
	.byte	30
	.byte	11
	.long	71
	.long	.Ltmp494
	.long	.Ltmp495-.Ltmp494
	.byte	13
	.byte	93
	.byte	64
	.byte	0
	.byte	0
	.byte	18
	.long	12569
	.long	.Ldebug_ranges107
	.byte	14
	.short	2285
	.byte	21
	.byte	17
	.long	12615
	.long	.Ldebug_ranges108
	.byte	21
	.byte	84
	.byte	28
	.byte	17
	.long	14797
	.long	.Ldebug_ranges109
	.byte	22
	.byte	80
	.byte	22
	.byte	10
	.long	14906
	.long	.Ldebug_ranges110
	.byte	23
	.byte	135
	.byte	31
	.byte	0
	.byte	0
	.byte	10
	.long	12520
	.long	.Ldebug_ranges111
	.byte	21
	.byte	84
	.byte	21
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	17
	.long	14810
	.long	.Ldebug_ranges112
	.byte	23
	.byte	34
	.byte	9
	.byte	15
	.long	14079
	.long	.Ltmp418
	.long	.Ltmp420-.Ltmp418
	.byte	23
	.byte	58
	.byte	39
	.byte	8
	.long	333
	.long	.Ltmp418
	.long	.Ltmp419-.Ltmp418
	.byte	30
	.short	3392
	.byte	31
	.byte	0
	.byte	17
	.long	14768
	.long	.Ldebug_ranges113
	.byte	23
	.byte	71
	.byte	21
	.byte	17
	.long	12593
	.long	.Ldebug_ranges114
	.byte	23
	.byte	135
	.byte	5
	.byte	17
	.long	12439
	.long	.Ldebug_ranges115
	.byte	22
	.byte	83
	.byte	9
	.byte	18
	.long	12503
	.long	.Ldebug_ranges116
	.byte	14
	.short	3202
	.byte	9
	.byte	17
	.long	12551
	.long	.Ldebug_ranges117
	.byte	16
	.byte	42
	.byte	17
	.byte	17
	.long	12426
	.long	.Ldebug_ranges118
	.byte	21
	.byte	124
	.byte	9
	.byte	18
	.long	13329
	.long	.Ldebug_ranges119
	.byte	14
	.short	2284
	.byte	29
	.byte	15
	.long	13490
	.long	.Ltmp543
	.long	.Ltmp544-.Ltmp543
	.byte	13
	.byte	149
	.byte	30
	.byte	11
	.long	71
	.long	.Ltmp543
	.long	.Ltmp544-.Ltmp543
	.byte	13
	.byte	93
	.byte	64
	.byte	0
	.byte	0
	.byte	18
	.long	12569
	.long	.Ldebug_ranges120
	.byte	14
	.short	2285
	.byte	21
	.byte	10
	.long	12520
	.long	.Ldebug_ranges121
	.byte	21
	.byte	84
	.byte	21
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	17
	.long	14768
	.long	.Ldebug_ranges122
	.byte	23
	.byte	68
	.byte	16
	.byte	17
	.long	12593
	.long	.Ldebug_ranges123
	.byte	23
	.byte	135
	.byte	5
	.byte	17
	.long	12439
	.long	.Ldebug_ranges124
	.byte	22
	.byte	83
	.byte	9
	.byte	18
	.long	12503
	.long	.Ldebug_ranges125
	.byte	14
	.short	3202
	.byte	9
	.byte	17
	.long	12551
	.long	.Ldebug_ranges126
	.byte	16
	.byte	42
	.byte	17
	.byte	17
	.long	12426
	.long	.Ldebug_ranges127
	.byte	21
	.byte	124
	.byte	9
	.byte	18
	.long	13329
	.long	.Ldebug_ranges128
	.byte	14
	.short	2284
	.byte	29
	.byte	15
	.long	13490
	.long	.Ltmp470
	.long	.Ltmp471-.Ltmp470
	.byte	13
	.byte	149
	.byte	30
	.byte	11
	.long	71
	.long	.Ltmp470
	.long	.Ltmp471-.Ltmp470
	.byte	13
	.byte	93
	.byte	64
	.byte	0
	.byte	0
	.byte	18
	.long	12569
	.long	.Ldebug_ranges129
	.byte	14
	.short	2285
	.byte	21
	.byte	10
	.long	12520
	.long	.Ldebug_ranges130
	.byte	21
	.byte	84
	.byte	21
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	15
	.long	14768
	.long	.Ltmp555
	.long	.Ltmp564-.Ltmp555
	.byte	23
	.byte	71
	.byte	53
	.byte	15
	.long	12593
	.long	.Ltmp555
	.long	.Ltmp564-.Ltmp555
	.byte	23
	.byte	135
	.byte	5
	.byte	15
	.long	12439
	.long	.Ltmp555
	.long	.Ltmp564-.Ltmp555
	.byte	22
	.byte	83
	.byte	9
	.byte	9
	.long	12503
	.long	.Ltmp555
	.long	.Ltmp564-.Ltmp555
	.byte	14
	.short	3202
	.byte	9
	.byte	15
	.long	12551
	.long	.Ltmp555
	.long	.Ltmp564-.Ltmp555
	.byte	16
	.byte	42
	.byte	17
	.byte	15
	.long	12426
	.long	.Ltmp555
	.long	.Ltmp564-.Ltmp555
	.byte	21
	.byte	124
	.byte	9
	.byte	12
	.long	13329
	.long	.Ldebug_ranges131
	.byte	14
	.short	2284
	.byte	29
	.byte	18
	.long	12569
	.long	.Ldebug_ranges132
	.byte	14
	.short	2285
	.byte	21
	.byte	15
	.long	12615
	.long	.Ltmp557
	.long	.Ltmp558-.Ltmp557
	.byte	21
	.byte	84
	.byte	28
	.byte	15
	.long	14797
	.long	.Ltmp557
	.long	.Ltmp558-.Ltmp557
	.byte	22
	.byte	80
	.byte	22
	.byte	11
	.long	14906
	.long	.Ltmp557
	.long	.Ltmp558-.Ltmp557
	.byte	23
	.byte	135
	.byte	31
	.byte	0
	.byte	0
	.byte	10
	.long	12520
	.long	.Ldebug_ranges133
	.byte	21
	.byte	84
	.byte	21
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	17
	.long	14822
	.long	.Ldebug_ranges134
	.byte	23
	.byte	90
	.byte	18
	.byte	11
	.long	12146
	.long	.Ltmp567
	.long	.Ltmp568-.Ltmp567
	.byte	23
	.byte	127
	.byte	5
	.byte	0
	.byte	15
	.long	13544
	.long	.Ltmp569
	.long	.Ltmp571-.Ltmp569
	.byte	23
	.byte	74
	.byte	18
	.byte	9
	.long	15886
	.long	.Ltmp570
	.long	.Ltmp571-.Ltmp570
	.byte	41
	.short	1402
	.byte	27
	.byte	9
	.long	15872
	.long	.Ltmp570
	.long	.Ltmp571-.Ltmp570
	.byte	18
	.short	1199
	.byte	5
	.byte	8
	.long	15854
	.long	.Ltmp570
	.long	.Ltmp571-.Ltmp570
	.byte	18
	.short	820
	.byte	9
	.byte	0
	.byte	0
	.byte	0
	.byte	17
	.long	14105
	.long	.Ldebug_ranges135
	.byte	23
	.byte	79
	.byte	44
	.byte	8
	.long	14092
	.long	.Ltmp571
	.long	.Ltmp572-.Ltmp571
	.byte	30
	.short	976
	.byte	36
	.byte	9
	.long	14144
	.long	.Ltmp661
	.long	.Ltmp662-.Ltmp661
	.byte	30
	.short	973
	.byte	42
	.byte	9
	.long	14131
	.long	.Ltmp661
	.long	.Ltmp662-.Ltmp661
	.byte	30
	.short	1510
	.byte	18
	.byte	9
	.long	14118
	.long	.Ltmp661
	.long	.Ltmp662-.Ltmp661
	.byte	30
	.short	1590
	.byte	46
	.byte	9
	.long	13651
	.long	.Ltmp661
	.long	.Ltmp662-.Ltmp661
	.byte	30
	.short	387
	.byte	20
	.byte	9
	.long	13836
	.long	.Ltmp661
	.long	.Ltmp662-.Ltmp661
	.byte	25
	.short	317
	.byte	18
	.byte	15
	.long	208
	.long	.Ltmp661
	.long	.Ltmp662-.Ltmp661
	.byte	25
	.byte	229
	.byte	44
	.byte	8
	.long	195
	.long	.Ltmp661
	.long	.Ltmp662-.Ltmp661
	.byte	31
	.short	576
	.byte	18
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	17
	.long	13341
	.long	.Ldebug_ranges136
	.byte	23
	.byte	80
	.byte	25
	.byte	15
	.long	13502
	.long	.Ltmp617
	.long	.Ltmp618-.Ltmp617
	.byte	13
	.byte	149
	.byte	30
	.byte	11
	.long	356
	.long	.Ltmp617
	.long	.Ltmp618-.Ltmp617
	.byte	13
	.byte	93
	.byte	41
	.byte	0
	.byte	0
	.byte	10
	.long	14834
	.long	.Ldebug_ranges137
	.byte	23
	.byte	84
	.byte	27
	.byte	17
	.long	13353
	.long	.Ldebug_ranges138
	.byte	23
	.byte	99
	.byte	26
	.byte	17
	.long	13514
	.long	.Ldebug_ranges139
	.byte	13
	.byte	149
	.byte	30
	.byte	10
	.long	97
	.long	.Ldebug_ranges140
	.byte	13
	.byte	93
	.byte	64
	.byte	0
	.byte	0
	.byte	10
	.long	14834
	.long	.Ldebug_ranges141
	.byte	23
	.byte	100
	.byte	27
	.byte	15
	.long	14822
	.long	.Ltmp760
	.long	.Ltmp762-.Ltmp760
	.byte	23
	.byte	102
	.byte	22
	.byte	11
	.long	12146
	.long	.Ltmp761
	.long	.Ltmp762-.Ltmp761
	.byte	23
	.byte	127
	.byte	5
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	18
	.long	2445
	.long	.Ldebug_ranges142
	.byte	3
	.short	1475
	.byte	40
	.byte	9
	.long	12378
	.long	.Ltmp769
	.long	.Ltmp771-.Ltmp769
	.byte	3
	.short	1502
	.byte	18
	.byte	9
	.long	12359
	.long	.Ltmp769
	.long	.Ltmp771-.Ltmp769
	.byte	6
	.short	711
	.byte	9
	.byte	8
	.long	15788
	.long	.Ltmp769
	.long	.Ltmp770-.Ltmp769
	.byte	6
	.short	621
	.byte	12
	.byte	0
	.byte	0
	.byte	0
	.byte	8
	.long	15910
	.long	.Ltmp773
	.long	.Ltmp774-.Ltmp773
	.byte	3
	.short	1475
	.byte	40
	.byte	9
	.long	5115
	.long	.Ltmp775
	.long	.Ltmp780-.Ltmp775
	.byte	3
	.short	1477
	.byte	21
	.byte	18
	.long	12378
	.long	.Ldebug_ranges143
	.byte	3
	.short	1268
	.byte	18
	.byte	18
	.long	12359
	.long	.Ldebug_ranges144
	.byte	6
	.short	711
	.byte	9
	.byte	9
	.long	12397
	.long	.Ltmp777
	.long	.Ltmp778-.Ltmp777
	.byte	6
	.short	623
	.byte	30
	.byte	11
	.long	12133
	.long	.Ltmp777
	.long	.Ltmp778-.Ltmp777
	.byte	6
	.byte	191
	.byte	22
	.byte	0
	.byte	8
	.long	15788
	.long	.Ltmp779
	.long	.Ltmp780-.Ltmp779
	.byte	6
	.short	621
	.byte	12
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	6
	.long	.Linfo_string373
	.long	.Linfo_string374
	.byte	3
	.byte	236

	.byte	1
	.byte	13
	.long	.Linfo_string402
	.long	.Linfo_string403
	.byte	3
	.short	1620

	.byte	1
	.byte	13
	.long	.Linfo_string407
	.long	.Linfo_string408
	.byte	3
	.short	1956

	.byte	1
	.byte	13
	.long	.Linfo_string448
	.long	.Linfo_string449
	.byte	3
	.short	1643

	.byte	1
	.byte	13
	.long	.Linfo_string558
	.long	.Linfo_string559
	.byte	3
	.short	1911

	.byte	1
	.byte	3
	.long	.Linfo_string600
	.long	.Linfo_string601
	.byte	3
	.short	1276
	.byte	1
	.byte	19
	.long	.Lfunc_begin120
	.long	.Lfunc_end120-.Lfunc_begin120
	.byte	1
	.byte	87
	.long	4873
	.byte	19
	.long	.Lfunc_begin121
	.long	.Lfunc_end121-.Lfunc_begin121
	.byte	1
	.byte	87
	.long	4899
	.byte	19
	.long	.Lfunc_begin122
	.long	.Lfunc_end122-.Lfunc_begin122
	.byte	1
	.byte	87
	.long	4912
	.byte	20
	.long	.Lfunc_begin123
	.long	.Lfunc_end123-.Lfunc_begin123
	.byte	1
	.byte	87
	.long	.Linfo_string742
	.long	.Linfo_string743
	.byte	3
	.short	1915

	.byte	21
	.long	.Lfunc_begin124
	.long	.Lfunc_end124-.Lfunc_begin124
	.byte	1
	.byte	87
	.long	4886
	.byte	18
	.long	5736
	.long	.Ldebug_ranges257
	.byte	3
	.short	1957
	.byte	9
	.byte	11
	.long	4873
	.long	.Ltmp1327
	.long	.Ltmp1328-.Ltmp1327
	.byte	44
	.byte	99
	.byte	18
	.byte	0
	.byte	0
	.byte	7
	.long	.Lfunc_begin125
	.long	.Lfunc_end125-.Lfunc_begin125
	.byte	1
	.byte	87
	.long	.Linfo_string744
	.long	.Linfo_string745
	.byte	3
	.short	1987

	.byte	9
	.long	7147
	.long	.Ltmp1333
	.long	.Ltmp1335-.Ltmp1333
	.byte	3
	.short	1988
	.byte	9
	.byte	8
	.long	4873
	.long	.Ltmp1333
	.long	.Ltmp1334-.Ltmp1333
	.byte	44
	.short	289
	.byte	18
	.byte	0
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string117
	.byte	3
	.long	.Linfo_string118
	.long	.Linfo_string119
	.byte	3
	.short	1267
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string126
	.byte	2
	.long	.Linfo_string127
	.byte	22
	.long	.Lfunc_begin73
	.long	.Lfunc_end73-.Lfunc_begin73
	.byte	1
	.byte	87
	.long	.Linfo_string672
	.long	.Linfo_string673
	.byte	3
	.short	1363
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string369
	.byte	13
	.long	.Linfo_string370
	.long	.Linfo_string7
	.byte	3
	.short	2196

	.byte	1
	.byte	19
	.long	.Lfunc_begin127
	.long	.Lfunc_end127-.Lfunc_begin127
	.byte	1
	.byte	87
	.long	5168
	.byte	0
	.byte	2
	.long	.Linfo_string110
	.byte	21
	.long	.Lfunc_begin89
	.long	.Lfunc_end89-.Lfunc_begin89
	.byte	1
	.byte	87
	.long	5275
	.byte	8
	.long	5168
	.long	.Ltmp796
	.long	.Ltmp797-.Ltmp796
	.byte	3
	.short	2128
	.byte	62
	.byte	0
	.byte	23
	.long	.Lfunc_begin102
	.long	.Lfunc_end102-.Lfunc_begin102
	.byte	1
	.byte	87
	.long	.Linfo_string719
	.long	.Linfo_string720
	.byte	3
	.short	2128
	.byte	8
	.long	5395
	.long	.Ltmp878
	.long	.Ltmp879-.Ltmp878
	.byte	3
	.short	2128
	.byte	62
	.byte	0
	.byte	3
	.long	.Linfo_string451
	.long	.Linfo_string452
	.byte	3
	.short	2128
	.byte	1
	.byte	23
	.long	.Lfunc_begin103
	.long	.Lfunc_end103-.Lfunc_begin103
	.byte	1
	.byte	87
	.long	.Linfo_string721
	.long	.Linfo_string722
	.byte	3
	.short	2128
	.byte	9
	.long	5275
	.long	.Ltmp881
	.long	.Ltmp883-.Ltmp881
	.byte	3
	.short	2128
	.byte	62
	.byte	8
	.long	5168
	.long	.Ltmp882
	.long	.Ltmp883-.Ltmp882
	.byte	3
	.short	2128
	.byte	62
	.byte	0
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string371
	.byte	22
	.long	.Lfunc_begin90
	.long	.Lfunc_end90-.Lfunc_begin90
	.byte	1
	.byte	87
	.long	.Linfo_string702
	.long	.Linfo_string703
	.byte	3
	.short	2128
	.byte	0
	.byte	2
	.long	.Linfo_string372
	.byte	19
	.long	.Lfunc_begin91
	.long	.Lfunc_end91-.Lfunc_begin91
	.byte	1
	.byte	87
	.long	5395
	.byte	13
	.long	.Linfo_string450
	.long	.Linfo_string7
	.byte	3
	.short	522

	.byte	1
	.byte	0
	.byte	3
	.long	.Linfo_string379
	.long	.Linfo_string380
	.byte	3
	.short	1220
	.byte	1
	.byte	3
	.long	.Linfo_string381
	.long	.Linfo_string382
	.byte	3
	.short	1241
	.byte	1
	.byte	2
	.long	.Linfo_string383
	.byte	3
	.long	.Linfo_string384
	.long	.Linfo_string385
	.byte	3
	.short	354
	.byte	1
	.byte	0
	.byte	7
	.long	.Lfunc_begin92
	.long	.Lfunc_end92-.Lfunc_begin92
	.byte	1
	.byte	87
	.long	.Linfo_string704
	.long	.Linfo_string119
	.byte	3
	.short	1176

	.byte	12
	.long	4861
	.long	.Ldebug_ranges146
	.byte	3
	.short	1177
	.byte	25
	.byte	18
	.long	12677
	.long	.Ldebug_ranges147
	.byte	3
	.short	1197
	.byte	29
	.byte	10
	.long	13365
	.long	.Ldebug_ranges148
	.byte	27
	.byte	46
	.byte	17
	.byte	0
	.byte	18
	.long	5409
	.long	.Ldebug_ranges149
	.byte	3
	.short	1206
	.byte	26
	.byte	9
	.long	5422
	.long	.Ltmp811
	.long	.Ltmp813-.Ltmp811
	.byte	3
	.short	1227
	.byte	21
	.byte	8
	.long	5440
	.long	.Ltmp812
	.long	.Ltmp813-.Ltmp812
	.byte	3
	.short	1249
	.byte	22
	.byte	0
	.byte	9
	.long	5422
	.long	.Ltmp814
	.long	.Ltmp816-.Ltmp814
	.byte	3
	.short	1228
	.byte	25
	.byte	8
	.long	5440
	.long	.Ltmp815
	.long	.Ltmp816-.Ltmp815
	.byte	3
	.short	1249
	.byte	22
	.byte	0
	.byte	9
	.long	14157
	.long	.Ltmp817
	.long	.Ltmp818-.Ltmp817
	.byte	3
	.short	1235
	.byte	26
	.byte	9
	.long	13953
	.long	.Ltmp817
	.long	.Ltmp818-.Ltmp817
	.byte	30
	.short	387
	.byte	20
	.byte	15
	.long	234
	.long	.Ltmp817
	.long	.Ltmp818-.Ltmp817
	.byte	25
	.byte	177
	.byte	18
	.byte	8
	.long	221
	.long	.Ltmp817
	.long	.Ltmp818-.Ltmp817
	.byte	31
	.short	576
	.byte	18
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	18
	.long	12689
	.long	.Ldebug_ranges150
	.byte	3
	.short	1183
	.byte	29
	.byte	10
	.long	13377
	.long	.Ldebug_ranges151
	.byte	27
	.byte	46
	.byte	17
	.byte	0
	.byte	9
	.long	14170
	.long	.Ltmp828
	.long	.Ltmp829-.Ltmp828
	.byte	3
	.short	1213
	.byte	26
	.byte	8
	.long	13965
	.long	.Ltmp828
	.long	.Ltmp829-.Ltmp828
	.byte	30
	.short	329
	.byte	9
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string404
	.byte	5
	.long	.Linfo_string405
	.long	.Linfo_string406
	.byte	44
	.byte	95
	.byte	1
	.byte	2
	.long	.Linfo_string20
	.byte	14
	.long	.Lfunc_begin105
	.long	.Lfunc_end105-.Lfunc_begin105
	.byte	1
	.byte	87
	.long	.Linfo_string725
	.long	.Linfo_string403
	.byte	44
	.byte	31

	.byte	17
	.long	15160
	.long	.Ldebug_ranges157
	.byte	44
	.byte	48
	.byte	18
	.byte	17
	.long	15128
	.long	.Ldebug_ranges158
	.byte	40
	.byte	64
	.byte	9
	.byte	18
	.long	15115
	.long	.Ldebug_ranges159
	.byte	40
	.short	362
	.byte	15
	.byte	12
	.long	15023
	.long	.Ldebug_ranges160
	.byte	40
	.short	324
	.byte	12
	.byte	9
	.long	15141
	.long	.Ltmp892
	.long	.Ltmp894-.Ltmp892
	.byte	40
	.short	327
	.byte	29
	.byte	9
	.long	182
	.long	.Ltmp892
	.long	.Ltmp893-.Ltmp892
	.byte	40
	.short	347
	.byte	28
	.byte	8
	.long	169
	.long	.Ltmp892
	.long	.Ltmp893-.Ltmp892
	.byte	31
	.short	576
	.byte	18
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	17
	.long	15048
	.long	.Ldebug_ranges161
	.byte	44
	.byte	37
	.byte	31
	.byte	18
	.long	15196
	.long	.Ldebug_ranges162
	.byte	39
	.short	1134
	.byte	9
	.byte	8
	.long	16211
	.long	.Ltmp895
	.long	.Ltmp896-.Ltmp895
	.byte	48
	.short	413
	.byte	25
	.byte	9
	.long	14183
	.long	.Ltmp897
	.long	.Ltmp898-.Ltmp897
	.byte	48
	.short	413
	.byte	25
	.byte	8
	.long	13860
	.long	.Ltmp897
	.long	.Ltmp898-.Ltmp897
	.byte	30
	.short	329
	.byte	9
	.byte	0
	.byte	18
	.long	14287
	.long	.Ldebug_ranges163
	.byte	48
	.short	417
	.byte	34
	.byte	17
	.long	13389
	.long	.Ldebug_ranges164
	.byte	49
	.byte	45
	.byte	16
	.byte	12
	.long	13329
	.long	.Ldebug_ranges165
	.byte	13
	.short	294
	.byte	37
	.byte	0
	.byte	17
	.long	14299
	.long	.Ldebug_ranges166
	.byte	49
	.byte	48
	.byte	5
	.byte	15
	.long	292
	.long	.Ltmp902
	.long	.Ltmp903-.Ltmp902
	.byte	49
	.byte	62
	.byte	22
	.byte	9
	.long	13000
	.long	.Ltmp902
	.long	.Ltmp903-.Ltmp902
	.byte	31
	.short	965
	.byte	18
	.byte	9
	.long	7960
	.long	.Ltmp902
	.long	.Ltmp903-.Ltmp902
	.byte	9
	.short	2366
	.byte	5
	.byte	15
	.long	278
	.long	.Ltmp902
	.long	.Ltmp903-.Ltmp902
	.byte	1
	.byte	227
	.byte	5
	.byte	8
	.long	333
	.long	.Ltmp902
	.long	.Ltmp903-.Ltmp902
	.byte	31
	.short	953
	.byte	22
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	15
	.long	15886
	.long	.Ltmp904
	.long	.Ltmp905-.Ltmp904
	.byte	49
	.byte	65
	.byte	18
	.byte	9
	.long	15872
	.long	.Ltmp904
	.long	.Ltmp905-.Ltmp904
	.byte	18
	.short	1199
	.byte	5
	.byte	8
	.long	15854
	.long	.Ltmp904
	.long	.Ltmp905-.Ltmp904
	.byte	18
	.short	820
	.byte	9
	.byte	0
	.byte	0
	.byte	15
	.long	14066
	.long	.Ltmp905
	.long	.Ltmp906-.Ltmp905
	.byte	49
	.byte	66
	.byte	30
	.byte	9
	.long	13478
	.long	.Ltmp905
	.long	.Ltmp906-.Ltmp905
	.byte	30
	.short	706
	.byte	9
	.byte	15
	.long	182
	.long	.Ltmp905
	.long	.Ltmp906-.Ltmp905
	.byte	41
	.byte	96
	.byte	17
	.byte	8
	.long	169
	.long	.Ltmp905
	.long	.Ltmp906-.Ltmp905
	.byte	31
	.short	576
	.byte	18
	.byte	0
	.byte	0
	.byte	0
	.byte	17
	.long	13402
	.long	.Ldebug_ranges167
	.byte	49
	.byte	66
	.byte	30
	.byte	12
	.long	13329
	.long	.Ldebug_ranges168
	.byte	13
	.short	294
	.byte	37
	.byte	0
	.byte	17
	.long	14311
	.long	.Ldebug_ranges169
	.byte	49
	.byte	81
	.byte	22
	.byte	11
	.long	12159
	.long	.Ltmp921
	.long	.Ltmp922-.Ltmp921
	.byte	49
	.byte	24
	.byte	5
	.byte	0
	.byte	15
	.long	14311
	.long	.Ltmp924
	.long	.Ltmp926-.Ltmp924
	.byte	49
	.byte	82
	.byte	22
	.byte	11
	.long	12159
	.long	.Ltmp924
	.long	.Ltmp925-.Ltmp924
	.byte	49
	.byte	24
	.byte	5
	.byte	0
	.byte	17
	.long	13696
	.long	.Ldebug_ranges170
	.byte	49
	.byte	91
	.byte	5
	.byte	10
	.long	13599
	.long	.Ldebug_ranges171
	.byte	25
	.byte	15
	.byte	9
	.byte	0
	.byte	17
	.long	13415
	.long	.Ldebug_ranges172
	.byte	49
	.byte	91
	.byte	5
	.byte	12
	.long	13329
	.long	.Ldebug_ranges173
	.byte	13
	.short	294
	.byte	37
	.byte	0
	.byte	0
	.byte	0
	.byte	9
	.long	15839
	.long	.Ltmp965
	.long	.Ltmp966-.Ltmp965
	.byte	48
	.short	439
	.byte	28
	.byte	9
	.long	14743
	.long	.Ltmp965
	.long	.Ltmp966-.Ltmp965
	.byte	18
	.short	1483
	.byte	13
	.byte	11
	.long	14725
	.long	.Ltmp965
	.long	.Ltmp966-.Ltmp965
	.byte	50
	.byte	26
	.byte	9
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	17
	.long	15172
	.long	.Ldebug_ranges174
	.byte	44
	.byte	47
	.byte	33
	.byte	17
	.long	15096
	.long	.Ldebug_ranges175
	.byte	40
	.byte	64
	.byte	9
	.byte	18
	.long	15084
	.long	.Ldebug_ranges176
	.byte	40
	.short	287
	.byte	15
	.byte	10
	.long	15023
	.long	.Ldebug_ranges177
	.byte	40
	.byte	254
	.byte	12
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string23
	.byte	2
	.long	.Linfo_string598
	.byte	5
	.long	.Linfo_string599
	.long	.Linfo_string10
	.byte	44
	.byte	134
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string620
	.byte	5
	.long	.Linfo_string621
	.long	.Linfo_string10
	.byte	44
	.byte	235
	.byte	1
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string602
	.byte	5
	.long	.Linfo_string603
	.long	.Linfo_string604
	.byte	44
	.byte	21
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string140
	.byte	2
	.long	.Linfo_string604
	.byte	5
	.long	.Linfo_string607
	.long	.Linfo_string10
	.byte	44
	.byte	26
	.byte	1
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string608
	.byte	14
	.long	.Lfunc_begin111
	.long	.Lfunc_end111-.Lfunc_begin111
	.byte	1
	.byte	87
	.long	.Linfo_string734
	.long	.Linfo_string598
	.byte	44
	.byte	133

	.byte	17
	.long	15965
	.long	.Ldebug_ranges236
	.byte	44
	.byte	134
	.byte	23
	.byte	18
	.long	6475
	.long	.Ldebug_ranges237
	.byte	19
	.short	1311
	.byte	22
	.byte	10
	.long	4873
	.long	.Ldebug_ranges238
	.byte	44
	.byte	148
	.byte	17
	.byte	11
	.long	4873
	.long	.Ltmp1222
	.long	.Ltmp1223-.Ltmp1222
	.byte	44
	.byte	149
	.byte	17
	.byte	11
	.long	4873
	.long	.Ltmp1224
	.long	.Ltmp1225-.Ltmp1224
	.byte	44
	.byte	150
	.byte	17
	.byte	11
	.long	4873
	.long	.Ltmp1226
	.long	.Ltmp1227-.Ltmp1226
	.byte	44
	.byte	137
	.byte	21
	.byte	17
	.long	6512
	.long	.Ldebug_ranges239
	.byte	44
	.byte	141
	.byte	34
	.byte	17
	.long	4925
	.long	.Ldebug_ranges240
	.byte	44
	.byte	26
	.byte	9
	.byte	18
	.long	6535
	.long	.Ldebug_ranges241
	.byte	3
	.short	1283
	.byte	18
	.byte	10
	.long	16170
	.long	.Ldebug_ranges242
	.byte	44
	.byte	26
	.byte	33
	.byte	0
	.byte	0
	.byte	0
	.byte	10
	.long	4873
	.long	.Ldebug_ranges243
	.byte	44
	.byte	142
	.byte	17
	.byte	11
	.long	4873
	.long	.Ltmp1239
	.long	.Ltmp1240-.Ltmp1239
	.byte	44
	.byte	143
	.byte	17
	.byte	11
	.long	4873
	.long	.Ltmp1242
	.long	.Ltmp1243-.Ltmp1242
	.byte	44
	.byte	145
	.byte	17
	.byte	0
	.byte	0
	.byte	0
	.byte	14
	.long	.Lfunc_begin117
	.long	.Lfunc_end117-.Lfunc_begin117
	.byte	1
	.byte	87
	.long	.Linfo_string739
	.long	.Linfo_string620
	.byte	44
	.byte	233

	.byte	15
	.long	15978
	.long	.Ltmp1284
	.long	.Ltmp1289-.Ltmp1284
	.byte	44
	.byte	235
	.byte	27
	.byte	9
	.long	6493
	.long	.Ltmp1285
	.long	.Ltmp1289-.Ltmp1285
	.byte	19
	.short	1311
	.byte	22
	.byte	11
	.long	4873
	.long	.Ltmp1286
	.long	.Ltmp1287-.Ltmp1286
	.byte	44
	.byte	236
	.byte	72
	.byte	11
	.long	4873
	.long	.Ltmp1287
	.long	.Ltmp1288-.Ltmp1287
	.byte	44
	.byte	236
	.byte	39
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string211
	.byte	2
	.long	.Linfo_string598
	.byte	3
	.long	.Linfo_string624
	.long	.Linfo_string10
	.byte	44
	.short	319
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string620
	.byte	3
	.long	.Linfo_string628
	.long	.Linfo_string10
	.byte	44
	.short	367
	.byte	1
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string625
	.byte	7
	.long	.Lfunc_begin118
	.long	.Lfunc_end118-.Lfunc_begin118
	.byte	1
	.byte	87
	.long	.Linfo_string740
	.long	.Linfo_string598
	.byte	44
	.short	318

	.byte	18
	.long	15991
	.long	.Ldebug_ranges251
	.byte	44
	.short	319
	.byte	23
	.byte	9
	.long	6859
	.long	.Ltmp1294
	.long	.Ltmp1313-.Ltmp1294
	.byte	19
	.short	1311
	.byte	22
	.byte	12
	.long	4873
	.long	.Ldebug_ranges252
	.byte	44
	.short	331
	.byte	17
	.byte	8
	.long	4873
	.long	.Ltmp1301
	.long	.Ltmp1302-.Ltmp1301
	.byte	44
	.short	322
	.byte	21
	.byte	18
	.long	6512
	.long	.Ldebug_ranges253
	.byte	44
	.short	326
	.byte	34
	.byte	17
	.long	4925
	.long	.Ldebug_ranges254
	.byte	44
	.byte	26
	.byte	9
	.byte	18
	.long	6535
	.long	.Ldebug_ranges255
	.byte	3
	.short	1283
	.byte	18
	.byte	10
	.long	16170
	.long	.Ldebug_ranges256
	.byte	44
	.byte	26
	.byte	33
	.byte	0
	.byte	0
	.byte	0
	.byte	8
	.long	4873
	.long	.Ltmp1312
	.long	.Ltmp1313-.Ltmp1312
	.byte	44
	.short	328
	.byte	17
	.byte	0
	.byte	0
	.byte	0
	.byte	7
	.long	.Lfunc_begin119
	.long	.Lfunc_end119-.Lfunc_begin119
	.byte	1
	.byte	87
	.long	.Linfo_string741
	.long	.Linfo_string620
	.byte	44
	.short	365

	.byte	9
	.long	16004
	.long	.Ltmp1315
	.long	.Ltmp1320-.Ltmp1315
	.byte	44
	.short	367
	.byte	27
	.byte	9
	.long	6878
	.long	.Ltmp1316
	.long	.Ltmp1320-.Ltmp1316
	.byte	19
	.short	1311
	.byte	22
	.byte	8
	.long	4873
	.long	.Ltmp1317
	.long	.Ltmp1318-.Ltmp1317
	.byte	44
	.short	369
	.byte	21
	.byte	8
	.long	4873
	.long	.Ltmp1319
	.long	.Ltmp1320-.Ltmp1319
	.byte	44
	.short	371
	.byte	17
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	3
	.long	.Linfo_string629
	.long	.Linfo_string630
	.byte	44
	.short	285
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string32
	.byte	13
	.long	.Linfo_string519
	.long	.Linfo_string520
	.byte	3
	.short	2105

	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string410
	.byte	7
	.long	.Lfunc_begin107
	.long	.Lfunc_end107-.Lfunc_begin107
	.byte	1
	.byte	87
	.long	.Linfo_string728
	.long	.Linfo_string7
	.byte	3
	.short	2203

	.byte	8
	.long	7166
	.long	.Ltmp1049
	.long	.Ltmp1050-.Ltmp1049
	.byte	3
	.short	2204
	.byte	9
	.byte	18
	.long	16460
	.long	.Ldebug_ranges196
	.byte	3
	.short	2205
	.byte	18
	.byte	18
	.long	16473
	.long	.Ldebug_ranges197
	.byte	52
	.short	430
	.byte	51
	.byte	18
	.long	16617
	.long	.Ldebug_ranges198
	.byte	52
	.short	885
	.byte	9
	.byte	18
	.long	16600
	.long	.Ldebug_ranges199
	.byte	53
	.short	311
	.byte	9
	.byte	15
	.long	14209
	.long	.Ltmp1053
	.long	.Ltmp1054-.Ltmp1053
	.byte	53
	.byte	70
	.byte	15
	.byte	8
	.long	14196
	.long	.Ltmp1053
	.long	.Ltmp1054-.Ltmp1053
	.byte	30
	.short	2429
	.byte	9
	.byte	0
	.byte	17
	.long	12198
	.long	.Ldebug_ranges200
	.byte	53
	.byte	82
	.byte	9
	.byte	12
	.long	12185
	.long	.Ldebug_ranges201
	.byte	20
	.short	507
	.byte	26
	.byte	0
	.byte	17
	.long	16131
	.long	.Ldebug_ranges202
	.byte	53
	.byte	82
	.byte	9
	.byte	18
	.long	16636
	.long	.Ldebug_ranges203
	.byte	29
	.short	906
	.byte	29
	.byte	11
	.long	16649
	.long	.Ltmp1059
	.long	.Ltmp1060-.Ltmp1059
	.byte	53
	.byte	82
	.byte	44
	.byte	0
	.byte	0
	.byte	11
	.long	16661
	.long	.Ltmp1061
	.long	.Ltmp1062-.Ltmp1061
	.byte	53
	.byte	77
	.byte	9
	.byte	17
	.long	12378
	.long	.Ldebug_ranges204
	.byte	53
	.byte	86
	.byte	14
	.byte	12
	.long	12359
	.long	.Ldebug_ranges205
	.byte	6
	.short	711
	.byte	9
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	12
	.long	16679
	.long	.Ldebug_ranges206
	.byte	52
	.short	433
	.byte	18
	.byte	0
	.byte	8
	.long	7166
	.long	.Ltmp1074
	.long	.Ltmp1075-.Ltmp1074
	.byte	3
	.short	2210
	.byte	13
	.byte	9
	.long	16556
	.long	.Ltmp1076
	.long	.Ltmp1081-.Ltmp1076
	.byte	3
	.short	2205
	.byte	18
	.byte	9
	.long	16537
	.long	.Ltmp1076
	.long	.Ltmp1081-.Ltmp1076
	.byte	55
	.short	360
	.byte	9
	.byte	9
	.long	16519
	.long	.Ltmp1076
	.long	.Ltmp1081-.Ltmp1076
	.byte	55
	.short	273
	.byte	58
	.byte	10
	.long	16575
	.long	.Ldebug_ranges207
	.byte	55
	.byte	168
	.byte	25
	.byte	0
	.byte	0
	.byte	0
	.byte	8
	.long	7166
	.long	.Ltmp1082
	.long	.Ltmp1083-.Ltmp1082
	.byte	3
	.short	2212
	.byte	9
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string613
	.byte	21
	.long	.Lfunc_begin112
	.long	.Lfunc_end112-.Lfunc_begin112
	.byte	1
	.byte	87
	.long	7616
	.byte	17
	.long	16486
	.long	.Ldebug_ranges244
	.byte	3
	.byte	163
	.byte	24
	.byte	18
	.long	16500
	.long	.Ldebug_ranges245
	.byte	52
	.short	658
	.byte	42
	.byte	12
	.long	16429
	.long	.Ldebug_ranges246
	.byte	52
	.short	1663
	.byte	15
	.byte	0
	.byte	0
	.byte	0
	.byte	19
	.long	.Lfunc_begin113
	.long	.Lfunc_end113-.Lfunc_begin113
	.byte	1
	.byte	87
	.long	7628
	.byte	5
	.long	.Linfo_string614
	.long	.Linfo_string615
	.byte	3
	.byte	162
	.byte	1
	.byte	5
	.long	.Linfo_string616
	.long	.Linfo_string617
	.byte	3
	.byte	185
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string42
	.byte	4
	.long	.Lfunc_begin114
	.long	.Lfunc_end114-.Lfunc_begin114
	.byte	1
	.byte	87
	.long	.Linfo_string735
	.long	.Linfo_string736
	.byte	3
	.byte	192
	.byte	16
	.long	.Lfunc_begin115
	.long	.Lfunc_end115-.Lfunc_begin115
	.byte	1
	.byte	87
	.long	.Linfo_string737
	.long	.Linfo_string615
	.byte	3
	.byte	196
	.byte	17
	.long	7616
	.long	.Ldebug_ranges247
	.byte	3
	.byte	197
	.byte	9
	.byte	17
	.long	16486
	.long	.Ldebug_ranges248
	.byte	3
	.byte	163
	.byte	24
	.byte	18
	.long	16500
	.long	.Ldebug_ranges249
	.byte	52
	.short	658
	.byte	42
	.byte	12
	.long	16429
	.long	.Ldebug_ranges250
	.byte	52
	.short	1663
	.byte	15
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	16
	.long	.Lfunc_begin116
	.long	.Lfunc_end116-.Lfunc_begin116
	.byte	1
	.byte	87
	.long	.Linfo_string738
	.long	.Linfo_string617
	.byte	3
	.byte	200
	.byte	11
	.long	7628
	.long	.Ltmp1280
	.long	.Ltmp1281-.Ltmp1280
	.byte	3
	.byte	201
	.byte	9
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string136
	.byte	7
	.long	.Lfunc_begin126
	.long	.Lfunc_end126-.Lfunc_begin126
	.byte	1
	.byte	87
	.long	.Linfo_string746
	.long	.Linfo_string7
	.byte	3
	.short	2164

	.byte	8
	.long	5168
	.long	.Ltmp1337
	.long	.Ltmp1338-.Ltmp1337
	.byte	3
	.short	2165
	.byte	9
	.byte	8
	.long	5168
	.long	.Ltmp1338
	.long	.Ltmp1339-.Ltmp1338
	.byte	3
	.short	2165
	.byte	9
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string571
	.byte	14
	.long	.Lfunc_begin136
	.long	.Lfunc_end136-.Lfunc_begin136
	.byte	1
	.byte	87
	.long	.Linfo_string756
	.long	.Linfo_string7
	.byte	3
	.byte	96

	.byte	11
	.long	4873
	.long	.Lfunc_begin136
	.long	.Ltmp1506-.Lfunc_begin136
	.byte	3
	.byte	96
	.byte	23
	.byte	0
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string11
	.byte	2
	.long	.Linfo_string12
	.byte	2
	.long	.Linfo_string13
	.byte	16
	.long	.Lfunc_begin64
	.long	.Lfunc_end64-.Lfunc_begin64
	.byte	1
	.byte	87
	.long	.Linfo_string656
	.long	.Linfo_string657
	.byte	1
	.byte	227
	.byte	15
	.long	381
	.long	.Lfunc_begin64
	.long	.Ltmp1-.Lfunc_begin64
	.byte	1
	.byte	227
	.byte	5
	.byte	8
	.long	48
	.long	.Lfunc_begin64
	.long	.Ltmp0-.Lfunc_begin64
	.byte	3
	.short	307
	.byte	30
	.byte	0
	.byte	0
	.byte	5
	.long	.Linfo_string477
	.long	.Linfo_string478
	.byte	1
	.byte	227
	.byte	1
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string423
	.byte	2
	.long	.Linfo_string424
	.byte	3
	.long	.Linfo_string425
	.long	.Linfo_string426
	.byte	46
	.short	500
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string567
	.byte	3
	.long	.Linfo_string568
	.long	.Linfo_string426
	.byte	46
	.short	500
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string648
	.byte	3
	.long	.Linfo_string649
	.long	.Linfo_string426
	.byte	46
	.short	500
	.byte	1
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string19
	.byte	2
	.long	.Linfo_string504
	.byte	3
	.long	.Linfo_string505
	.long	.Linfo_string506
	.byte	51
	.short	449
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string140
	.byte	16
	.long	.Lfunc_begin108
	.long	.Lfunc_end108-.Lfunc_begin108
	.byte	1
	.byte	87
	.long	.Linfo_string729
	.long	.Linfo_string730
	.byte	51
	.byte	91
	.byte	11
	.long	4899
	.long	.Ltmp1090
	.long	.Ltmp1091-.Ltmp1090
	.byte	51
	.byte	93
	.byte	9
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string14
	.byte	2
	.long	.Linfo_string15
	.byte	2
	.long	.Linfo_string16
	.byte	2
	.long	.Linfo_string17
	.byte	24
	.long	.Lfunc_begin65
	.long	.Lfunc_end65-.Lfunc_begin65
	.byte	1
	.byte	87
	.long	.Linfo_string658
	.long	.Linfo_string659
	.byte	4
	.byte	195

	.byte	0
	.byte	2
	.long	.Linfo_string150
	.byte	5
	.long	.Linfo_string151
	.long	.Linfo_string152
	.byte	4
	.byte	52
	.byte	1
	.byte	5
	.long	.Linfo_string157
	.long	.Linfo_string158
	.byte	4
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string177
	.long	.Linfo_string178
	.byte	4
	.byte	47
	.byte	1
	.byte	5
	.long	.Linfo_string179
	.long	.Linfo_string180
	.byte	4
	.byte	29
	.byte	1
	.byte	5
	.long	.Linfo_string183
	.long	.Linfo_string184
	.byte	4
	.byte	70
	.byte	1
	.byte	5
	.long	.Linfo_string248
	.long	.Linfo_string249
	.byte	4
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string250
	.long	.Linfo_string251
	.byte	4
	.byte	88
	.byte	1
	.byte	5
	.long	.Linfo_string258
	.long	.Linfo_string259
	.byte	4
	.byte	78
	.byte	1
	.byte	5
	.long	.Linfo_string262
	.long	.Linfo_string263
	.byte	4
	.byte	70
	.byte	1
	.byte	5
	.long	.Linfo_string266
	.long	.Linfo_string267
	.byte	4
	.byte	29
	.byte	1
	.byte	5
	.long	.Linfo_string274
	.long	.Linfo_string275
	.byte	4
	.byte	34
	.byte	1
	.byte	5
	.long	.Linfo_string283
	.long	.Linfo_string284
	.byte	4
	.byte	39
	.byte	1
	.byte	2
	.long	.Linfo_string285
	.byte	5
	.long	.Linfo_string286
	.long	.Linfo_string287
	.byte	4
	.byte	42
	.byte	1
	.byte	0
	.byte	0
	.byte	5
	.long	.Linfo_string164
	.long	.Linfo_string165
	.byte	4
	.byte	172
	.byte	1
	.byte	5
	.long	.Linfo_string186
	.long	.Linfo_string187
	.byte	4
	.byte	165
	.byte	1
	.byte	2
	.long	.Linfo_string203
	.byte	5
	.long	.Linfo_string204
	.long	.Linfo_string205
	.byte	4
	.byte	98
	.byte	1
	.byte	0
	.byte	5
	.long	.Linfo_string206
	.long	.Linfo_string207
	.byte	4
	.byte	172
	.byte	1
	.byte	5
	.long	.Linfo_string220
	.long	.Linfo_string221
	.byte	4
	.byte	172
	.byte	1
	.byte	2
	.long	.Linfo_string233
	.byte	5
	.long	.Linfo_string234
	.long	.Linfo_string235
	.byte	4
	.byte	138
	.byte	1
	.byte	5
	.long	.Linfo_string254
	.long	.Linfo_string255
	.byte	4
	.byte	125
	.byte	1
	.byte	5
	.long	.Linfo_string256
	.long	.Linfo_string257
	.byte	4
	.byte	132
	.byte	1
	.byte	5
	.long	.Linfo_string279
	.long	.Linfo_string280
	.byte	4
	.byte	138
	.byte	1
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string26
	.byte	2
	.long	.Linfo_string27
	.byte	14
	.long	.Lfunc_begin66
	.long	.Lfunc_end66-.Lfunc_begin66
	.byte	1
	.byte	87
	.long	.Linfo_string660
	.long	.Linfo_string661
	.byte	5
	.byte	86

	.byte	17
	.long	12378
	.long	.Ldebug_ranges0
	.byte	5
	.byte	94
	.byte	18
	.byte	12
	.long	12359
	.long	.Ldebug_ranges1
	.byte	6
	.short	711
	.byte	9
	.byte	0
	.byte	0
	.byte	5
	.long	.Linfo_string146
	.long	.Linfo_string147
	.byte	5
	.byte	72
	.byte	1
	.byte	14
	.long	.Lfunc_begin74
	.long	.Lfunc_end74-.Lfunc_begin74
	.byte	1
	.byte	87
	.long	.Linfo_string674
	.long	.Linfo_string675
	.byte	5
	.byte	114

	.byte	17
	.long	8689
	.long	.Ldebug_ranges13
	.byte	5
	.byte	118
	.byte	30
	.byte	18
	.long	16029
	.long	.Ldebug_ranges14
	.byte	5
	.short	338
	.byte	17
	.byte	18
	.long	13696
	.long	.Ldebug_ranges15
	.byte	28
	.short	287
	.byte	9
	.byte	10
	.long	13599
	.long	.Ldebug_ranges16
	.byte	25
	.byte	15
	.byte	9
	.byte	0
	.byte	0
	.byte	18
	.long	12641
	.long	.Ldebug_ranges17
	.byte	5
	.short	339
	.byte	21
	.byte	17
	.long	12665
	.long	.Ldebug_ranges18
	.byte	26
	.byte	37
	.byte	13
	.byte	11
	.long	13329
	.long	.Ltmp84
	.long	.Ltmp85-.Ltmp84
	.byte	27
	.byte	46
	.byte	17
	.byte	0
	.byte	0
	.byte	0
	.byte	11
	.long	8496
	.long	.Ltmp89
	.long	.Ltmp90-.Ltmp89
	.byte	5
	.byte	151
	.byte	9
	.byte	0
	.byte	14
	.long	.Lfunc_begin76
	.long	.Lfunc_end76-.Lfunc_begin76
	.byte	1
	.byte	87
	.long	.Linfo_string678
	.long	.Linfo_string679
	.byte	5
	.byte	155

	.byte	10
	.long	8496
	.long	.Ldebug_ranges19
	.byte	5
	.byte	200
	.byte	9
	.byte	0
	.byte	5
	.long	.Linfo_string166
	.long	.Linfo_string167
	.byte	5
	.byte	64
	.byte	1
	.byte	0
	.byte	3
	.long	.Linfo_string128
	.long	.Linfo_string129
	.byte	5
	.short	274
	.byte	1
	.byte	2
	.long	.Linfo_string42
	.byte	6
	.long	.Linfo_string148
	.long	.Linfo_string149
	.byte	5
	.byte	27

	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string168
	.byte	5
	.long	.Linfo_string169
	.long	.Linfo_string10
	.byte	5
	.byte	209
	.byte	1
	.byte	5
	.long	.Linfo_string208
	.long	.Linfo_string209
	.byte	5
	.byte	230
	.byte	1
	.byte	3
	.long	.Linfo_string222
	.long	.Linfo_string223
	.byte	5
	.short	261
	.byte	1
	.byte	0
	.byte	14
	.long	.Lfunc_begin77
	.long	.Lfunc_end77-.Lfunc_begin77
	.byte	1
	.byte	87
	.long	.Linfo_string680
	.long	.Linfo_string168
	.byte	5
	.byte	205

	.byte	11
	.long	8707
	.long	.Ltmp106
	.long	.Ltmp107-.Ltmp106
	.byte	5
	.byte	206
	.byte	17
	.byte	15
	.long	8154
	.long	.Ltmp107
	.long	.Ltmp118-.Ltmp107
	.byte	5
	.byte	208
	.byte	9
	.byte	17
	.long	8166
	.long	.Ldebug_ranges20
	.byte	4
	.byte	54
	.byte	15
	.byte	10
	.long	16086
	.long	.Ldebug_ranges21
	.byte	4
	.byte	25
	.byte	9
	.byte	11
	.long	14041
	.long	.Ltmp116
	.long	.Ltmp117-.Ltmp116
	.byte	4
	.byte	25
	.byte	9
	.byte	0
	.byte	0
	.byte	17
	.long	8317
	.long	.Ldebug_ranges22
	.byte	5
	.byte	209
	.byte	5
	.byte	10
	.long	12217
	.long	.Ldebug_ranges23
	.byte	4
	.byte	174
	.byte	17
	.byte	17
	.long	8725
	.long	.Ldebug_ranges24
	.byte	4
	.byte	176
	.byte	13
	.byte	10
	.long	8676
	.long	.Ldebug_ranges25
	.byte	5
	.byte	209
	.byte	34
	.byte	0
	.byte	0
	.byte	15
	.long	8178
	.long	.Ltmp137
	.long	.Ltmp139-.Ltmp137
	.byte	5
	.byte	211
	.byte	13
	.byte	15
	.long	13696
	.long	.Ltmp137
	.long	.Ltmp139-.Ltmp137
	.byte	4
	.byte	48
	.byte	10
	.byte	15
	.long	13599
	.long	.Ltmp137
	.long	.Ltmp139-.Ltmp137
	.byte	25
	.byte	15
	.byte	9
	.byte	9
	.long	13612
	.long	.Ltmp137
	.long	.Ltmp139-.Ltmp137
	.byte	25
	.short	332
	.byte	20
	.byte	9
	.long	13800
	.long	.Ltmp137
	.long	.Ltmp139-.Ltmp137
	.byte	25
	.short	317
	.byte	18
	.byte	15
	.long	182
	.long	.Ltmp137
	.long	.Ltmp138-.Ltmp137
	.byte	25
	.byte	229
	.byte	44
	.byte	8
	.long	169
	.long	.Ltmp137
	.long	.Ltmp138-.Ltmp137
	.byte	31
	.short	576
	.byte	18
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	17
	.long	8154
	.long	.Ldebug_ranges26
	.byte	5
	.byte	215
	.byte	17
	.byte	17
	.long	8166
	.long	.Ldebug_ranges27
	.byte	4
	.byte	54
	.byte	15
	.byte	10
	.long	16086
	.long	.Ldebug_ranges28
	.byte	4
	.byte	25
	.byte	9
	.byte	11
	.long	14041
	.long	.Ltmp149
	.long	.Ltmp150-.Ltmp149
	.byte	4
	.byte	25
	.byte	9
	.byte	0
	.byte	0
	.byte	10
	.long	8190
	.long	.Ldebug_ranges29
	.byte	5
	.byte	251
	.byte	8
	.byte	15
	.long	8202
	.long	.Ltmp156
	.long	.Ltmp157-.Ltmp156
	.byte	5
	.byte	219
	.byte	30
	.byte	15
	.long	307
	.long	.Ltmp156
	.long	.Ltmp157-.Ltmp156
	.byte	4
	.byte	74
	.byte	31
	.byte	8
	.long	12987
	.long	.Ltmp156
	.long	.Ltmp157-.Ltmp156
	.byte	2
	.short	793
	.byte	9
	.byte	0
	.byte	0
	.byte	15
	.long	8329
	.long	.Ltmp157
	.long	.Ltmp160-.Ltmp157
	.byte	5
	.byte	220
	.byte	17
	.byte	11
	.long	12284
	.long	.Ltmp157
	.long	.Ltmp158-.Ltmp157
	.byte	4
	.byte	167
	.byte	13
	.byte	11
	.long	12297
	.long	.Ltmp158
	.long	.Ltmp159-.Ltmp158
	.byte	4
	.byte	166
	.byte	13
	.byte	0
	.byte	17
	.long	16061
	.long	.Ldebug_ranges30
	.byte	5
	.byte	225
	.byte	17
	.byte	18
	.long	13878
	.long	.Ldebug_ranges31
	.byte	28
	.short	298
	.byte	9
	.byte	17
	.long	13625
	.long	.Ldebug_ranges32
	.byte	25
	.byte	26
	.byte	9
	.byte	9
	.long	13638
	.long	.Ltmp162
	.long	.Ltmp163-.Ltmp162
	.byte	25
	.short	341
	.byte	24
	.byte	9
	.long	13812
	.long	.Ltmp162
	.long	.Ltmp163-.Ltmp162
	.byte	25
	.short	323
	.byte	18
	.byte	15
	.long	84
	.long	.Ltmp162
	.long	.Ltmp163-.Ltmp162
	.byte	25
	.byte	236
	.byte	43
	.byte	8
	.long	71
	.long	.Ltmp162
	.long	.Ltmp163-.Ltmp162
	.byte	10
	.short	690
	.byte	18
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	15
	.long	8178
	.long	.Ltmp163
	.long	.Ltmp165-.Ltmp163
	.byte	5
	.byte	228
	.byte	17
	.byte	15
	.long	13696
	.long	.Ltmp163
	.long	.Ltmp165-.Ltmp163
	.byte	4
	.byte	48
	.byte	10
	.byte	15
	.long	13599
	.long	.Ltmp163
	.long	.Ltmp165-.Ltmp163
	.byte	25
	.byte	15
	.byte	9
	.byte	9
	.long	13612
	.long	.Ltmp163
	.long	.Ltmp165-.Ltmp163
	.byte	25
	.short	332
	.byte	20
	.byte	9
	.long	13800
	.long	.Ltmp163
	.long	.Ltmp165-.Ltmp163
	.byte	25
	.short	317
	.byte	18
	.byte	15
	.long	182
	.long	.Ltmp164
	.long	.Ltmp165-.Ltmp164
	.byte	25
	.byte	229
	.byte	44
	.byte	8
	.long	169
	.long	.Ltmp164
	.long	.Ltmp165-.Ltmp164
	.byte	31
	.short	576
	.byte	18
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	15
	.long	8346
	.long	.Ltmp166
	.long	.Ltmp167-.Ltmp166
	.byte	5
	.byte	225
	.byte	17
	.byte	15
	.long	320
	.long	.Ltmp166
	.long	.Ltmp167-.Ltmp166
	.byte	4
	.byte	106
	.byte	13
	.byte	8
	.long	12987
	.long	.Ltmp166
	.long	.Ltmp167-.Ltmp166
	.byte	2
	.short	982
	.byte	9
	.byte	0
	.byte	0
	.byte	15
	.long	8359
	.long	.Ltmp168
	.long	.Ltmp177-.Ltmp168
	.byte	5
	.byte	230
	.byte	9
	.byte	11
	.long	12217
	.long	.Ltmp169
	.long	.Ltmp170-.Ltmp169
	.byte	4
	.byte	174
	.byte	17
	.byte	17
	.long	8737
	.long	.Ldebug_ranges33
	.byte	4
	.byte	176
	.byte	13
	.byte	10
	.long	8676
	.long	.Ldebug_ranges34
	.byte	5
	.byte	230
	.byte	38
	.byte	0
	.byte	17
	.long	8178
	.long	.Ldebug_ranges35
	.byte	4
	.byte	177
	.byte	18
	.byte	17
	.long	13696
	.long	.Ldebug_ranges36
	.byte	4
	.byte	48
	.byte	10
	.byte	17
	.long	13599
	.long	.Ldebug_ranges37
	.byte	25
	.byte	15
	.byte	9
	.byte	18
	.long	13612
	.long	.Ldebug_ranges38
	.byte	25
	.short	332
	.byte	20
	.byte	18
	.long	13800
	.long	.Ldebug_ranges39
	.byte	25
	.short	317
	.byte	18
	.byte	15
	.long	182
	.long	.Ltmp172
	.long	.Ltmp173-.Ltmp172
	.byte	25
	.byte	229
	.byte	44
	.byte	8
	.long	169
	.long	.Ltmp172
	.long	.Ltmp173-.Ltmp172
	.byte	31
	.short	576
	.byte	18
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	17
	.long	13708
	.long	.Ldebug_ranges40
	.byte	5
	.byte	236
	.byte	19
	.byte	17
	.long	13896
	.long	.Ldebug_ranges41
	.byte	25
	.byte	15
	.byte	9
	.byte	12
	.long	13824
	.long	.Ldebug_ranges42
	.byte	25
	.short	291
	.byte	9
	.byte	0
	.byte	0
	.byte	17
	.long	12713
	.long	.Ldebug_ranges43
	.byte	5
	.byte	236
	.byte	19
	.byte	10
	.long	13459
	.long	.Ldebug_ranges44
	.byte	32
	.byte	33
	.byte	9
	.byte	0
	.byte	15
	.long	8178
	.long	.Ltmp193
	.long	.Ltmp194-.Ltmp193
	.byte	5
	.byte	252
	.byte	13
	.byte	15
	.long	13696
	.long	.Ltmp193
	.long	.Ltmp194-.Ltmp193
	.byte	4
	.byte	48
	.byte	10
	.byte	15
	.long	13599
	.long	.Ltmp193
	.long	.Ltmp194-.Ltmp193
	.byte	25
	.byte	15
	.byte	9
	.byte	9
	.long	13612
	.long	.Ltmp193
	.long	.Ltmp194-.Ltmp193
	.byte	25
	.short	332
	.byte	20
	.byte	8
	.long	13800
	.long	.Ltmp193
	.long	.Ltmp194-.Ltmp193
	.byte	25
	.short	317
	.byte	18
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	17
	.long	8166
	.long	.Ldebug_ranges45
	.byte	5
	.byte	254
	.byte	12
	.byte	10
	.long	16086
	.long	.Ldebug_ranges46
	.byte	4
	.byte	25
	.byte	9
	.byte	0
	.byte	9
	.long	8371
	.long	.Ltmp198
	.long	.Ltmp206-.Ltmp198
	.byte	5
	.short	261
	.byte	9
	.byte	11
	.long	12217
	.long	.Ltmp199
	.long	.Ltmp200-.Ltmp199
	.byte	4
	.byte	174
	.byte	17
	.byte	10
	.long	8749
	.long	.Ldebug_ranges47
	.byte	4
	.byte	176
	.byte	13
	.byte	17
	.long	8178
	.long	.Ldebug_ranges48
	.byte	4
	.byte	177
	.byte	18
	.byte	17
	.long	13696
	.long	.Ldebug_ranges49
	.byte	4
	.byte	48
	.byte	10
	.byte	17
	.long	13599
	.long	.Ldebug_ranges50
	.byte	25
	.byte	15
	.byte	9
	.byte	18
	.long	13612
	.long	.Ldebug_ranges51
	.byte	25
	.short	332
	.byte	20
	.byte	18
	.long	13800
	.long	.Ldebug_ranges52
	.byte	25
	.short	317
	.byte	18
	.byte	15
	.long	182
	.long	.Ltmp202
	.long	.Ltmp203-.Ltmp202
	.byte	25
	.byte	229
	.byte	44
	.byte	8
	.long	169
	.long	.Ltmp202
	.long	.Ltmp203-.Ltmp202
	.byte	31
	.short	576
	.byte	18
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	9
	.long	12378
	.long	.Ltmp207
	.long	.Ltmp208-.Ltmp207
	.byte	5
	.short	268
	.byte	14
	.byte	8
	.long	12359
	.long	.Ltmp207
	.long	.Ltmp208-.Ltmp207
	.byte	6
	.short	711
	.byte	9
	.byte	0
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string224
	.byte	2
	.long	.Linfo_string42
	.byte	24
	.long	.Lfunc_begin79
	.long	.Lfunc_end79-.Lfunc_begin79
	.byte	1
	.byte	87
	.long	.Linfo_string683
	.long	.Linfo_string684
	.byte	33
	.byte	121

	.byte	14
	.long	.Lfunc_begin80
	.long	.Lfunc_end80-.Lfunc_begin80
	.byte	1
	.byte	87
	.long	.Linfo_string685
	.long	.Linfo_string686
	.byte	33
	.byte	126

	.byte	11
	.long	16236
	.long	.Lfunc_begin80
	.long	.Ltmp217-.Lfunc_begin80
	.byte	33
	.byte	127
	.byte	9
	.byte	0
	.byte	24
	.long	.Lfunc_begin81
	.long	.Lfunc_end81-.Lfunc_begin81
	.byte	1
	.byte	87
	.long	.Linfo_string687
	.long	.Linfo_string688
	.byte	33
	.byte	130

	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string230
	.byte	14
	.long	.Lfunc_begin82
	.long	.Lfunc_end82-.Lfunc_begin82
	.byte	1
	.byte	87
	.long	.Linfo_string689
	.long	.Linfo_string690
	.byte	35
	.byte	121

	.byte	11
	.long	12329
	.long	.Ltmp220
	.long	.Ltmp221-.Ltmp220
	.byte	35
	.byte	122
	.byte	6
	.byte	0
	.byte	5
	.long	.Linfo_string231
	.long	.Linfo_string232
	.byte	35
	.byte	125
	.byte	1
	.byte	14
	.long	.Lfunc_begin83
	.long	.Lfunc_end83-.Lfunc_begin83
	.byte	1
	.byte	87
	.long	.Linfo_string691
	.long	.Linfo_string692
	.byte	35
	.byte	133

	.byte	10
	.long	10130
	.long	.Ldebug_ranges53
	.byte	35
	.byte	153
	.byte	40
	.byte	11
	.long	10130
	.long	.Ltmp228
	.long	.Ltmp229-.Ltmp228
	.byte	35
	.byte	159
	.byte	30
	.byte	11
	.long	12297
	.long	.Ltmp229
	.long	.Ltmp230-.Ltmp229
	.byte	35
	.byte	160
	.byte	20
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string236
	.byte	5
	.long	.Linfo_string237
	.long	.Linfo_string238
	.byte	37
	.byte	29
	.byte	1
	.byte	5
	.long	.Linfo_string239
	.long	.Linfo_string240
	.byte	37
	.byte	109
	.byte	1
	.byte	2
	.long	.Linfo_string238
	.byte	5
	.long	.Linfo_string242
	.long	.Linfo_string10
	.byte	37
	.byte	31
	.byte	1
	.byte	0
	.byte	5
	.long	.Linfo_string260
	.long	.Linfo_string261
	.byte	37
	.byte	57
	.byte	1
	.byte	5
	.long	.Linfo_string268
	.long	.Linfo_string269
	.byte	37
	.byte	37
	.byte	1
	.byte	5
	.long	.Linfo_string270
	.long	.Linfo_string271
	.byte	37
	.byte	17
	.byte	1
	.byte	5
	.long	.Linfo_string272
	.long	.Linfo_string273
	.byte	37
	.byte	80
	.byte	1
	.byte	2
	.long	.Linfo_string273
	.byte	5
	.long	.Linfo_string278
	.long	.Linfo_string10
	.byte	37
	.byte	93
	.byte	1
	.byte	0
	.byte	14
	.long	.Lfunc_begin84
	.long	.Lfunc_end84-.Lfunc_begin84
	.byte	1
	.byte	87
	.long	.Linfo_string693
	.long	.Linfo_string694
	.byte	37
	.byte	198

	.byte	17
	.long	10226
	.long	.Ldebug_ranges54
	.byte	37
	.byte	199
	.byte	34
	.byte	15
	.long	10214
	.long	.Ltmp232
	.long	.Ltmp245-.Ltmp232
	.byte	37
	.byte	117
	.byte	5
	.byte	15
	.long	8388
	.long	.Ltmp232
	.long	.Ltmp245-.Ltmp232
	.byte	37
	.byte	31
	.byte	5
	.byte	10
	.long	12217
	.long	.Ldebug_ranges55
	.byte	4
	.byte	140
	.byte	21
	.byte	17
	.long	10243
	.long	.Ldebug_ranges56
	.byte	4
	.byte	142
	.byte	17
	.byte	10
	.long	12310
	.long	.Ldebug_ranges57
	.byte	37
	.byte	32
	.byte	14
	.byte	11
	.long	12297
	.long	.Ltmp241
	.long	.Ltmp242-.Ltmp241
	.byte	37
	.byte	32
	.byte	14
	.byte	0
	.byte	0
	.byte	0
	.byte	15
	.long	8214
	.long	.Ltmp246
	.long	.Ltmp247-.Ltmp246
	.byte	37
	.byte	124
	.byte	8
	.byte	15
	.long	16086
	.long	.Ltmp246
	.long	.Ltmp247-.Ltmp246
	.byte	4
	.byte	25
	.byte	9
	.byte	9
	.long	15826
	.long	.Ltmp246
	.long	.Ltmp247-.Ltmp246
	.byte	29
	.short	523
	.byte	56
	.byte	8
	.long	15807
	.long	.Ltmp246
	.long	.Ltmp247-.Ltmp246
	.byte	18
	.short	1483
	.byte	13
	.byte	0
	.byte	0
	.byte	0
	.byte	10
	.long	8226
	.long	.Ldebug_ranges58
	.byte	37
	.byte	118
	.byte	24
	.byte	15
	.long	8412
	.long	.Ltmp250
	.long	.Ltmp251-.Ltmp250
	.byte	37
	.byte	126
	.byte	18
	.byte	15
	.long	8400
	.long	.Ltmp250
	.long	.Ltmp251-.Ltmp250
	.byte	4
	.byte	134
	.byte	18
	.byte	15
	.long	14053
	.long	.Ltmp250
	.long	.Ltmp251-.Ltmp250
	.byte	4
	.byte	127
	.byte	29
	.byte	9
	.long	13612
	.long	.Ltmp250
	.long	.Ltmp251-.Ltmp250
	.byte	30
	.short	387
	.byte	20
	.byte	8
	.long	13800
	.long	.Ltmp250
	.long	.Ltmp251-.Ltmp250
	.byte	25
	.short	317
	.byte	18
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	17
	.long	10256
	.long	.Ldebug_ranges59
	.byte	37
	.byte	128
	.byte	9
	.byte	15
	.long	8238
	.long	.Ltmp252
	.long	.Ltmp254-.Ltmp252
	.byte	37
	.byte	59
	.byte	22
	.byte	15
	.long	8250
	.long	.Ltmp253
	.long	.Ltmp254-.Ltmp253
	.byte	4
	.byte	81
	.byte	27
	.byte	15
	.long	307
	.long	.Ltmp253
	.long	.Ltmp254-.Ltmp253
	.byte	4
	.byte	74
	.byte	31
	.byte	8
	.long	12987
	.long	.Ltmp253
	.long	.Ltmp254-.Ltmp253
	.byte	2
	.short	793
	.byte	9
	.byte	0
	.byte	0
	.byte	0
	.byte	15
	.long	8329
	.long	.Ltmp254
	.long	.Ltmp257-.Ltmp254
	.byte	37
	.byte	60
	.byte	12
	.byte	11
	.long	12284
	.long	.Ltmp254
	.long	.Ltmp255-.Ltmp254
	.byte	4
	.byte	167
	.byte	13
	.byte	11
	.long	12297
	.long	.Ltmp255
	.long	.Ltmp256-.Ltmp255
	.byte	4
	.byte	166
	.byte	13
	.byte	0
	.byte	17
	.long	10280
	.long	.Ldebug_ranges60
	.byte	37
	.byte	61
	.byte	59
	.byte	10
	.long	12310
	.long	.Ldebug_ranges61
	.byte	37
	.byte	23
	.byte	14
	.byte	10
	.long	12310
	.long	.Ldebug_ranges62
	.byte	37
	.byte	24
	.byte	14
	.byte	11
	.long	12297
	.long	.Ltmp309
	.long	.Ltmp310-.Ltmp309
	.byte	37
	.byte	25
	.byte	7
	.byte	0
	.byte	17
	.long	8400
	.long	.Ldebug_ranges63
	.byte	37
	.byte	64
	.byte	17
	.byte	17
	.long	14053
	.long	.Ldebug_ranges64
	.byte	4
	.byte	127
	.byte	29
	.byte	18
	.long	13612
	.long	.Ldebug_ranges65
	.byte	30
	.short	387
	.byte	20
	.byte	18
	.long	13800
	.long	.Ldebug_ranges66
	.byte	25
	.short	317
	.byte	18
	.byte	15
	.long	182
	.long	.Ltmp299
	.long	.Ltmp300-.Ltmp299
	.byte	25
	.byte	229
	.byte	44
	.byte	8
	.long	169
	.long	.Ltmp299
	.long	.Ltmp300-.Ltmp299
	.byte	31
	.short	576
	.byte	18
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	11
	.long	12310
	.long	.Ltmp306
	.long	.Ltmp307-.Ltmp306
	.byte	37
	.byte	61
	.byte	18
	.byte	11
	.long	12297
	.long	.Ltmp311
	.long	.Ltmp312-.Ltmp311
	.byte	37
	.byte	61
	.byte	18
	.byte	15
	.long	8238
	.long	.Ltmp312
	.long	.Ltmp314-.Ltmp312
	.byte	37
	.byte	66
	.byte	30
	.byte	15
	.long	8250
	.long	.Ltmp313
	.long	.Ltmp314-.Ltmp313
	.byte	4
	.byte	81
	.byte	27
	.byte	15
	.long	307
	.long	.Ltmp313
	.long	.Ltmp314-.Ltmp313
	.byte	4
	.byte	74
	.byte	31
	.byte	8
	.long	12987
	.long	.Ltmp313
	.long	.Ltmp314-.Ltmp313
	.byte	2
	.short	793
	.byte	9
	.byte	0
	.byte	0
	.byte	0
	.byte	15
	.long	8329
	.long	.Ltmp314
	.long	.Ltmp317-.Ltmp314
	.byte	37
	.byte	67
	.byte	20
	.byte	11
	.long	12284
	.long	.Ltmp314
	.long	.Ltmp315-.Ltmp314
	.byte	4
	.byte	167
	.byte	13
	.byte	11
	.long	12297
	.long	.Ltmp315
	.long	.Ltmp316-.Ltmp315
	.byte	4
	.byte	166
	.byte	13
	.byte	0
	.byte	17
	.long	10280
	.long	.Ldebug_ranges67
	.byte	37
	.byte	68
	.byte	67
	.byte	10
	.long	12310
	.long	.Ldebug_ranges68
	.byte	37
	.byte	23
	.byte	14
	.byte	10
	.long	12310
	.long	.Ldebug_ranges69
	.byte	37
	.byte	24
	.byte	14
	.byte	11
	.long	12297
	.long	.Ltmp328
	.long	.Ltmp329-.Ltmp328
	.byte	37
	.byte	25
	.byte	7
	.byte	0
	.byte	17
	.long	8400
	.long	.Ldebug_ranges70
	.byte	37
	.byte	71
	.byte	25
	.byte	17
	.long	14053
	.long	.Ldebug_ranges71
	.byte	4
	.byte	127
	.byte	29
	.byte	18
	.long	13612
	.long	.Ldebug_ranges72
	.byte	30
	.short	387
	.byte	20
	.byte	18
	.long	13800
	.long	.Ldebug_ranges73
	.byte	25
	.short	317
	.byte	18
	.byte	15
	.long	182
	.long	.Ltmp319
	.long	.Ltmp320-.Ltmp319
	.byte	25
	.byte	229
	.byte	44
	.byte	8
	.long	169
	.long	.Ltmp319
	.long	.Ltmp320-.Ltmp319
	.byte	31
	.short	576
	.byte	18
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	11
	.long	12310
	.long	.Ltmp325
	.long	.Ltmp326-.Ltmp325
	.byte	37
	.byte	68
	.byte	26
	.byte	11
	.long	12297
	.long	.Ltmp329
	.long	.Ltmp330-.Ltmp329
	.byte	37
	.byte	68
	.byte	26
	.byte	0
	.byte	10
	.long	12230
	.long	.Ldebug_ranges74
	.byte	37
	.byte	165
	.byte	25
	.byte	10
	.long	8262
	.long	.Ldebug_ranges75
	.byte	37
	.byte	161
	.byte	11
	.byte	15
	.long	10268
	.long	.Ltmp279
	.long	.Ltmp286-.Ltmp279
	.byte	37
	.byte	174
	.byte	9
	.byte	10
	.long	12217
	.long	.Ldebug_ranges76
	.byte	37
	.byte	40
	.byte	25
	.byte	11
	.long	14041
	.long	.Ltmp282
	.long	.Ltmp283-.Ltmp282
	.byte	37
	.byte	39
	.byte	27
	.byte	0
	.byte	17
	.long	8412
	.long	.Ldebug_ranges77
	.byte	37
	.byte	185
	.byte	22
	.byte	17
	.long	8400
	.long	.Ldebug_ranges78
	.byte	4
	.byte	134
	.byte	18
	.byte	17
	.long	14053
	.long	.Ldebug_ranges79
	.byte	4
	.byte	127
	.byte	29
	.byte	18
	.long	13612
	.long	.Ldebug_ranges80
	.byte	30
	.short	387
	.byte	20
	.byte	12
	.long	13800
	.long	.Ldebug_ranges81
	.byte	25
	.short	317
	.byte	18
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	17
	.long	10214
	.long	.Ldebug_ranges82
	.byte	37
	.byte	129
	.byte	9
	.byte	17
	.long	8388
	.long	.Ldebug_ranges83
	.byte	37
	.byte	31
	.byte	5
	.byte	11
	.long	12217
	.long	.Ltmp289
	.long	.Ltmp290-.Ltmp289
	.byte	4
	.byte	140
	.byte	21
	.byte	17
	.long	10243
	.long	.Ldebug_ranges84
	.byte	4
	.byte	142
	.byte	17
	.byte	10
	.long	12310
	.long	.Ldebug_ranges85
	.byte	37
	.byte	32
	.byte	14
	.byte	11
	.long	12297
	.long	.Ltmp295
	.long	.Ltmp296-.Ltmp295
	.byte	37
	.byte	32
	.byte	14
	.byte	0
	.byte	15
	.long	8412
	.long	.Ltmp292
	.long	.Ltmp294-.Ltmp292
	.byte	4
	.byte	145
	.byte	21
	.byte	15
	.long	8400
	.long	.Ltmp292
	.long	.Ltmp294-.Ltmp292
	.byte	4
	.byte	134
	.byte	18
	.byte	15
	.long	14053
	.long	.Ltmp292
	.long	.Ltmp294-.Ltmp292
	.byte	4
	.byte	127
	.byte	29
	.byte	9
	.long	13612
	.long	.Ltmp292
	.long	.Ltmp294-.Ltmp292
	.byte	30
	.short	387
	.byte	20
	.byte	9
	.long	13800
	.long	.Ltmp292
	.long	.Ltmp294-.Ltmp292
	.byte	25
	.short	317
	.byte	18
	.byte	15
	.long	182
	.long	.Ltmp293
	.long	.Ltmp294-.Ltmp293
	.byte	25
	.byte	229
	.byte	44
	.byte	8
	.long	169
	.long	.Ltmp293
	.long	.Ltmp294-.Ltmp293
	.byte	31
	.short	576
	.byte	18
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	17
	.long	10268
	.long	.Ldebug_ranges86
	.byte	37
	.byte	187
	.byte	13
	.byte	11
	.long	12217
	.long	.Ltmp335
	.long	.Ltmp336-.Ltmp335
	.byte	37
	.byte	40
	.byte	25
	.byte	15
	.long	8412
	.long	.Ltmp337
	.long	.Ltmp338-.Ltmp337
	.byte	37
	.byte	45
	.byte	21
	.byte	15
	.long	8400
	.long	.Ltmp337
	.long	.Ltmp338-.Ltmp337
	.byte	4
	.byte	134
	.byte	18
	.byte	15
	.long	14053
	.long	.Ltmp337
	.long	.Ltmp338-.Ltmp337
	.byte	4
	.byte	127
	.byte	29
	.byte	9
	.long	13612
	.long	.Ltmp337
	.long	.Ltmp338-.Ltmp337
	.byte	30
	.short	387
	.byte	20
	.byte	8
	.long	13800
	.long	.Ltmp337
	.long	.Ltmp338-.Ltmp337
	.byte	25
	.short	317
	.byte	18
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	11
	.long	8226
	.long	.Ltmp342
	.long	.Ltmp343-.Ltmp342
	.byte	37
	.byte	130
	.byte	23
	.byte	11
	.long	8262
	.long	.Ltmp346
	.long	.Ltmp347-.Ltmp346
	.byte	37
	.byte	141
	.byte	8
	.byte	15
	.long	8412
	.long	.Ltmp348
	.long	.Ltmp349-.Ltmp348
	.byte	37
	.byte	144
	.byte	13
	.byte	15
	.long	8400
	.long	.Ltmp348
	.long	.Ltmp349-.Ltmp348
	.byte	4
	.byte	134
	.byte	18
	.byte	15
	.long	14053
	.long	.Ltmp348
	.long	.Ltmp349-.Ltmp348
	.byte	4
	.byte	127
	.byte	29
	.byte	9
	.long	13612
	.long	.Ltmp348
	.long	.Ltmp349-.Ltmp348
	.byte	30
	.short	387
	.byte	20
	.byte	8
	.long	13800
	.long	.Ltmp348
	.long	.Ltmp349-.Ltmp348
	.byte	25
	.short	317
	.byte	18
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	17
	.long	10292
	.long	.Ldebug_ranges87
	.byte	37
	.byte	147
	.byte	22
	.byte	15
	.long	8412
	.long	.Ltmp352
	.long	.Ltmp353-.Ltmp352
	.byte	37
	.byte	88
	.byte	17
	.byte	15
	.long	8400
	.long	.Ltmp352
	.long	.Ltmp353-.Ltmp352
	.byte	4
	.byte	134
	.byte	18
	.byte	15
	.long	14053
	.long	.Ltmp352
	.long	.Ltmp353-.Ltmp352
	.byte	4
	.byte	127
	.byte	29
	.byte	9
	.long	13612
	.long	.Ltmp352
	.long	.Ltmp353-.Ltmp352
	.byte	30
	.short	387
	.byte	20
	.byte	8
	.long	13800
	.long	.Ltmp352
	.long	.Ltmp353-.Ltmp352
	.byte	25
	.short	317
	.byte	18
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	17
	.long	8274
	.long	.Ldebug_ranges88
	.byte	37
	.byte	92
	.byte	8
	.byte	10
	.long	12243
	.long	.Ldebug_ranges89
	.byte	4
	.byte	35
	.byte	51
	.byte	0
	.byte	15
	.long	8424
	.long	.Ltmp366
	.long	.Ltmp371-.Ltmp366
	.byte	37
	.byte	93
	.byte	9
	.byte	11
	.long	10309
	.long	.Ltmp366
	.long	.Ltmp367-.Ltmp366
	.byte	4
	.byte	142
	.byte	17
	.byte	15
	.long	8412
	.long	.Ltmp367
	.long	.Ltmp368-.Ltmp367
	.byte	4
	.byte	145
	.byte	21
	.byte	15
	.long	8400
	.long	.Ltmp367
	.long	.Ltmp368-.Ltmp367
	.byte	4
	.byte	134
	.byte	18
	.byte	15
	.long	14053
	.long	.Ltmp367
	.long	.Ltmp368-.Ltmp367
	.byte	4
	.byte	127
	.byte	29
	.byte	9
	.long	13612
	.long	.Ltmp367
	.long	.Ltmp368-.Ltmp367
	.byte	30
	.short	387
	.byte	20
	.byte	8
	.long	13800
	.long	.Ltmp367
	.long	.Ltmp368-.Ltmp367
	.byte	25
	.short	317
	.byte	18
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	11
	.long	12217
	.long	.Ltmp369
	.long	.Ltmp370-.Ltmp369
	.byte	4
	.byte	140
	.byte	21
	.byte	0
	.byte	0
	.byte	11
	.long	8226
	.long	.Ltmp361
	.long	.Ltmp362-.Ltmp361
	.byte	37
	.byte	188
	.byte	14
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string288
	.byte	14
	.long	.Lfunc_begin85
	.long	.Lfunc_end85-.Lfunc_begin85
	.byte	1
	.byte	87
	.long	.Linfo_string695
	.long	.Linfo_string696
	.byte	37
	.byte	209

	.byte	15
	.long	8286
	.long	.Ltmp375
	.long	.Ltmp381-.Ltmp375
	.byte	37
	.byte	210
	.byte	28
	.byte	15
	.long	12452
	.long	.Ltmp375
	.long	.Ltmp381-.Ltmp375
	.byte	4
	.byte	42
	.byte	17
	.byte	12
	.long	8303
	.long	.Ldebug_ranges90
	.byte	14
	.short	2285
	.byte	21
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string120
	.byte	3
	.long	.Linfo_string121
	.long	.Linfo_string122
	.byte	20
	.short	461
	.byte	1
	.byte	3
	.long	.Linfo_string329
	.long	.Linfo_string229
	.byte	20
	.short	1248
	.byte	1
	.byte	3
	.long	.Linfo_string486
	.long	.Linfo_string163
	.byte	20
	.short	1225
	.byte	1
	.byte	3
	.long	.Linfo_string503
	.long	.Linfo_string265
	.byte	20
	.short	1091
	.byte	1
	.byte	3
	.long	.Linfo_string536
	.long	.Linfo_string537
	.byte	20
	.short	1596
	.byte	1
	.byte	3
	.long	.Linfo_string538
	.long	.Linfo_string539
	.byte	20
	.short	506
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string161
	.byte	3
	.long	.Linfo_string162
	.long	.Linfo_string163
	.byte	20
	.short	1225
	.byte	1
	.byte	3
	.long	.Linfo_string264
	.long	.Linfo_string265
	.byte	20
	.short	1091
	.byte	1
	.byte	3
	.long	.Linfo_string276
	.long	.Linfo_string277
	.byte	38
	.short	586
	.byte	1
	.byte	20
	.long	.Lfunc_begin94
	.long	.Lfunc_end94-.Lfunc_begin94
	.byte	1
	.byte	87
	.long	.Linfo_string707
	.long	.Linfo_string708
	.byte	38
	.short	812

	.byte	0
	.byte	2
	.long	.Linfo_string126
	.byte	3
	.long	.Linfo_string185
	.long	.Linfo_string163
	.byte	20
	.short	1225
	.byte	1
	.byte	3
	.long	.Linfo_string188
	.long	.Linfo_string189
	.byte	20
	.short	1183
	.byte	1
	.byte	3
	.long	.Linfo_string241
	.long	.Linfo_string229
	.byte	20
	.short	1248
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string20
	.byte	3
	.long	.Linfo_string228
	.long	.Linfo_string229
	.byte	36
	.short	1202
	.byte	1
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string18
	.byte	2
	.long	.Linfo_string19
	.byte	2
	.long	.Linfo_string20
	.byte	3
	.long	.Linfo_string21
	.long	.Linfo_string22
	.byte	6
	.short	620
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string23
	.byte	3
	.long	.Linfo_string24
	.long	.Linfo_string25
	.byte	6
	.short	710
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string123
	.byte	5
	.long	.Linfo_string124
	.long	.Linfo_string125
	.byte	6
	.byte	189
	.byte	1
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string61
	.byte	2
	.long	.Linfo_string62
	.byte	2
	.long	.Linfo_string63
	.byte	3
	.long	.Linfo_string64
	.long	.Linfo_string65
	.byte	14
	.short	2278
	.byte	1
	.byte	3
	.long	.Linfo_string74
	.long	.Linfo_string75
	.byte	14
	.short	3197
	.byte	1
	.byte	3
	.long	.Linfo_string281
	.long	.Linfo_string282
	.byte	14
	.short	2278
	.byte	1
	.byte	3
	.long	.Linfo_string303
	.long	.Linfo_string304
	.byte	14
	.short	322
	.byte	1
	.byte	3
	.long	.Linfo_string312
	.long	.Linfo_string313
	.byte	14
	.short	274
	.byte	1
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string70
	.byte	2
	.long	.Linfo_string71
	.byte	5
	.long	.Linfo_string72
	.long	.Linfo_string73
	.byte	16
	.byte	41
	.byte	1
	.byte	2
	.long	.Linfo_string96
	.byte	5
	.long	.Linfo_string97
	.long	.Linfo_string98
	.byte	16
	.byte	45
	.byte	1
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string66
	.byte	2
	.long	.Linfo_string67
	.byte	2
	.long	.Linfo_string20
	.byte	5
	.long	.Linfo_string68
	.long	.Linfo_string69
	.byte	21
	.byte	120
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string93
	.byte	5
	.long	.Linfo_string94
	.long	.Linfo_string95
	.byte	21
	.byte	84
	.byte	1
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string76
	.byte	2
	.long	.Linfo_string20
	.byte	5
	.long	.Linfo_string77
	.long	.Linfo_string78
	.byte	22
	.byte	77
	.byte	1
	.byte	2
	.long	.Linfo_string80
	.byte	2
	.long	.Linfo_string90
	.byte	5
	.long	.Linfo_string91
	.long	.Linfo_string92
	.byte	22
	.byte	80
	.byte	1
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string139
	.byte	2
	.long	.Linfo_string140
	.byte	5
	.long	.Linfo_string141
	.long	.Linfo_string142
	.byte	26
	.byte	34
	.byte	1
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string143
	.byte	2
	.long	.Linfo_string140
	.byte	5
	.long	.Linfo_string144
	.long	.Linfo_string145
	.byte	27
	.byte	45
	.byte	1
	.byte	5
	.long	.Linfo_string377
	.long	.Linfo_string378
	.byte	27
	.byte	45
	.byte	1
	.byte	5
	.long	.Linfo_string396
	.long	.Linfo_string397
	.byte	27
	.byte	45
	.byte	1
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string218
	.byte	2
	.long	.Linfo_string140
	.byte	5
	.long	.Linfo_string219
	.long	.Linfo_string145
	.byte	32
	.byte	32
	.byte	1
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string590
	.byte	2
	.long	.Linfo_string140
	.byte	5
	.long	.Linfo_string591
	.long	.Linfo_string592
	.byte	57
	.byte	39
	.byte	1
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string31
	.byte	25
	.long	.Lfunc_begin67
	.long	.Lfunc_end67-.Lfunc_begin67
	.byte	1
	.byte	87
	.long	.Linfo_string662
	.long	.Linfo_string663
	.byte	7
	.byte	80


	.byte	11
	.long	400
	.long	.Ltmp10
	.long	.Ltmp11-.Ltmp10
	.byte	7
	.byte	85
	.byte	5
	.byte	0
	.byte	25
	.long	.Lfunc_begin69
	.long	.Lfunc_end69-.Lfunc_begin69
	.byte	1
	.byte	87
	.long	.Linfo_string665
	.long	.Linfo_string666
	.byte	7
	.byte	128


	.byte	11
	.long	13029
	.long	.Ltmp31
	.long	.Ltmp32-.Ltmp31
	.byte	7
	.byte	140
	.byte	14
	.byte	0
	.byte	25
	.long	.Lfunc_begin87
	.long	.Lfunc_end87-.Lfunc_begin87
	.byte	1
	.byte	87
	.long	.Linfo_string699
	.long	.Linfo_string46
	.byte	7
	.byte	41


	.byte	10
	.long	400
	.long	.Ldebug_ranges145
	.byte	7
	.byte	48
	.byte	15
	.byte	0
	.byte	25
	.long	.Lfunc_begin88
	.long	.Lfunc_end88-.Lfunc_begin88
	.byte	1
	.byte	87
	.long	.Linfo_string700
	.long	.Linfo_string701
	.byte	7
	.byte	206


	.byte	11
	.long	400
	.long	.Ltmp790
	.long	.Ltmp791-.Ltmp790
	.byte	7
	.byte	225
	.byte	17
	.byte	11
	.long	400
	.long	.Ltmp792
	.long	.Ltmp793-.Ltmp792
	.byte	7
	.byte	219
	.byte	23
	.byte	0
	.byte	26
	.long	.Lfunc_begin99
	.long	.Lfunc_end99-.Lfunc_begin99
	.byte	1
	.byte	87
	.long	.Linfo_string714
	.long	.Linfo_string715
	.byte	7
	.byte	55

	.byte	27
	.long	.Lfunc_begin100
	.long	.Lfunc_end100-.Lfunc_begin100
	.byte	1
	.byte	87
	.long	.Linfo_string716
	.long	.Linfo_string717
	.byte	7
	.byte	72

	.byte	11
	.long	400
	.long	.Ltmp865
	.long	.Ltmp866-.Ltmp865
	.byte	7
	.byte	73
	.byte	15
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string38
	.byte	3
	.long	.Linfo_string39
	.long	.Linfo_string40
	.byte	9
	.short	2077
	.byte	1
	.byte	3
	.long	.Linfo_string479
	.long	.Linfo_string480
	.byte	9
	.short	2357
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string46
	.byte	2
	.long	.Linfo_string47
	.byte	2
	.long	.Linfo_string48
	.byte	5
	.long	.Linfo_string49
	.long	.Linfo_string50
	.byte	11
	.byte	45
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string140
	.byte	14
	.long	.Lfunc_begin101
	.long	.Lfunc_end101-.Lfunc_begin101
	.byte	1
	.byte	87
	.long	.Linfo_string718
	.long	.Linfo_string7
	.byte	11
	.byte	152

	.byte	11
	.long	4873
	.long	.Ltmp868
	.long	.Ltmp869-.Ltmp868
	.byte	11
	.byte	153
	.byte	9
	.byte	15
	.long	13280
	.long	.Ltmp870
	.long	.Ltmp872-.Ltmp870
	.byte	11
	.byte	156
	.byte	39
	.byte	9
	.long	13262
	.long	.Ltmp870
	.long	.Ltmp872-.Ltmp870
	.byte	12
	.short	371
	.byte	9
	.byte	15
	.long	13250
	.long	.Ltmp870
	.long	.Ltmp872-.Ltmp870
	.byte	12
	.byte	220
	.byte	12
	.byte	11
	.long	13299
	.long	.Ltmp871
	.long	.Ltmp872-.Ltmp871
	.byte	12
	.byte	195
	.byte	9
	.byte	0
	.byte	0
	.byte	0
	.byte	15
	.long	13198
	.long	.Ltmp873
	.long	.Ltmp875-.Ltmp873
	.byte	11
	.byte	164
	.byte	9
	.byte	11
	.long	4899
	.long	.Ltmp874
	.long	.Ltmp875-.Ltmp874
	.byte	47
	.byte	191
	.byte	9
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string446
	.byte	2
	.long	.Linfo_string20
	.byte	6
	.long	.Linfo_string447
	.long	.Linfo_string7
	.byte	47
	.byte	190

	.byte	1
	.byte	0
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string51
	.byte	2
	.long	.Linfo_string42
	.byte	4
	.long	.Lfunc_begin71
	.long	.Lfunc_end71-.Lfunc_begin71
	.byte	1
	.byte	87
	.long	.Linfo_string669
	.long	.Linfo_string670
	.byte	12
	.byte	133
	.byte	0
	.byte	2
	.long	.Linfo_string211
	.byte	5
	.long	.Linfo_string440
	.long	.Linfo_string441
	.byte	12
	.byte	187
	.byte	1
	.byte	5
	.long	.Linfo_string442
	.long	.Linfo_string443
	.byte	12
	.byte	219
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string45
	.byte	3
	.long	.Linfo_string444
	.long	.Linfo_string443
	.byte	12
	.short	370
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string120
	.byte	3
	.long	.Linfo_string445
	.long	.Linfo_string245
	.byte	12
	.short	597
	.byte	1
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string57
	.byte	2
	.long	.Linfo_string18
	.byte	2
	.long	.Linfo_string58
	.byte	5
	.long	.Linfo_string59
	.long	.Linfo_string60
	.byte	13
	.byte	134
	.byte	1
	.byte	5
	.long	.Linfo_string342
	.long	.Linfo_string343
	.byte	13
	.byte	134
	.byte	1
	.byte	5
	.long	.Linfo_string365
	.long	.Linfo_string25
	.byte	13
	.byte	134
	.byte	1
	.byte	5
	.long	.Linfo_string375
	.long	.Linfo_string376
	.byte	13
	.byte	134
	.byte	1
	.byte	5
	.long	.Linfo_string394
	.long	.Linfo_string395
	.byte	13
	.byte	134
	.byte	1
	.byte	3
	.long	.Linfo_string472
	.long	.Linfo_string473
	.byte	13
	.short	288
	.byte	1
	.byte	3
	.long	.Linfo_string484
	.long	.Linfo_string485
	.byte	13
	.short	288
	.byte	1
	.byte	3
	.long	.Linfo_string489
	.long	.Linfo_string490
	.byte	13
	.short	288
	.byte	1
	.byte	3
	.long	.Linfo_string501
	.long	.Linfo_string502
	.byte	13
	.short	310
	.byte	1
	.byte	5
	.long	.Linfo_string586
	.long	.Linfo_string587
	.byte	13
	.byte	134
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string215
	.byte	3
	.long	.Linfo_string216
	.long	.Linfo_string217
	.byte	13
	.short	349
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string289
	.byte	5
	.long	.Linfo_string290
	.long	.Linfo_string291
	.byte	41
	.byte	87
	.byte	1
	.byte	5
	.long	.Linfo_string325
	.long	.Linfo_string326
	.byte	13
	.byte	85
	.byte	1
	.byte	5
	.long	.Linfo_string350
	.long	.Linfo_string351
	.byte	13
	.byte	85
	.byte	1
	.byte	5
	.long	.Linfo_string367
	.long	.Linfo_string368
	.byte	13
	.byte	85
	.byte	1
	.byte	5
	.long	.Linfo_string576
	.long	.Linfo_string577
	.byte	41
	.byte	87
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string330
	.byte	3
	.long	.Linfo_string331
	.long	.Linfo_string25
	.byte	41
	.short	1398
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string42
	.byte	5
	.long	.Linfo_string580
	.long	.Linfo_string581
	.byte	41
	.byte	23
	.byte	1
	.byte	5
	.long	.Linfo_string584
	.long	.Linfo_string585
	.byte	41
	.byte	23
	.byte	1
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string130
	.byte	2
	.long	.Linfo_string45
	.byte	3
	.long	.Linfo_string131
	.long	.Linfo_string132
	.byte	25
	.short	327
	.byte	1
	.byte	3
	.long	.Linfo_string176
	.long	.Linfo_string175
	.byte	25
	.short	315
	.byte	1
	.byte	3
	.long	.Linfo_string190
	.long	.Linfo_string191
	.byte	25
	.short	336
	.byte	1
	.byte	3
	.long	.Linfo_string200
	.long	.Linfo_string199
	.byte	25
	.short	321
	.byte	1
	.byte	3
	.long	.Linfo_string358
	.long	.Linfo_string357
	.byte	25
	.short	315
	.byte	1
	.byte	3
	.long	.Linfo_string433
	.long	.Linfo_string432
	.byte	25
	.short	315
	.byte	1
	.byte	3
	.long	.Linfo_string434
	.long	.Linfo_string435
	.byte	25
	.short	327
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string42
	.byte	5
	.long	.Linfo_string133
	.long	.Linfo_string134
	.byte	25
	.byte	14
	.byte	1
	.byte	5
	.long	.Linfo_string213
	.long	.Linfo_string214
	.byte	25
	.byte	14
	.byte	1
	.byte	5
	.long	.Linfo_string436
	.long	.Linfo_string437
	.byte	25
	.byte	14
	.byte	1
	.byte	5
	.long	.Linfo_string508
	.long	.Linfo_string509
	.byte	25
	.byte	14
	.byte	1
	.byte	5
	.long	.Linfo_string582
	.long	.Linfo_string583
	.byte	25
	.byte	14
	.byte	1
	.byte	0
	.byte	25
	.long	.Lfunc_begin75
	.long	.Lfunc_end75-.Lfunc_begin75
	.byte	1
	.byte	87
	.long	.Linfo_string676
	.long	.Linfo_string677
	.byte	25
	.byte	34


	.byte	11
	.long	400
	.long	.Ltmp95
	.long	.Ltmp96-.Ltmp95
	.byte	25
	.byte	35
	.byte	5
	.byte	0
	.byte	2
	.long	.Linfo_string23
	.byte	5
	.long	.Linfo_string174
	.long	.Linfo_string175
	.byte	25
	.byte	224
	.byte	1
	.byte	5
	.long	.Linfo_string198
	.long	.Linfo_string199
	.byte	25
	.byte	233
	.byte	1
	.byte	5
	.long	.Linfo_string210
	.long	.Linfo_string132
	.byte	25
	.byte	241
	.byte	1
	.byte	5
	.long	.Linfo_string356
	.long	.Linfo_string357
	.byte	25
	.byte	224
	.byte	1
	.byte	5
	.long	.Linfo_string431
	.long	.Linfo_string432
	.byte	25
	.byte	224
	.byte	1
	.byte	5
	.long	.Linfo_string466
	.long	.Linfo_string467
	.byte	25
	.byte	204
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string140
	.byte	5
	.long	.Linfo_string192
	.long	.Linfo_string193
	.byte	25
	.byte	25
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string211
	.byte	3
	.long	.Linfo_string212
	.long	.Linfo_string132
	.byte	25
	.short	290
	.byte	1
	.byte	0
	.byte	25
	.long	.Lfunc_begin78
	.long	.Lfunc_end78-.Lfunc_begin78
	.byte	1
	.byte	87
	.long	.Linfo_string681
	.long	.Linfo_string682
	.byte	25
	.byte	42


	.byte	11
	.long	400
	.long	.Ltmp212
	.long	.Ltmp213-.Ltmp212
	.byte	25
	.byte	43
	.byte	5
	.byte	0
	.byte	2
	.long	.Linfo_string20
	.byte	5
	.long	.Linfo_string390
	.long	.Linfo_string391
	.byte	25
	.byte	172
	.byte	1
	.byte	5
	.long	.Linfo_string398
	.long	.Linfo_string399
	.byte	25
	.byte	160
	.byte	1
	.byte	0
	.byte	25
	.long	.Lfunc_begin93
	.long	.Lfunc_end93-.Lfunc_begin93
	.byte	1
	.byte	87
	.long	.Linfo_string705
	.long	.Linfo_string706
	.byte	25
	.byte	50


	.byte	11
	.long	400
	.long	.Ltmp831
	.long	.Ltmp832-.Ltmp831
	.byte	25
	.byte	51
	.byte	5
	.byte	0
	.byte	2
	.long	.Linfo_string372
	.byte	3
	.long	.Linfo_string507
	.long	.Linfo_string132
	.byte	25
	.short	407
	.byte	1
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string42
	.byte	5
	.long	.Linfo_string159
	.long	.Linfo_string160
	.byte	30
	.byte	166
	.byte	1
	.byte	3
	.long	.Linfo_string252
	.long	.Linfo_string253
	.byte	30
	.short	380
	.byte	1
	.byte	3
	.long	.Linfo_string292
	.long	.Linfo_string293
	.byte	30
	.short	705
	.byte	1
	.byte	3
	.long	.Linfo_string321
	.long	.Linfo_string322
	.byte	30
	.short	3381
	.byte	1
	.byte	3
	.long	.Linfo_string338
	.long	.Linfo_string339
	.byte	30
	.short	939
	.byte	1
	.byte	3
	.long	.Linfo_string340
	.long	.Linfo_string341
	.byte	30
	.short	970
	.byte	1
	.byte	3
	.long	.Linfo_string359
	.long	.Linfo_string360
	.byte	30
	.short	380
	.byte	1
	.byte	3
	.long	.Linfo_string361
	.long	.Linfo_string362
	.byte	30
	.short	1588
	.byte	1
	.byte	3
	.long	.Linfo_string363
	.long	.Linfo_string364
	.byte	30
	.short	1506
	.byte	1
	.byte	3
	.long	.Linfo_string392
	.long	.Linfo_string393
	.byte	30
	.short	380
	.byte	1
	.byte	3
	.long	.Linfo_string400
	.long	.Linfo_string401
	.byte	30
	.short	325
	.byte	1
	.byte	3
	.long	.Linfo_string468
	.long	.Linfo_string469
	.byte	30
	.short	325
	.byte	1
	.byte	3
	.long	.Linfo_string532
	.long	.Linfo_string533
	.byte	30
	.short	2346
	.byte	1
	.byte	3
	.long	.Linfo_string534
	.long	.Linfo_string535
	.byte	30
	.short	2424
	.byte	1
	.byte	3
	.long	.Linfo_string578
	.long	.Linfo_string579
	.byte	30
	.short	705
	.byte	1
	.byte	2
	.long	.Linfo_string633
	.byte	28
	.long	.Lfunc_begin129
	.long	.Lfunc_end129-.Lfunc_begin129
	.byte	1
	.byte	87
	.long	.Linfo_string747
	.long	.Linfo_string748
	.byte	30
	.short	3160


	.byte	8
	.long	400
	.long	.Ltmp1389
	.long	.Ltmp1390-.Ltmp1389
	.byte	30
	.short	3161
	.byte	13
	.byte	0
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string470
	.byte	5
	.long	.Linfo_string471
	.long	.Linfo_string470
	.byte	49
	.byte	42
	.byte	1
	.byte	6
	.long	.Linfo_string482
	.long	.Linfo_string483
	.byte	49
	.byte	51

	.byte	1
	.byte	5
	.long	.Linfo_string487
	.long	.Linfo_string488
	.byte	49
	.byte	23
	.byte	1
	.byte	5
	.long	.Linfo_string631
	.long	.Linfo_string632
	.byte	49
	.byte	35
	.byte	1
	.byte	21
	.long	.Lfunc_begin128
	.long	.Lfunc_end128-.Lfunc_begin128
	.byte	1
	.byte	87
	.long	14299
	.byte	15
	.long	292
	.long	.Ltmp1342
	.long	.Ltmp1343-.Ltmp1342
	.byte	49
	.byte	62
	.byte	22
	.byte	9
	.long	13000
	.long	.Ltmp1342
	.long	.Ltmp1343-.Ltmp1342
	.byte	31
	.short	965
	.byte	18
	.byte	9
	.long	7960
	.long	.Ltmp1342
	.long	.Ltmp1343-.Ltmp1342
	.byte	9
	.short	2366
	.byte	5
	.byte	15
	.long	278
	.long	.Ltmp1342
	.long	.Ltmp1343-.Ltmp1342
	.byte	1
	.byte	227
	.byte	5
	.byte	8
	.long	333
	.long	.Ltmp1342
	.long	.Ltmp1343-.Ltmp1342
	.byte	31
	.short	953
	.byte	22
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	15
	.long	15886
	.long	.Ltmp1344
	.long	.Ltmp1345-.Ltmp1344
	.byte	49
	.byte	65
	.byte	18
	.byte	9
	.long	15872
	.long	.Ltmp1344
	.long	.Ltmp1345-.Ltmp1344
	.byte	18
	.short	1199
	.byte	5
	.byte	8
	.long	15854
	.long	.Ltmp1344
	.long	.Ltmp1345-.Ltmp1344
	.byte	18
	.short	820
	.byte	9
	.byte	0
	.byte	0
	.byte	15
	.long	14066
	.long	.Ltmp1345
	.long	.Ltmp1346-.Ltmp1345
	.byte	49
	.byte	66
	.byte	30
	.byte	9
	.long	13478
	.long	.Ltmp1345
	.long	.Ltmp1346-.Ltmp1345
	.byte	30
	.short	706
	.byte	9
	.byte	15
	.long	182
	.long	.Ltmp1345
	.long	.Ltmp1346-.Ltmp1345
	.byte	41
	.byte	96
	.byte	17
	.byte	8
	.long	169
	.long	.Ltmp1345
	.long	.Ltmp1346-.Ltmp1345
	.byte	31
	.short	576
	.byte	18
	.byte	0
	.byte	0
	.byte	0
	.byte	17
	.long	13402
	.long	.Ldebug_ranges258
	.byte	49
	.byte	66
	.byte	30
	.byte	12
	.long	13329
	.long	.Ldebug_ranges259
	.byte	13
	.short	294
	.byte	37
	.byte	0
	.byte	11
	.long	14323
	.long	.Ltmp1357
	.long	.Ltmp1358-.Ltmp1357
	.byte	49
	.byte	72
	.byte	22
	.byte	17
	.long	14311
	.long	.Ldebug_ranges260
	.byte	49
	.byte	81
	.byte	22
	.byte	11
	.long	12159
	.long	.Ltmp1359
	.long	.Ltmp1360-.Ltmp1359
	.byte	49
	.byte	24
	.byte	5
	.byte	0
	.byte	15
	.long	14311
	.long	.Ltmp1362
	.long	.Ltmp1364-.Ltmp1362
	.byte	49
	.byte	82
	.byte	22
	.byte	11
	.long	12159
	.long	.Ltmp1362
	.long	.Ltmp1363-.Ltmp1362
	.byte	49
	.byte	24
	.byte	5
	.byte	0
	.byte	17
	.long	13696
	.long	.Ldebug_ranges261
	.byte	49
	.byte	91
	.byte	5
	.byte	10
	.long	13599
	.long	.Ldebug_ranges262
	.byte	25
	.byte	15
	.byte	9
	.byte	0
	.byte	17
	.long	13415
	.long	.Ldebug_ranges263
	.byte	49
	.byte	91
	.byte	5
	.byte	12
	.long	13329
	.long	.Ldebug_ranges264
	.byte	13
	.short	294
	.byte	37
	.byte	0
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string108
	.byte	2
	.long	.Linfo_string45
	.byte	5
	.long	.Linfo_string491
	.long	.Linfo_string492
	.byte	50
	.byte	82
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string42
	.byte	5
	.long	.Linfo_string493
	.long	.Linfo_string247
	.byte	50
	.byte	25
	.byte	1
	.byte	0
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string79
	.byte	2
	.long	.Linfo_string80
	.byte	6
	.long	.Linfo_string81
	.long	.Linfo_string82
	.byte	23
	.byte	134

	.byte	1
	.byte	5
	.long	.Linfo_string83
	.long	.Linfo_string84
	.byte	23
	.byte	26
	.byte	1
	.byte	2
	.long	.Linfo_string82
	.byte	5
	.long	.Linfo_string89
	.long	.Linfo_string10
	.byte	23
	.byte	135
	.byte	1
	.byte	0
	.byte	6
	.long	.Linfo_string323
	.long	.Linfo_string324
	.byte	23
	.byte	38

	.byte	1
	.byte	5
	.long	.Linfo_string327
	.long	.Linfo_string328
	.byte	23
	.byte	122
	.byte	1
	.byte	5
	.long	.Linfo_string344
	.long	.Linfo_string345
	.byte	23
	.byte	114
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string18
	.byte	2
	.long	.Linfo_string42
	.byte	5
	.long	.Linfo_string85
	.long	.Linfo_string80
	.byte	24
	.byte	48
	.byte	1
	.byte	5
	.long	.Linfo_string300
	.long	.Linfo_string301
	.byte	24
	.byte	41
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string45
	.byte	5
	.long	.Linfo_string302
	.long	.Linfo_string301
	.byte	24
	.byte	138
	.byte	1
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string86
	.byte	5
	.long	.Linfo_string87
	.long	.Linfo_string88
	.byte	15
	.byte	24
	.byte	1
	.byte	5
	.long	.Linfo_string298
	.long	.Linfo_string299
	.byte	15
	.byte	36
	.byte	1
	.byte	5
	.long	.Linfo_string314
	.long	.Linfo_string315
	.byte	15
	.byte	17
	.byte	1
	.byte	5
	.long	.Linfo_string512
	.long	.Linfo_string513
	.byte	15
	.byte	11
	.byte	1
	.byte	5
	.long	.Linfo_string634
	.long	.Linfo_string635
	.byte	15
	.byte	128
	.byte	1
	.byte	3
	.long	.Linfo_string636
	.long	.Linfo_string637
	.byte	15
	.short	270
	.byte	1
	.byte	5
	.long	.Linfo_string638
	.long	.Linfo_string639
	.byte	15
	.byte	120
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string42
	.byte	3
	.long	.Linfo_string294
	.long	.Linfo_string295
	.byte	39
	.short	757
	.byte	1
	.byte	3
	.long	.Linfo_string296
	.long	.Linfo_string297
	.byte	39
	.short	814
	.byte	1
	.byte	5
	.long	.Linfo_string305
	.long	.Linfo_string306
	.byte	39
	.byte	193
	.byte	1
	.byte	3
	.long	.Linfo_string310
	.long	.Linfo_string311
	.byte	39
	.short	422
	.byte	1
	.byte	3
	.long	.Linfo_string464
	.long	.Linfo_string465
	.byte	39
	.short	1133
	.byte	1
	.byte	5
	.long	.Linfo_string499
	.long	.Linfo_string500
	.byte	39
	.byte	240
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string61
	.byte	2
	.long	.Linfo_string307
	.byte	5
	.long	.Linfo_string308
	.long	.Linfo_string309
	.byte	40
	.byte	253
	.byte	1
	.byte	3
	.long	.Linfo_string496
	.long	.Linfo_string130
	.byte	40
	.short	285
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string126
	.byte	3
	.long	.Linfo_string453
	.long	.Linfo_string309
	.byte	40
	.short	323
	.byte	1
	.byte	3
	.long	.Linfo_string454
	.long	.Linfo_string130
	.byte	40
	.short	360
	.byte	1
	.byte	3
	.long	.Linfo_string457
	.long	.Linfo_string458
	.byte	40
	.short	343
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string211
	.byte	5
	.long	.Linfo_string455
	.long	.Linfo_string456
	.byte	40
	.byte	63
	.byte	1
	.byte	5
	.long	.Linfo_string497
	.long	.Linfo_string498
	.byte	40
	.byte	63
	.byte	1
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string461
	.byte	2
	.long	.Linfo_string42
	.byte	3
	.long	.Linfo_string462
	.long	.Linfo_string463
	.byte	48
	.short	410
	.byte	1
	.byte	0
	.byte	0
	.byte	25
	.long	.Lfunc_begin106
	.long	.Lfunc_end106-.Lfunc_begin106
	.byte	1
	.byte	87
	.long	.Linfo_string726
	.long	.Linfo_string727
	.byte	39
	.byte	82


	.byte	17
	.long	15061
	.long	.Ldebug_ranges178
	.byte	39
	.byte	84
	.byte	21
	.byte	10
	.long	13428
	.long	.Ldebug_ranges179
	.byte	39
	.byte	245
	.byte	29
	.byte	0
	.byte	11
	.long	400
	.long	.Ltmp989
	.long	.Ltmp990-.Ltmp989
	.byte	39
	.byte	91
	.byte	9
	.byte	11
	.long	400
	.long	.Ltmp991
	.long	.Ltmp992-.Ltmp991
	.byte	39
	.byte	95
	.byte	5
	.byte	11
	.long	15023
	.long	.Ltmp993
	.long	.Ltmp994-.Ltmp993
	.byte	39
	.byte	105
	.byte	21
	.byte	17
	.long	15061
	.long	.Ldebug_ranges180
	.byte	39
	.byte	107
	.byte	22
	.byte	10
	.long	12172
	.long	.Ldebug_ranges181
	.byte	39
	.byte	244
	.byte	31
	.byte	17
	.long	13732
	.long	.Ldebug_ranges182
	.byte	39
	.byte	245
	.byte	29
	.byte	17
	.long	14021
	.long	.Ldebug_ranges183
	.byte	25
	.byte	15
	.byte	9
	.byte	8
	.long	8047
	.long	.Ltmp1004
	.long	.Ltmp1005-.Ltmp1004
	.byte	25
	.short	411
	.byte	9
	.byte	8
	.long	13824
	.long	.Ltmp1006
	.long	.Ltmp1007-.Ltmp1006
	.byte	25
	.short	411
	.byte	9
	.byte	0
	.byte	0
	.byte	17
	.long	13428
	.long	.Ldebug_ranges184
	.byte	39
	.byte	245
	.byte	29
	.byte	12
	.long	13459
	.long	.Ldebug_ranges185
	.byte	13
	.short	316
	.byte	37
	.byte	0
	.byte	0
	.byte	17
	.long	15160
	.long	.Ldebug_ranges186
	.byte	39
	.byte	109
	.byte	14
	.byte	17
	.long	15128
	.long	.Ldebug_ranges187
	.byte	40
	.byte	64
	.byte	9
	.byte	18
	.long	15115
	.long	.Ldebug_ranges188
	.byte	40
	.short	362
	.byte	15
	.byte	12
	.long	15023
	.long	.Ldebug_ranges189
	.byte	40
	.short	324
	.byte	12
	.byte	0
	.byte	0
	.byte	0
	.byte	17
	.long	14869
	.long	.Ldebug_ranges190
	.byte	39
	.byte	109
	.byte	14
	.byte	17
	.long	14918
	.long	.Ldebug_ranges191
	.byte	24
	.byte	44
	.byte	18
	.byte	11
	.long	13329
	.long	.Ltmp1024
	.long	.Ltmp1025-.Ltmp1024
	.byte	15
	.byte	38
	.byte	14
	.byte	11
	.long	14942
	.long	.Ltmp1030
	.long	.Ltmp1031-.Ltmp1030
	.byte	15
	.byte	46
	.byte	16
	.byte	11
	.long	14930
	.long	.Ltmp1032
	.long	.Ltmp1033-.Ltmp1032
	.byte	15
	.byte	50
	.byte	18
	.byte	11
	.long	14930
	.long	.Ltmp1034
	.long	.Ltmp1035-.Ltmp1034
	.byte	15
	.byte	57
	.byte	19
	.byte	11
	.long	14930
	.long	.Ltmp1036
	.long	.Ltmp1037-.Ltmp1036
	.byte	15
	.byte	65
	.byte	37
	.byte	0
	.byte	0
	.byte	10
	.long	16118
	.long	.Ldebug_ranges192
	.byte	39
	.byte	109
	.byte	14
	.byte	17
	.long	16447
	.long	.Ldebug_ranges193
	.byte	39
	.byte	110
	.byte	47
	.byte	12
	.long	16429
	.long	.Ldebug_ranges194
	.byte	52
	.short	594
	.byte	9
	.byte	0
	.byte	10
	.long	400
	.long	.Ldebug_ranges195
	.byte	39
	.byte	111
	.byte	5
	.byte	0
	.byte	2
	.long	.Linfo_string640
	.byte	14
	.long	.Lfunc_begin130
	.long	.Lfunc_end130-.Lfunc_begin130
	.byte	1
	.byte	87
	.long	.Linfo_string749
	.long	.Linfo_string750
	.byte	58
	.byte	86

	.byte	15
	.long	14954
	.long	.Ltmp1392
	.long	.Ltmp1405-.Ltmp1392
	.byte	58
	.byte	88
	.byte	11
	.byte	11
	.long	12159
	.long	.Ltmp1393
	.long	.Ltmp1394-.Ltmp1393
	.byte	15
	.byte	214
	.byte	39
	.byte	11
	.long	14966
	.long	.Ltmp1395
	.long	.Ltmp1396-.Ltmp1395
	.byte	15
	.byte	158
	.byte	21
	.byte	10
	.long	14979
	.long	.Ldebug_ranges265
	.byte	15
	.byte	224
	.byte	34
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string99
	.byte	3
	.long	.Linfo_string100
	.long	.Linfo_string101
	.byte	17
	.short	834
	.byte	1
	.byte	3
	.long	.Linfo_string102
	.long	.Linfo_string103
	.byte	17
	.short	834
	.byte	1
	.byte	2
	.long	.Linfo_string419
	.byte	2
	.long	.Linfo_string420
	.byte	3
	.long	.Linfo_string421
	.long	.Linfo_string422
	.byte	45
	.short	495
	.byte	1
	.byte	0
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string108
	.byte	2
	.long	.Linfo_string109
	.byte	2
	.long	.Linfo_string110
	.byte	3
	.long	.Linfo_string111
	.long	.Linfo_string112
	.byte	18
	.short	1400
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string243
	.byte	3
	.long	.Linfo_string244
	.long	.Linfo_string245
	.byte	18
	.short	1316
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string126
	.byte	3
	.long	.Linfo_string246
	.long	.Linfo_string247
	.byte	18
	.short	1482
	.byte	1
	.byte	3
	.long	.Linfo_string494
	.long	.Linfo_string495
	.byte	18
	.short	1482
	.byte	1
	.byte	0
	.byte	0
	.byte	3
	.long	.Linfo_string332
	.long	.Linfo_string333
	.byte	18
	.short	1217
	.byte	1
	.byte	2
	.long	.Linfo_string334
	.byte	3
	.long	.Linfo_string335
	.long	.Linfo_string336
	.byte	18
	.short	816
	.byte	1
	.byte	0
	.byte	3
	.long	.Linfo_string337
	.long	.Linfo_string336
	.byte	18
	.short	1198
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string113
	.byte	2
	.long	.Linfo_string114
	.byte	3
	.long	.Linfo_string115
	.long	.Linfo_string116
	.byte	19
	.short	2047
	.byte	1
	.byte	0
	.byte	28
	.long	.Lfunc_begin104
	.long	.Lfunc_end104-.Lfunc_begin104
	.byte	1
	.byte	87
	.long	.Linfo_string723
	.long	.Linfo_string724
	.byte	19
	.short	1748


	.byte	12
	.long	400
	.long	.Ldebug_ranges156
	.byte	19
	.short	1749
	.byte	5
	.byte	0
	.byte	2
	.long	.Linfo_string595
	.byte	3
	.long	.Linfo_string596
	.long	.Linfo_string597
	.byte	19
	.short	1309
	.byte	1
	.byte	3
	.long	.Linfo_string618
	.long	.Linfo_string619
	.byte	19
	.short	1309
	.byte	1
	.byte	3
	.long	.Linfo_string622
	.long	.Linfo_string623
	.byte	19
	.short	1309
	.byte	1
	.byte	3
	.long	.Linfo_string626
	.long	.Linfo_string627
	.byte	19
	.short	1309
	.byte	1
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string135
	.byte	2
	.long	.Linfo_string136
	.byte	3
	.long	.Linfo_string137
	.long	.Linfo_string138
	.byte	28
	.short	286
	.byte	1
	.byte	3
	.long	.Linfo_string438
	.long	.Linfo_string439
	.byte	28
	.short	286
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string194
	.byte	3
	.long	.Linfo_string195
	.long	.Linfo_string196
	.byte	28
	.short	297
	.byte	1
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string153
	.byte	2
	.long	.Linfo_string154
	.byte	3
	.long	.Linfo_string155
	.long	.Linfo_string156
	.byte	29
	.short	512
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string316
	.byte	3
	.long	.Linfo_string317
	.long	.Linfo_string318
	.byte	29
	.short	773
	.byte	1
	.byte	3
	.long	.Linfo_string510
	.long	.Linfo_string511
	.byte	29
	.short	749
	.byte	1
	.byte	3
	.long	.Linfo_string540
	.long	.Linfo_string541
	.byte	29
	.short	900
	.byte	1
	.byte	3
	.long	.Linfo_string588
	.long	.Linfo_string589
	.byte	29
	.short	1753
	.byte	1
	.byte	3
	.long	.Linfo_string593
	.long	.Linfo_string594
	.byte	29
	.short	749
	.byte	1
	.byte	3
	.long	.Linfo_string605
	.long	.Linfo_string606
	.byte	29
	.short	1414
	.byte	1
	.byte	0
	.byte	29
	.long	.Lfunc_begin98
	.long	.Lfunc_end98-.Lfunc_begin98
	.byte	1
	.byte	87
	.long	.Linfo_string712
	.long	.Linfo_string713
	.byte	29
	.short	1851


	.byte	2
	.long	.Linfo_string123
	.byte	3
	.long	.Linfo_string459
	.long	.Linfo_string460
	.byte	29
	.short	2264
	.byte	1
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string225
	.byte	2
	.long	.Linfo_string42
	.byte	3
	.long	.Linfo_string226
	.long	.Linfo_string227
	.byte	34
	.short	879
	.byte	1
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string409
	.byte	2
	.long	.Linfo_string194
	.byte	7
	.long	.Lfunc_begin95
	.long	.Lfunc_end95-.Lfunc_begin95
	.byte	1
	.byte	87
	.long	.Linfo_string709
	.long	.Linfo_string7
	.byte	43
	.short	631

	.byte	9
	.long	4886
	.long	.Lfunc_begin95
	.long	.Ltmp836-.Lfunc_begin95
	.byte	43
	.short	632
	.byte	27
	.byte	9
	.long	5736
	.long	.Lfunc_begin95
	.long	.Ltmp836-.Lfunc_begin95
	.byte	3
	.short	1957
	.byte	9
	.byte	11
	.long	4873
	.long	.Lfunc_begin95
	.long	.Ltmp836-.Lfunc_begin95
	.byte	44
	.byte	99
	.byte	18
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string410
	.byte	7
	.long	.Lfunc_begin96
	.long	.Lfunc_end96-.Lfunc_begin96
	.byte	1
	.byte	87
	.long	.Linfo_string710
	.long	.Linfo_string7
	.byte	43
	.short	658

	.byte	9
	.long	4886
	.long	.Lfunc_begin96
	.long	.Ltmp837-.Lfunc_begin96
	.byte	43
	.short	659
	.byte	27
	.byte	9
	.long	5736
	.long	.Lfunc_begin96
	.long	.Ltmp837-.Lfunc_begin96
	.byte	3
	.short	1957
	.byte	9
	.byte	11
	.long	4873
	.long	.Lfunc_begin96
	.long	.Ltmp837-.Lfunc_begin96
	.byte	44
	.byte	99
	.byte	18
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string514
	.byte	2
	.long	.Linfo_string515
	.byte	3
	.long	.Linfo_string516
	.long	.Linfo_string517
	.byte	52
	.short	1634
	.byte	1
	.byte	2
	.long	.Linfo_string42
	.byte	3
	.long	.Linfo_string518
	.long	.Linfo_string517
	.byte	52
	.short	593
	.byte	1
	.byte	3
	.long	.Linfo_string521
	.long	.Linfo_string522
	.byte	52
	.short	422
	.byte	1
	.byte	3
	.long	.Linfo_string530
	.long	.Linfo_string531
	.byte	52
	.short	884
	.byte	1
	.byte	3
	.long	.Linfo_string611
	.long	.Linfo_string612
	.byte	52
	.short	656
	.byte	1
	.byte	0
	.byte	3
	.long	.Linfo_string609
	.long	.Linfo_string610
	.byte	52
	.short	1662
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string42
	.byte	6
	.long	.Linfo_string552
	.long	.Linfo_string301
	.byte	55
	.byte	152

	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string211
	.byte	13
	.long	.Linfo_string553
	.long	.Linfo_string301
	.byte	55
	.short	262

	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string307
	.byte	13
	.long	.Linfo_string554
	.long	.Linfo_string301
	.byte	55
	.short	359

	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string555
	.byte	3
	.long	.Linfo_string556
	.long	.Linfo_string557
	.byte	56
	.short	357
	.byte	1
	.byte	0
	.byte	0
	.byte	2
	.long	.Linfo_string523
	.byte	2
	.long	.Linfo_string524
	.byte	5
	.long	.Linfo_string525
	.long	.Linfo_string526
	.byte	53
	.byte	57
	.byte	1
	.byte	2
	.long	.Linfo_string527
	.byte	13
	.long	.Linfo_string528
	.long	.Linfo_string529
	.byte	53
	.short	310

	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string542
	.byte	5
	.long	.Linfo_string543
	.long	.Linfo_string544
	.byte	53
	.byte	82
	.byte	1
	.byte	0
	.byte	5
	.long	.Linfo_string545
	.long	.Linfo_string546
	.byte	53
	.byte	48
	.byte	1
	.byte	5
	.long	.Linfo_string547
	.long	.Linfo_string548
	.byte	53
	.byte	52
	.byte	1
	.byte	0
	.byte	2
	.long	.Linfo_string549
	.byte	6
	.long	.Linfo_string550
	.long	.Linfo_string551
	.byte	54
	.byte	39

	.byte	1
	.byte	16
	.long	.Lfunc_begin110
	.long	.Lfunc_end110-.Lfunc_begin110
	.byte	1
	.byte	87
	.long	.Linfo_string732
	.long	.Linfo_string733
	.byte	54
	.byte	4
	.byte	15
	.long	13563
	.long	.Ltmp1183
	.long	.Ltmp1184-.Ltmp1183
	.byte	54
	.byte	7
	.byte	33
	.byte	15
	.long	14222
	.long	.Ltmp1183
	.long	.Ltmp1184-.Ltmp1183
	.byte	41
	.byte	24
	.byte	9
	.byte	8
	.long	13526
	.long	.Ltmp1183
	.long	.Ltmp1184-.Ltmp1183
	.byte	30
	.short	706
	.byte	9
	.byte	0
	.byte	0
	.byte	17
	.long	13744
	.long	.Ldebug_ranges230
	.byte	54
	.byte	10
	.byte	28
	.byte	17
	.long	13824
	.long	.Ldebug_ranges231
	.byte	25
	.byte	15
	.byte	9
	.byte	15
	.long	13800
	.long	.Ltmp1186
	.long	.Ltmp1187-.Ltmp1186
	.byte	25
	.byte	248
	.byte	20
	.byte	15
	.long	182
	.long	.Ltmp1186
	.long	.Ltmp1187-.Ltmp1186
	.byte	25
	.byte	229
	.byte	44
	.byte	8
	.long	169
	.long	.Ltmp1186
	.long	.Ltmp1187-.Ltmp1186
	.byte	31
	.short	576
	.byte	18
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	15
	.long	13575
	.long	.Ltmp1187
	.long	.Ltmp1188-.Ltmp1187
	.byte	54
	.byte	10
	.byte	27
	.byte	15
	.long	14066
	.long	.Ltmp1187
	.long	.Ltmp1188-.Ltmp1187
	.byte	41
	.byte	24
	.byte	9
	.byte	9
	.long	13478
	.long	.Ltmp1187
	.long	.Ltmp1188-.Ltmp1187
	.byte	30
	.short	706
	.byte	9
	.byte	15
	.long	182
	.long	.Ltmp1187
	.long	.Ltmp1188-.Ltmp1187
	.byte	41
	.byte	96
	.byte	17
	.byte	8
	.long	169
	.long	.Ltmp1187
	.long	.Ltmp1188-.Ltmp1187
	.byte	31
	.short	576
	.byte	18
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	17
	.long	13329
	.long	.Ldebug_ranges232
	.byte	54
	.byte	10
	.byte	27
	.byte	15
	.long	13490
	.long	.Ltmp1196
	.long	.Ltmp1197-.Ltmp1196
	.byte	13
	.byte	149
	.byte	30
	.byte	11
	.long	71
	.long	.Ltmp1196
	.long	.Ltmp1197-.Ltmp1196
	.byte	13
	.byte	93
	.byte	64
	.byte	0
	.byte	0
	.byte	11
	.long	13441
	.long	.Ltmp1198
	.long	.Ltmp1199-.Ltmp1198
	.byte	54
	.byte	7
	.byte	33
	.byte	15
	.long	14066
	.long	.Ltmp1200
	.long	.Ltmp1201-.Ltmp1200
	.byte	54
	.byte	22
	.byte	22
	.byte	9
	.long	13478
	.long	.Ltmp1200
	.long	.Ltmp1201-.Ltmp1200
	.byte	30
	.short	706
	.byte	9
	.byte	15
	.long	182
	.long	.Ltmp1200
	.long	.Ltmp1201-.Ltmp1200
	.byte	41
	.byte	96
	.byte	17
	.byte	8
	.long	169
	.long	.Ltmp1200
	.long	.Ltmp1201-.Ltmp1200
	.byte	31
	.short	576
	.byte	18
	.byte	0
	.byte	0
	.byte	0
	.byte	17
	.long	12737
	.long	.Ldebug_ranges233
	.byte	54
	.byte	24
	.byte	25
	.byte	11
	.long	16144
	.long	.Ltmp1201
	.long	.Ltmp1202-.Ltmp1201
	.byte	57
	.byte	40
	.byte	9
	.byte	11
	.long	13329
	.long	.Ltmp1208
	.long	.Ltmp1209-.Ltmp1208
	.byte	57
	.byte	40
	.byte	9
	.byte	0
	.byte	17
	.long	12737
	.long	.Ldebug_ranges234
	.byte	54
	.byte	26
	.byte	40
	.byte	17
	.long	13329
	.long	.Ldebug_ranges235
	.byte	57
	.byte	40
	.byte	9
	.byte	15
	.long	13490
	.long	.Ltmp1206
	.long	.Ltmp1207-.Ltmp1206
	.byte	13
	.byte	149
	.byte	30
	.byte	11
	.long	71
	.long	.Ltmp1206
	.long	.Ltmp1207-.Ltmp1206
	.byte	13
	.byte	93
	.byte	64
	.byte	0
	.byte	0
	.byte	11
	.long	16144
	.long	.Ltmp1204
	.long	.Ltmp1205-.Ltmp1204
	.byte	57
	.byte	40
	.byte	9
	.byte	0
	.byte	11
	.long	16157
	.long	.Ltmp1211
	.long	.Ltmp1212-.Ltmp1211
	.byte	54
	.byte	26
	.byte	40
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
.Ldebug_info_end0:
	.section	.text._ZN4core3ops8function6FnOnce9call_once17h2f4bf7dde0f7e4e6E,"ax",%progbits
.Lsec_end0:
	.section	.text._ZN4core3num7dec2flt6common8BiasedFp9zero_pow217h579a9fdf4d32f785E,"ax",%progbits
.Lsec_end1:
	.section	.text._ZN4core3num7dec2flt7decimal7Decimal5round17ha3bf16e5d49ff8bfE,"ax",%progbits
.Lsec_end2:
	.section	.text.unlikely._ZN4core9panicking18panic_bounds_check17h693951cbac28abbeE,"ax",%progbits
.Lsec_end3:
	.section	".text._ZN4core3fmt3num3imp52_$LT$impl$u20$core..fmt..Display$u20$for$u20$u32$GT$3fmt17h9d0ff72e374f98e7E","ax",%progbits
.Lsec_end4:
	.section	.text.unlikely._ZN4core9panicking9panic_fmt17h679f68291595c801E,"ax",%progbits
.Lsec_end5:
	.section	".text._ZN4core3ptr102drop_in_place$LT$$RF$core..iter..adapters..copied..Copied$LT$core..slice..iter..Iter$LT$u8$GT$$GT$$GT$17hceb1e8191151371bE","ax",%progbits
.Lsec_end6:
	.section	".text._ZN36_$LT$T$u20$as$u20$core..any..Any$GT$7type_id17h161986144a3fe9d9E","ax",%progbits
.Lsec_end7:
	.section	.text._ZN4core3fmt9Formatter12pad_integral17h9f90d3af72be363bE,"ax",%progbits
.Lsec_end8:
	.section	.text._ZN4core3fmt9Formatter12pad_integral12write_prefix17hc1241ff0425e3730E,"ax",%progbits
.Lsec_end9:
	.section	.text._ZN4core3num7dec2flt7decimal7Decimal10left_shift17ha96395fde205faeaE,"ax",%progbits
.Lsec_end10:
	.section	.text.unlikely._ZN4core5slice5index26slice_start_index_len_fail17haaeda2757c9375c3E,"ax",%progbits
.Lsec_end11:
	.section	.text._ZN4core3num7dec2flt7decimal7Decimal11right_shift17h74dc9d2f7bb2bda8E,"ax",%progbits
.Lsec_end12:
	.section	.text._ZN4core3num7dec2flt7decimal13parse_decimal17h93a23ff188fc0f81E,"ax",%progbits
.Lsec_end13:
	.section	.text.unlikely._ZN4core5slice5index24slice_end_index_len_fail17h5a91c503035fd6a0E,"ax",%progbits
.Lsec_end14:
	.section	".text._ZN59_$LT$f32$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$8from_u6417h4eddb77395e2e77bE","ax",%progbits
.Lsec_end15:
	.section	".text._ZN59_$LT$f32$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$13from_u64_bits17h7685f84f0a31e923E","ax",%progbits
.Lsec_end16:
	.section	".text._ZN59_$LT$f32$u20$as$u20$core..num..dec2flt..float..RawFloat$GT$15pow10_fast_path17h2e6c360518413f56E","ax",%progbits
.Lsec_end17:
	.section	.text._ZN4core3num7dec2flt6lemire5power17h40f4ef2b860ed5dfE,"ax",%progbits
.Lsec_end18:
	.section	.text._ZN4core3num7dec2flt6lemire22compute_product_approx17h25610b609a3e8ae8E,"ax",%progbits
.Lsec_end19:
	.section	.text._ZN4core3num7dec2flt5parse12parse_number17h53c7787c169de877E,"ax",%progbits
.Lsec_end20:
	.section	.text._ZN4core3num7dec2flt5parse21parse_partial_inf_nan14parse_inf_rest17h8f4a02175d0c9550E,"ax",%progbits
.Lsec_end21:
	.section	.text._ZN4core3fmt9Formatter3pad17h936b549e1667e5beE,"ax",%progbits
.Lsec_end22:
	.section	.text.unlikely._ZN4core9panicking5panic17ha0d68f1d939a874bE,"ax",%progbits
.Lsec_end23:
	.section	.text._ZN4core9panicking19assert_failed_inner17h492fc9c36dcbce8bE,"ax",%progbits
.Lsec_end24:
	.section	".text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h316400868ab25d65E","ax",%progbits
.Lsec_end25:
	.section	".text._ZN42_$LT$$RF$T$u20$as$u20$core..fmt..Debug$GT$3fmt17hefd9236e08ca60f0E","ax",%progbits
.Lsec_end26:
	.section	".text._ZN59_$LT$core..fmt..Arguments$u20$as$u20$core..fmt..Display$GT$3fmt17h1e33fd5ba5bed534E","ax",%progbits
.Lsec_end27:
	.section	.text._ZN4core3fmt5write17h5d3fbef16e428eedE,"ax",%progbits
.Lsec_end28:
	.section	.text.unlikely._ZN4core5slice5index22slice_index_order_fail17h8a53f055fb6ee074E,"ax",%progbits
.Lsec_end29:
	.section	".text._ZN4core3num20_$LT$impl$u20$u8$GT$21is_utf8_char_boundary17hce24739f4da7d511E","ax",%progbits
.Lsec_end30:
	.section	".text._ZN60_$LT$core..cell..BorrowError$u20$as$u20$core..fmt..Debug$GT$3fmt17he01a02bd97eeb704E","ax",%progbits
.Lsec_end31:
	.section	".text._ZN63_$LT$core..cell..BorrowMutError$u20$as$u20$core..fmt..Debug$GT$3fmt17hbedb9b53a3463d04E","ax",%progbits
.Lsec_end32:
	.section	".text._ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i16$GT$3fmt17hdad8d5f225e025a6E","ax",%progbits
.Lsec_end33:
	.section	.text.unlikely._ZN4core6option13expect_failed17h22026eb39ea9589cE,"ax",%progbits
.Lsec_end34:
	.section	.text._ZN4core9panicking9panic_str17h745842c312fc9ac7E,"ax",%progbits
.Lsec_end35:
	.section	.text._ZN4core9panicking13panic_display17h4bd204fe64080bf8E,"ax",%progbits
.Lsec_end36:
	.section	".text._ZN73_$LT$core..panic..panic_info..PanicInfo$u20$as$u20$core..fmt..Display$GT$3fmt17h4ec511762c61d457E","ax",%progbits
.Lsec_end37:
	.section	".text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17he55616ac5c69a229E","ax",%progbits
.Lsec_end38:
	.section	".text._ZN44_$LT$$RF$T$u20$as$u20$core..fmt..Display$GT$3fmt17h7e376a968b0efe1dE","ax",%progbits
.Lsec_end39:
	.section	.text.unlikely._ZN4core6result13unwrap_failed17he67be68ddf63c991E,"ax",%progbits
.Lsec_end40:
	.section	".text._ZN68_$LT$core..fmt..builders..PadAdapter$u20$as$u20$core..fmt..Write$GT$9write_str17h55ae475bea881fc0E","ax",%progbits
.Lsec_end41:
	.section	.text.unlikely._ZN4core3str16slice_error_fail17h9b5dc962ae2d13f9E,"ax",%progbits
.Lsec_end42:
	.section	".text._ZN41_$LT$char$u20$as$u20$core..fmt..Debug$GT$3fmt17h7ee1b5f70dc379a2E","ax",%progbits
.Lsec_end43:
	.section	".text._ZN71_$LT$core..ops..range..Range$LT$Idx$GT$$u20$as$u20$core..fmt..Debug$GT$3fmt17hee2a92be01ffaad6E","ax",%progbits
.Lsec_end44:
	.section	".text._ZN4core3fmt3num52_$LT$impl$u20$core..fmt..Debug$u20$for$u20$usize$GT$3fmt17h4b1edc1df8703cc0E.767","ax",%progbits
.Lsec_end45:
	.section	.text._ZN4core7unicode9printable5check17hb18736e70daa0641E,"ax",%progbits
.Lsec_end46:
	.section	.text._ZN4core3fmt8builders11DebugStruct5field17hf57541a1df3c3ba1E,"ax",%progbits
.Lsec_end47:
	.section	.text._ZN4core3fmt5Write10write_char17hf323ece2521daa94E,"ax",%progbits
.Lsec_end48:
	.section	.text._ZN4core3fmt5Write9write_fmt17hbf916f5b23354be0E,"ax",%progbits
.Lsec_end49:
	.section	".text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_str17h06c25b6d30c4740cE","ax",%progbits
.Lsec_end50:
	.section	".text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$10write_char17h6ab6417501edfdb3E","ax",%progbits
.Lsec_end51:
	.section	".text._ZN50_$LT$$RF$mut$u20$W$u20$as$u20$core..fmt..Write$GT$9write_fmt17ha0996c23c8ea924fE","ax",%progbits
.Lsec_end52:
	.section	.text._ZN4core3fmt8builders11DebugStruct6finish17h13801c6cd64a79cdE,"ax",%progbits
.Lsec_end53:
	.section	.text._ZN4core3fmt8builders10DebugTuple5field17h344a2bce7ddce2f6E,"ax",%progbits
.Lsec_end54:
	.section	.text._ZN4core3fmt8builders10DebugTuple6finish17hfca393014b7f9d44E,"ax",%progbits
.Lsec_end55:
	.section	.text._ZN4core3fmt9Formatter9write_str17he05d53f0ac3a4f9eE,"ax",%progbits
.Lsec_end56:
	.section	.text._ZN4core3fmt9Formatter9write_fmt17hd37bb40752075c70E,"ax",%progbits
.Lsec_end57:
	.section	.text._ZN4core3fmt9Formatter15debug_lower_hex17h3647386a22b50f1bE,"ax",%progbits
.Lsec_end58:
	.section	.text._ZN4core3fmt9Formatter15debug_upper_hex17hda639ee7898a7efdE,"ax",%progbits
.Lsec_end59:
	.section	.text._ZN4core3fmt9Formatter12debug_struct17h410abba8da9e6590E,"ax",%progbits
.Lsec_end60:
	.section	.text._ZN4core3fmt9Formatter11debug_tuple17h9a9c92e1e856202eE,"ax",%progbits
.Lsec_end61:
	.section	".text._ZN43_$LT$bool$u20$as$u20$core..fmt..Display$GT$3fmt17hda8ae0c64ceca41dE","ax",%progbits
.Lsec_end62:
	.section	".text._ZN42_$LT$str$u20$as$u20$core..fmt..Display$GT$3fmt17hc119597c2cd94da3E","ax",%progbits
.Lsec_end63:
	.section	.text._ZN4core5slice6memchr19memchr_general_case17h79cbfa5db1e3b72bE,"ax",%progbits
.Lsec_end64:
	.section	".text.unlikely._ZN4core5slice29_$LT$impl$u20$$u5b$T$u5d$$GT$15copy_from_slice17len_mismatch_fail17h7bf74017f2463c91E","ax",%progbits
.Lsec_end65:
	.section	.text._ZN4core3str8converts9from_utf817h12390dae7acf1b60E,"ax",%progbits
.Lsec_end66:
	.section	".text._ZN4core3fmt3num3imp51_$LT$impl$u20$core..fmt..Display$u20$for$u20$u8$GT$3fmt17ha0378c4201814c21E","ax",%progbits
.Lsec_end67:
	.section	".text._ZN4core3fmt3num52_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i8$GT$3fmt17hd91ed785dea0d6b1E","ax",%progbits
.Lsec_end68:
	.section	".text._ZN4core3fmt3num53_$LT$impl$u20$core..fmt..LowerHex$u20$for$u20$i32$GT$3fmt17hac89ce7c82380f7eE","ax",%progbits
.Lsec_end69:
	.section	".text._ZN4core3fmt3num52_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i8$GT$3fmt17hc0a456b5846e5633E","ax",%progbits
.Lsec_end70:
	.section	".text._ZN4core3fmt3num53_$LT$impl$u20$core..fmt..UpperHex$u20$for$u20$i32$GT$3fmt17h199b48bc29ed0670E","ax",%progbits
.Lsec_end71:
	.section	".text._ZN53_$LT$core..fmt..Error$u20$as$u20$core..fmt..Debug$GT$3fmt17hfa2a9d808c106497E","ax",%progbits
.Lsec_end72:
	.section	.debug_aranges,"",%progbits
	.long	604
	.short	2
	.long	.Lcu_begin0
	.byte	4
	.byte	0
	.zero	4,255
	.long	.Lfunc_begin64
	.long	.Lsec_end0-.Lfunc_begin64
	.long	.Lfunc_begin65
	.long	.Lsec_end1-.Lfunc_begin65
	.long	.Lfunc_begin66
	.long	.Lsec_end2-.Lfunc_begin66
	.long	.Lfunc_begin67
	.long	.Lsec_end3-.Lfunc_begin67
	.long	.Lfunc_begin68
	.long	.Lsec_end4-.Lfunc_begin68
	.long	.Lfunc_begin69
	.long	.Lsec_end5-.Lfunc_begin69
	.long	.Lfunc_begin70
	.long	.Lsec_end6-.Lfunc_begin70
	.long	.Lfunc_begin71
	.long	.Lsec_end7-.Lfunc_begin71
	.long	.Lfunc_begin72
	.long	.Lsec_end8-.Lfunc_begin72
	.long	.Lfunc_begin73
	.long	.Lsec_end9-.Lfunc_begin73
	.long	.Lfunc_begin74
	.long	.Lsec_end10-.Lfunc_begin74
	.long	.Lfunc_begin75
	.long	.Lsec_end11-.Lfunc_begin75
	.long	.Lfunc_begin76
	.long	.Lsec_end12-.Lfunc_begin76
	.long	.Lfunc_begin77
	.long	.Lsec_end13-.Lfunc_begin77
	.long	.Lfunc_begin78
	.long	.Lsec_end14-.Lfunc_begin78
	.long	.Lfunc_begin79
	.long	.Lsec_end15-.Lfunc_begin79
	.long	.Lfunc_begin80
	.long	.Lsec_end16-.Lfunc_begin80
	.long	.Lfunc_begin81
	.long	.Lsec_end17-.Lfunc_begin81
	.long	.Lfunc_begin82
	.long	.Lsec_end18-.Lfunc_begin82
	.long	.Lfunc_begin83
	.long	.Lsec_end19-.Lfunc_begin83
	.long	.Lfunc_begin84
	.long	.Lsec_end20-.Lfunc_begin84
	.long	.Lfunc_begin85
	.long	.Lsec_end21-.Lfunc_begin85
	.long	.Lfunc_begin86
	.long	.Lsec_end22-.Lfunc_begin86
	.long	.Lfunc_begin87
	.long	.Lsec_end23-.Lfunc_begin87
	.long	.Lfunc_begin88
	.long	.Lsec_end24-.Lfunc_begin88
	.long	.Lfunc_begin89
	.long	.Lsec_end25-.Lfunc_begin89
	.long	.Lfunc_begin90
	.long	.Lsec_end26-.Lfunc_begin90
	.long	.Lfunc_begin91
	.long	.Lsec_end27-.Lfunc_begin91
	.long	.Lfunc_begin92
	.long	.Lsec_end28-.Lfunc_begin92
	.long	.Lfunc_begin93
	.long	.Lsec_end29-.Lfunc_begin93
	.long	.Lfunc_begin94
	.long	.Lsec_end30-.Lfunc_begin94
	.long	.Lfunc_begin95
	.long	.Lsec_end31-.Lfunc_begin95
	.long	.Lfunc_begin96
	.long	.Lsec_end32-.Lfunc_begin96
	.long	.Lfunc_begin97
	.long	.Lsec_end33-.Lfunc_begin97
	.long	.Lfunc_begin98
	.long	.Lsec_end34-.Lfunc_begin98
	.long	.Lfunc_begin99
	.long	.Lsec_end35-.Lfunc_begin99
	.long	.Lfunc_begin100
	.long	.Lsec_end36-.Lfunc_begin100
	.long	.Lfunc_begin101
	.long	.Lsec_end37-.Lfunc_begin101
	.long	.Lfunc_begin102
	.long	.Lsec_end38-.Lfunc_begin102
	.long	.Lfunc_begin103
	.long	.Lsec_end39-.Lfunc_begin103
	.long	.Lfunc_begin104
	.long	.Lsec_end40-.Lfunc_begin104
	.long	.Lfunc_begin105
	.long	.Lsec_end41-.Lfunc_begin105
	.long	.Lfunc_begin106
	.long	.Lsec_end42-.Lfunc_begin106
	.long	.Lfunc_begin107
	.long	.Lsec_end43-.Lfunc_begin107
	.long	.Lfunc_begin108
	.long	.Lsec_end44-.Lfunc_begin108
	.long	.Lfunc_begin109
	.long	.Lsec_end45-.Lfunc_begin109
	.long	.Lfunc_begin110
	.long	.Lsec_end46-.Lfunc_begin110
	.long	.Lfunc_begin111
	.long	.Lsec_end47-.Lfunc_begin111
	.long	.Lfunc_begin112
	.long	.Lsec_end48-.Lfunc_begin112
	.long	.Lfunc_begin113
	.long	.Lsec_end49-.Lfunc_begin113
	.long	.Lfunc_begin114
	.long	.Lsec_end50-.Lfunc_begin114
	.long	.Lfunc_begin115
	.long	.Lsec_end51-.Lfunc_begin115
	.long	.Lfunc_begin116
	.long	.Lsec_end52-.Lfunc_begin116
	.long	.Lfunc_begin117
	.long	.Lsec_end53-.Lfunc_begin117
	.long	.Lfunc_begin118
	.long	.Lsec_end54-.Lfunc_begin118
	.long	.Lfunc_begin119
	.long	.Lsec_end55-.Lfunc_begin119
	.long	.Lfunc_begin120
	.long	.Lsec_end56-.Lfunc_begin120
	.long	.Lfunc_begin121
	.long	.Lsec_end57-.Lfunc_begin121
	.long	.Lfunc_begin122
	.long	.Lsec_end58-.Lfunc_begin122
	.long	.Lfunc_begin123
	.long	.Lsec_end59-.Lfunc_begin123
	.long	.Lfunc_begin124
	.long	.Lsec_end60-.Lfunc_begin124
	.long	.Lfunc_begin125
	.long	.Lsec_end61-.Lfunc_begin125
	.long	.Lfunc_begin126
	.long	.Lsec_end62-.Lfunc_begin126
	.long	.Lfunc_begin127
	.long	.Lsec_end63-.Lfunc_begin127
	.long	.Lfunc_begin128
	.long	.Lsec_end64-.Lfunc_begin128
	.long	.Lfunc_begin129
	.long	.Lsec_end65-.Lfunc_begin129
	.long	.Lfunc_begin130
	.long	.Lsec_end66-.Lfunc_begin130
	.long	.Lfunc_begin131
	.long	.Lsec_end67-.Lfunc_begin131
	.long	.Lfunc_begin132
	.long	.Lsec_end68-.Lfunc_begin132
	.long	.Lfunc_begin133
	.long	.Lsec_end69-.Lfunc_begin133
	.long	.Lfunc_begin134
	.long	.Lsec_end70-.Lfunc_begin134
	.long	.Lfunc_begin135
	.long	.Lsec_end71-.Lfunc_begin135
	.long	.Lfunc_begin136
	.long	.Lsec_end72-.Lfunc_begin136
	.long	0
	.long	0
	.section	.debug_ranges,"",%progbits
.Ldebug_ranges0:
	.long	.Ltmp5
	.long	.Ltmp6
	.long	.Ltmp7
	.long	.Ltmp8
	.long	0
	.long	0
.Ldebug_ranges1:
	.long	.Ltmp5
	.long	.Ltmp6
	.long	.Ltmp7
	.long	.Ltmp8
	.long	0
	.long	0
.Ldebug_ranges2:
	.long	.Ltmp15
	.long	.Ltmp16
	.long	.Ltmp17
	.long	.Ltmp18
	.long	0
	.long	0
.Ldebug_ranges3:
	.long	.Ltmp21
	.long	.Ltmp22
	.long	.Ltmp23
	.long	.Ltmp24
	.long	0
	.long	0
.Ldebug_ranges4:
	.long	.Ltmp39
	.long	.Ltmp40
	.long	.Ltmp41
	.long	.Ltmp42
	.long	.Ltmp63
	.long	.Ltmp67
	.long	0
	.long	0
.Ldebug_ranges5:
	.long	.Ltmp43
	.long	.Ltmp44
	.long	.Ltmp46
	.long	.Ltmp47
	.long	0
	.long	0
.Ldebug_ranges6:
	.long	.Ltmp45
	.long	.Ltmp46
	.long	.Ltmp48
	.long	.Ltmp49
	.long	0
	.long	0
.Ldebug_ranges7:
	.long	.Ltmp50
	.long	.Ltmp51
	.long	.Ltmp52
	.long	.Ltmp53
	.long	.Ltmp54
	.long	.Ltmp55
	.long	0
	.long	0
.Ldebug_ranges8:
	.long	.Ltmp52
	.long	.Ltmp53
	.long	.Ltmp54
	.long	.Ltmp55
	.long	0
	.long	0
.Ldebug_ranges9:
	.long	.Ltmp51
	.long	.Ltmp52
	.long	.Ltmp56
	.long	.Ltmp57
	.long	0
	.long	0
.Ldebug_ranges10:
	.long	.Ltmp69
	.long	.Ltmp73
	.long	.Ltmp74
	.long	.Ltmp75
	.long	0
	.long	0
.Ldebug_ranges11:
	.long	.Ltmp69
	.long	.Ltmp70
	.long	.Ltmp71
	.long	.Ltmp72
	.long	.Ltmp74
	.long	.Ltmp75
	.long	0
	.long	0
.Ldebug_ranges12:
	.long	.Ltmp69
	.long	.Ltmp70
	.long	.Ltmp71
	.long	.Ltmp72
	.long	.Ltmp74
	.long	.Ltmp75
	.long	0
	.long	0
.Ldebug_ranges13:
	.long	.Ltmp80
	.long	.Ltmp88
	.long	.Ltmp91
	.long	.Ltmp92
	.long	.Ltmp93
	.long	.Ltmp94
	.long	0
	.long	0
.Ldebug_ranges14:
	.long	.Ltmp81
	.long	.Ltmp82
	.long	.Ltmp93
	.long	.Ltmp94
	.long	0
	.long	0
.Ldebug_ranges15:
	.long	.Ltmp81
	.long	.Ltmp82
	.long	.Ltmp93
	.long	.Ltmp94
	.long	0
	.long	0
.Ldebug_ranges16:
	.long	.Ltmp81
	.long	.Ltmp82
	.long	.Ltmp93
	.long	.Ltmp94
	.long	0
	.long	0
.Ldebug_ranges17:
	.long	.Ltmp83
	.long	.Ltmp85
	.long	.Ltmp86
	.long	.Ltmp87
	.long	0
	.long	0
.Ldebug_ranges18:
	.long	.Ltmp84
	.long	.Ltmp85
	.long	.Ltmp86
	.long	.Ltmp87
	.long	0
	.long	0
.Ldebug_ranges19:
	.long	.Ltmp99
	.long	.Ltmp100
	.long	.Ltmp101
	.long	.Ltmp102
	.long	.Ltmp103
	.long	.Ltmp104
	.long	0
	.long	0
.Ldebug_ranges20:
	.long	.Ltmp108
	.long	.Ltmp109
	.long	.Ltmp110
	.long	.Ltmp111
	.long	.Ltmp112
	.long	.Ltmp113
	.long	.Ltmp114
	.long	.Ltmp115
	.long	.Ltmp116
	.long	.Ltmp118
	.long	0
	.long	0
.Ldebug_ranges21:
	.long	.Ltmp108
	.long	.Ltmp109
	.long	.Ltmp110
	.long	.Ltmp111
	.long	.Ltmp112
	.long	.Ltmp113
	.long	.Ltmp114
	.long	.Ltmp115
	.long	.Ltmp117
	.long	.Ltmp118
	.long	0
	.long	0
.Ldebug_ranges22:
	.long	.Ltmp119
	.long	.Ltmp121
	.long	.Ltmp122
	.long	.Ltmp124
	.long	.Ltmp125
	.long	.Ltmp133
	.long	.Ltmp134
	.long	.Ltmp136
	.long	0
	.long	0
.Ldebug_ranges23:
	.long	.Ltmp119
	.long	.Ltmp120
	.long	.Ltmp122
	.long	.Ltmp123
	.long	.Ltmp125
	.long	.Ltmp126
	.long	.Ltmp131
	.long	.Ltmp132
	.long	.Ltmp134
	.long	.Ltmp135
	.long	0
	.long	0
.Ldebug_ranges24:
	.long	.Ltmp127
	.long	.Ltmp128
	.long	.Ltmp129
	.long	.Ltmp130
	.long	0
	.long	0
.Ldebug_ranges25:
	.long	.Ltmp127
	.long	.Ltmp128
	.long	.Ltmp129
	.long	.Ltmp130
	.long	0
	.long	0
.Ldebug_ranges26:
	.long	.Ltmp139
	.long	.Ltmp151
	.long	.Ltmp154
	.long	.Ltmp155
	.long	0
	.long	0
.Ldebug_ranges27:
	.long	.Ltmp139
	.long	.Ltmp140
	.long	.Ltmp141
	.long	.Ltmp142
	.long	.Ltmp143
	.long	.Ltmp144
	.long	.Ltmp145
	.long	.Ltmp146
	.long	.Ltmp147
	.long	.Ltmp148
	.long	.Ltmp149
	.long	.Ltmp151
	.long	.Ltmp154
	.long	.Ltmp155
	.long	0
	.long	0
.Ldebug_ranges28:
	.long	.Ltmp139
	.long	.Ltmp140
	.long	.Ltmp141
	.long	.Ltmp142
	.long	.Ltmp143
	.long	.Ltmp144
	.long	.Ltmp145
	.long	.Ltmp146
	.long	.Ltmp147
	.long	.Ltmp148
	.long	.Ltmp150
	.long	.Ltmp151
	.long	.Ltmp154
	.long	.Ltmp155
	.long	0
	.long	0
.Ldebug_ranges29:
	.long	.Ltmp152
	.long	.Ltmp153
	.long	.Ltmp189
	.long	.Ltmp190
	.long	.Ltmp191
	.long	.Ltmp192
	.long	0
	.long	0
.Ldebug_ranges30:
	.long	.Ltmp161
	.long	.Ltmp163
	.long	.Ltmp209
	.long	.Ltmp210
	.long	0
	.long	0
.Ldebug_ranges31:
	.long	.Ltmp161
	.long	.Ltmp163
	.long	.Ltmp209
	.long	.Ltmp210
	.long	0
	.long	0
.Ldebug_ranges32:
	.long	.Ltmp161
	.long	.Ltmp163
	.long	.Ltmp209
	.long	.Ltmp210
	.long	0
	.long	0
.Ldebug_ranges33:
	.long	.Ltmp171
	.long	.Ltmp172
	.long	.Ltmp173
	.long	.Ltmp174
	.long	.Ltmp175
	.long	.Ltmp176
	.long	0
	.long	0
.Ldebug_ranges34:
	.long	.Ltmp171
	.long	.Ltmp172
	.long	.Ltmp173
	.long	.Ltmp174
	.long	.Ltmp175
	.long	.Ltmp176
	.long	0
	.long	0
.Ldebug_ranges35:
	.long	.Ltmp172
	.long	.Ltmp173
	.long	.Ltmp174
	.long	.Ltmp175
	.long	0
	.long	0
.Ldebug_ranges36:
	.long	.Ltmp172
	.long	.Ltmp173
	.long	.Ltmp174
	.long	.Ltmp175
	.long	0
	.long	0
.Ldebug_ranges37:
	.long	.Ltmp172
	.long	.Ltmp173
	.long	.Ltmp174
	.long	.Ltmp175
	.long	0
	.long	0
.Ldebug_ranges38:
	.long	.Ltmp172
	.long	.Ltmp173
	.long	.Ltmp174
	.long	.Ltmp175
	.long	0
	.long	0
.Ldebug_ranges39:
	.long	.Ltmp172
	.long	.Ltmp173
	.long	.Ltmp174
	.long	.Ltmp175
	.long	0
	.long	0
.Ldebug_ranges40:
	.long	.Ltmp178
	.long	.Ltmp179
	.long	.Ltmp210
	.long	.Ltmp211
	.long	0
	.long	0
.Ldebug_ranges41:
	.long	.Ltmp178
	.long	.Ltmp179
	.long	.Ltmp210
	.long	.Ltmp211
	.long	0
	.long	0
.Ldebug_ranges42:
	.long	.Ltmp178
	.long	.Ltmp179
	.long	.Ltmp210
	.long	.Ltmp211
	.long	0
	.long	0
.Ldebug_ranges43:
	.long	.Ltmp179
	.long	.Ltmp180
	.long	.Ltmp181
	.long	.Ltmp182
	.long	.Ltmp183
	.long	.Ltmp184
	.long	.Ltmp185
	.long	.Ltmp186
	.long	.Ltmp187
	.long	.Ltmp188
	.long	0
	.long	0
.Ldebug_ranges44:
	.long	.Ltmp179
	.long	.Ltmp180
	.long	.Ltmp181
	.long	.Ltmp182
	.long	.Ltmp183
	.long	.Ltmp184
	.long	.Ltmp185
	.long	.Ltmp186
	.long	.Ltmp187
	.long	.Ltmp188
	.long	0
	.long	0
.Ldebug_ranges45:
	.long	.Ltmp194
	.long	.Ltmp195
	.long	.Ltmp196
	.long	.Ltmp197
	.long	0
	.long	0
.Ldebug_ranges46:
	.long	.Ltmp194
	.long	.Ltmp195
	.long	.Ltmp196
	.long	.Ltmp197
	.long	0
	.long	0
.Ldebug_ranges47:
	.long	.Ltmp201
	.long	.Ltmp202
	.long	.Ltmp203
	.long	.Ltmp204
	.long	0
	.long	0
.Ldebug_ranges48:
	.long	.Ltmp202
	.long	.Ltmp203
	.long	.Ltmp204
	.long	.Ltmp205
	.long	0
	.long	0
.Ldebug_ranges49:
	.long	.Ltmp202
	.long	.Ltmp203
	.long	.Ltmp204
	.long	.Ltmp205
	.long	0
	.long	0
.Ldebug_ranges50:
	.long	.Ltmp202
	.long	.Ltmp203
	.long	.Ltmp204
	.long	.Ltmp205
	.long	0
	.long	0
.Ldebug_ranges51:
	.long	.Ltmp202
	.long	.Ltmp203
	.long	.Ltmp204
	.long	.Ltmp205
	.long	0
	.long	0
.Ldebug_ranges52:
	.long	.Ltmp202
	.long	.Ltmp203
	.long	.Ltmp204
	.long	.Ltmp205
	.long	0
	.long	0
.Ldebug_ranges53:
	.long	.Ltmp224
	.long	.Ltmp225
	.long	.Ltmp226
	.long	.Ltmp227
	.long	0
	.long	0
.Ldebug_ranges54:
	.long	.Ltmp232
	.long	.Ltmp359
	.long	.Ltmp360
	.long	.Ltmp363
	.long	.Ltmp364
	.long	.Ltmp373
	.long	0
	.long	0
.Ldebug_ranges55:
	.long	.Ltmp233
	.long	.Ltmp234
	.long	.Ltmp235
	.long	.Ltmp236
	.long	.Ltmp243
	.long	.Ltmp244
	.long	0
	.long	0
.Ldebug_ranges56:
	.long	.Ltmp237
	.long	.Ltmp239
	.long	.Ltmp240
	.long	.Ltmp242
	.long	0
	.long	0
.Ldebug_ranges57:
	.long	.Ltmp237
	.long	.Ltmp238
	.long	.Ltmp240
	.long	.Ltmp241
	.long	0
	.long	0
.Ldebug_ranges58:
	.long	.Ltmp248
	.long	.Ltmp249
	.long	.Ltmp344
	.long	.Ltmp345
	.long	0
	.long	0
.Ldebug_ranges59:
	.long	.Ltmp252
	.long	.Ltmp258
	.long	.Ltmp298
	.long	.Ltmp331
	.long	0
	.long	0
.Ldebug_ranges60:
	.long	.Ltmp298
	.long	.Ltmp299
	.long	.Ltmp300
	.long	.Ltmp306
	.long	.Ltmp307
	.long	.Ltmp310
	.long	0
	.long	0
.Ldebug_ranges61:
	.long	.Ltmp301
	.long	.Ltmp302
	.long	.Ltmp303
	.long	.Ltmp304
	.long	.Ltmp307
	.long	.Ltmp308
	.long	0
	.long	0
.Ldebug_ranges62:
	.long	.Ltmp305
	.long	.Ltmp306
	.long	.Ltmp308
	.long	.Ltmp309
	.long	0
	.long	0
.Ldebug_ranges63:
	.long	.Ltmp299
	.long	.Ltmp300
	.long	.Ltmp310
	.long	.Ltmp311
	.long	0
	.long	0
.Ldebug_ranges64:
	.long	.Ltmp299
	.long	.Ltmp300
	.long	.Ltmp310
	.long	.Ltmp311
	.long	0
	.long	0
.Ldebug_ranges65:
	.long	.Ltmp299
	.long	.Ltmp300
	.long	.Ltmp310
	.long	.Ltmp311
	.long	0
	.long	0
.Ldebug_ranges66:
	.long	.Ltmp299
	.long	.Ltmp300
	.long	.Ltmp310
	.long	.Ltmp311
	.long	0
	.long	0
.Ldebug_ranges67:
	.long	.Ltmp318
	.long	.Ltmp319
	.long	.Ltmp320
	.long	.Ltmp325
	.long	.Ltmp326
	.long	.Ltmp329
	.long	0
	.long	0
.Ldebug_ranges68:
	.long	.Ltmp321
	.long	.Ltmp322
	.long	.Ltmp323
	.long	.Ltmp324
	.long	.Ltmp326
	.long	.Ltmp327
	.long	0
	.long	0
.Ldebug_ranges69:
	.long	.Ltmp324
	.long	.Ltmp325
	.long	.Ltmp327
	.long	.Ltmp328
	.long	0
	.long	0
.Ldebug_ranges70:
	.long	.Ltmp319
	.long	.Ltmp320
	.long	.Ltmp330
	.long	.Ltmp331
	.long	0
	.long	0
.Ldebug_ranges71:
	.long	.Ltmp319
	.long	.Ltmp320
	.long	.Ltmp330
	.long	.Ltmp331
	.long	0
	.long	0
.Ldebug_ranges72:
	.long	.Ltmp319
	.long	.Ltmp320
	.long	.Ltmp330
	.long	.Ltmp331
	.long	0
	.long	0
.Ldebug_ranges73:
	.long	.Ltmp319
	.long	.Ltmp320
	.long	.Ltmp330
	.long	.Ltmp331
	.long	0
	.long	0
.Ldebug_ranges74:
	.long	.Ltmp259
	.long	.Ltmp260
	.long	.Ltmp264
	.long	.Ltmp265
	.long	.Ltmp269
	.long	.Ltmp270
	.long	.Ltmp274
	.long	.Ltmp275
	.long	0
	.long	0
.Ldebug_ranges75:
	.long	.Ltmp260
	.long	.Ltmp261
	.long	.Ltmp262
	.long	.Ltmp263
	.long	.Ltmp265
	.long	.Ltmp266
	.long	.Ltmp267
	.long	.Ltmp268
	.long	.Ltmp270
	.long	.Ltmp271
	.long	.Ltmp272
	.long	.Ltmp273
	.long	.Ltmp275
	.long	.Ltmp276
	.long	.Ltmp277
	.long	.Ltmp278
	.long	0
	.long	0
.Ldebug_ranges76:
	.long	.Ltmp280
	.long	.Ltmp281
	.long	.Ltmp284
	.long	.Ltmp285
	.long	0
	.long	0
.Ldebug_ranges77:
	.long	.Ltmp286
	.long	.Ltmp287
	.long	.Ltmp333
	.long	.Ltmp334
	.long	0
	.long	0
.Ldebug_ranges78:
	.long	.Ltmp286
	.long	.Ltmp287
	.long	.Ltmp333
	.long	.Ltmp334
	.long	0
	.long	0
.Ldebug_ranges79:
	.long	.Ltmp286
	.long	.Ltmp287
	.long	.Ltmp333
	.long	.Ltmp334
	.long	0
	.long	0
.Ldebug_ranges80:
	.long	.Ltmp286
	.long	.Ltmp287
	.long	.Ltmp333
	.long	.Ltmp334
	.long	0
	.long	0
.Ldebug_ranges81:
	.long	.Ltmp286
	.long	.Ltmp287
	.long	.Ltmp333
	.long	.Ltmp334
	.long	0
	.long	0
.Ldebug_ranges82:
	.long	.Ltmp288
	.long	.Ltmp297
	.long	.Ltmp340
	.long	.Ltmp341
	.long	0
	.long	0
.Ldebug_ranges83:
	.long	.Ltmp288
	.long	.Ltmp297
	.long	.Ltmp340
	.long	.Ltmp341
	.long	0
	.long	0
.Ldebug_ranges84:
	.long	.Ltmp291
	.long	.Ltmp292
	.long	.Ltmp294
	.long	.Ltmp296
	.long	0
	.long	0
.Ldebug_ranges85:
	.long	.Ltmp291
	.long	.Ltmp292
	.long	.Ltmp294
	.long	.Ltmp295
	.long	0
	.long	0
.Ldebug_ranges86:
	.long	.Ltmp332
	.long	.Ltmp333
	.long	.Ltmp334
	.long	.Ltmp339
	.long	0
	.long	0
.Ldebug_ranges87:
	.long	.Ltmp349
	.long	.Ltmp350
	.long	.Ltmp351
	.long	.Ltmp358
	.long	.Ltmp364
	.long	.Ltmp372
	.long	0
	.long	0
.Ldebug_ranges88:
	.long	.Ltmp353
	.long	.Ltmp354
	.long	.Ltmp355
	.long	.Ltmp357
	.long	.Ltmp364
	.long	.Ltmp365
	.long	0
	.long	0
.Ldebug_ranges89:
	.long	.Ltmp356
	.long	.Ltmp357
	.long	.Ltmp364
	.long	.Ltmp365
	.long	0
	.long	0
.Ldebug_ranges90:
	.long	.Ltmp376
	.long	.Ltmp377
	.long	.Ltmp378
	.long	.Ltmp379
	.long	.Ltmp380
	.long	.Ltmp381
	.long	0
	.long	0
.Ldebug_ranges91:
	.long	.Ltmp385
	.long	.Ltmp387
	.long	.Ltmp390
	.long	.Ltmp402
	.long	.Ltmp407
	.long	.Ltmp414
	.long	0
	.long	0
.Ldebug_ranges92:
	.long	.Ltmp385
	.long	.Ltmp387
	.long	.Ltmp407
	.long	.Ltmp414
	.long	0
	.long	0
.Ldebug_ranges93:
	.long	.Ltmp385
	.long	.Ltmp387
	.long	.Ltmp407
	.long	.Ltmp413
	.long	0
	.long	0
.Ldebug_ranges94:
	.long	.Ltmp385
	.long	.Ltmp387
	.long	.Ltmp407
	.long	.Ltmp413
	.long	0
	.long	0
.Ldebug_ranges95:
	.long	.Ltmp390
	.long	.Ltmp391
	.long	.Ltmp392
	.long	.Ltmp393
	.long	.Ltmp394
	.long	.Ltmp402
	.long	0
	.long	0
.Ldebug_ranges96:
	.long	.Ltmp391
	.long	.Ltmp392
	.long	.Ltmp393
	.long	.Ltmp394
	.long	0
	.long	0
.Ldebug_ranges97:
	.long	.Ltmp391
	.long	.Ltmp392
	.long	.Ltmp393
	.long	.Ltmp394
	.long	0
	.long	0
.Ldebug_ranges98:
	.long	.Ltmp387
	.long	.Ltmp389
	.long	.Ltmp403
	.long	.Ltmp404
	.long	0
	.long	0
.Ldebug_ranges99:
	.long	.Ltmp387
	.long	.Ltmp389
	.long	.Ltmp403
	.long	.Ltmp404
	.long	0
	.long	0
.Ldebug_ranges100:
	.long	.Ltmp416
	.long	.Ltmp417
	.long	.Ltmp453
	.long	.Ltmp460
	.long	.Ltmp482
	.long	.Ltmp487
	.long	.Ltmp490
	.long	.Ltmp505
	.long	0
	.long	0
.Ldebug_ranges101:
	.long	.Ltmp416
	.long	.Ltmp417
	.long	.Ltmp453
	.long	.Ltmp460
	.long	.Ltmp482
	.long	.Ltmp487
	.long	.Ltmp490
	.long	.Ltmp505
	.long	0
	.long	0
.Ldebug_ranges102:
	.long	.Ltmp416
	.long	.Ltmp417
	.long	.Ltmp453
	.long	.Ltmp460
	.long	.Ltmp482
	.long	.Ltmp487
	.long	.Ltmp490
	.long	.Ltmp505
	.long	0
	.long	0
.Ldebug_ranges103:
	.long	.Ltmp416
	.long	.Ltmp417
	.long	.Ltmp453
	.long	.Ltmp460
	.long	.Ltmp482
	.long	.Ltmp487
	.long	.Ltmp490
	.long	.Ltmp505
	.long	0
	.long	0
.Ldebug_ranges104:
	.long	.Ltmp416
	.long	.Ltmp417
	.long	.Ltmp453
	.long	.Ltmp460
	.long	.Ltmp482
	.long	.Ltmp487
	.long	.Ltmp490
	.long	.Ltmp505
	.long	0
	.long	0
.Ldebug_ranges105:
	.long	.Ltmp416
	.long	.Ltmp417
	.long	.Ltmp453
	.long	.Ltmp460
	.long	.Ltmp482
	.long	.Ltmp487
	.long	.Ltmp490
	.long	.Ltmp505
	.long	0
	.long	0
.Ldebug_ranges106:
	.long	.Ltmp416
	.long	.Ltmp417
	.long	.Ltmp453
	.long	.Ltmp454
	.long	.Ltmp459
	.long	.Ltmp460
	.long	.Ltmp486
	.long	.Ltmp487
	.long	.Ltmp494
	.long	.Ltmp495
	.long	.Ltmp496
	.long	.Ltmp497
	.long	.Ltmp499
	.long	.Ltmp500
	.long	.Ltmp502
	.long	.Ltmp503
	.long	0
	.long	0
.Ldebug_ranges107:
	.long	.Ltmp455
	.long	.Ltmp456
	.long	.Ltmp457
	.long	.Ltmp459
	.long	.Ltmp483
	.long	.Ltmp484
	.long	.Ltmp485
	.long	.Ltmp486
	.long	.Ltmp491
	.long	.Ltmp492
	.long	.Ltmp493
	.long	.Ltmp494
	.long	.Ltmp495
	.long	.Ltmp496
	.long	.Ltmp498
	.long	.Ltmp499
	.long	.Ltmp501
	.long	.Ltmp502
	.long	.Ltmp504
	.long	.Ltmp505
	.long	0
	.long	0
.Ldebug_ranges108:
	.long	.Ltmp455
	.long	.Ltmp456
	.long	.Ltmp457
	.long	.Ltmp458
	.long	0
	.long	0
.Ldebug_ranges109:
	.long	.Ltmp455
	.long	.Ltmp456
	.long	.Ltmp457
	.long	.Ltmp458
	.long	0
	.long	0
.Ldebug_ranges110:
	.long	.Ltmp455
	.long	.Ltmp456
	.long	.Ltmp457
	.long	.Ltmp458
	.long	0
	.long	0
.Ldebug_ranges111:
	.long	.Ltmp458
	.long	.Ltmp459
	.long	.Ltmp483
	.long	.Ltmp484
	.long	.Ltmp485
	.long	.Ltmp486
	.long	.Ltmp491
	.long	.Ltmp492
	.long	.Ltmp493
	.long	.Ltmp494
	.long	.Ltmp495
	.long	.Ltmp496
	.long	.Ltmp498
	.long	.Ltmp499
	.long	.Ltmp501
	.long	.Ltmp502
	.long	.Ltmp504
	.long	.Ltmp505
	.long	0
	.long	0
.Ldebug_ranges112:
	.long	.Ltmp418
	.long	.Ltmp452
	.long	.Ltmp461
	.long	.Ltmp482
	.long	.Ltmp488
	.long	.Ltmp489
	.long	.Ltmp505
	.long	.Ltmp763
	.long	0
	.long	0
.Ldebug_ranges113:
	.long	.Ltmp421
	.long	.Ltmp422
	.long	.Ltmp488
	.long	.Ltmp489
	.long	.Ltmp505
	.long	.Ltmp554
	.long	0
	.long	0
.Ldebug_ranges114:
	.long	.Ltmp421
	.long	.Ltmp422
	.long	.Ltmp488
	.long	.Ltmp489
	.long	.Ltmp505
	.long	.Ltmp554
	.long	0
	.long	0
.Ldebug_ranges115:
	.long	.Ltmp421
	.long	.Ltmp422
	.long	.Ltmp488
	.long	.Ltmp489
	.long	.Ltmp505
	.long	.Ltmp554
	.long	0
	.long	0
.Ldebug_ranges116:
	.long	.Ltmp421
	.long	.Ltmp422
	.long	.Ltmp488
	.long	.Ltmp489
	.long	.Ltmp505
	.long	.Ltmp554
	.long	0
	.long	0
.Ldebug_ranges117:
	.long	.Ltmp421
	.long	.Ltmp422
	.long	.Ltmp488
	.long	.Ltmp489
	.long	.Ltmp505
	.long	.Ltmp554
	.long	0
	.long	0
.Ldebug_ranges118:
	.long	.Ltmp421
	.long	.Ltmp422
	.long	.Ltmp488
	.long	.Ltmp489
	.long	.Ltmp505
	.long	.Ltmp554
	.long	0
	.long	0
.Ldebug_ranges119:
	.long	.Ltmp421
	.long	.Ltmp422
	.long	.Ltmp488
	.long	.Ltmp489
	.long	.Ltmp505
	.long	.Ltmp506
	.long	.Ltmp528
	.long	.Ltmp529
	.long	.Ltmp533
	.long	.Ltmp534
	.long	.Ltmp538
	.long	.Ltmp539
	.long	.Ltmp543
	.long	.Ltmp544
	.long	.Ltmp545
	.long	.Ltmp546
	.long	.Ltmp548
	.long	.Ltmp549
	.long	.Ltmp551
	.long	.Ltmp552
	.long	0
	.long	0
.Ldebug_ranges120:
	.long	.Ltmp507
	.long	.Ltmp508
	.long	.Ltmp509
	.long	.Ltmp510
	.long	.Ltmp511
	.long	.Ltmp512
	.long	.Ltmp513
	.long	.Ltmp514
	.long	.Ltmp515
	.long	.Ltmp516
	.long	.Ltmp517
	.long	.Ltmp518
	.long	.Ltmp519
	.long	.Ltmp520
	.long	.Ltmp521
	.long	.Ltmp522
	.long	.Ltmp523
	.long	.Ltmp524
	.long	.Ltmp525
	.long	.Ltmp526
	.long	.Ltmp527
	.long	.Ltmp528
	.long	.Ltmp530
	.long	.Ltmp531
	.long	.Ltmp532
	.long	.Ltmp533
	.long	.Ltmp535
	.long	.Ltmp536
	.long	.Ltmp537
	.long	.Ltmp538
	.long	.Ltmp540
	.long	.Ltmp541
	.long	.Ltmp542
	.long	.Ltmp543
	.long	.Ltmp544
	.long	.Ltmp545
	.long	.Ltmp547
	.long	.Ltmp548
	.long	.Ltmp550
	.long	.Ltmp551
	.long	.Ltmp553
	.long	.Ltmp554
	.long	0
	.long	0
.Ldebug_ranges121:
	.long	.Ltmp507
	.long	.Ltmp508
	.long	.Ltmp509
	.long	.Ltmp510
	.long	.Ltmp511
	.long	.Ltmp512
	.long	.Ltmp513
	.long	.Ltmp514
	.long	.Ltmp515
	.long	.Ltmp516
	.long	.Ltmp517
	.long	.Ltmp518
	.long	.Ltmp519
	.long	.Ltmp520
	.long	.Ltmp521
	.long	.Ltmp522
	.long	.Ltmp523
	.long	.Ltmp524
	.long	.Ltmp525
	.long	.Ltmp526
	.long	.Ltmp527
	.long	.Ltmp528
	.long	.Ltmp530
	.long	.Ltmp531
	.long	.Ltmp532
	.long	.Ltmp533
	.long	.Ltmp535
	.long	.Ltmp536
	.long	.Ltmp537
	.long	.Ltmp538
	.long	.Ltmp540
	.long	.Ltmp541
	.long	.Ltmp542
	.long	.Ltmp543
	.long	.Ltmp544
	.long	.Ltmp545
	.long	.Ltmp547
	.long	.Ltmp548
	.long	.Ltmp550
	.long	.Ltmp551
	.long	.Ltmp553
	.long	.Ltmp554
	.long	0
	.long	0
.Ldebug_ranges122:
	.long	.Ltmp423
	.long	.Ltmp452
	.long	.Ltmp461
	.long	.Ltmp482
	.long	0
	.long	0
.Ldebug_ranges123:
	.long	.Ltmp423
	.long	.Ltmp452
	.long	.Ltmp461
	.long	.Ltmp482
	.long	0
	.long	0
.Ldebug_ranges124:
	.long	.Ltmp423
	.long	.Ltmp452
	.long	.Ltmp461
	.long	.Ltmp482
	.long	0
	.long	0
.Ldebug_ranges125:
	.long	.Ltmp423
	.long	.Ltmp452
	.long	.Ltmp461
	.long	.Ltmp482
	.long	0
	.long	0
.Ldebug_ranges126:
	.long	.Ltmp423
	.long	.Ltmp452
	.long	.Ltmp461
	.long	.Ltmp482
	.long	0
	.long	0
.Ldebug_ranges127:
	.long	.Ltmp423
	.long	.Ltmp452
	.long	.Ltmp461
	.long	.Ltmp482
	.long	0
	.long	0
.Ldebug_ranges128:
	.long	.Ltmp423
	.long	.Ltmp424
	.long	.Ltmp446
	.long	.Ltmp447
	.long	.Ltmp451
	.long	.Ltmp452
	.long	.Ltmp465
	.long	.Ltmp466
	.long	.Ltmp470
	.long	.Ltmp471
	.long	.Ltmp473
	.long	.Ltmp474
	.long	.Ltmp476
	.long	.Ltmp477
	.long	.Ltmp479
	.long	.Ltmp480
	.long	0
	.long	0
.Ldebug_ranges129:
	.long	.Ltmp425
	.long	.Ltmp426
	.long	.Ltmp427
	.long	.Ltmp428
	.long	.Ltmp429
	.long	.Ltmp430
	.long	.Ltmp431
	.long	.Ltmp432
	.long	.Ltmp433
	.long	.Ltmp434
	.long	.Ltmp435
	.long	.Ltmp436
	.long	.Ltmp437
	.long	.Ltmp438
	.long	.Ltmp439
	.long	.Ltmp440
	.long	.Ltmp441
	.long	.Ltmp442
	.long	.Ltmp443
	.long	.Ltmp444
	.long	.Ltmp445
	.long	.Ltmp446
	.long	.Ltmp448
	.long	.Ltmp449
	.long	.Ltmp450
	.long	.Ltmp451
	.long	.Ltmp462
	.long	.Ltmp463
	.long	.Ltmp464
	.long	.Ltmp465
	.long	.Ltmp467
	.long	.Ltmp468
	.long	.Ltmp469
	.long	.Ltmp470
	.long	.Ltmp471
	.long	.Ltmp472
	.long	.Ltmp475
	.long	.Ltmp476
	.long	.Ltmp478
	.long	.Ltmp479
	.long	.Ltmp481
	.long	.Ltmp482
	.long	0
	.long	0
.Ldebug_ranges130:
	.long	.Ltmp425
	.long	.Ltmp426
	.long	.Ltmp427
	.long	.Ltmp428
	.long	.Ltmp429
	.long	.Ltmp430
	.long	.Ltmp431
	.long	.Ltmp432
	.long	.Ltmp433
	.long	.Ltmp434
	.long	.Ltmp435
	.long	.Ltmp436
	.long	.Ltmp437
	.long	.Ltmp438
	.long	.Ltmp439
	.long	.Ltmp440
	.long	.Ltmp441
	.long	.Ltmp442
	.long	.Ltmp443
	.long	.Ltmp444
	.long	.Ltmp445
	.long	.Ltmp446
	.long	.Ltmp448
	.long	.Ltmp449
	.long	.Ltmp450
	.long	.Ltmp451
	.long	.Ltmp462
	.long	.Ltmp463
	.long	.Ltmp464
	.long	.Ltmp465
	.long	.Ltmp467
	.long	.Ltmp468
	.long	.Ltmp469
	.long	.Ltmp470
	.long	.Ltmp471
	.long	.Ltmp472
	.long	.Ltmp475
	.long	.Ltmp476
	.long	.Ltmp478
	.long	.Ltmp479
	.long	.Ltmp481
	.long	.Ltmp482
	.long	0
	.long	0
.Ldebug_ranges131:
	.long	.Ltmp555
	.long	.Ltmp556
	.long	.Ltmp558
	.long	.Ltmp559
	.long	.Ltmp561
	.long	.Ltmp562
	.long	0
	.long	0
.Ldebug_ranges132:
	.long	.Ltmp557
	.long	.Ltmp558
	.long	.Ltmp560
	.long	.Ltmp561
	.long	.Ltmp563
	.long	.Ltmp564
	.long	0
	.long	0
.Ldebug_ranges133:
	.long	.Ltmp560
	.long	.Ltmp561
	.long	.Ltmp563
	.long	.Ltmp564
	.long	0
	.long	0
.Ldebug_ranges134:
	.long	.Ltmp565
	.long	.Ltmp566
	.long	.Ltmp567
	.long	.Ltmp568
	.long	0
	.long	0
.Ldebug_ranges135:
	.long	.Ltmp571
	.long	.Ltmp572
	.long	.Ltmp660
	.long	.Ltmp662
	.long	0
	.long	0
.Ldebug_ranges136:
	.long	.Ltmp572
	.long	.Ltmp573
	.long	.Ltmp574
	.long	.Ltmp575
	.long	.Ltmp617
	.long	.Ltmp618
	.long	.Ltmp629
	.long	.Ltmp630
	.long	.Ltmp631
	.long	.Ltmp632
	.long	.Ltmp640
	.long	.Ltmp641
	.long	.Ltmp642
	.long	.Ltmp643
	.long	.Ltmp652
	.long	.Ltmp653
	.long	0
	.long	0
.Ldebug_ranges137:
	.long	.Ltmp576
	.long	.Ltmp577
	.long	.Ltmp578
	.long	.Ltmp579
	.long	.Ltmp580
	.long	.Ltmp581
	.long	.Ltmp582
	.long	.Ltmp583
	.long	.Ltmp584
	.long	.Ltmp585
	.long	.Ltmp586
	.long	.Ltmp587
	.long	.Ltmp588
	.long	.Ltmp589
	.long	.Ltmp590
	.long	.Ltmp591
	.long	.Ltmp592
	.long	.Ltmp593
	.long	.Ltmp594
	.long	.Ltmp595
	.long	.Ltmp596
	.long	.Ltmp597
	.long	.Ltmp598
	.long	.Ltmp599
	.long	.Ltmp600
	.long	.Ltmp601
	.long	.Ltmp602
	.long	.Ltmp603
	.long	.Ltmp604
	.long	.Ltmp605
	.long	.Ltmp606
	.long	.Ltmp607
	.long	.Ltmp608
	.long	.Ltmp609
	.long	.Ltmp610
	.long	.Ltmp611
	.long	.Ltmp612
	.long	.Ltmp613
	.long	.Ltmp614
	.long	.Ltmp615
	.long	.Ltmp616
	.long	.Ltmp617
	.long	.Ltmp619
	.long	.Ltmp620
	.long	.Ltmp621
	.long	.Ltmp622
	.long	.Ltmp623
	.long	.Ltmp624
	.long	.Ltmp625
	.long	.Ltmp626
	.long	.Ltmp627
	.long	.Ltmp628
	.long	.Ltmp632
	.long	.Ltmp633
	.long	.Ltmp634
	.long	.Ltmp635
	.long	.Ltmp636
	.long	.Ltmp637
	.long	.Ltmp638
	.long	.Ltmp639
	.long	.Ltmp644
	.long	.Ltmp645
	.long	.Ltmp646
	.long	.Ltmp647
	.long	.Ltmp648
	.long	.Ltmp649
	.long	.Ltmp650
	.long	.Ltmp651
	.long	.Ltmp654
	.long	.Ltmp655
	.long	.Ltmp656
	.long	.Ltmp657
	.long	.Ltmp658
	.long	.Ltmp659
	.long	0
	.long	0
.Ldebug_ranges138:
	.long	.Ltmp662
	.long	.Ltmp663
	.long	.Ltmp664
	.long	.Ltmp665
	.long	.Ltmp703
	.long	.Ltmp704
	.long	.Ltmp715
	.long	.Ltmp716
	.long	.Ltmp720
	.long	.Ltmp721
	.long	.Ltmp726
	.long	.Ltmp727
	.long	.Ltmp728
	.long	.Ltmp729
	.long	.Ltmp736
	.long	.Ltmp737
	.long	.Ltmp738
	.long	.Ltmp739
	.long	.Ltmp746
	.long	.Ltmp747
	.long	.Ltmp748
	.long	.Ltmp749
	.long	.Ltmp751
	.long	.Ltmp752
	.long	.Ltmp753
	.long	.Ltmp754
	.long	.Ltmp756
	.long	.Ltmp757
	.long	0
	.long	0
.Ldebug_ranges139:
	.long	.Ltmp703
	.long	.Ltmp704
	.long	.Ltmp738
	.long	.Ltmp739
	.long	0
	.long	0
.Ldebug_ranges140:
	.long	.Ltmp703
	.long	.Ltmp704
	.long	.Ltmp738
	.long	.Ltmp739
	.long	0
	.long	0
.Ldebug_ranges141:
	.long	.Ltmp666
	.long	.Ltmp667
	.long	.Ltmp668
	.long	.Ltmp669
	.long	.Ltmp670
	.long	.Ltmp671
	.long	.Ltmp672
	.long	.Ltmp673
	.long	.Ltmp674
	.long	.Ltmp675
	.long	.Ltmp676
	.long	.Ltmp677
	.long	.Ltmp678
	.long	.Ltmp679
	.long	.Ltmp680
	.long	.Ltmp681
	.long	.Ltmp682
	.long	.Ltmp683
	.long	.Ltmp684
	.long	.Ltmp685
	.long	.Ltmp686
	.long	.Ltmp687
	.long	.Ltmp688
	.long	.Ltmp689
	.long	.Ltmp690
	.long	.Ltmp691
	.long	.Ltmp692
	.long	.Ltmp693
	.long	.Ltmp694
	.long	.Ltmp695
	.long	.Ltmp696
	.long	.Ltmp697
	.long	.Ltmp698
	.long	.Ltmp699
	.long	.Ltmp700
	.long	.Ltmp701
	.long	.Ltmp702
	.long	.Ltmp703
	.long	.Ltmp705
	.long	.Ltmp706
	.long	.Ltmp707
	.long	.Ltmp708
	.long	.Ltmp709
	.long	.Ltmp710
	.long	.Ltmp711
	.long	.Ltmp712
	.long	.Ltmp713
	.long	.Ltmp714
	.long	.Ltmp717
	.long	.Ltmp718
	.long	.Ltmp719
	.long	.Ltmp720
	.long	.Ltmp722
	.long	.Ltmp723
	.long	.Ltmp724
	.long	.Ltmp725
	.long	.Ltmp730
	.long	.Ltmp731
	.long	.Ltmp732
	.long	.Ltmp733
	.long	.Ltmp734
	.long	.Ltmp735
	.long	.Ltmp740
	.long	.Ltmp741
	.long	.Ltmp742
	.long	.Ltmp743
	.long	.Ltmp744
	.long	.Ltmp745
	.long	.Ltmp749
	.long	.Ltmp750
	.long	.Ltmp754
	.long	.Ltmp755
	.long	.Ltmp758
	.long	.Ltmp759
	.long	0
	.long	0
.Ldebug_ranges142:
	.long	.Ltmp764
	.long	.Ltmp765
	.long	.Ltmp766
	.long	.Ltmp767
	.long	.Ltmp768
	.long	.Ltmp772
	.long	0
	.long	0
.Ldebug_ranges143:
	.long	.Ltmp775
	.long	.Ltmp776
	.long	.Ltmp777
	.long	.Ltmp778
	.long	.Ltmp779
	.long	.Ltmp780
	.long	0
	.long	0
.Ldebug_ranges144:
	.long	.Ltmp775
	.long	.Ltmp776
	.long	.Ltmp777
	.long	.Ltmp778
	.long	.Ltmp779
	.long	.Ltmp780
	.long	0
	.long	0
.Ldebug_ranges145:
	.long	.Ltmp782
	.long	.Ltmp783
	.long	.Ltmp784
	.long	.Ltmp785
	.long	.Ltmp786
	.long	.Ltmp787
	.long	0
	.long	0
.Ldebug_ranges146:
	.long	.Ltmp802
	.long	.Ltmp803
	.long	.Ltmp804
	.long	.Ltmp805
	.long	0
	.long	0
.Ldebug_ranges147:
	.long	.Ltmp806
	.long	.Ltmp807
	.long	.Ltmp820
	.long	.Ltmp821
	.long	0
	.long	0
.Ldebug_ranges148:
	.long	.Ltmp806
	.long	.Ltmp807
	.long	.Ltmp820
	.long	.Ltmp821
	.long	0
	.long	0
.Ldebug_ranges149:
	.long	.Ltmp808
	.long	.Ltmp809
	.long	.Ltmp810
	.long	.Ltmp819
	.long	0
	.long	0
.Ldebug_ranges150:
	.long	.Ltmp822
	.long	.Ltmp823
	.long	.Ltmp824
	.long	.Ltmp825
	.long	.Ltmp826
	.long	.Ltmp827
	.long	0
	.long	0
.Ldebug_ranges151:
	.long	.Ltmp822
	.long	.Ltmp823
	.long	.Ltmp824
	.long	.Ltmp825
	.long	.Ltmp826
	.long	.Ltmp827
	.long	0
	.long	0
.Ldebug_ranges152:
	.long	.Ltmp839
	.long	.Ltmp840
	.long	.Ltmp841
	.long	.Ltmp842
	.long	.Ltmp845
	.long	.Ltmp846
	.long	.Ltmp850
	.long	.Ltmp851
	.long	.Ltmp854
	.long	.Ltmp855
	.long	0
	.long	0
.Ldebug_ranges153:
	.long	.Ltmp840
	.long	.Ltmp841
	.long	.Ltmp844
	.long	.Ltmp845
	.long	.Ltmp849
	.long	.Ltmp850
	.long	0
	.long	0
.Ldebug_ranges154:
	.long	.Ltmp842
	.long	.Ltmp843
	.long	.Ltmp846
	.long	.Ltmp847
	.long	.Ltmp851
	.long	.Ltmp852
	.long	.Ltmp855
	.long	.Ltmp856
	.long	0
	.long	0
.Ldebug_ranges155:
	.long	.Ltmp847
	.long	.Ltmp848
	.long	.Ltmp852
	.long	.Ltmp853
	.long	0
	.long	0
.Ldebug_ranges156:
	.long	.Ltmp884
	.long	.Ltmp885
	.long	.Ltmp886
	.long	.Ltmp887
	.long	0
	.long	0
.Ldebug_ranges157:
	.long	.Ltmp890
	.long	.Ltmp894
	.long	.Ltmp973
	.long	.Ltmp974
	.long	.Ltmp982
	.long	.Ltmp983
	.long	0
	.long	0
.Ldebug_ranges158:
	.long	.Ltmp890
	.long	.Ltmp894
	.long	.Ltmp973
	.long	.Ltmp974
	.long	.Ltmp982
	.long	.Ltmp983
	.long	0
	.long	0
.Ldebug_ranges159:
	.long	.Ltmp890
	.long	.Ltmp894
	.long	.Ltmp973
	.long	.Ltmp974
	.long	0
	.long	0
.Ldebug_ranges160:
	.long	.Ltmp890
	.long	.Ltmp891
	.long	.Ltmp973
	.long	.Ltmp974
	.long	0
	.long	0
.Ldebug_ranges161:
	.long	.Ltmp895
	.long	.Ltmp970
	.long	.Ltmp981
	.long	.Ltmp982
	.long	0
	.long	0
.Ldebug_ranges162:
	.long	.Ltmp895
	.long	.Ltmp970
	.long	.Ltmp981
	.long	.Ltmp982
	.long	0
	.long	0
.Ldebug_ranges163:
	.long	.Ltmp898
	.long	.Ltmp901
	.long	.Ltmp902
	.long	.Ltmp919
	.long	.Ltmp920
	.long	.Ltmp943
	.long	.Ltmp944
	.long	.Ltmp946
	.long	.Ltmp947
	.long	.Ltmp948
	.long	.Ltmp949
	.long	.Ltmp950
	.long	.Ltmp951
	.long	.Ltmp952
	.long	.Ltmp953
	.long	.Ltmp954
	.long	.Ltmp955
	.long	.Ltmp956
	.long	.Ltmp957
	.long	.Ltmp958
	.long	.Ltmp959
	.long	.Ltmp961
	.long	.Ltmp962
	.long	.Ltmp964
	.long	.Ltmp967
	.long	.Ltmp969
	.long	.Ltmp981
	.long	.Ltmp982
	.long	0
	.long	0
.Ldebug_ranges164:
	.long	.Ltmp899
	.long	.Ltmp901
	.long	.Ltmp917
	.long	.Ltmp919
	.long	.Ltmp941
	.long	.Ltmp943
	.long	.Ltmp944
	.long	.Ltmp946
	.long	.Ltmp959
	.long	.Ltmp961
	.long	.Ltmp962
	.long	.Ltmp964
	.long	.Ltmp967
	.long	.Ltmp969
	.long	0
	.long	0
.Ldebug_ranges165:
	.long	.Ltmp899
	.long	.Ltmp900
	.long	.Ltmp917
	.long	.Ltmp918
	.long	.Ltmp941
	.long	.Ltmp942
	.long	.Ltmp944
	.long	.Ltmp945
	.long	.Ltmp959
	.long	.Ltmp960
	.long	.Ltmp962
	.long	.Ltmp963
	.long	.Ltmp967
	.long	.Ltmp968
	.long	0
	.long	0
.Ldebug_ranges166:
	.long	.Ltmp902
	.long	.Ltmp917
	.long	.Ltmp920
	.long	.Ltmp941
	.long	.Ltmp947
	.long	.Ltmp948
	.long	.Ltmp949
	.long	.Ltmp950
	.long	.Ltmp951
	.long	.Ltmp952
	.long	.Ltmp953
	.long	.Ltmp954
	.long	.Ltmp955
	.long	.Ltmp956
	.long	.Ltmp957
	.long	.Ltmp958
	.long	.Ltmp981
	.long	.Ltmp982
	.long	0
	.long	0
.Ldebug_ranges167:
	.long	.Ltmp906
	.long	.Ltmp916
	.long	.Ltmp949
	.long	.Ltmp950
	.long	.Ltmp953
	.long	.Ltmp954
	.long	.Ltmp957
	.long	.Ltmp958
	.long	0
	.long	0
.Ldebug_ranges168:
	.long	.Ltmp907
	.long	.Ltmp908
	.long	.Ltmp909
	.long	.Ltmp910
	.long	.Ltmp911
	.long	.Ltmp912
	.long	.Ltmp913
	.long	.Ltmp914
	.long	.Ltmp915
	.long	.Ltmp916
	.long	0
	.long	0
.Ldebug_ranges169:
	.long	.Ltmp921
	.long	.Ltmp923
	.long	.Ltmp926
	.long	.Ltmp927
	.long	0
	.long	0
.Ldebug_ranges170:
	.long	.Ltmp928
	.long	.Ltmp929
	.long	.Ltmp981
	.long	.Ltmp982
	.long	0
	.long	0
.Ldebug_ranges171:
	.long	.Ltmp928
	.long	.Ltmp929
	.long	.Ltmp981
	.long	.Ltmp982
	.long	0
	.long	0
.Ldebug_ranges172:
	.long	.Ltmp929
	.long	.Ltmp930
	.long	.Ltmp931
	.long	.Ltmp941
	.long	.Ltmp947
	.long	.Ltmp948
	.long	.Ltmp951
	.long	.Ltmp952
	.long	.Ltmp955
	.long	.Ltmp956
	.long	0
	.long	0
.Ldebug_ranges173:
	.long	.Ltmp929
	.long	.Ltmp930
	.long	.Ltmp932
	.long	.Ltmp933
	.long	.Ltmp934
	.long	.Ltmp935
	.long	.Ltmp936
	.long	.Ltmp937
	.long	.Ltmp938
	.long	.Ltmp939
	.long	.Ltmp940
	.long	.Ltmp941
	.long	0
	.long	0
.Ldebug_ranges174:
	.long	.Ltmp971
	.long	.Ltmp972
	.long	.Ltmp975
	.long	.Ltmp976
	.long	.Ltmp977
	.long	.Ltmp980
	.long	0
	.long	0
.Ldebug_ranges175:
	.long	.Ltmp971
	.long	.Ltmp972
	.long	.Ltmp975
	.long	.Ltmp976
	.long	.Ltmp977
	.long	.Ltmp980
	.long	0
	.long	0
.Ldebug_ranges176:
	.long	.Ltmp971
	.long	.Ltmp972
	.long	.Ltmp975
	.long	.Ltmp976
	.long	.Ltmp977
	.long	.Ltmp979
	.long	0
	.long	0
.Ldebug_ranges177:
	.long	.Ltmp975
	.long	.Ltmp976
	.long	.Ltmp977
	.long	.Ltmp978
	.long	0
	.long	0
.Ldebug_ranges178:
	.long	.Ltmp984
	.long	.Ltmp986
	.long	.Ltmp987
	.long	.Ltmp988
	.long	0
	.long	0
.Ldebug_ranges179:
	.long	.Ltmp985
	.long	.Ltmp986
	.long	.Ltmp987
	.long	.Ltmp988
	.long	0
	.long	0
.Ldebug_ranges180:
	.long	.Ltmp995
	.long	.Ltmp996
	.long	.Ltmp997
	.long	.Ltmp998
	.long	.Ltmp1000
	.long	.Ltmp1001
	.long	.Ltmp1002
	.long	.Ltmp1020
	.long	0
	.long	0
.Ldebug_ranges181:
	.long	.Ltmp1003
	.long	.Ltmp1004
	.long	.Ltmp1005
	.long	.Ltmp1006
	.long	0
	.long	0
.Ldebug_ranges182:
	.long	.Ltmp1004
	.long	.Ltmp1005
	.long	.Ltmp1006
	.long	.Ltmp1007
	.long	0
	.long	0
.Ldebug_ranges183:
	.long	.Ltmp1004
	.long	.Ltmp1005
	.long	.Ltmp1006
	.long	.Ltmp1007
	.long	0
	.long	0
.Ldebug_ranges184:
	.long	.Ltmp1007
	.long	.Ltmp1009
	.long	.Ltmp1010
	.long	.Ltmp1019
	.long	0
	.long	0
.Ldebug_ranges185:
	.long	.Ltmp1007
	.long	.Ltmp1008
	.long	.Ltmp1011
	.long	.Ltmp1012
	.long	.Ltmp1013
	.long	.Ltmp1014
	.long	.Ltmp1015
	.long	.Ltmp1016
	.long	.Ltmp1017
	.long	.Ltmp1018
	.long	0
	.long	0
.Ldebug_ranges186:
	.long	.Ltmp998
	.long	.Ltmp999
	.long	.Ltmp1020
	.long	.Ltmp1023
	.long	0
	.long	0
.Ldebug_ranges187:
	.long	.Ltmp998
	.long	.Ltmp999
	.long	.Ltmp1020
	.long	.Ltmp1023
	.long	0
	.long	0
.Ldebug_ranges188:
	.long	.Ltmp998
	.long	.Ltmp999
	.long	.Ltmp1020
	.long	.Ltmp1022
	.long	0
	.long	0
.Ldebug_ranges189:
	.long	.Ltmp998
	.long	.Ltmp999
	.long	.Ltmp1020
	.long	.Ltmp1021
	.long	0
	.long	0
.Ldebug_ranges190:
	.long	.Ltmp1024
	.long	.Ltmp1025
	.long	.Ltmp1027
	.long	.Ltmp1028
	.long	.Ltmp1029
	.long	.Ltmp1038
	.long	0
	.long	0
.Ldebug_ranges191:
	.long	.Ltmp1024
	.long	.Ltmp1025
	.long	.Ltmp1027
	.long	.Ltmp1028
	.long	.Ltmp1029
	.long	.Ltmp1038
	.long	0
	.long	0
.Ldebug_ranges192:
	.long	.Ltmp1025
	.long	.Ltmp1026
	.long	.Ltmp1038
	.long	.Ltmp1039
	.long	0
	.long	0
.Ldebug_ranges193:
	.long	.Ltmp1040
	.long	.Ltmp1041
	.long	.Ltmp1042
	.long	.Ltmp1043
	.long	0
	.long	0
.Ldebug_ranges194:
	.long	.Ltmp1040
	.long	.Ltmp1041
	.long	.Ltmp1042
	.long	.Ltmp1043
	.long	0
	.long	0
.Ldebug_ranges195:
	.long	.Ltmp1044
	.long	.Ltmp1045
	.long	.Ltmp1046
	.long	.Ltmp1047
	.long	0
	.long	0
.Ldebug_ranges196:
	.long	.Ltmp1051
	.long	.Ltmp1073
	.long	.Ltmp1084
	.long	.Ltmp1088
	.long	0
	.long	0
.Ldebug_ranges197:
	.long	.Ltmp1052
	.long	.Ltmp1068
	.long	.Ltmp1085
	.long	.Ltmp1088
	.long	0
	.long	0
.Ldebug_ranges198:
	.long	.Ltmp1052
	.long	.Ltmp1068
	.long	.Ltmp1085
	.long	.Ltmp1088
	.long	0
	.long	0
.Ldebug_ranges199:
	.long	.Ltmp1052
	.long	.Ltmp1068
	.long	.Ltmp1085
	.long	.Ltmp1088
	.long	0
	.long	0
.Ldebug_ranges200:
	.long	.Ltmp1055
	.long	.Ltmp1056
	.long	.Ltmp1062
	.long	.Ltmp1063
	.long	0
	.long	0
.Ldebug_ranges201:
	.long	.Ltmp1055
	.long	.Ltmp1056
	.long	.Ltmp1062
	.long	.Ltmp1063
	.long	0
	.long	0
.Ldebug_ranges202:
	.long	.Ltmp1056
	.long	.Ltmp1057
	.long	.Ltmp1058
	.long	.Ltmp1060
	.long	.Ltmp1063
	.long	.Ltmp1064
	.long	.Ltmp1086
	.long	.Ltmp1087
	.long	0
	.long	0
.Ldebug_ranges203:
	.long	.Ltmp1058
	.long	.Ltmp1060
	.long	.Ltmp1086
	.long	.Ltmp1087
	.long	0
	.long	0
.Ldebug_ranges204:
	.long	.Ltmp1065
	.long	.Ltmp1066
	.long	.Ltmp1067
	.long	.Ltmp1068
	.long	0
	.long	0
.Ldebug_ranges205:
	.long	.Ltmp1065
	.long	.Ltmp1066
	.long	.Ltmp1067
	.long	.Ltmp1068
	.long	0
	.long	0
.Ldebug_ranges206:
	.long	.Ltmp1069
	.long	.Ltmp1070
	.long	.Ltmp1071
	.long	.Ltmp1072
	.long	0
	.long	0
.Ldebug_ranges207:
	.long	.Ltmp1077
	.long	.Ltmp1078
	.long	.Ltmp1079
	.long	.Ltmp1080
	.long	0
	.long	0
.Ldebug_ranges208:
	.long	.Ltmp1095
	.long	.Ltmp1106
	.long	.Ltmp1161
	.long	.Ltmp1168
	.long	0
	.long	0
.Ldebug_ranges209:
	.long	.Ltmp1095
	.long	.Ltmp1106
	.long	.Ltmp1161
	.long	.Ltmp1168
	.long	0
	.long	0
.Ldebug_ranges210:
	.long	.Ltmp1096
	.long	.Ltmp1097
	.long	.Ltmp1098
	.long	.Ltmp1099
	.long	0
	.long	0
.Ldebug_ranges211:
	.long	.Ltmp1102
	.long	.Ltmp1103
	.long	.Ltmp1104
	.long	.Ltmp1105
	.long	0
	.long	0
.Ldebug_ranges212:
	.long	.Ltmp1107
	.long	.Ltmp1131
	.long	.Ltmp1158
	.long	.Ltmp1160
	.long	.Ltmp1169
	.long	.Ltmp1174
	.long	0
	.long	0
.Ldebug_ranges213:
	.long	.Ltmp1107
	.long	.Ltmp1131
	.long	.Ltmp1158
	.long	.Ltmp1160
	.long	.Ltmp1169
	.long	.Ltmp1174
	.long	0
	.long	0
.Ldebug_ranges214:
	.long	.Ltmp1107
	.long	.Ltmp1108
	.long	.Ltmp1117
	.long	.Ltmp1118
	.long	.Ltmp1122
	.long	.Ltmp1123
	.long	0
	.long	0
.Ldebug_ranges215:
	.long	.Ltmp1108
	.long	.Ltmp1109
	.long	.Ltmp1110
	.long	.Ltmp1111
	.long	.Ltmp1113
	.long	.Ltmp1114
	.long	.Ltmp1118
	.long	.Ltmp1119
	.long	.Ltmp1123
	.long	.Ltmp1124
	.long	.Ltmp1125
	.long	.Ltmp1126
	.long	.Ltmp1127
	.long	.Ltmp1128
	.long	0
	.long	0
.Ldebug_ranges216:
	.long	.Ltmp1111
	.long	.Ltmp1112
	.long	.Ltmp1114
	.long	.Ltmp1115
	.long	.Ltmp1119
	.long	.Ltmp1120
	.long	.Ltmp1128
	.long	.Ltmp1129
	.long	0
	.long	0
.Ldebug_ranges217:
	.long	.Ltmp1115
	.long	.Ltmp1116
	.long	.Ltmp1120
	.long	.Ltmp1121
	.long	.Ltmp1126
	.long	.Ltmp1127
	.long	0
	.long	0
.Ldebug_ranges218:
	.long	.Ltmp1130
	.long	.Ltmp1131
	.long	.Ltmp1158
	.long	.Ltmp1159
	.long	.Ltmp1169
	.long	.Ltmp1170
	.long	.Ltmp1171
	.long	.Ltmp1173
	.long	0
	.long	0
.Ldebug_ranges219:
	.long	.Ltmp1130
	.long	.Ltmp1131
	.long	.Ltmp1158
	.long	.Ltmp1159
	.long	.Ltmp1169
	.long	.Ltmp1170
	.long	.Ltmp1171
	.long	.Ltmp1173
	.long	0
	.long	0
.Ldebug_ranges220:
	.long	.Ltmp1130
	.long	.Ltmp1131
	.long	.Ltmp1158
	.long	.Ltmp1159
	.long	.Ltmp1169
	.long	.Ltmp1170
	.long	.Ltmp1171
	.long	.Ltmp1173
	.long	0
	.long	0
.Ldebug_ranges221:
	.long	.Ltmp1132
	.long	.Ltmp1158
	.long	.Ltmp1174
	.long	.Ltmp1181
	.long	0
	.long	0
.Ldebug_ranges222:
	.long	.Ltmp1132
	.long	.Ltmp1158
	.long	.Ltmp1174
	.long	.Ltmp1181
	.long	0
	.long	0
.Ldebug_ranges223:
	.long	.Ltmp1132
	.long	.Ltmp1133
	.long	.Ltmp1144
	.long	.Ltmp1145
	.long	.Ltmp1149
	.long	.Ltmp1150
	.long	0
	.long	0
.Ldebug_ranges224:
	.long	.Ltmp1133
	.long	.Ltmp1134
	.long	.Ltmp1135
	.long	.Ltmp1136
	.long	.Ltmp1138
	.long	.Ltmp1139
	.long	.Ltmp1140
	.long	.Ltmp1141
	.long	.Ltmp1145
	.long	.Ltmp1146
	.long	.Ltmp1150
	.long	.Ltmp1151
	.long	.Ltmp1152
	.long	.Ltmp1153
	.long	.Ltmp1154
	.long	.Ltmp1155
	.long	0
	.long	0
.Ldebug_ranges225:
	.long	.Ltmp1136
	.long	.Ltmp1137
	.long	.Ltmp1142
	.long	.Ltmp1143
	.long	.Ltmp1147
	.long	.Ltmp1148
	.long	.Ltmp1155
	.long	.Ltmp1156
	.long	0
	.long	0
.Ldebug_ranges226:
	.long	.Ltmp1141
	.long	.Ltmp1142
	.long	.Ltmp1146
	.long	.Ltmp1147
	.long	.Ltmp1153
	.long	.Ltmp1154
	.long	0
	.long	0
.Ldebug_ranges227:
	.long	.Ltmp1157
	.long	.Ltmp1158
	.long	.Ltmp1174
	.long	.Ltmp1175
	.long	.Ltmp1176
	.long	.Ltmp1177
	.long	.Ltmp1178
	.long	.Ltmp1180
	.long	0
	.long	0
.Ldebug_ranges228:
	.long	.Ltmp1157
	.long	.Ltmp1158
	.long	.Ltmp1174
	.long	.Ltmp1175
	.long	.Ltmp1176
	.long	.Ltmp1177
	.long	.Ltmp1178
	.long	.Ltmp1180
	.long	0
	.long	0
.Ldebug_ranges229:
	.long	.Ltmp1157
	.long	.Ltmp1158
	.long	.Ltmp1174
	.long	.Ltmp1175
	.long	.Ltmp1176
	.long	.Ltmp1177
	.long	.Ltmp1178
	.long	.Ltmp1180
	.long	0
	.long	0
.Ldebug_ranges230:
	.long	.Ltmp1185
	.long	.Ltmp1187
	.long	.Ltmp1210
	.long	.Ltmp1211
	.long	0
	.long	0
.Ldebug_ranges231:
	.long	.Ltmp1185
	.long	.Ltmp1187
	.long	.Ltmp1210
	.long	.Ltmp1211
	.long	0
	.long	0
.Ldebug_ranges232:
	.long	.Ltmp1188
	.long	.Ltmp1189
	.long	.Ltmp1190
	.long	.Ltmp1191
	.long	.Ltmp1192
	.long	.Ltmp1193
	.long	.Ltmp1194
	.long	.Ltmp1195
	.long	.Ltmp1196
	.long	.Ltmp1197
	.long	0
	.long	0
.Ldebug_ranges233:
	.long	.Ltmp1201
	.long	.Ltmp1202
	.long	.Ltmp1208
	.long	.Ltmp1209
	.long	0
	.long	0
.Ldebug_ranges234:
	.long	.Ltmp1203
	.long	.Ltmp1205
	.long	.Ltmp1206
	.long	.Ltmp1207
	.long	0
	.long	0
.Ldebug_ranges235:
	.long	.Ltmp1203
	.long	.Ltmp1204
	.long	.Ltmp1206
	.long	.Ltmp1207
	.long	0
	.long	0
.Ldebug_ranges236:
	.long	.Ltmp1214
	.long	.Ltmp1241
	.long	.Ltmp1242
	.long	.Ltmp1243
	.long	0
	.long	0
.Ldebug_ranges237:
	.long	.Ltmp1215
	.long	.Ltmp1241
	.long	.Ltmp1242
	.long	.Ltmp1243
	.long	0
	.long	0
.Ldebug_ranges238:
	.long	.Ltmp1216
	.long	.Ltmp1217
	.long	.Ltmp1218
	.long	.Ltmp1219
	.long	.Ltmp1220
	.long	.Ltmp1221
	.long	0
	.long	0
.Ldebug_ranges239:
	.long	.Ltmp1228
	.long	.Ltmp1229
	.long	.Ltmp1230
	.long	.Ltmp1233
	.long	.Ltmp1234
	.long	.Ltmp1238
	.long	0
	.long	0
.Ldebug_ranges240:
	.long	.Ltmp1228
	.long	.Ltmp1229
	.long	.Ltmp1230
	.long	.Ltmp1233
	.long	.Ltmp1234
	.long	.Ltmp1238
	.long	0
	.long	0
.Ldebug_ranges241:
	.long	.Ltmp1231
	.long	.Ltmp1232
	.long	.Ltmp1234
	.long	.Ltmp1235
	.long	.Ltmp1236
	.long	.Ltmp1237
	.long	0
	.long	0
.Ldebug_ranges242:
	.long	.Ltmp1231
	.long	.Ltmp1232
	.long	.Ltmp1234
	.long	.Ltmp1235
	.long	.Ltmp1236
	.long	.Ltmp1237
	.long	0
	.long	0
.Ldebug_ranges243:
	.long	.Ltmp1233
	.long	.Ltmp1234
	.long	.Ltmp1238
	.long	.Ltmp1239
	.long	0
	.long	0
.Ldebug_ranges244:
	.long	.Ltmp1244
	.long	.Ltmp1245
	.long	.Ltmp1246
	.long	.Ltmp1248
	.long	.Ltmp1249
	.long	.Ltmp1254
	.long	.Ltmp1255
	.long	.Ltmp1256
	.long	0
	.long	0
.Ldebug_ranges245:
	.long	.Ltmp1244
	.long	.Ltmp1245
	.long	.Ltmp1246
	.long	.Ltmp1248
	.long	.Ltmp1249
	.long	.Ltmp1254
	.long	.Ltmp1255
	.long	.Ltmp1256
	.long	0
	.long	0
.Ldebug_ranges246:
	.long	.Ltmp1244
	.long	.Ltmp1245
	.long	.Ltmp1246
	.long	.Ltmp1247
	.long	.Ltmp1250
	.long	.Ltmp1251
	.long	.Ltmp1252
	.long	.Ltmp1253
	.long	0
	.long	0
.Ldebug_ranges247:
	.long	.Ltmp1262
	.long	.Ltmp1267
	.long	.Ltmp1268
	.long	.Ltmp1274
	.long	.Ltmp1275
	.long	.Ltmp1277
	.long	0
	.long	0
.Ldebug_ranges248:
	.long	.Ltmp1262
	.long	.Ltmp1263
	.long	.Ltmp1264
	.long	.Ltmp1266
	.long	.Ltmp1268
	.long	.Ltmp1273
	.long	.Ltmp1275
	.long	.Ltmp1276
	.long	0
	.long	0
.Ldebug_ranges249:
	.long	.Ltmp1262
	.long	.Ltmp1263
	.long	.Ltmp1264
	.long	.Ltmp1266
	.long	.Ltmp1268
	.long	.Ltmp1273
	.long	.Ltmp1275
	.long	.Ltmp1276
	.long	0
	.long	0
.Ldebug_ranges250:
	.long	.Ltmp1262
	.long	.Ltmp1263
	.long	.Ltmp1264
	.long	.Ltmp1265
	.long	.Ltmp1269
	.long	.Ltmp1270
	.long	.Ltmp1271
	.long	.Ltmp1272
	.long	0
	.long	0
.Ldebug_ranges251:
	.long	.Ltmp1292
	.long	.Ltmp1293
	.long	.Ltmp1294
	.long	.Ltmp1313
	.long	0
	.long	0
.Ldebug_ranges252:
	.long	.Ltmp1295
	.long	.Ltmp1296
	.long	.Ltmp1297
	.long	.Ltmp1298
	.long	.Ltmp1299
	.long	.Ltmp1300
	.long	0
	.long	0
.Ldebug_ranges253:
	.long	.Ltmp1303
	.long	.Ltmp1304
	.long	.Ltmp1305
	.long	.Ltmp1307
	.long	.Ltmp1308
	.long	.Ltmp1309
	.long	.Ltmp1310
	.long	.Ltmp1311
	.long	0
	.long	0
.Ldebug_ranges254:
	.long	.Ltmp1303
	.long	.Ltmp1304
	.long	.Ltmp1305
	.long	.Ltmp1307
	.long	.Ltmp1308
	.long	.Ltmp1309
	.long	.Ltmp1310
	.long	.Ltmp1311
	.long	0
	.long	0
.Ldebug_ranges255:
	.long	.Ltmp1305
	.long	.Ltmp1306
	.long	.Ltmp1310
	.long	.Ltmp1311
	.long	0
	.long	0
.Ldebug_ranges256:
	.long	.Ltmp1305
	.long	.Ltmp1306
	.long	.Ltmp1310
	.long	.Ltmp1311
	.long	0
	.long	0
.Ldebug_ranges257:
	.long	.Ltmp1327
	.long	.Ltmp1329
	.long	.Ltmp1330
	.long	.Ltmp1331
	.long	0
	.long	0
.Ldebug_ranges258:
	.long	.Ltmp1346
	.long	.Ltmp1356
	.long	.Ltmp1379
	.long	.Ltmp1380
	.long	.Ltmp1381
	.long	.Ltmp1382
	.long	.Ltmp1383
	.long	.Ltmp1384
	.long	0
	.long	0
.Ldebug_ranges259:
	.long	.Ltmp1347
	.long	.Ltmp1348
	.long	.Ltmp1349
	.long	.Ltmp1350
	.long	.Ltmp1351
	.long	.Ltmp1352
	.long	.Ltmp1353
	.long	.Ltmp1354
	.long	.Ltmp1355
	.long	.Ltmp1356
	.long	0
	.long	0
.Ldebug_ranges260:
	.long	.Ltmp1359
	.long	.Ltmp1360
	.long	.Ltmp1361
	.long	.Ltmp1362
	.long	.Ltmp1364
	.long	.Ltmp1365
	.long	0
	.long	0
.Ldebug_ranges261:
	.long	.Ltmp1366
	.long	.Ltmp1367
	.long	.Ltmp1387
	.long	.Ltmp1388
	.long	0
	.long	0
.Ldebug_ranges262:
	.long	.Ltmp1366
	.long	.Ltmp1367
	.long	.Ltmp1387
	.long	.Ltmp1388
	.long	0
	.long	0
.Ldebug_ranges263:
	.long	.Ltmp1367
	.long	.Ltmp1368
	.long	.Ltmp1369
	.long	.Ltmp1379
	.long	.Ltmp1385
	.long	.Ltmp1386
	.long	0
	.long	0
.Ldebug_ranges264:
	.long	.Ltmp1367
	.long	.Ltmp1368
	.long	.Ltmp1370
	.long	.Ltmp1371
	.long	.Ltmp1372
	.long	.Ltmp1373
	.long	.Ltmp1374
	.long	.Ltmp1375
	.long	.Ltmp1376
	.long	.Ltmp1377
	.long	.Ltmp1378
	.long	.Ltmp1379
	.long	0
	.long	0
.Ldebug_ranges265:
	.long	.Ltmp1397
	.long	.Ltmp1398
	.long	.Ltmp1399
	.long	.Ltmp1400
	.long	.Ltmp1401
	.long	.Ltmp1402
	.long	.Ltmp1403
	.long	.Ltmp1404
	.long	0
	.long	0
.Ldebug_ranges266:
	.long	.Ltmp1428
	.long	.Ltmp1460
	.long	.Ltmp1461
	.long	.Ltmp1462
	.long	0
	.long	0
.Ldebug_ranges267:
	.long	.Ltmp1428
	.long	.Ltmp1429
	.long	.Ltmp1438
	.long	.Ltmp1439
	.long	.Ltmp1443
	.long	.Ltmp1444
	.long	0
	.long	0
.Ldebug_ranges268:
	.long	.Ltmp1429
	.long	.Ltmp1430
	.long	.Ltmp1431
	.long	.Ltmp1432
	.long	.Ltmp1434
	.long	.Ltmp1435
	.long	.Ltmp1439
	.long	.Ltmp1440
	.long	.Ltmp1444
	.long	.Ltmp1445
	.long	.Ltmp1446
	.long	.Ltmp1447
	.long	.Ltmp1448
	.long	.Ltmp1449
	.long	0
	.long	0
.Ldebug_ranges269:
	.long	.Ltmp1432
	.long	.Ltmp1433
	.long	.Ltmp1435
	.long	.Ltmp1436
	.long	.Ltmp1440
	.long	.Ltmp1441
	.long	.Ltmp1449
	.long	.Ltmp1450
	.long	0
	.long	0
.Ldebug_ranges270:
	.long	.Ltmp1436
	.long	.Ltmp1437
	.long	.Ltmp1441
	.long	.Ltmp1442
	.long	.Ltmp1447
	.long	.Ltmp1448
	.long	0
	.long	0
.Ldebug_ranges271:
	.long	.Ltmp1451
	.long	.Ltmp1452
	.long	.Ltmp1453
	.long	.Ltmp1454
	.long	.Ltmp1455
	.long	.Ltmp1457
	.long	.Ltmp1458
	.long	.Ltmp1459
	.long	.Ltmp1461
	.long	.Ltmp1462
	.long	0
	.long	0
.Ldebug_ranges272:
	.long	.Ltmp1451
	.long	.Ltmp1452
	.long	.Ltmp1453
	.long	.Ltmp1454
	.long	.Ltmp1455
	.long	.Ltmp1457
	.long	.Ltmp1458
	.long	.Ltmp1459
	.long	.Ltmp1461
	.long	.Ltmp1462
	.long	0
	.long	0
.Ldebug_ranges273:
	.long	.Ltmp1451
	.long	.Ltmp1452
	.long	.Ltmp1453
	.long	.Ltmp1454
	.long	.Ltmp1455
	.long	.Ltmp1457
	.long	.Ltmp1458
	.long	.Ltmp1459
	.long	.Ltmp1461
	.long	.Ltmp1462
	.long	0
	.long	0
.Ldebug_ranges274:
	.long	.Ltmp1456
	.long	.Ltmp1457
	.long	.Ltmp1458
	.long	.Ltmp1459
	.long	0
	.long	0
.Ldebug_ranges275:
	.long	.Ltmp1456
	.long	.Ltmp1457
	.long	.Ltmp1458
	.long	.Ltmp1459
	.long	0
	.long	0
.Ldebug_ranges276:
	.long	.Ltmp1471
	.long	.Ltmp1503
	.long	.Ltmp1504
	.long	.Ltmp1505
	.long	0
	.long	0
.Ldebug_ranges277:
	.long	.Ltmp1471
	.long	.Ltmp1472
	.long	.Ltmp1481
	.long	.Ltmp1482
	.long	.Ltmp1486
	.long	.Ltmp1487
	.long	0
	.long	0
.Ldebug_ranges278:
	.long	.Ltmp1472
	.long	.Ltmp1473
	.long	.Ltmp1474
	.long	.Ltmp1475
	.long	.Ltmp1477
	.long	.Ltmp1478
	.long	.Ltmp1482
	.long	.Ltmp1483
	.long	.Ltmp1487
	.long	.Ltmp1488
	.long	.Ltmp1489
	.long	.Ltmp1490
	.long	.Ltmp1491
	.long	.Ltmp1492
	.long	0
	.long	0
.Ldebug_ranges279:
	.long	.Ltmp1475
	.long	.Ltmp1476
	.long	.Ltmp1478
	.long	.Ltmp1479
	.long	.Ltmp1483
	.long	.Ltmp1484
	.long	.Ltmp1492
	.long	.Ltmp1493
	.long	0
	.long	0
.Ldebug_ranges280:
	.long	.Ltmp1479
	.long	.Ltmp1480
	.long	.Ltmp1484
	.long	.Ltmp1485
	.long	.Ltmp1490
	.long	.Ltmp1491
	.long	0
	.long	0
.Ldebug_ranges281:
	.long	.Ltmp1494
	.long	.Ltmp1495
	.long	.Ltmp1496
	.long	.Ltmp1497
	.long	.Ltmp1498
	.long	.Ltmp1500
	.long	.Ltmp1501
	.long	.Ltmp1502
	.long	.Ltmp1504
	.long	.Ltmp1505
	.long	0
	.long	0
.Ldebug_ranges282:
	.long	.Ltmp1494
	.long	.Ltmp1495
	.long	.Ltmp1496
	.long	.Ltmp1497
	.long	.Ltmp1498
	.long	.Ltmp1500
	.long	.Ltmp1501
	.long	.Ltmp1502
	.long	.Ltmp1504
	.long	.Ltmp1505
	.long	0
	.long	0
.Ldebug_ranges283:
	.long	.Ltmp1494
	.long	.Ltmp1495
	.long	.Ltmp1496
	.long	.Ltmp1497
	.long	.Ltmp1498
	.long	.Ltmp1500
	.long	.Ltmp1501
	.long	.Ltmp1502
	.long	.Ltmp1504
	.long	.Ltmp1505
	.long	0
	.long	0
.Ldebug_ranges284:
	.long	.Ltmp1499
	.long	.Ltmp1500
	.long	.Ltmp1501
	.long	.Ltmp1502
	.long	0
	.long	0
.Ldebug_ranges285:
	.long	.Ltmp1499
	.long	.Ltmp1500
	.long	.Ltmp1501
	.long	.Ltmp1502
	.long	0
	.long	0
.Ldebug_ranges286:
	.long	.Lfunc_begin64
	.long	.Lfunc_end64
	.long	.Lfunc_begin65
	.long	.Lfunc_end65
	.long	.Lfunc_begin66
	.long	.Lfunc_end66
	.long	.Lfunc_begin67
	.long	.Lfunc_end67
	.long	.Lfunc_begin68
	.long	.Lfunc_end68
	.long	.Lfunc_begin69
	.long	.Lfunc_end69
	.long	.Lfunc_begin70
	.long	.Lfunc_end70
	.long	.Lfunc_begin71
	.long	.Lfunc_end71
	.long	.Lfunc_begin72
	.long	.Lfunc_end72
	.long	.Lfunc_begin73
	.long	.Lfunc_end73
	.long	.Lfunc_begin74
	.long	.Lfunc_end74
	.long	.Lfunc_begin75
	.long	.Lfunc_end75
	.long	.Lfunc_begin76
	.long	.Lfunc_end76
	.long	.Lfunc_begin77
	.long	.Lfunc_end77
	.long	.Lfunc_begin78
	.long	.Lfunc_end78
	.long	.Lfunc_begin79
	.long	.Lfunc_end79
	.long	.Lfunc_begin80
	.long	.Lfunc_end80
	.long	.Lfunc_begin81
	.long	.Lfunc_end81
	.long	.Lfunc_begin82
	.long	.Lfunc_end82
	.long	.Lfunc_begin83
	.long	.Lfunc_end83
	.long	.Lfunc_begin84
	.long	.Lfunc_end84
	.long	.Lfunc_begin85
	.long	.Lfunc_end85
	.long	.Lfunc_begin86
	.long	.Lfunc_end86
	.long	.Lfunc_begin87
	.long	.Lfunc_end87
	.long	.Lfunc_begin88
	.long	.Lfunc_end88
	.long	.Lfunc_begin89
	.long	.Lfunc_end89
	.long	.Lfunc_begin90
	.long	.Lfunc_end90
	.long	.Lfunc_begin91
	.long	.Lfunc_end91
	.long	.Lfunc_begin92
	.long	.Lfunc_end92
	.long	.Lfunc_begin93
	.long	.Lfunc_end93
	.long	.Lfunc_begin94
	.long	.Lfunc_end94
	.long	.Lfunc_begin95
	.long	.Lfunc_end95
	.long	.Lfunc_begin96
	.long	.Lfunc_end96
	.long	.Lfunc_begin97
	.long	.Lfunc_end97
	.long	.Lfunc_begin98
	.long	.Lfunc_end98
	.long	.Lfunc_begin99
	.long	.Lfunc_end99
	.long	.Lfunc_begin100
	.long	.Lfunc_end100
	.long	.Lfunc_begin101
	.long	.Lfunc_end101
	.long	.Lfunc_begin102
	.long	.Lfunc_end102
	.long	.Lfunc_begin103
	.long	.Lfunc_end103
	.long	.Lfunc_begin104
	.long	.Lfunc_end104
	.long	.Lfunc_begin105
	.long	.Lfunc_end105
	.long	.Lfunc_begin106
	.long	.Lfunc_end106
	.long	.Lfunc_begin107
	.long	.Lfunc_end107
	.long	.Lfunc_begin108
	.long	.Lfunc_end108
	.long	.Lfunc_begin109
	.long	.Lfunc_end109
	.long	.Lfunc_begin110
	.long	.Lfunc_end110
	.long	.Lfunc_begin111
	.long	.Lfunc_end111
	.long	.Lfunc_begin112
	.long	.Lfunc_end112
	.long	.Lfunc_begin113
	.long	.Lfunc_end113
	.long	.Lfunc_begin114
	.long	.Lfunc_end114
	.long	.Lfunc_begin115
	.long	.Lfunc_end115
	.long	.Lfunc_begin116
	.long	.Lfunc_end116
	.long	.Lfunc_begin117
	.long	.Lfunc_end117
	.long	.Lfunc_begin118
	.long	.Lfunc_end118
	.long	.Lfunc_begin119
	.long	.Lfunc_end119
	.long	.Lfunc_begin120
	.long	.Lfunc_end120
	.long	.Lfunc_begin121
	.long	.Lfunc_end121
	.long	.Lfunc_begin122
	.long	.Lfunc_end122
	.long	.Lfunc_begin123
	.long	.Lfunc_end123
	.long	.Lfunc_begin124
	.long	.Lfunc_end124
	.long	.Lfunc_begin125
	.long	.Lfunc_end125
	.long	.Lfunc_begin126
	.long	.Lfunc_end126
	.long	.Lfunc_begin127
	.long	.Lfunc_end127
	.long	.Lfunc_begin128
	.long	.Lfunc_end128
	.long	.Lfunc_begin129
	.long	.Lfunc_end129
	.long	.Lfunc_begin130
	.long	.Lfunc_end130
	.long	.Lfunc_begin131
	.long	.Lfunc_end131
	.long	.Lfunc_begin132
	.long	.Lfunc_end132
	.long	.Lfunc_begin133
	.long	.Lfunc_end133
	.long	.Lfunc_begin134
	.long	.Lfunc_end134
	.long	.Lfunc_begin135
	.long	.Lfunc_end135
	.long	.Lfunc_begin136
	.long	.Lfunc_end136
	.long	0
	.long	0
	.section	.debug_str,"MS",%progbits,1
.Linfo_string0:
	.asciz	"clang LLVM (rustc version 1.60.0 (7737e0b5c 2022-04-04))"
.Linfo_string1:
	.asciz	"library/core/src/lib.rs/@/core.b1eca9fd-cgu.0"
.Linfo_string2:
	.asciz	"/rustc/7737e0b5c4103216d6fd8cf941b7ab9bdbaace7c/"
.Linfo_string3:
	.asciz	"core"
.Linfo_string4:
	.asciz	"ptr"
.Linfo_string5:
	.asciz	"core::ptr::read_volatile::h95159872326bf997"
.Linfo_string6:
	.asciz	"read_volatile<usize>"
.Linfo_string7:
	.asciz	"fmt"
.Linfo_string8:
	.asciz	"USIZE_MARKER"
.Linfo_string9:
	.asciz	"core::fmt::USIZE_MARKER::{{closure}}::h53f01571ba7b3ad0"
.Linfo_string10:
	.asciz	"{closure#0}"
.Linfo_string11:
	.asciz	"ops"
.Linfo_string12:
	.asciz	"function"
.Linfo_string13:
	.asciz	"FnOnce"
.Linfo_string14:
	.asciz	"num"
.Linfo_string15:
	.asciz	"dec2flt"
.Linfo_string16:
	.asciz	"common"
.Linfo_string17:
	.asciz	"BiasedFp"
.Linfo_string18:
	.asciz	"iter"
.Linfo_string19:
	.asciz	"range"
.Linfo_string20:
	.asciz	"{impl#2}"
.Linfo_string21:
	.asciz	"<core::ops::range::Range<T> as core::iter::range::RangeIteratorImpl>::spec_next::he52f3ccfebacbcce"
.Linfo_string22:
	.asciz	"spec_next<usize>"
.Linfo_string23:
	.asciz	"{impl#3}"
.Linfo_string24:
	.asciz	"core::iter::range::<impl core::iter::traits::iterator::Iterator for core::ops::range::Range<A>>::next::ha2731d6fc28213ce"
.Linfo_string25:
	.asciz	"next<usize>"
.Linfo_string26:
	.asciz	"decimal"
.Linfo_string27:
	.asciz	"Decimal"
.Linfo_string28:
	.asciz	"Arguments"
.Linfo_string29:
	.asciz	"core::fmt::Arguments::new_v1::hf60b4c678ef822ff"
.Linfo_string30:
	.asciz	"new_v1"
.Linfo_string31:
	.asciz	"panicking"
.Linfo_string32:
	.asciz	"{impl#10}"
.Linfo_string33:
	.asciz	"<u32 as core::fmt::num::DisplayInt>::to_u32::h95ad74d77fdbc795"
.Linfo_string34:
	.asciz	"to_u32"
.Linfo_string35:
	.asciz	"imp"
.Linfo_string36:
	.asciz	"core::fmt::num::imp::fmt_u32::h32ce005fa95a79bf"
.Linfo_string37:
	.asciz	"fmt_u32"
.Linfo_string38:
	.asciz	"intrinsics"
.Linfo_string39:
	.asciz	"core::intrinsics::copy_nonoverlapping::h7d46f6a1b554d4b8"
.Linfo_string40:
	.asciz	"copy_nonoverlapping<u8>"
.Linfo_string41:
	.asciz	"mut_ptr"
.Linfo_string42:
	.asciz	"{impl#0}"
.Linfo_string43:
	.asciz	"core::ptr::mut_ptr::<impl *mut T>::offset::h41534bab43a6dd01"
.Linfo_string44:
	.asciz	"offset<u8>"
.Linfo_string45:
	.asciz	"{impl#5}"
.Linfo_string46:
	.asciz	"panic"
.Linfo_string47:
	.asciz	"panic_info"
.Linfo_string48:
	.asciz	"PanicInfo"
.Linfo_string49:
	.asciz	"core::panic::panic_info::PanicInfo::internal_constructor::h0486e550e1ab99ae"
.Linfo_string50:
	.asciz	"internal_constructor"
.Linfo_string51:
	.asciz	"any"
.Linfo_string52:
	.asciz	"Formatter"
.Linfo_string53:
	.asciz	"core::fmt::Formatter::sign_plus::h8d1e222203f0ab20"
.Linfo_string54:
	.asciz	"sign_plus"
.Linfo_string55:
	.asciz	"core::fmt::Formatter::padding::hb60fbdbdbf21b06f"
.Linfo_string56:
	.asciz	"padding"
.Linfo_string57:
	.asciz	"slice"
.Linfo_string58:
	.asciz	"{impl#173}"
.Linfo_string59:
	.asciz	"<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next::h0961d645961642b5"
.Linfo_string60:
	.asciz	"next<u8>"
.Linfo_string61:
	.asciz	"traits"
.Linfo_string62:
	.asciz	"iterator"
.Linfo_string63:
	.asciz	"Iterator"
.Linfo_string64:
	.asciz	"core::iter::traits::iterator::Iterator::fold::h48ff87da424d96ca"
.Linfo_string65:
	.asciz	"fold<core::slice::iter::Iter<u8>, usize, core::iter::adapters::map::map_fold::{closure_env#0}<&u8, usize, usize, core::iter::adapters::filter::{impl#2}::count::to_usize::{closure_env#0}<&u8, core::str::count::char_count_general_case::{closure_env#0}>, core::iter::traits::accum::{impl#48}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<u8>, core::iter::adapters::filter::{impl#2}::count::to_usize::{closure_env#0}<&u8, core::str::count::char_count_general_case::{closure_env#0}>>>>>"
.Linfo_string66:
	.asciz	"adapters"
.Linfo_string67:
	.asciz	"map"
.Linfo_string68:
	.asciz	"<core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold::h50fa1aaebb9d5e82"
.Linfo_string69:
	.asciz	"fold<usize, core::slice::iter::Iter<u8>, core::iter::adapters::filter::{impl#2}::count::to_usize::{closure_env#0}<&u8, core::str::count::char_count_general_case::{closure_env#0}>, usize, core::iter::traits::accum::{impl#48}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<u8>, core::iter::adapters::filter::{impl#2}::count::to_usize::{closure_env#0}<&u8, core::str::count::char_count_general_case::{closure_env#0}>>>>"
.Linfo_string70:
	.asciz	"accum"
.Linfo_string71:
	.asciz	"{impl#48}"
.Linfo_string72:
	.asciz	"<usize as core::iter::traits::accum::Sum>::sum::h3fbf1cce35beda93"
.Linfo_string73:
	.asciz	"sum<core::iter::adapters::map::Map<core::slice::iter::Iter<u8>, core::iter::adapters::filter::{impl#2}::count::to_usize::{closure_env#0}<&u8, core::str::count::char_count_general_case::{closure_env#0}>>>"
.Linfo_string74:
	.asciz	"core::iter::traits::iterator::Iterator::sum::h4bbd7df74ca5a3f5"
.Linfo_string75:
	.asciz	"sum<core::iter::adapters::map::Map<core::slice::iter::Iter<u8>, core::iter::adapters::filter::{impl#2}::count::to_usize::{closure_env#0}<&u8, core::str::count::char_count_general_case::{closure_env#0}>>, usize>"
.Linfo_string76:
	.asciz	"filter"
.Linfo_string77:
	.asciz	"<core::iter::adapters::filter::Filter<I,P> as core::iter::traits::iterator::Iterator>::count::h8ebed5227828cc3a"
.Linfo_string78:
	.asciz	"count<core::slice::iter::Iter<u8>, core::str::count::char_count_general_case::{closure_env#0}>"
.Linfo_string79:
	.asciz	"str"
.Linfo_string80:
	.asciz	"count"
.Linfo_string81:
	.asciz	"core::str::count::char_count_general_case::h33e35c43c1d60241"
.Linfo_string82:
	.asciz	"char_count_general_case"
.Linfo_string83:
	.asciz	"core::str::count::count_chars::h20aaed0169fe4b66"
.Linfo_string84:
	.asciz	"count_chars"
.Linfo_string85:
	.asciz	"<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::count::h9a55420bbf81a084"
.Linfo_string86:
	.asciz	"validations"
.Linfo_string87:
	.asciz	"core::str::validations::utf8_is_cont_byte::h22445d5f1b6b3089"
.Linfo_string88:
	.asciz	"utf8_is_cont_byte"
.Linfo_string89:
	.asciz	"core::str::count::char_count_general_case::{{closure}}::h05eab85dd46d1fcd"
.Linfo_string90:
	.asciz	"to_usize"
.Linfo_string91:
	.asciz	"<core::iter::adapters::filter::Filter<I,P> as core::iter::traits::iterator::Iterator>::count::to_usize::{{closure}}::h88ede2bb3433e31c"
.Linfo_string92:
	.asciz	"{closure#0}<&u8, core::str::count::char_count_general_case::{closure_env#0}>"
.Linfo_string93:
	.asciz	"map_fold"
.Linfo_string94:
	.asciz	"core::iter::adapters::map::map_fold::{{closure}}::h7e559ab72d93c270"
.Linfo_string95:
	.asciz	"{closure#0}<&u8, usize, usize, core::iter::adapters::filter::{impl#2}::count::to_usize::{closure_env#0}<&u8, core::str::count::char_count_general_case::{closure_env#0}>, core::iter::traits::accum::{impl#48}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<u8>, core::iter::adapters::filter::{impl#2}::count::to_usize::{closure_env#0}<&u8, core::str::count::char_count_general_case::{closure_env#0}>>>>"
.Linfo_string96:
	.asciz	"sum"
.Linfo_string97:
	.asciz	"<usize as core::iter::traits::accum::Sum>::sum::{{closure}}::he13f6f7284f39c69"
.Linfo_string98:
	.asciz	"{closure#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<u8>, core::iter::adapters::filter::{impl#2}::count::to_usize::{closure_env#0}<&u8, core::str::count::char_count_general_case::{closure_env#0}>>>"
.Linfo_string99:
	.asciz	"mem"
.Linfo_string100:
	.asciz	"core::mem::replace::h1f40d6d88db9a67e"
.Linfo_string101:
	.asciz	"replace<char>"
.Linfo_string102:
	.asciz	"core::mem::replace::h97a967510c688d3f"
.Linfo_string103:
	.asciz	"replace<core::fmt::rt::v1::Alignment>"
.Linfo_string104:
	.asciz	"core::ptr::write::hdddcacea6da2bfe2"
.Linfo_string105:
	.asciz	"write<char>"
.Linfo_string106:
	.asciz	"core::ptr::write::h38a1fcb0d6719660"
.Linfo_string107:
	.asciz	"write<core::fmt::rt::v1::Alignment>"
.Linfo_string108:
	.asciz	"cmp"
.Linfo_string109:
	.asciz	"impls"
.Linfo_string110:
	.asciz	"{impl#54}"
.Linfo_string111:
	.asciz	"core::cmp::impls::<impl core::cmp::PartialOrd for usize>::lt::h77d6713d13c15075"
.Linfo_string112:
	.asciz	"lt"
.Linfo_string113:
	.asciz	"result"
.Linfo_string114:
	.asciz	"{impl#27}"
.Linfo_string115:
	.asciz	"<core::result::Result<T,E> as core::ops::try_trait::Try>::branch::hf7ae8598117381a4"
.Linfo_string116:
	.asciz	"branch<core::fmt::PostPadding, core::fmt::Error>"
.Linfo_string117:
	.asciz	"PostPadding"
.Linfo_string118:
	.asciz	"core::fmt::PostPadding::write::ha001622f54577177"
.Linfo_string119:
	.asciz	"write"
.Linfo_string120:
	.asciz	"{impl#11}"
.Linfo_string121:
	.asciz	"core::num::<impl usize>::unchecked_add::h1fdcbfc762235464"
.Linfo_string122:
	.asciz	"unchecked_add"
.Linfo_string123:
	.asciz	"{impl#35}"
.Linfo_string124:
	.asciz	"<usize as core::iter::range::Step>::forward_unchecked::h7bdbd7e78a11109c"
.Linfo_string125:
	.asciz	"forward_unchecked"
.Linfo_string126:
	.asciz	"{impl#9}"
.Linfo_string127:
	.asciz	"pad_integral"
.Linfo_string128:
	.asciz	"core::num::dec2flt::decimal::number_of_digits_decimal_left_shift::h3d267e2d820950cf"
.Linfo_string129:
	.asciz	"number_of_digits_decimal_left_shift"
.Linfo_string130:
	.asciz	"index"
.Linfo_string131:
	.asciz	"<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index::hedb39ae88bc7f5a8"
.Linfo_string132:
	.asciz	"index<u8>"
.Linfo_string133:
	.asciz	"core::slice::index::<impl core::ops::index::Index<I> for [T]>::index::hafe605b28992b30c"
.Linfo_string134:
	.asciz	"index<u8, core::ops::range::RangeFrom<usize>>"
.Linfo_string135:
	.asciz	"array"
.Linfo_string136:
	.asciz	"{impl#15}"
.Linfo_string137:
	.asciz	"core::array::<impl core::ops::index::Index<I> for [T; N]>::index::he3efbec04b7fda2b"
.Linfo_string138:
	.asciz	"index<u8, core::ops::range::RangeFrom<usize>, 1308>"
.Linfo_string139:
	.asciz	"take"
.Linfo_string140:
	.asciz	"{impl#1}"
.Linfo_string141:
	.asciz	"<core::iter::adapters::take::Take<I> as core::iter::traits::iterator::Iterator>::next::h741329cc817ae6bd"
.Linfo_string142:
	.asciz	"next<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<u8>>>"
.Linfo_string143:
	.asciz	"enumerate"
.Linfo_string144:
	.asciz	"<core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next::h9a6f3777506ae600"
.Linfo_string145:
	.asciz	"next<core::slice::iter::Iter<u8>>"
.Linfo_string146:
	.asciz	"core::num::dec2flt::decimal::Decimal::trim::h6af64e61164a343b"
.Linfo_string147:
	.asciz	"trim"
.Linfo_string148:
	.asciz	"<core::num::dec2flt::decimal::Decimal as core::default::Default>::default::h376969b619fe8852"
.Linfo_string149:
	.asciz	"default"
.Linfo_string150:
	.asciz	"ByteSlice"
.Linfo_string151:
	.asciz	"core::num::dec2flt::common::ByteSlice::skip_chars::h8c2469a3499d6bbd"
.Linfo_string152:
	.asciz	"skip_chars<[u8]>"
.Linfo_string153:
	.asciz	"option"
.Linfo_string154:
	.asciz	"{impl#41}"
.Linfo_string155:
	.asciz	"<core::option::Option<T> as core::cmp::PartialEq>::eq::he67180c672a98b0d"
.Linfo_string156:
	.asciz	"eq<&u8>"
.Linfo_string157:
	.asciz	"core::num::dec2flt::common::ByteSlice::first_is::h04e89f57172d55c0"
.Linfo_string158:
	.asciz	"first_is<[u8]>"
.Linfo_string159:
	.asciz	"core::slice::<impl [T]>::first::h29c9d4e32f8cca33"
.Linfo_string160:
	.asciz	"first<u8>"
.Linfo_string161:
	.asciz	"{impl#6}"
.Linfo_string162:
	.asciz	"core::num::<impl u8>::wrapping_sub::h93cf3bf3ebf8a4c0"
.Linfo_string163:
	.asciz	"wrapping_sub"
.Linfo_string164:
	.asciz	"core::num::dec2flt::common::parse_digits::ha5d352d6e46417c3"
.Linfo_string165:
	.asciz	"parse_digits<core::num::dec2flt::decimal::parse_decimal::{closure_env#0}>"
.Linfo_string166:
	.asciz	"core::num::dec2flt::decimal::Decimal::try_add_digit::h6240d473a13c52c3"
.Linfo_string167:
	.asciz	"try_add_digit"
.Linfo_string168:
	.asciz	"parse_decimal"
.Linfo_string169:
	.asciz	"core::num::dec2flt::decimal::parse_decimal::{{closure}}::h8b8dea6bcf33a12b"
.Linfo_string170:
	.asciz	"const_ptr"
.Linfo_string171:
	.asciz	"core::ptr::const_ptr::<impl *const T>::offset::hb3dcce17a8663718"
.Linfo_string172:
	.asciz	"core::ptr::const_ptr::<impl *const T>::add::h51344497692e3967"
.Linfo_string173:
	.asciz	"add<u8>"
.Linfo_string174:
	.asciz	"<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked::he412cfda5204a93b"
.Linfo_string175:
	.asciz	"get_unchecked<u8>"
.Linfo_string176:
	.asciz	"<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked::h7923dd5e05bbaaca"
.Linfo_string177:
	.asciz	"core::num::dec2flt::common::ByteSlice::advance::he642c7321863f3f6"
.Linfo_string178:
	.asciz	"advance<[u8]>"
.Linfo_string179:
	.asciz	"core::num::dec2flt::common::ByteSlice::first_is2::h7523b3f8479f816f"
.Linfo_string180:
	.asciz	"first_is2<[u8]>"
.Linfo_string181:
	.asciz	"core::ptr::read_unaligned::h90120824fc04465a"
.Linfo_string182:
	.asciz	"read_unaligned<u64>"
.Linfo_string183:
	.asciz	"core::num::dec2flt::common::ByteSlice::read_u64_unchecked::ha874a7c2a0532d25"
.Linfo_string184:
	.asciz	"read_u64_unchecked<[u8]>"
.Linfo_string185:
	.asciz	"core::num::<impl u64>::wrapping_sub::h8b606e6966453814"
.Linfo_string186:
	.asciz	"core::num::dec2flt::common::is_8digits::h2a517d830d1b1a69"
.Linfo_string187:
	.asciz	"is_8digits"
.Linfo_string188:
	.asciz	"core::num::<impl u64>::wrapping_add::h3effcd5b86248bf4"
.Linfo_string189:
	.asciz	"wrapping_add"
.Linfo_string190:
	.asciz	"<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index_mut::h9337e4d1507bd131"
.Linfo_string191:
	.asciz	"index_mut<u8>"
.Linfo_string192:
	.asciz	"core::slice::index::<impl core::ops::index::IndexMut<I> for [T]>::index_mut::hf3c32b3f2b332493"
.Linfo_string193:
	.asciz	"index_mut<u8, core::ops::range::RangeFrom<usize>>"
.Linfo_string194:
	.asciz	"{impl#16}"
.Linfo_string195:
	.asciz	"core::array::<impl core::ops::index::IndexMut<I> for [T; N]>::index_mut::hfe717b8f670657e1"
.Linfo_string196:
	.asciz	"index_mut<u8, core::ops::range::RangeFrom<usize>, 768>"
.Linfo_string197:
	.asciz	"core::ptr::mut_ptr::<impl *mut T>::add::h1e8da3fa9a927c48"
.Linfo_string198:
	.asciz	"<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut::h7326ff0a99f44b1d"
.Linfo_string199:
	.asciz	"get_unchecked_mut<u8>"
.Linfo_string200:
	.asciz	"<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked_mut::hb4d97686faa5f1c8"
.Linfo_string201:
	.asciz	"core::ptr::write_unaligned::hfba0c318798f4fe6"
.Linfo_string202:
	.asciz	"write_unaligned<u64>"
.Linfo_string203:
	.asciz	"ByteSliceMut"
.Linfo_string204:
	.asciz	"core::num::dec2flt::common::ByteSliceMut::write_u64_unchecked::h26d244d239740754"
.Linfo_string205:
	.asciz	"write_u64_unchecked<[u8]>"
.Linfo_string206:
	.asciz	"core::num::dec2flt::common::parse_digits::h377a59132d61da57"
.Linfo_string207:
	.asciz	"parse_digits<core::num::dec2flt::decimal::parse_decimal::{closure_env#1}>"
.Linfo_string208:
	.asciz	"core::num::dec2flt::decimal::parse_decimal::{{closure}}::hf187759cecce25c4"
.Linfo_string209:
	.asciz	"{closure#1}"
.Linfo_string210:
	.asciz	"<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::index::h1896be355e1e6186"
.Linfo_string211:
	.asciz	"{impl#4}"
.Linfo_string212:
	.asciz	"<core::ops::range::RangeTo<usize> as core::slice::index::SliceIndex<[T]>>::index::hdc39c64994b8377a"
.Linfo_string213:
	.asciz	"core::slice::index::<impl core::ops::index::Index<I> for [T]>::index::hd07836a16feca5d9"
.Linfo_string214:
	.asciz	"index<u8, core::ops::range::RangeTo<usize>>"
.Linfo_string215:
	.asciz	"{impl#174}"
.Linfo_string216:
	.asciz	"<core::slice::iter::Iter<T> as core::iter::traits::double_ended::DoubleEndedIterator>::next_back::h26e7b33df2510412"
.Linfo_string217:
	.asciz	"next_back<u8>"
.Linfo_string218:
	.asciz	"rev"
.Linfo_string219:
	.asciz	"<core::iter::adapters::rev::Rev<I> as core::iter::traits::iterator::Iterator>::next::h39785c690d4d3e65"
.Linfo_string220:
	.asciz	"core::num::dec2flt::common::parse_digits::h8a41811cecb37f3f"
.Linfo_string221:
	.asciz	"parse_digits<core::num::dec2flt::decimal::parse_decimal::{closure_env#2}>"
.Linfo_string222:
	.asciz	"core::num::dec2flt::decimal::parse_decimal::{{closure}}::hc62dc65171afb85b"
.Linfo_string223:
	.asciz	"{closure#2}"
.Linfo_string224:
	.asciz	"float"
.Linfo_string225:
	.asciz	"f32"
.Linfo_string226:
	.asciz	"core::f32::<impl f32>::from_bits::h8f3eb1cd7bd0f59c"
.Linfo_string227:
	.asciz	"from_bits"
.Linfo_string228:
	.asciz	"core::num::<impl i32>::wrapping_mul::h460e62c0d2e24071"
.Linfo_string229:
	.asciz	"wrapping_mul"
.Linfo_string230:
	.asciz	"lemire"
.Linfo_string231:
	.asciz	"core::num::dec2flt::lemire::full_multiplication::h198d859dc33db832"
.Linfo_string232:
	.asciz	"full_multiplication"
.Linfo_string233:
	.asciz	"AsciiStr"
.Linfo_string234:
	.asciz	"core::num::dec2flt::common::AsciiStr::parse_digits::h217953a8b36f7456"
.Linfo_string235:
	.asciz	"parse_digits<core::num::dec2flt::parse::try_parse_digits::{closure_env#0}>"
.Linfo_string236:
	.asciz	"parse"
.Linfo_string237:
	.asciz	"core::num::dec2flt::parse::try_parse_digits::h6ed3ac1c98feca86"
.Linfo_string238:
	.asciz	"try_parse_digits"
.Linfo_string239:
	.asciz	"core::num::dec2flt::parse::parse_partial_number::h450012d2015ec169"
.Linfo_string240:
	.asciz	"parse_partial_number"
.Linfo_string241:
	.asciz	"core::num::<impl u64>::wrapping_mul::hb9225d89f740d9d3"
.Linfo_string242:
	.asciz	"core::num::dec2flt::parse::try_parse_digits::{{closure}}::h20354168363c6eae"
.Linfo_string243:
	.asciz	"{impl#22}"
.Linfo_string244:
	.asciz	"core::cmp::impls::<impl core::cmp::PartialEq for u8>::eq::h0d97db2e6fb9e03e"
.Linfo_string245:
	.asciz	"eq"
.Linfo_string246:
	.asciz	"core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq::heb33a9b734dbcee6"
.Linfo_string247:
	.asciz	"eq<u8, u8>"
.Linfo_string248:
	.asciz	"core::num::dec2flt::common::ByteSlice::first_is::hb32ec4109585d7d0"
.Linfo_string249:
	.asciz	"first_is<core::num::dec2flt::common::AsciiStr>"
.Linfo_string250:
	.asciz	"core::num::dec2flt::common::ByteSlice::offset_from::hcb2bbf2ce670f973"
.Linfo_string251:
	.asciz	"offset_from<core::num::dec2flt::common::AsciiStr>"
.Linfo_string252:
	.asciz	"core::slice::<impl [T]>::get_unchecked::h0d2db1d00e9ec764"
.Linfo_string253:
	.asciz	"get_unchecked<u8, core::ops::range::RangeFrom<usize>>"
.Linfo_string254:
	.asciz	"core::num::dec2flt::common::AsciiStr::step_by::h1279f747626728c6"
.Linfo_string255:
	.asciz	"step_by"
.Linfo_string256:
	.asciz	"core::num::dec2flt::common::AsciiStr::step::hf5e592a376dd7632"
.Linfo_string257:
	.asciz	"step"
.Linfo_string258:
	.asciz	"core::num::dec2flt::common::ByteSlice::read_u64::h9bcc21f25796dde4"
.Linfo_string259:
	.asciz	"read_u64<core::num::dec2flt::common::AsciiStr>"
.Linfo_string260:
	.asciz	"core::num::dec2flt::parse::try_parse_8digits::h967054055a9059a7"
.Linfo_string261:
	.asciz	"try_parse_8digits"
.Linfo_string262:
	.asciz	"core::num::dec2flt::common::ByteSlice::read_u64_unchecked::h6236d67c7e5ac23f"
.Linfo_string263:
	.asciz	"read_u64_unchecked<core::num::dec2flt::common::AsciiStr>"
.Linfo_string264:
	.asciz	"core::num::<impl u8>::saturating_sub::h9a3fb341cce0e5a2"
.Linfo_string265:
	.asciz	"saturating_sub"
.Linfo_string266:
	.asciz	"core::num::dec2flt::common::ByteSlice::first_is2::h58fa7a10464a97d7"
.Linfo_string267:
	.asciz	"first_is2<core::num::dec2flt::common::AsciiStr>"
.Linfo_string268:
	.asciz	"core::num::dec2flt::parse::try_parse_19digits::h9e98fb20465a9e1a"
.Linfo_string269:
	.asciz	"try_parse_19digits"
.Linfo_string270:
	.asciz	"core::num::dec2flt::parse::parse_8digits::hefc5cc6b4904f06b"
.Linfo_string271:
	.asciz	"parse_8digits"
.Linfo_string272:
	.asciz	"core::num::dec2flt::parse::parse_scientific::hcc387d45b45653cf"
.Linfo_string273:
	.asciz	"parse_scientific"
.Linfo_string274:
	.asciz	"core::num::dec2flt::common::ByteSlice::first_isdigit::h7e2987fb604cb5b2"
.Linfo_string275:
	.asciz	"first_isdigit<core::num::dec2flt::common::AsciiStr>"
.Linfo_string276:
	.asciz	"core::num::<impl u8>::is_ascii_digit::h73b2fdd360a4f80d"
.Linfo_string277:
	.asciz	"is_ascii_digit"
.Linfo_string278:
	.asciz	"core::num::dec2flt::parse::parse_scientific::{{closure}}::hb7d6f8d8c1075ca0"
.Linfo_string279:
	.asciz	"core::num::dec2flt::common::AsciiStr::parse_digits::h14a91f0ce5995945"
.Linfo_string280:
	.asciz	"parse_digits<core::num::dec2flt::parse::parse_scientific::{closure_env#0}>"
.Linfo_string281:
	.asciz	"core::iter::traits::iterator::Iterator::fold::he508506b2782a86c"
.Linfo_string282:
	.asciz	"fold<core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>, u8, core::num::dec2flt::common::ByteSlice::eq_ignore_case::{closure_env#0}<[u8]>>"
.Linfo_string283:
	.asciz	"core::num::dec2flt::common::ByteSlice::eq_ignore_case::h358df320a6e813bd"
.Linfo_string284:
	.asciz	"eq_ignore_case<[u8]>"
.Linfo_string285:
	.asciz	"eq_ignore_case"
.Linfo_string286:
	.asciz	"core::num::dec2flt::common::ByteSlice::eq_ignore_case::{{closure}}::h2cf6e74c40c196ad"
.Linfo_string287:
	.asciz	"{closure#0}<[u8]>"
.Linfo_string288:
	.asciz	"parse_partial_inf_nan"
.Linfo_string289:
	.asciz	"Iter"
.Linfo_string290:
	.asciz	"core::slice::iter::Iter<T>::new::h838c37463ef3eb62"
.Linfo_string291:
	.asciz	"new<u8>"
.Linfo_string292:
	.asciz	"core::slice::<impl [T]>::iter::h1159a39ad3617e63"
.Linfo_string293:
	.asciz	"iter<u8>"
.Linfo_string294:
	.asciz	"core::str::<impl str>::chars::hb758e3951696cb07"
.Linfo_string295:
	.asciz	"chars"
.Linfo_string296:
	.asciz	"core::str::<impl str>::char_indices::ha265486d455ce8aa"
.Linfo_string297:
	.asciz	"char_indices"
.Linfo_string298:
	.asciz	"core::str::validations::next_code_point::hb51417590b7ba42c"
.Linfo_string299:
	.asciz	"next_code_point<core::slice::iter::Iter<u8>>"
.Linfo_string300:
	.asciz	"<core::str::iter::Chars as core::iter::traits::iterator::Iterator>::next::hb5cf7f984f15a194"
.Linfo_string301:
	.asciz	"next"
.Linfo_string302:
	.asciz	"<core::str::iter::CharIndices as core::iter::traits::iterator::Iterator>::next::hfd8dcea3464e47b1"
.Linfo_string303:
	.asciz	"core::iter::traits::iterator::Iterator::nth::he5063273a5254599"
.Linfo_string304:
	.asciz	"nth<core::str::iter::CharIndices>"
.Linfo_string305:
	.asciz	"core::str::<impl str>::is_char_boundary::hda7e0e6b93d41e1d"
.Linfo_string306:
	.asciz	"is_char_boundary"
.Linfo_string307:
	.asciz	"{impl#8}"
.Linfo_string308:
	.asciz	"core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeTo<usize>>::get::h4926229f12567f86"
.Linfo_string309:
	.asciz	"get"
.Linfo_string310:
	.asciz	"core::str::<impl str>::get::h093394aad57ad25f"
.Linfo_string311:
	.asciz	"get<core::ops::range::RangeTo<usize>>"
.Linfo_string312:
	.asciz	"core::iter::traits::iterator::Iterator::advance_by::h6a7214653d0d4844"
.Linfo_string313:
	.asciz	"advance_by<core::str::iter::CharIndices>"
.Linfo_string314:
	.asciz	"core::str::validations::utf8_acc_cont_byte::h9c0568a270511d94"
.Linfo_string315:
	.asciz	"utf8_acc_cont_byte"
.Linfo_string316:
	.asciz	"Option"
.Linfo_string317:
	.asciz	"core::option::Option<T>::unwrap_or::h81c10756f48e5642"
.Linfo_string318:
	.asciz	"unwrap_or<&str>"
.Linfo_string319:
	.asciz	"core::ptr::align_offset::h79613ed187cb74c2"
.Linfo_string320:
	.asciz	"align_offset<u8>"
.Linfo_string321:
	.asciz	"core::slice::<impl [T]>::align_to::h14ae5628db395567"
.Linfo_string322:
	.asciz	"align_to<u8, usize>"
.Linfo_string323:
	.asciz	"core::str::count::do_count_chars::h7d7693ef424f6dec"
.Linfo_string324:
	.asciz	"do_count_chars"
.Linfo_string325:
	.asciz	"core::slice::iter::Iter<T>::post_inc_start::hf21ed02722a49466"
.Linfo_string326:
	.asciz	"post_inc_start<u8>"
.Linfo_string327:
	.asciz	"core::str::count::sum_bytes_in_usize::h6797fab1f7ce4705"
.Linfo_string328:
	.asciz	"sum_bytes_in_usize"
.Linfo_string329:
	.asciz	"core::num::<impl usize>::wrapping_mul::h48360d71c2515c90"
.Linfo_string330:
	.asciz	"{impl#70}"
.Linfo_string331:
	.asciz	"<core::slice::iter::Chunks<T> as core::iter::traits::iterator::Iterator>::next::hf73d675ad618c115"
.Linfo_string332:
	.asciz	"core::cmp::min_by::h0941cc14c368b512"
.Linfo_string333:
	.asciz	"min_by<usize, fn(&usize, &usize) -> core::cmp::Ordering>"
.Linfo_string334:
	.asciz	"Ord"
.Linfo_string335:
	.asciz	"core::cmp::Ord::min::h9edebcdd15768993"
.Linfo_string336:
	.asciz	"min<usize>"
.Linfo_string337:
	.asciz	"core::cmp::min::h9bf580d1e4801108"
.Linfo_string338:
	.asciz	"core::slice::<impl [T]>::as_chunks_unchecked::h2d296c5912b07dd8"
.Linfo_string339:
	.asciz	"as_chunks_unchecked<usize, 4>"
.Linfo_string340:
	.asciz	"core::slice::<impl [T]>::as_chunks::h87d820ae38d76c2b"
.Linfo_string341:
	.asciz	"as_chunks<usize, 4>"
.Linfo_string342:
	.asciz	"<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next::hf1c6a959e93592b2"
.Linfo_string343:
	.asciz	"next<[usize; 4]>"
.Linfo_string344:
	.asciz	"core::str::count::contains_non_continuation_byte::h4bfb07e9f3418716"
.Linfo_string345:
	.asciz	"contains_non_continuation_byte"
.Linfo_string346:
	.asciz	"non_null"
.Linfo_string347:
	.asciz	"NonNull"
.Linfo_string348:
	.asciz	"core::ptr::non_null::NonNull<T>::new_unchecked::h96350800d0279e82"
.Linfo_string349:
	.asciz	"new_unchecked<[usize; 4]>"
.Linfo_string350:
	.asciz	"core::slice::iter::Iter<T>::post_inc_start::h485b7ad8c84dddd9"
.Linfo_string351:
	.asciz	"post_inc_start<[usize; 4]>"
.Linfo_string352:
	.asciz	"core::ptr::const_ptr::<impl *const T>::offset::ha1d6b8087c075e22"
.Linfo_string353:
	.asciz	"offset<usize>"
.Linfo_string354:
	.asciz	"core::ptr::const_ptr::<impl *const T>::add::hd3375d8a63def5ff"
.Linfo_string355:
	.asciz	"add<usize>"
.Linfo_string356:
	.asciz	"<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked::hec5c9f1d8f083e3e"
.Linfo_string357:
	.asciz	"get_unchecked<usize>"
.Linfo_string358:
	.asciz	"<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked::h52140594036b5b35"
.Linfo_string359:
	.asciz	"core::slice::<impl [T]>::get_unchecked::hfcf86e3fd0623559"
.Linfo_string360:
	.asciz	"get_unchecked<usize, core::ops::range::RangeFrom<usize>>"
.Linfo_string361:
	.asciz	"core::slice::<impl [T]>::split_at_unchecked::hcd9a8720863f2a6b"
.Linfo_string362:
	.asciz	"split_at_unchecked<usize>"
.Linfo_string363:
	.asciz	"core::slice::<impl [T]>::split_at::ha5981fce13c4b145"
.Linfo_string364:
	.asciz	"split_at<usize>"
.Linfo_string365:
	.asciz	"<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next::h905f614112c7043f"
.Linfo_string366:
	.asciz	"core::ptr::mut_ptr::<impl *mut T>::offset::ha10c449b3a000801"
.Linfo_string367:
	.asciz	"core::slice::iter::Iter<T>::post_inc_start::h73ae9822cc3a0172"
.Linfo_string368:
	.asciz	"post_inc_start<usize>"
.Linfo_string369:
	.asciz	"{impl#17}"
.Linfo_string370:
	.asciz	"<str as core::fmt::Display>::fmt::hc119597c2cd94da3"
.Linfo_string371:
	.asciz	"{impl#52}"
.Linfo_string372:
	.asciz	"{impl#7}"
.Linfo_string373:
	.asciz	"core::fmt::Formatter::new::hfacece4df53cf6c5"
.Linfo_string374:
	.asciz	"new"
.Linfo_string375:
	.asciz	"<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next::h890a359eae7b1946"
.Linfo_string376:
	.asciz	"next<core::fmt::rt::v1::Argument>"
.Linfo_string377:
	.asciz	"<core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next::h462cb4bc89b2327e"
.Linfo_string378:
	.asciz	"next<core::slice::iter::Iter<core::fmt::rt::v1::Argument>>"
.Linfo_string379:
	.asciz	"core::fmt::run::h227e27cbafc555c0"
.Linfo_string380:
	.asciz	"run"
.Linfo_string381:
	.asciz	"core::fmt::getcount::h156d3d947880effb"
.Linfo_string382:
	.asciz	"getcount"
.Linfo_string383:
	.asciz	"ArgumentV1"
.Linfo_string384:
	.asciz	"core::fmt::ArgumentV1::as_usize::he66ac6c46fb35794"
.Linfo_string385:
	.asciz	"as_usize"
.Linfo_string386:
	.asciz	"core::ptr::const_ptr::<impl *const T>::offset::h4c0034f2ba288098"
.Linfo_string387:
	.asciz	"offset<core::fmt::ArgumentV1>"
.Linfo_string388:
	.asciz	"core::ptr::const_ptr::<impl *const T>::add::h1aa020105c967c64"
.Linfo_string389:
	.asciz	"add<core::fmt::ArgumentV1>"
.Linfo_string390:
	.asciz	"<usize as core::slice::index::SliceIndex<[T]>>::get_unchecked::h92380858e353689b"
.Linfo_string391:
	.asciz	"get_unchecked<core::fmt::ArgumentV1>"
.Linfo_string392:
	.asciz	"core::slice::<impl [T]>::get_unchecked::hb1465c070fffbd4d"
.Linfo_string393:
	.asciz	"get_unchecked<core::fmt::ArgumentV1, usize>"
.Linfo_string394:
	.asciz	"<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next::ha18801f22b0b0c4e"
.Linfo_string395:
	.asciz	"next<core::fmt::ArgumentV1>"
.Linfo_string396:
	.asciz	"<core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::next::he03ab9abdc94ee12"
.Linfo_string397:
	.asciz	"next<core::slice::iter::Iter<core::fmt::ArgumentV1>>"
.Linfo_string398:
	.asciz	"<usize as core::slice::index::SliceIndex<[T]>>::get::hcd3e51093bb0ff5e"
.Linfo_string399:
	.asciz	"get<&str>"
.Linfo_string400:
	.asciz	"core::slice::<impl [T]>::get::haee304b7e0dd7944"
.Linfo_string401:
	.asciz	"get<&str, usize>"
.Linfo_string402:
	.asciz	"core::fmt::Formatter::write_str::he05d53f0ac3a4f9e"
.Linfo_string403:
	.asciz	"write_str"
.Linfo_string404:
	.asciz	"builders"
.Linfo_string405:
	.asciz	"core::fmt::builders::debug_struct_new::h60bb8d127997c2a5"
.Linfo_string406:
	.asciz	"debug_struct_new"
.Linfo_string407:
	.asciz	"core::fmt::Formatter::debug_struct::h410abba8da9e6590"
.Linfo_string408:
	.asciz	"debug_struct"
.Linfo_string409:
	.asciz	"cell"
.Linfo_string410:
	.asciz	"{impl#18}"
.Linfo_string411:
	.asciz	"{impl#28}"
.Linfo_string412:
	.asciz	"<core::fmt::num::LowerHex as core::fmt::num::GenericRadix>::digit::h6568c2528a7d62f3"
.Linfo_string413:
	.asciz	"digit"
.Linfo_string414:
	.asciz	"GenericRadix"
.Linfo_string415:
	.asciz	"core::fmt::num::GenericRadix::fmt_int::h7c07e963ff36c769"
.Linfo_string416:
	.asciz	"fmt_int<core::fmt::num::LowerHex, u16>"
.Linfo_string417:
	.asciz	"<u16 as core::fmt::num::DisplayInt>::to_u8::hd57de2b9d1536739"
.Linfo_string418:
	.asciz	"to_u8"
.Linfo_string419:
	.asciz	"maybe_uninit"
.Linfo_string420:
	.asciz	"MaybeUninit"
.Linfo_string421:
	.asciz	"core::mem::maybe_uninit::MaybeUninit<T>::write::h00e39957901784e6"
.Linfo_string422:
	.asciz	"write<u8>"
.Linfo_string423:
	.asciz	"arith"
.Linfo_string424:
	.asciz	"{impl#170}"
.Linfo_string425:
	.asciz	"<u16 as core::ops::arith::Div>::div::h1606daedf6c10063"
.Linfo_string426:
	.asciz	"div"
.Linfo_string427:
	.asciz	"core::ptr::const_ptr::<impl *const T>::offset::h86ef5565e6303b1a"
.Linfo_string428:
	.asciz	"offset<core::mem::maybe_uninit::MaybeUninit<u8>>"
.Linfo_string429:
	.asciz	"core::ptr::const_ptr::<impl *const T>::add::hee9fc6d22b6e0790"
.Linfo_string430:
	.asciz	"add<core::mem::maybe_uninit::MaybeUninit<u8>>"
.Linfo_string431:
	.asciz	"<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked::h5cc498a42d66f804"
.Linfo_string432:
	.asciz	"get_unchecked<core::mem::maybe_uninit::MaybeUninit<u8>>"
.Linfo_string433:
	.asciz	"<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::get_unchecked::hea5c8d1dbecc8fb6"
.Linfo_string434:
	.asciz	"<core::ops::range::RangeFrom<usize> as core::slice::index::SliceIndex<[T]>>::index::h657518af945264c7"
.Linfo_string435:
	.asciz	"index<core::mem::maybe_uninit::MaybeUninit<u8>>"
.Linfo_string436:
	.asciz	"core::slice::index::<impl core::ops::index::Index<I> for [T]>::index::h4b9be5094a7839e0"
.Linfo_string437:
	.asciz	"index<core::mem::maybe_uninit::MaybeUninit<u8>, core::ops::range::RangeFrom<usize>>"
.Linfo_string438:
	.asciz	"core::array::<impl core::ops::index::Index<I> for [T; N]>::index::h1657be1fb10f99aa"
.Linfo_string439:
	.asciz	"index<core::mem::maybe_uninit::MaybeUninit<u8>, core::ops::range::RangeFrom<usize>, 128>"
.Linfo_string440:
	.asciz	"<dyn core::any::Any>::is::h2282ce1efc00e8d7"
.Linfo_string441:
	.asciz	"is<&str>"
.Linfo_string442:
	.asciz	"<dyn core::any::Any>::downcast_ref::ha06c4fa2143bd398"
.Linfo_string443:
	.asciz	"downcast_ref<&str>"
.Linfo_string444:
	.asciz	"<dyn core::any::Any+core::marker::Send>::downcast_ref::hb5165cb8e4ccb057"
.Linfo_string445:
	.asciz	"<core::any::TypeId as core::cmp::PartialEq>::eq::h62a7604eca2adbd4"
.Linfo_string446:
	.asciz	"location"
.Linfo_string447:
	.asciz	"<core::panic::location::Location as core::fmt::Display>::fmt::h046a04d21030c44d"
.Linfo_string448:
	.asciz	"core::fmt::Formatter::write_fmt::hd37bb40752075c70"
.Linfo_string449:
	.asciz	"write_fmt"
.Linfo_string450:
	.asciz	"<core::fmt::Arguments as core::fmt::Display>::fmt::h1e33fd5ba5bed534"
.Linfo_string451:
	.asciz	"<&T as core::fmt::Display>::fmt::h316400868ab25d65"
.Linfo_string452:
	.asciz	"fmt<str>"
.Linfo_string453:
	.asciz	"core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get::h1da42357f2c191cb"
.Linfo_string454:
	.asciz	"core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::index::h2115c2aa705ed8ec"
.Linfo_string455:
	.asciz	"core::str::traits::<impl core::ops::index::Index<I> for str>::index::h742bf378ab2ce69a"
.Linfo_string456:
	.asciz	"index<core::ops::range::RangeFrom<usize>>"
.Linfo_string457:
	.asciz	"core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeFrom<usize>>::get_unchecked::h84eb3dd2c83ca9b1"
.Linfo_string458:
	.asciz	"get_unchecked"
.Linfo_string459:
	.asciz	"<core::option::Option<T> as core::ops::try_trait::Try>::branch::hd443e7c180440ce3"
.Linfo_string460:
	.asciz	"branch<&[u8]>"
.Linfo_string461:
	.asciz	"pattern"
.Linfo_string462:
	.asciz	"<core::str::pattern::CharSearcher as core::str::pattern::Searcher>::next_match::h6515fc4157281be1"
.Linfo_string463:
	.asciz	"next_match"
.Linfo_string464:
	.asciz	"core::str::<impl str>::find::h2a81472173319697"
.Linfo_string465:
	.asciz	"find<char>"
.Linfo_string466:
	.asciz	"<core::ops::range::Range<usize> as core::slice::index::SliceIndex<[T]>>::get::ha6b95a25dd3deb7c"
.Linfo_string467:
	.asciz	"get<u8>"
.Linfo_string468:
	.asciz	"core::slice::<impl [T]>::get::he0127c9f05b9c086"
.Linfo_string469:
	.asciz	"get<u8, core::ops::range::Range<usize>>"
.Linfo_string470:
	.asciz	"memchr"
.Linfo_string471:
	.asciz	"core::slice::memchr::memchr::h9bf1bc05b744af97"
.Linfo_string472:
	.asciz	"<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::position::hc5dab4da3efed6f2"
.Linfo_string473:
	.asciz	"position<u8, core::slice::memchr::memchr::{closure_env#0}>"
.Linfo_string474:
	.asciz	"align_offset"
.Linfo_string475:
	.asciz	"core::ptr::const_ptr::<impl *const T>::align_offset::rt_impl::hf05a9a97f21bdff2"
.Linfo_string476:
	.asciz	"rt_impl<u8>"
.Linfo_string477:
	.asciz	"core::ops::function::FnOnce::call_once::hf31acf2d6fd74513"
.Linfo_string478:
	.asciz	"call_once<fn(*const u8, usize) -> usize, (*const u8, usize)>"
.Linfo_string479:
	.asciz	"core::intrinsics::const_eval_select::h1a3bac853d55b64d"
.Linfo_string480:
	.asciz	"const_eval_select<(*const u8, usize), fn(*const u8, usize) -> usize, fn(*const u8, usize) -> usize, usize>"
.Linfo_string481:
	.asciz	"core::ptr::const_ptr::<impl *const T>::align_offset::hf3846bc23c08236d"
.Linfo_string482:
	.asciz	"core::slice::memchr::memchr_general_case::h79cbfa5db1e3b72b"
.Linfo_string483:
	.asciz	"memchr_general_case"
.Linfo_string484:
	.asciz	"<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::position::h8424efe6baf59f02"
.Linfo_string485:
	.asciz	"position<u8, core::slice::memchr::memchr_general_case::{closure_env#0}>"
.Linfo_string486:
	.asciz	"core::num::<impl usize>::wrapping_sub::h11d670af3072a078"
.Linfo_string487:
	.asciz	"core::slice::memchr::contains_zero_byte::hcaaeff2a084e7271"
.Linfo_string488:
	.asciz	"contains_zero_byte"
.Linfo_string489:
	.asciz	"<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::position::h0e6b9665b80887bf"
.Linfo_string490:
	.asciz	"position<u8, core::slice::memchr::memchr_general_case::{closure_env#1}>"
.Linfo_string491:
	.asciz	"<[A] as core::slice::cmp::SlicePartialEq<B>>::equal::h6cb37f8f467fe233"
.Linfo_string492:
	.asciz	"equal<u8, u8>"
.Linfo_string493:
	.asciz	"core::slice::cmp::<impl core::cmp::PartialEq<[B]> for [A]>::eq::hfde78b4b90ae27f9"
.Linfo_string494:
	.asciz	"core::cmp::impls::<impl core::cmp::PartialEq<&B> for &A>::eq::hb44fa0c57960c1d5"
.Linfo_string495:
	.asciz	"eq<[u8], [u8]>"
.Linfo_string496:
	.asciz	"core::str::traits::<impl core::slice::index::SliceIndex<str> for core::ops::range::RangeTo<usize>>::index::h0dc5a7cb40da9d3a"
.Linfo_string497:
	.asciz	"core::str::traits::<impl core::ops::index::Index<I> for str>::index::h0cb8dd6eb93fbaf7"
.Linfo_string498:
	.asciz	"index<core::ops::range::RangeTo<usize>>"
.Linfo_string499:
	.asciz	"core::str::<impl str>::floor_char_boundary::h6aa3cfc217a112cb"
.Linfo_string500:
	.asciz	"floor_char_boundary"
.Linfo_string501:
	.asciz	"<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::rposition::hb7cc29112fe61733"
.Linfo_string502:
	.asciz	"rposition<u8, core::str::{impl#0}::floor_char_boundary::{closure_env#0}>"
.Linfo_string503:
	.asciz	"core::num::<impl usize>::saturating_sub::h1fb8663ab2d6eef6"
.Linfo_string504:
	.asciz	"RangeInclusive"
.Linfo_string505:
	.asciz	"core::ops::range::RangeInclusive<usize>::into_slice_range::h49f986aa70ead1c6"
.Linfo_string506:
	.asciz	"into_slice_range"
.Linfo_string507:
	.asciz	"<core::ops::range::RangeInclusive<usize> as core::slice::index::SliceIndex<[T]>>::index::h4236e4c9ddc09661"
.Linfo_string508:
	.asciz	"core::slice::index::<impl core::ops::index::Index<I> for [T]>::index::hc014c948f91f07e2"
.Linfo_string509:
	.asciz	"index<u8, core::ops::range::RangeInclusive<usize>>"
.Linfo_string510:
	.asciz	"core::option::Option<T>::unwrap::he274c09127c4ea0a"
.Linfo_string511:
	.asciz	"unwrap<char>"
.Linfo_string512:
	.asciz	"core::str::validations::utf8_first_byte::h0e41db1637fd56c6"
.Linfo_string513:
	.asciz	"utf8_first_byte"
.Linfo_string514:
	.asciz	"char"
.Linfo_string515:
	.asciz	"methods"
.Linfo_string516:
	.asciz	"core::char::methods::len_utf8::h9dd7f26c5a26da04"
.Linfo_string517:
	.asciz	"len_utf8"
.Linfo_string518:
	.asciz	"core::char::methods::<impl char>::len_utf8::hcbe7d1779e42ec44"
.Linfo_string519:
	.asciz	"<core::fmt::Formatter as core::fmt::Write>::write_char::hc20e542edb4726df"
.Linfo_string520:
	.asciz	"write_char"
.Linfo_string521:
	.asciz	"core::char::methods::<impl char>::escape_debug_ext::h4862a5dd38f772be"
.Linfo_string522:
	.asciz	"escape_debug_ext"
.Linfo_string523:
	.asciz	"unicode"
.Linfo_string524:
	.asciz	"unicode_data"
.Linfo_string525:
	.asciz	"core::unicode::unicode_data::skip_search::h7387aa215274a35d"
.Linfo_string526:
	.asciz	"skip_search<32, 707>"
.Linfo_string527:
	.asciz	"grapheme_extend"
.Linfo_string528:
	.asciz	"core::unicode::unicode_data::grapheme_extend::lookup::hf8eabfec0219835b"
.Linfo_string529:
	.asciz	"lookup"
.Linfo_string530:
	.asciz	"core::char::methods::<impl char>::is_grapheme_extended::he858903ac7a083d4"
.Linfo_string531:
	.asciz	"is_grapheme_extended"
.Linfo_string532:
	.asciz	"core::slice::<impl [T]>::binary_search_by::hcb2f7bfdedae8233"
.Linfo_string533:
	.asciz	"binary_search_by<u32, core::slice::{impl#0}::binary_search_by_key::{closure_env#0}<u32, u32, core::unicode::unicode_data::skip_search::{closure_env#0}<32, 707>>>"
.Linfo_string534:
	.asciz	"core::slice::<impl [T]>::binary_search_by_key::h2468437800b4941e"
.Linfo_string535:
	.asciz	"binary_search_by_key<u32, u32, core::unicode::unicode_data::skip_search::{closure_env#0}<32, 707>>"
.Linfo_string536:
	.asciz	"core::num::<impl usize>::overflowing_sub::h72014ae23f842ccf"
.Linfo_string537:
	.asciz	"overflowing_sub"
.Linfo_string538:
	.asciz	"core::num::<impl usize>::checked_sub::ha384923cfdf06987"
.Linfo_string539:
	.asciz	"checked_sub"
.Linfo_string540:
	.asciz	"core::option::Option<T>::map::h00521afde9cfde76"
.Linfo_string541:
	.asciz	"map<usize, u32, core::unicode::unicode_data::skip_search::{closure_env#1}<32, 707>>"
.Linfo_string542:
	.asciz	"skip_search"
.Linfo_string543:
	.asciz	"core::unicode::unicode_data::skip_search::{{closure}}::h606faeeeefa43212"
.Linfo_string544:
	.asciz	"{closure#1}<32, 707>"
.Linfo_string545:
	.asciz	"core::unicode::unicode_data::decode_prefix_sum::h5fd6624f2b57dd95"
.Linfo_string546:
	.asciz	"decode_prefix_sum"
.Linfo_string547:
	.asciz	"core::unicode::unicode_data::decode_length::hdb58ae0f3cc75826"
.Linfo_string548:
	.asciz	"decode_length"
.Linfo_string549:
	.asciz	"printable"
.Linfo_string550:
	.asciz	"core::unicode::printable::is_printable::h331b2544bb511f6b"
.Linfo_string551:
	.asciz	"is_printable"
.Linfo_string552:
	.asciz	"<core::char::EscapeUnicode as core::iter::traits::iterator::Iterator>::next::h24c6794aa0590961"
.Linfo_string553:
	.asciz	"<core::char::EscapeDefault as core::iter::traits::iterator::Iterator>::next::h26795252f910fa60"
.Linfo_string554:
	.asciz	"<core::char::EscapeDebug as core::iter::traits::iterator::Iterator>::next::hc2970fdb73046976"
.Linfo_string555:
	.asciz	"convert"
.Linfo_string556:
	.asciz	"core::char::convert::from_digit::h2a305286453151de"
.Linfo_string557:
	.asciz	"from_digit"
.Linfo_string558:
	.asciz	"core::fmt::Formatter::debug_lower_hex::h3647386a22b50f1b"
.Linfo_string559:
	.asciz	"debug_lower_hex"
.Linfo_string560:
	.asciz	"core::fmt::num::imp::<impl core::fmt::Display for usize>::fmt::he8555b429859c49e"
.Linfo_string561:
	.asciz	"{impl#13}"
.Linfo_string562:
	.asciz	"<usize as core::fmt::num::DisplayInt>::to_u8::h30938dbcf714d2e6"
.Linfo_string563:
	.asciz	"core::fmt::num::GenericRadix::fmt_int::h353335debd841c6c"
.Linfo_string564:
	.asciz	"fmt_int<core::fmt::num::LowerHex, usize>"
.Linfo_string565:
	.asciz	"{impl#36}"
.Linfo_string566:
	.asciz	"core::fmt::num::<impl core::fmt::LowerHex for usize>::fmt::h451d50450fff1317"
.Linfo_string567:
	.asciz	"{impl#168}"
.Linfo_string568:
	.asciz	"<usize as core::ops::arith::Div>::div::h9b546901d6aa5366"
.Linfo_string569:
	.asciz	"core::fmt::num::GenericRadix::fmt_int::h92c77ba83d0014d3"
.Linfo_string570:
	.asciz	"fmt_int<core::fmt::num::UpperHex, usize>"
.Linfo_string571:
	.asciz	"{impl#37}"
.Linfo_string572:
	.asciz	"core::fmt::num::<impl core::fmt::UpperHex for usize>::fmt::h88ac6ba6ab6f6b5e"
.Linfo_string573:
	.asciz	"{impl#29}"
.Linfo_string574:
	.asciz	"<core::fmt::num::UpperHex as core::fmt::num::GenericRadix>::digit::hca51aa0590068f0b"
.Linfo_string575:
	.asciz	"{impl#89}"
.Linfo_string576:
	.asciz	"core::slice::iter::Iter<T>::new::h48f93a5599a28524"
.Linfo_string577:
	.asciz	"new<(u8, u8)>"
.Linfo_string578:
	.asciz	"core::slice::<impl [T]>::iter::h2a57c2599282b9f6"
.Linfo_string579:
	.asciz	"iter<(u8, u8)>"
.Linfo_string580:
	.asciz	"core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter::h9e4d02731d8b5b5d"
.Linfo_string581:
	.asciz	"into_iter<(u8, u8)>"
.Linfo_string582:
	.asciz	"core::slice::index::<impl core::ops::index::Index<I> for [T]>::index::h082ca737461af500"
.Linfo_string583:
	.asciz	"index<u8, core::ops::range::Range<usize>>"
.Linfo_string584:
	.asciz	"core::slice::iter::<impl core::iter::traits::collect::IntoIterator for &[T]>::into_iter::heb9b09ce7c806ead"
.Linfo_string585:
	.asciz	"into_iter<u8>"
.Linfo_string586:
	.asciz	"<core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::next::h9d3f0ae590055cb9"
.Linfo_string587:
	.asciz	"next<(u8, u8)>"
.Linfo_string588:
	.asciz	"core::option::Option<&T>::cloned::h9d3827a138d76264"
.Linfo_string589:
	.asciz	"cloned<u8>"
.Linfo_string590:
	.asciz	"cloned"
.Linfo_string591:
	.asciz	"<core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next::hd5d43a5c72072652"
.Linfo_string592:
	.asciz	"next<core::slice::iter::Iter<u8>, u8>"
.Linfo_string593:
	.asciz	"core::option::Option<T>::unwrap::h4bff0d2a57e299d1"
.Linfo_string594:
	.asciz	"unwrap<u8>"
.Linfo_string595:
	.asciz	"Result"
.Linfo_string596:
	.asciz	"core::result::Result<T,E>::and_then::hb5ed5eeb89497dd5"
.Linfo_string597:
	.asciz	"and_then<(), core::fmt::Error, (), core::fmt::builders::{impl#3}::field::{closure_env#0}>"
.Linfo_string598:
	.asciz	"field"
.Linfo_string599:
	.asciz	"core::fmt::builders::DebugStruct::field::{{closure}}::ha9ac912804c30173"
.Linfo_string600:
	.asciz	"core::fmt::Formatter::wrap_buf::hcc97d10a3deb3ddc"
.Linfo_string601:
	.asciz	"wrap_buf<core::fmt::builders::{impl#1}::wrap::{closure_env#0}>"
.Linfo_string602:
	.asciz	"PadAdapter"
.Linfo_string603:
	.asciz	"core::fmt::builders::PadAdapter::wrap::h18de8ac21af84a7d"
.Linfo_string604:
	.asciz	"wrap"
.Linfo_string605:
	.asciz	"core::option::Option<T>::insert::h7409a1a40e8f1c50"
.Linfo_string606:
	.asciz	"insert<core::fmt::builders::PadAdapter>"
.Linfo_string607:
	.asciz	"core::fmt::builders::PadAdapter::wrap::{{closure}}::he5b8548a764828c2"
.Linfo_string608:
	.asciz	"DebugStruct"
.Linfo_string609:
	.asciz	"core::char::methods::encode_utf8_raw::h55ee4db29437b123"
.Linfo_string610:
	.asciz	"encode_utf8_raw"
.Linfo_string611:
	.asciz	"core::char::methods::<impl char>::encode_utf8::h67079e093bf0e0f9"
.Linfo_string612:
	.asciz	"encode_utf8"
.Linfo_string613:
	.asciz	"Write"
.Linfo_string614:
	.asciz	"core::fmt::Write::write_char::hf323ece2521daa94"
.Linfo_string615:
	.asciz	"write_char<core::fmt::builders::PadAdapter>"
.Linfo_string616:
	.asciz	"core::fmt::Write::write_fmt::hbf916f5b23354be0"
.Linfo_string617:
	.asciz	"write_fmt<core::fmt::builders::PadAdapter>"
.Linfo_string618:
	.asciz	"core::result::Result<T,E>::and_then::h18a3089b02206147"
.Linfo_string619:
	.asciz	"and_then<(), core::fmt::Error, (), core::fmt::builders::{impl#3}::finish::{closure_env#0}>"
.Linfo_string620:
	.asciz	"finish"
.Linfo_string621:
	.asciz	"core::fmt::builders::DebugStruct::finish::{{closure}}::h837e3035f5d7ee35"
.Linfo_string622:
	.asciz	"core::result::Result<T,E>::and_then::h08d452094f664427"
.Linfo_string623:
	.asciz	"and_then<(), core::fmt::Error, (), core::fmt::builders::{impl#4}::field::{closure_env#0}>"
.Linfo_string624:
	.asciz	"core::fmt::builders::DebugTuple::field::{{closure}}::h44a46535626bf51e"
.Linfo_string625:
	.asciz	"DebugTuple"
.Linfo_string626:
	.asciz	"core::result::Result<T,E>::and_then::hafa98e2a5e6521e9"
.Linfo_string627:
	.asciz	"and_then<(), core::fmt::Error, (), core::fmt::builders::{impl#4}::finish::{closure_env#0}>"
.Linfo_string628:
	.asciz	"core::fmt::builders::DebugTuple::finish::{{closure}}::hb622d0fa261a404b"
.Linfo_string629:
	.asciz	"core::fmt::builders::debug_tuple_new::h70ca36852a71ef99"
.Linfo_string630:
	.asciz	"debug_tuple_new"
.Linfo_string631:
	.asciz	"core::slice::memchr::repeat_byte::h4e5b5b50fb1d8479"
.Linfo_string632:
	.asciz	"repeat_byte"
.Linfo_string633:
	.asciz	"copy_from_slice"
.Linfo_string634:
	.asciz	"core::str::validations::run_utf8_validation::h5e901722de2910cd"
.Linfo_string635:
	.asciz	"run_utf8_validation"
.Linfo_string636:
	.asciz	"core::str::validations::utf8_char_width::h6bb17a8fd57326b5"
.Linfo_string637:
	.asciz	"utf8_char_width"
.Linfo_string638:
	.asciz	"core::str::validations::contains_nonascii::h269b5566f5e4fe6a"
.Linfo_string639:
	.asciz	"contains_nonascii"
.Linfo_string640:
	.asciz	"converts"
.Linfo_string641:
	.asciz	"<u8 as core::fmt::num::DisplayInt>::to_u32::h9fd140752de273c9"
.Linfo_string642:
	.asciz	"core::fmt::num::GenericRadix::fmt_int::hef7852752d33f69f"
.Linfo_string643:
	.asciz	"fmt_int<core::fmt::num::LowerHex, u8>"
.Linfo_string644:
	.asciz	"{impl#40}"
.Linfo_string645:
	.asciz	"<u32 as core::fmt::num::DisplayInt>::to_u8::h5fbc7623f4bb8f90"
.Linfo_string646:
	.asciz	"core::fmt::num::GenericRadix::fmt_int::h832d592994d9a7a5"
.Linfo_string647:
	.asciz	"fmt_int<core::fmt::num::LowerHex, u32>"
.Linfo_string648:
	.asciz	"{impl#171}"
.Linfo_string649:
	.asciz	"<u32 as core::ops::arith::Div>::div::h4fbe9034b7e82786"
.Linfo_string650:
	.asciz	"{impl#56}"
.Linfo_string651:
	.asciz	"core::fmt::num::GenericRadix::fmt_int::ha356d932cc4f5154"
.Linfo_string652:
	.asciz	"fmt_int<core::fmt::num::UpperHex, u8>"
.Linfo_string653:
	.asciz	"core::fmt::num::GenericRadix::fmt_int::h6c873c9369809eb0"
.Linfo_string654:
	.asciz	"fmt_int<core::fmt::num::UpperHex, u32>"
.Linfo_string655:
	.asciz	"{impl#57}"
.Linfo_string656:
	.asciz	"core::ops::function::FnOnce::call_once::h2f4bf7dde0f7e4e6"
.Linfo_string657:
	.asciz	"call_once<core::fmt::USIZE_MARKER::{closure_env#0}, (&usize, &mut core::fmt::Formatter)>"
.Linfo_string658:
	.asciz	"core::num::dec2flt::common::BiasedFp::zero_pow2::h579a9fdf4d32f785"
.Linfo_string659:
	.asciz	"zero_pow2"
.Linfo_string660:
	.asciz	"core::num::dec2flt::decimal::Decimal::round::ha3bf16e5d49ff8bf"
.Linfo_string661:
	.asciz	"round"
.Linfo_string662:
	.asciz	"core::panicking::panic_bounds_check::h693951cbac28abbe"
.Linfo_string663:
	.asciz	"panic_bounds_check"
.Linfo_string664:
	.asciz	"core::fmt::num::imp::<impl core::fmt::Display for u32>::fmt::h9d0ff72e374f98e7"
.Linfo_string665:
	.asciz	"core::panicking::panic_fmt::h679f68291595c801"
.Linfo_string666:
	.asciz	"panic_fmt"
.Linfo_string667:
	.asciz	"core::ptr::drop_in_place<&core::iter::adapters::copied::Copied<core::slice::iter::Iter<u8>>>::hceb1e8191151371b"
.Linfo_string668:
	.asciz	"drop_in_place<&core::iter::adapters::copied::Copied<core::slice::iter::Iter<u8>>>"
.Linfo_string669:
	.asciz	"<T as core::any::Any>::type_id::h161986144a3fe9d9"
.Linfo_string670:
	.asciz	"type_id<core::panic::panic_info::{impl#0}::internal_constructor::NoPayload>"
.Linfo_string671:
	.asciz	"core::fmt::Formatter::pad_integral::h9f90d3af72be363b"
.Linfo_string672:
	.asciz	"core::fmt::Formatter::pad_integral::write_prefix::hc1241ff0425e3730"
.Linfo_string673:
	.asciz	"write_prefix"
.Linfo_string674:
	.asciz	"core::num::dec2flt::decimal::Decimal::left_shift::ha96395fde205faea"
.Linfo_string675:
	.asciz	"left_shift"
.Linfo_string676:
	.asciz	"core::slice::index::slice_start_index_len_fail::haaeda2757c9375c3"
.Linfo_string677:
	.asciz	"slice_start_index_len_fail"
.Linfo_string678:
	.asciz	"core::num::dec2flt::decimal::Decimal::right_shift::h74dc9d2f7bb2bda8"
.Linfo_string679:
	.asciz	"right_shift"
.Linfo_string680:
	.asciz	"core::num::dec2flt::decimal::parse_decimal::h93a23ff188fc0f81"
.Linfo_string681:
	.asciz	"core::slice::index::slice_end_index_len_fail::h5a91c503035fd6a0"
.Linfo_string682:
	.asciz	"slice_end_index_len_fail"
.Linfo_string683:
	.asciz	"<f32 as core::num::dec2flt::float::RawFloat>::from_u64::h4eddb77395e2e77b"
.Linfo_string684:
	.asciz	"from_u64"
.Linfo_string685:
	.asciz	"<f32 as core::num::dec2flt::float::RawFloat>::from_u64_bits::h7685f84f0a31e923"
.Linfo_string686:
	.asciz	"from_u64_bits"
.Linfo_string687:
	.asciz	"<f32 as core::num::dec2flt::float::RawFloat>::pow10_fast_path::h2e6c360518413f56"
.Linfo_string688:
	.asciz	"pow10_fast_path"
.Linfo_string689:
	.asciz	"core::num::dec2flt::lemire::power::h40f4ef2b860ed5df"
.Linfo_string690:
	.asciz	"power"
.Linfo_string691:
	.asciz	"core::num::dec2flt::lemire::compute_product_approx::h25610b609a3e8ae8"
.Linfo_string692:
	.asciz	"compute_product_approx"
.Linfo_string693:
	.asciz	"core::num::dec2flt::parse::parse_number::h53c7787c169de877"
.Linfo_string694:
	.asciz	"parse_number"
.Linfo_string695:
	.asciz	"core::num::dec2flt::parse::parse_partial_inf_nan::parse_inf_rest::h8f4a02175d0c9550"
.Linfo_string696:
	.asciz	"parse_inf_rest"
.Linfo_string697:
	.asciz	"core::fmt::Formatter::pad::h936b549e1667e5be"
.Linfo_string698:
	.asciz	"pad"
.Linfo_string699:
	.asciz	"core::panicking::panic::ha0d68f1d939a874b"
.Linfo_string700:
	.asciz	"core::panicking::assert_failed_inner::h492fc9c36dcbce8b"
.Linfo_string701:
	.asciz	"assert_failed_inner"
.Linfo_string702:
	.asciz	"<&T as core::fmt::Debug>::fmt::hefd9236e08ca60f0"
.Linfo_string703:
	.asciz	"fmt<dyn core::fmt::Debug>"
.Linfo_string704:
	.asciz	"core::fmt::write::h5d3fbef16e428eed"
.Linfo_string705:
	.asciz	"core::slice::index::slice_index_order_fail::h8a53f055fb6ee074"
.Linfo_string706:
	.asciz	"slice_index_order_fail"
.Linfo_string707:
	.asciz	"core::num::<impl u8>::is_utf8_char_boundary::hce24739f4da7d511"
.Linfo_string708:
	.asciz	"is_utf8_char_boundary"
.Linfo_string709:
	.asciz	"<core::cell::BorrowError as core::fmt::Debug>::fmt::he01a02bd97eeb704"
.Linfo_string710:
	.asciz	"<core::cell::BorrowMutError as core::fmt::Debug>::fmt::hbedb9b53a3463d04"
.Linfo_string711:
	.asciz	"core::fmt::num::<impl core::fmt::LowerHex for i16>::fmt::hdad8d5f225e025a6"
.Linfo_string712:
	.asciz	"core::option::expect_failed::h22026eb39ea9589c"
.Linfo_string713:
	.asciz	"expect_failed"
.Linfo_string714:
	.asciz	"core::panicking::panic_str::h745842c312fc9ac7"
.Linfo_string715:
	.asciz	"panic_str"
.Linfo_string716:
	.asciz	"core::panicking::panic_display::h4bd204fe64080bf8"
.Linfo_string717:
	.asciz	"panic_display<&str>"
.Linfo_string718:
	.asciz	"<core::panic::panic_info::PanicInfo as core::fmt::Display>::fmt::h4ec511762c61d457"
.Linfo_string719:
	.asciz	"<&T as core::fmt::Display>::fmt::he55616ac5c69a229"
.Linfo_string720:
	.asciz	"fmt<core::fmt::Arguments>"
.Linfo_string721:
	.asciz	"<&T as core::fmt::Display>::fmt::h7e376a968b0efe1d"
.Linfo_string722:
	.asciz	"fmt<&str>"
.Linfo_string723:
	.asciz	"core::result::unwrap_failed::he67be68ddf63c991"
.Linfo_string724:
	.asciz	"unwrap_failed"
.Linfo_string725:
	.asciz	"<core::fmt::builders::PadAdapter as core::fmt::Write>::write_str::h55ae475bea881fc0"
.Linfo_string726:
	.asciz	"core::str::slice_error_fail::h9b5dc962ae2d13f9"
.Linfo_string727:
	.asciz	"slice_error_fail"
.Linfo_string728:
	.asciz	"<char as core::fmt::Debug>::fmt::h7ee1b5f70dc379a2"
.Linfo_string729:
	.asciz	"<core::ops::range::Range<Idx> as core::fmt::Debug>::fmt::hee2a92be01ffaad6"
.Linfo_string730:
	.asciz	"fmt<usize>"
.Linfo_string731:
	.asciz	"core::fmt::num::<impl core::fmt::Debug for usize>::fmt::h4b1edc1df8703cc0"
.Linfo_string732:
	.asciz	"core::unicode::printable::check::hb18736e70daa0641"
.Linfo_string733:
	.asciz	"check"
.Linfo_string734:
	.asciz	"core::fmt::builders::DebugStruct::field::hf57541a1df3c3ba1"
.Linfo_string735:
	.asciz	"<&mut W as core::fmt::Write>::write_str::h06c25b6d30c4740c"
.Linfo_string736:
	.asciz	"write_str<core::fmt::builders::PadAdapter>"
.Linfo_string737:
	.asciz	"<&mut W as core::fmt::Write>::write_char::h6ab6417501edfdb3"
.Linfo_string738:
	.asciz	"<&mut W as core::fmt::Write>::write_fmt::ha0996c23c8ea924f"
.Linfo_string739:
	.asciz	"core::fmt::builders::DebugStruct::finish::h13801c6cd64a79cd"
.Linfo_string740:
	.asciz	"core::fmt::builders::DebugTuple::field::h344a2bce7ddce2f6"
.Linfo_string741:
	.asciz	"core::fmt::builders::DebugTuple::finish::hfca393014b7f9d44"
.Linfo_string742:
	.asciz	"core::fmt::Formatter::debug_upper_hex::hda639ee7898a7efd"
.Linfo_string743:
	.asciz	"debug_upper_hex"
.Linfo_string744:
	.asciz	"core::fmt::Formatter::debug_tuple::h9a9c92e1e856202e"
.Linfo_string745:
	.asciz	"debug_tuple"
.Linfo_string746:
	.asciz	"<bool as core::fmt::Display>::fmt::hda8ae0c64ceca41d"
.Linfo_string747:
	.asciz	"core::slice::<impl [T]>::copy_from_slice::len_mismatch_fail::h7bf74017f2463c91"
.Linfo_string748:
	.asciz	"len_mismatch_fail"
.Linfo_string749:
	.asciz	"core::str::converts::from_utf8::h12390dae7acf1b60"
.Linfo_string750:
	.asciz	"from_utf8"
.Linfo_string751:
	.asciz	"core::fmt::num::imp::<impl core::fmt::Display for u8>::fmt::ha0378c4201814c21"
.Linfo_string752:
	.asciz	"core::fmt::num::<impl core::fmt::LowerHex for i8>::fmt::hd91ed785dea0d6b1"
.Linfo_string753:
	.asciz	"core::fmt::num::<impl core::fmt::LowerHex for i32>::fmt::hac89ce7c82380f7e"
.Linfo_string754:
	.asciz	"core::fmt::num::<impl core::fmt::UpperHex for i8>::fmt::hc0a456b5846e5633"
.Linfo_string755:
	.asciz	"core::fmt::num::<impl core::fmt::UpperHex for i32>::fmt::h199b48bc29ed0670"
.Linfo_string756:
	.asciz	"<core::fmt::Error as core::fmt::Debug>::fmt::hfa2a9d808c106497"
	.section	.debug_pubnames,"",%progbits
	.long	.LpubNames_end0-.LpubNames_start0
.LpubNames_start0:
	.short	2
	.long	.Lcu_begin0
	.long	17198
	.long	15061
	.asciz	"floor_char_boundary"
	.long	133
	.asciz	"write<char>"
	.long	8112
	.asciz	"dec2flt"
	.long	13402
	.asciz	"position<u8, core::slice::memchr::memchr_general_case::{closure_env#0}>"
	.long	2052
	.asciz	"{impl#41}"
	.long	12359
	.asciz	"spec_next<usize>"
	.long	8298
	.asciz	"eq_ignore_case"
	.long	5163
	.asciz	"{impl#17}"
	.long	12727
	.asciz	"cloned"
	.long	16691
	.asciz	"check"
	.long	8202
	.asciz	"read_u64_unchecked<[u8]>"
	.long	12615
	.asciz	"{closure#0}<&u8, core::str::count::char_count_general_case::{closure_env#0}>"
	.long	14144
	.asciz	"split_at<usize>"
	.long	15721
	.asciz	"replace<char>"
	.long	7180
	.asciz	"{impl#18}"
	.long	15023
	.asciz	"is_char_boundary"
	.long	13502
	.asciz	"post_inc_start<[usize; 4]>"
	.long	356
	.asciz	"new_unchecked<[usize; 4]>"
	.long	12605
	.asciz	"count"
	.long	2458
	.asciz	"pad_integral"
	.long	12159
	.asciz	"wrapping_sub"
	.long	13415
	.asciz	"position<u8, core::slice::memchr::memchr_general_case::{closure_env#1}>"
	.long	13575
	.asciz	"into_iter<u8>"
	.long	16206
	.asciz	"{impl#35}"
	.long	15905
	.asciz	"{impl#27}"
	.long	16105
	.asciz	"unwrap_or<&str>"
	.long	16118
	.asciz	"unwrap<char>"
	.long	14834
	.asciz	"contains_non_continuation_byte"
	.long	454
	.asciz	"fmt_u32"
	.long	8388
	.asciz	"parse_digits<core::num::dec2flt::parse::try_parse_digits::{closure_env#0}>"
	.long	12564
	.asciz	"map_fold"
	.long	10322
	.asciz	"parse_number"
	.long	15752
	.asciz	"MaybeUninit"
	.long	13744
	.asciz	"index<u8, core::ops::range::Range<usize>>"
	.long	7849
	.asciz	"fmt"
	.long	5435
	.asciz	"ArgumentV1"
	.long	830
	.asciz	"fmt_int<core::fmt::num::LowerHex, u8>"
	.long	14822
	.asciz	"sum_bytes_in_usize"
	.long	14311
	.asciz	"contains_zero_byte"
	.long	5347
	.asciz	"{impl#52}"
	.long	5409
	.asciz	"run"
	.long	1130
	.asciz	"{impl#36}"
	.long	771
	.asciz	"{impl#28}"
	.long	5139
	.asciz	"write_prefix"
	.long	13965
	.asciz	"get<&str>"
	.long	13223
	.asciz	"type_id<core::panic::panic_info::{impl#0}::internal_constructor::NoPayload>"
	.long	278
	.asciz	"rt_impl<u8>"
	.long	12641
	.asciz	"next<core::iter::adapters::enumerate::Enumerate<core::slice::iter::Iter<u8>>>"
	.long	14222
	.asciz	"iter<(u8, u8)>"
	.long	15196
	.asciz	"next_match"
	.long	12868
	.asciz	"assert_failed_inner"
	.long	10256
	.asciz	"try_parse_8digits"
	.long	8329
	.asciz	"is_8digits"
	.long	7844
	.asciz	"{impl#37}"
	.long	14758
	.asciz	"str"
	.long	16617
	.asciz	"lookup"
	.long	14066
	.asciz	"iter<u8>"
	.long	12943
	.asciz	"panic_display<&str>"
	.long	14235
	.asciz	"copy_from_slice"
	.long	12541
	.asciz	"map"
	.long	15186
	.asciz	"pattern"
	.long	7053
	.asciz	"finish"
	.long	1166
	.asciz	"{impl#29}"
	.long	16004
	.asciz	"and_then<(), core::fmt::Error, (), core::fmt::builders::{impl#4}::finish::{closure_env#0}>"
	.long	13638
	.asciz	"get_unchecked_mut<u8>"
	.long	8274
	.asciz	"first_isdigit<core::num::dec2flt::common::AsciiStr>"
	.long	16226
	.asciz	"f32"
	.long	14810
	.asciz	"do_count_chars"
	.long	400
	.asciz	"new_v1"
	.long	15172
	.asciz	"index<core::ops::range::RangeTo<usize>>"
	.long	16636
	.asciz	"{closure#1}<32, 707>"
	.long	13490
	.asciz	"post_inc_start<u8>"
	.long	13539
	.asciz	"{impl#70}"
	.long	12515
	.asciz	"sum"
	.long	8689
	.asciz	"number_of_digits_decimal_left_shift"
	.long	5197
	.asciz	"{impl#54}"
	.long	7641
	.asciz	"{impl#0}"
	.long	14792
	.asciz	"char_count_general_case"
	.long	12551
	.asciz	"fold<usize, core::slice::iter::Iter<u8>, core::iter::adapters::filter::{impl#2}::count::to_usize::{closure_env#0}<&u8, core::str::count::char_count_general_case::{closure_env#0}>, usize, core::iter::traits::accum::{impl#48}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<u8>, core::iter::adapters::filter::{impl#2}::count::to_usize::{closure_env#0}<&u8, core::str::count::char_count_general_case::{closure_env#0}>>>>"
	.long	14209
	.asciz	"binary_search_by_key<u32, u32, core::unicode::unicode_data::skip_search::{closure_env#0}<32, 707>>"
	.long	7166
	.asciz	"write_char"
	.long	38
	.asciz	"core"
	.long	15910
	.asciz	"branch<core::fmt::PostPadding, core::fmt::Error>"
	.long	12172
	.asciz	"saturating_sub"
	.long	10064
	.asciz	"pow10_fast_path"
	.long	14299
	.asciz	"memchr_general_case"
	.long	13459
	.asciz	"next_back<u8>"
	.long	10142
	.asciz	"compute_product_approx"
	.long	12520
	.asciz	"{closure#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<u8>, core::iter::adapters::filter::{impl#2}::count::to_usize::{closure_env#0}<&u8, core::str::count::char_count_general_case::{closure_env#0}>>>"
	.long	15035
	.asciz	"get<core::ops::range::RangeTo<usize>>"
	.long	12593
	.asciz	"count<core::slice::iter::Iter<u8>, core::str::count::char_count_general_case::{closure_env#0}>"
	.long	623
	.asciz	"{impl#1}"
	.long	16419
	.asciz	"char"
	.long	12583
	.asciz	"filter"
	.long	12655
	.asciz	"enumerate"
	.long	14118
	.asciz	"get_unchecked<usize, core::ops::range::RangeFrom<usize>>"
	.long	12796
	.asciz	"panic_fmt"
	.long	15211
	.asciz	"slice_error_fail"
	.long	1861
	.asciz	"{impl#56}"
	.long	897
	.asciz	"{impl#48}"
	.long	7147
	.asciz	"debug_tuple_new"
	.long	5748
	.asciz	"{impl#2}"
	.long	12677
	.asciz	"next<core::slice::iter::Iter<core::fmt::rt::v1::Argument>>"
	.long	16086
	.asciz	"eq<&u8>"
	.long	5440
	.asciz	"as_usize"
	.long	15778
	.asciz	"impls"
	.long	16460
	.asciz	"escape_debug_ext"
	.long	8127
	.asciz	"zero_pow2"
	.long	8763
	.asciz	"parse_decimal"
	.long	7540
	.asciz	"Write"
	.long	8238
	.asciz	"read_u64<core::num::dec2flt::common::AsciiStr>"
	.long	8443
	.asciz	"Decimal"
	.long	16612
	.asciz	"grapheme_extend"
	.long	8346
	.asciz	"write_u64_unchecked<[u8]>"
	.long	14997
	.asciz	"chars"
	.long	16424
	.asciz	"methods"
	.long	13389
	.asciz	"position<u8, core::slice::memchr::memchr::{closure_env#0}>"
	.long	2235
	.asciz	"{impl#57}"
	.long	8642
	.asciz	"right_shift"
	.long	15716
	.asciz	"mem"
	.long	6465
	.asciz	"{impl#3}"
	.long	8166
	.asciz	"first_is<[u8]>"
	.long	12922
	.asciz	"panic_str"
	.long	449
	.asciz	"imp"
	.long	5454
	.asciz	"write"
	.long	8438
	.asciz	"decimal"
	.long	13341
	.asciz	"next<[usize; 4]>"
	.long	8178
	.asciz	"advance<[u8]>"
	.long	10005
	.asciz	"from_u64"
	.long	12198
	.asciz	"checked_sub"
	.long	12478
	.asciz	"advance_by<core::str::iter::CharIndices>"
	.long	395
	.asciz	"Arguments"
	.long	15074
	.asciz	"traits"
	.long	789
	.asciz	"GenericRadix"
	.long	7646
	.asciz	"write_str<core::fmt::builders::PadAdapter>"
	.long	13978
	.asciz	"slice_index_order_fail"
	.long	8122
	.asciz	"BiasedFp"
	.long	8424
	.asciz	"parse_digits<core::num::dec2flt::parse::parse_scientific::{closure_env#0}>"
	.long	6849
	.asciz	"{impl#4}"
	.long	15978
	.asciz	"and_then<(), core::fmt::Error, (), core::fmt::builders::{impl#3}::finish::{closure_env#0}>"
	.long	7979
	.asciz	"{impl#170}"
	.long	16590
	.asciz	"unicode"
	.long	12689
	.asciz	"next<core::slice::iter::Iter<core::fmt::ArgumentV1>>"
	.long	3035
	.asciz	"pad"
	.long	12569
	.asciz	"{closure#0}<&u8, usize, usize, core::iter::adapters::filter::{impl#2}::count::to_usize::{closure_env#0}<&u8, core::str::count::char_count_general_case::{closure_env#0}>, core::iter::traits::accum::{impl#48}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<u8>, core::iter::adapters::filter::{impl#2}::count::to_usize::{closure_env#0}<&u8, core::str::count::char_count_general_case::{closure_env#0}>>>>"
	.long	8676
	.asciz	"try_add_digit"
	.long	10209
	.asciz	"parse"
	.long	1665
	.asciz	"to_u32"
	.long	14021
	.asciz	"index<u8>"
	.long	12051
	.asciz	"parse_partial_inf_nan"
	.long	16570
	.asciz	"convert"
	.long	14720
	.asciz	"{impl#5}"
	.long	16131
	.asciz	"map<usize, u32, core::unicode::unicode_data::skip_search::{closure_env#1}<32, 707>>"
	.long	8017
	.asciz	"{impl#171}"
	.long	4861
	.asciz	"new"
	.long	7904
	.asciz	"call_once<core::fmt::USIZE_MARKER::{closure_env#0}, (&usize, &mut core::fmt::Formatter)>"
	.long	97
	.asciz	"offset<usize>"
	.long	8286
	.asciz	"eq_ignore_case<[u8]>"
	.long	9995
	.asciz	"float"
	.long	13299
	.asciz	"eq"
	.long	15096
	.asciz	"index"
	.long	13732
	.asciz	"index<u8, core::ops::range::RangeInclusive<usize>>"
	.long	5731
	.asciz	"builders"
	.long	12737
	.asciz	"next<core::slice::iter::Iter<u8>, u8>"
	.long	16251
	.asciz	"cell"
	.long	12212
	.asciz	"{impl#6}"
	.long	221
	.asciz	"offset<core::fmt::ArgumentV1>"
	.long	14906
	.asciz	"utf8_is_cont_byte"
	.long	12421
	.asciz	"Iterator"
	.long	8226
	.asciz	"offset_from<core::num::dec2flt::common::AsciiStr>"
	.long	12297
	.asciz	"wrapping_add"
	.long	14079
	.asciz	"align_to<u8, usize>"
	.long	4912
	.asciz	"debug_lower_hex"
	.long	13024
	.asciz	"PanicInfo"
	.long	260
	.asciz	"add<core::mem::maybe_uninit::MaybeUninit<u8>>"
	.long	13696
	.asciz	"index<u8, core::ops::range::RangeFrom<usize>>"
	.long	16500
	.asciz	"encode_utf8_raw"
	.long	12397
	.asciz	"forward_unchecked"
	.long	8317
	.asciz	"parse_digits<core::num::dec2flt::decimal::parse_decimal::{closure_env#0}>"
	.long	604
	.asciz	"{impl#7}"
	.long	351
	.asciz	"NonNull"
	.long	13324
	.asciz	"{impl#173}"
	.long	12416
	.asciz	"iterator"
	.long	16473
	.asciz	"is_grapheme_extended"
	.long	16486
	.asciz	"encode_utf8"
	.long	6507
	.asciz	"PadAdapter"
	.long	13664
	.asciz	"get_unchecked<core::mem::maybe_uninit::MaybeUninit<u8>>"
	.long	13000
	.asciz	"const_eval_select<(*const u8, usize), fn(*const u8, usize) -> usize, fn(*const u8, usize) -> usize, usize>"
	.long	15734
	.asciz	"replace<core::fmt::rt::v1::Alignment>"
	.long	1660
	.asciz	"{impl#8}"
	.long	12982
	.asciz	"intrinsics"
	.long	8262
	.asciz	"first_is2<core::num::dec2flt::common::AsciiStr>"
	.long	8508
	.asciz	"left_shift"
	.long	13454
	.asciz	"{impl#174}"
	.long	13878
	.asciz	"index_mut<u8, core::ops::range::RangeFrom<usize>>"
	.long	15631
	.asciz	"from_utf8"
	.long	5110
	.asciz	"PostPadding"
	.long	10087
	.asciz	"lemire"
	.long	15160
	.asciz	"index<core::ops::range::RangeFrom<usize>>"
	.long	8359
	.asciz	"parse_digits<core::num::dec2flt::decimal::parse_decimal::{closure_env#1}>"
	.long	16236
	.asciz	"from_bits"
	.long	15110
	.asciz	"{impl#9}"
	.long	15991
	.asciz	"and_then<(), core::fmt::Error, (), core::fmt::builders::{impl#4}::field::{closure_env#0}>"
	.long	16661
	.asciz	"decode_length"
	.long	8117
	.asciz	"common"
	.long	169
	.asciz	"offset<u8>"
	.long	15886
	.asciz	"min<usize>"
	.long	273
	.asciz	"align_offset"
	.long	15626
	.asciz	"converts"
	.long	13910
	.asciz	"slice_end_index_len_fail"
	.long	16019
	.asciz	"array"
	.long	16061
	.asciz	"index_mut<u8, core::ops::range::RangeFrom<usize>, 768>"
	.long	15747
	.asciz	"maybe_uninit"
	.long	15141
	.asciz	"get_unchecked"
	.long	61
	.asciz	"mut_ptr"
	.long	7998
	.asciz	"{impl#168}"
	.long	16170
	.asciz	"insert<core::fmt::builders::PadAdapter>"
	.long	12133
	.asciz	"unchecked_add"
	.long	12987
	.asciz	"copy_nonoverlapping<u8>"
	.long	2427
	.asciz	"Formatter"
	.long	13514
	.asciz	"post_inc_start<usize>"
	.long	7974
	.asciz	"arith"
	.long	1184
	.asciz	"{impl#89}"
	.long	866
	.asciz	"fmt_int<core::fmt::num::UpperHex, u32>"
	.long	14918
	.asciz	"next_code_point<core::slice::iter::Iter<u8>>"
	.long	15960
	.asciz	"Result"
	.long	8371
	.asciz	"parse_digits<core::num::dec2flt::decimal::parse_decimal::{closure_env#2}>"
	.long	8149
	.asciz	"ByteSlice"
	.long	48
	.asciz	"read_volatile<usize>"
	.long	13708
	.asciz	"index<u8, core::ops::range::RangeTo<usize>>"
	.long	10092
	.asciz	"power"
	.long	14196
	.asciz	"binary_search_by<u32, core::slice::{impl#0}::binary_search_by_key::{closure_env#0}<u32, u32, core::unicode::unicode_data::skip_search::{closure_env#0}<32, 707>>>"
	.long	14170
	.asciz	"get<&str, usize>"
	.long	8400
	.asciz	"step_by"
	.long	4983
	.asciz	"debug_upper_hex"
	.long	15900
	.asciz	"result"
	.long	7894
	.asciz	"function"
	.long	13757
	.asciz	"slice_start_index_len_fail"
	.long	5235
	.asciz	"fmt<core::fmt::Arguments>"
	.long	84
	.asciz	"add<u8>"
	.long	13478
	.asciz	"new<u8>"
	.long	1171
	.asciz	"digit"
	.long	12753
	.asciz	"panicking"
	.long	14240
	.asciz	"len_mismatch_fail"
	.long	292
	.asciz	"align_offset<u8>"
	.long	15788
	.asciz	"lt"
	.long	10130
	.asciz	"full_multiplication"
	.long	13029
	.asciz	"internal_constructor"
	.long	16157
	.asciz	"unwrap<u8>"
	.long	8154
	.asciz	"skip_chars<[u8]>"
	.long	13365
	.asciz	"next<core::fmt::rt::v1::Argument>"
	.long	5352
	.asciz	"fmt<dyn core::fmt::Debug>"
	.long	12703
	.asciz	"rev"
	.long	16184
	.asciz	"expect_failed"
	.long	13612
	.asciz	"get_unchecked<u8>"
	.long	14131
	.asciz	"split_at_unchecked<usize>"
	.long	12056
	.asciz	"parse_inf_rest"
	.long	7899
	.asciz	"FnOnce"
	.long	320
	.asciz	"write_unaligned<u64>"
	.long	10304
	.asciz	"parse_scientific"
	.long	159
	.asciz	"const_ptr"
	.long	8412
	.asciz	"step"
	.long	16144
	.asciz	"cloned<u8>"
	.long	5288
	.asciz	"fmt<&str>"
	.long	16631
	.asciz	"skip_search"
	.long	14183
	.asciz	"get<u8, core::ops::range::Range<usize>>"
	.long	146
	.asciz	"write<core::fmt::rt::v1::Alignment>"
	.long	15757
	.asciz	"write<u8>"
	.long	208
	.asciz	"add<usize>"
	.long	13473
	.asciz	"Iter"
	.long	5736
	.asciz	"debug_struct_new"
	.long	854
	.asciz	"fmt_int<core::fmt::num::UpperHex, u8>"
	.long	15924
	.asciz	"unwrap_failed"
	.long	234
	.asciz	"add<core::fmt::ArgumentV1>"
	.long	13329
	.asciz	"next<u8>"
	.long	15965
	.asciz	"and_then<(), core::fmt::Error, (), core::fmt::builders::{impl#3}::field::{closure_env#0}>"
	.long	14954
	.asciz	"run_utf8_validation"
	.long	13314
	.asciz	"slice"
	.long	6893
	.asciz	"DebugTuple"
	.long	12610
	.asciz	"to_usize"
	.long	13651
	.asciz	"get_unchecked<usize>"
	.long	14847
	.asciz	"iter"
	.long	8250
	.asciz	"read_u64_unchecked<core::num::dec2flt::common::AsciiStr>"
	.long	8341
	.asciz	"ByteSliceMut"
	.long	12185
	.asciz	"overflowing_sub"
	.long	13526
	.asciz	"new<(u8, u8)>"
	.long	12713
	.asciz	"next<core::slice::iter::Iter<u8>>"
	.long	12631
	.asciz	"take"
	.long	13953
	.asciz	"get_unchecked<core::fmt::ArgumentV1>"
	.long	7742
	.asciz	"write_fmt<core::fmt::builders::PadAdapter>"
	.long	14105
	.asciz	"as_chunks<usize, 4>"
	.long	4925
	.asciz	"wrap_buf<core::fmt::builders::{impl#1}::wrap::{closure_env#0}>"
	.long	13441
	.asciz	"next<(u8, u8)>"
	.long	376
	.asciz	"USIZE_MARKER"
	.long	12536
	.asciz	"adapters"
	.long	12146
	.asciz	"wrapping_mul"
	.long	13428
	.asciz	"rposition<u8, core::str::{impl#0}::floor_char_boundary::{closure_env#0}>"
	.long	8496
	.asciz	"trim"
	.long	12426
	.asciz	"fold<core::slice::iter::Iter<u8>, usize, core::iter::adapters::map::map_fold::{closure_env#0}<&u8, usize, usize, core::iter::adapters::filter::{impl#2}::count::to_usize::{closure_env#0}<&u8, core::str::count::char_count_general_case::{closure_env#0}>, core::iter::traits::accum::{impl#48}::sum::{closure_env#0}<core::iter::adapters::map::Map<core::slice::iter::Iter<u8>, core::iter::adapters::filter::{impl#2}::count::to_usize::{closure_env#0}<&u8, core::str::count::char_count_general_case::{closure_env#0}>>>>>"
	.long	307
	.asciz	"read_unaligned<u64>"
	.long	6549
	.asciz	"DebugStruct"
	.long	16211
	.asciz	"branch<&[u8]>"
	.long	16600
	.asciz	"skip_search<32, 707>"
	.long	10280
	.asciz	"parse_8digits"
	.long	2445
	.asciz	"padding"
	.long	5275
	.asciz	"fmt<str>"
	.long	6530
	.asciz	"wrap"
	.long	13563
	.asciz	"into_iter<(u8, u8)>"
	.long	14157
	.asciz	"get_unchecked<core::fmt::ArgumentV1, usize>"
	.long	12503
	.asciz	"sum<core::iter::adapters::map::Map<core::slice::iter::Iter<u8>, core::iter::adapters::filter::{impl#2}::count::to_usize::{closure_env#0}<&u8, core::str::count::char_count_general_case::{closure_env#0}>>>"
	.long	12493
	.asciz	"accum"
	.long	12834
	.asciz	"panic"
	.long	4899
	.asciz	"write_fmt"
	.long	7889
	.asciz	"ops"
	.long	12758
	.asciz	"panic_bounds_check"
	.long	13625
	.asciz	"index_mut<u8>"
	.long	13019
	.asciz	"panic_info"
	.long	14743
	.asciz	"eq<u8, u8>"
	.long	13188
	.asciz	"location"
	.long	6898
	.asciz	"field"
	.long	8707
	.asciz	"default"
	.long	15867
	.asciz	"Ord"
	.long	346
	.asciz	"non_null"
	.long	13353
	.asciz	"next<usize>"
	.long	14053
	.asciz	"get_unchecked<u8, core::ops::range::RangeFrom<usize>>"
	.long	7161
	.asciz	"{impl#10}"
	.long	16649
	.asciz	"decode_prefix_sum"
	.long	14092
	.asciz	"as_chunks_unchecked<usize, 4>"
	.long	8190
	.asciz	"first_is2<[u8]>"
	.long	818
	.asciz	"fmt_int<core::fmt::num::UpperHex, usize>"
	.long	13280
	.asciz	"downcast_ref<&str>"
	.long	15048
	.asciz	"find<char>"
	.long	13377
	.asciz	"next<core::fmt::ArgumentV1>"
	.long	16556
	.asciz	"next"
	.long	12439
	.asciz	"sum<core::iter::adapters::map::Map<core::slice::iter::Iter<u8>, core::iter::adapters::filter::{impl#2}::count::to_usize::{closure_env#0}<&u8, core::str::count::char_count_general_case::{closure_env#0}>>, usize>"
	.long	8383
	.asciz	"AsciiStr"
	.long	5753
	.asciz	"write_str"
	.long	16447
	.asciz	"len_utf8"
	.long	15839
	.asciz	"eq<[u8], [u8]>"
	.long	13213
	.asciz	"any"
	.long	7960
	.asciz	"call_once<fn(*const u8, usize) -> usize, (*const u8, usize)>"
	.long	12256
	.asciz	"is_utf8_char_boundary"
	.long	13294
	.asciz	"{impl#11}"
	.long	14041
	.asciz	"first<u8>"
	.long	8066
	.asciz	"fmt<usize>"
	.long	16029
	.asciz	"index<u8, core::ops::range::RangeFrom<usize>, 1308>"
	.long	12243
	.asciz	"is_ascii_digit"
	.long	8047
	.asciz	"into_slice_range"
	.long	14323
	.asciz	"repeat_byte"
	.long	10238
	.asciz	"try_parse_digits"
	.long	7667
	.asciz	"write_char<core::fmt::builders::PadAdapter>"
	.long	16595
	.asciz	"unicode_data"
	.long	14942
	.asciz	"utf8_first_byte"
	.long	16674
	.asciz	"printable"
	.long	8022
	.asciz	"div"
	.long	16575
	.asciz	"from_digit"
	.long	10268
	.asciz	"try_parse_19digits"
	.long	15854
	.asciz	"min_by<usize, fn(&usize, &usize) -> core::cmp::Ordering>"
	.long	414
	.asciz	"num"
	.long	16100
	.asciz	"Option"
	.long	15010
	.asciz	"char_indices"
	.long	14966
	.asciz	"utf8_char_width"
	.long	10026
	.asciz	"from_u64_bits"
	.long	13860
	.asciz	"get<u8>"
	.long	6878
	.asciz	"{closure#0}"
	.long	5051
	.asciz	"debug_tuple"
	.long	1112
	.asciz	"{impl#13}"
	.long	16076
	.asciz	"option"
	.long	842
	.asciz	"fmt_int<core::fmt::num::LowerHex, u32>"
	.long	16679
	.asciz	"is_printable"
	.long	794
	.asciz	"fmt_int<core::fmt::num::LowerHex, u16>"
	.long	14901
	.asciz	"validations"
	.long	8042
	.asciz	"RangeInclusive"
	.long	14715
	.asciz	"cmp"
	.long	13720
	.asciz	"index<core::mem::maybe_uninit::MaybeUninit<u8>, core::ops::range::RangeFrom<usize>>"
	.long	15115
	.asciz	"get"
	.long	8737
	.asciz	"{closure#1}"
	.long	4886
	.asciz	"debug_struct"
	.long	15802
	.asciz	"{impl#22}"
	.long	14979
	.asciz	"contains_nonascii"
	.long	12465
	.asciz	"nth<core::str::iter::CharIndices>"
	.long	8214
	.asciz	"first_is<core::num::dec2flt::common::AsciiStr>"
	.long	247
	.asciz	"offset<core::mem::maybe_uninit::MaybeUninit<u8>>"
	.long	14287
	.asciz	"memchr"
	.long	12452
	.asciz	"fold<core::iter::adapters::zip::Zip<core::slice::iter::Iter<u8>, core::slice::iter::Iter<u8>>, u8, core::num::dec2flt::common::ByteSlice::eq_ignore_case::{closure_env#0}<[u8]>>"
	.long	16042
	.asciz	"index<core::mem::maybe_uninit::MaybeUninit<u8>, core::ops::range::RangeFrom<usize>, 128>"
	.long	8448
	.asciz	"round"
	.long	8749
	.asciz	"{closure#2}"
	.long	8037
	.asciz	"range"
	.long	10226
	.asciz	"parse_partial_number"
	.long	7781
	.asciz	"{impl#15}"
	.long	2432
	.asciz	"sign_plus"
	.long	13250
	.asciz	"is<&str>"
	.long	43
	.asciz	"ptr"
	.long	112
	.asciz	"drop_in_place<&core::iter::adapters::copied::Copied<core::slice::iter::Iter<u8>>>"
	.long	14780
	.asciz	"count_chars"
	.long	14930
	.asciz	"utf8_acc_cont_byte"
	.long	13677
	.asciz	"index<core::mem::maybe_uninit::MaybeUninit<u8>>"
	.long	8303
	.asciz	"{closure#0}<[u8]>"
	.long	5422
	.asciz	"getcount"
	.long	436
	.asciz	"to_u8"
	.long	806
	.asciz	"fmt_int<core::fmt::num::LowerHex, usize>"
	.long	1678
	.asciz	"{impl#40}"
	.long	16256
	.asciz	"{impl#16}"
	.long	14725
	.asciz	"equal<u8, u8>"
	.long	0
.LpubNames_end0:
	.section	.debug_pubtypes,"",%progbits
	.long	.LpubTypes_end0-.LpubTypes_start0
.LpubTypes_start0:
	.short	2
	.long	.Lcu_begin0
	.long	17198
	.long	0
.LpubTypes_end0:
	.globl	__defmt_default_timestamp
	.type	__defmt_default_timestamp,%function
.set __defmt_default_timestamp, DefaultPreInit
.set _ZN9defmt_rtt5TAKEN17hf43d34cea1d1f773E.0, .L_MergedGlobals
	.size	_ZN9defmt_rtt5TAKEN17hf43d34cea1d1f773E.0, 1
.set _ZN9defmt_rtt17INTERRUPTS_ACTIVE17h5b0900411b8a2123E.0, .L_MergedGlobals+1
	.size	_ZN9defmt_rtt17INTERRUPTS_ACTIVE17h5b0900411b8a2123E.0, 1
.set _ZN9defmt_rtt7ENCODER17h37d868a299ff0f54E.0, .L_MergedGlobals+2
	.size	_ZN9defmt_rtt7ENCODER17h37d868a299ff0f54E.0, 1
.set _ZN9defmt_rtt7ENCODER17h37d868a299ff0f54E.1, .L_MergedGlobals+3
	.size	_ZN9defmt_rtt7ENCODER17h37d868a299ff0f54E.1, 1
.set _ZN9defmt_rtt7ENCODER17h37d868a299ff0f54E.2, .L_MergedGlobals+4
	.size	_ZN9defmt_rtt7ENCODER17h37d868a299ff0f54E.2, 1
	.globl	DEVICE_PERIPHERALS
.set DEVICE_PERIPHERALS, .L_MergedGlobals+5
	.size	DEVICE_PERIPHERALS, 1
.set _ZN14thermostat_eem3app34__rtic_internal_TIMER_QUEUE_MARKER17he9faface6382d983E.0, .L_MergedGlobals+8
	.size	_ZN14thermostat_eem3app34__rtic_internal_TIMER_QUEUE_MARKER17he9faface6382d983E.0, 4
.set thermostat_eem::app::__rtic_internal_settings_update_FQ::h175b155b93038abf, .L_MergedGlobals+12
	.size	thermostat_eem::app::__rtic_internal_settings_update_FQ::h175b155b93038abf, 12
.set thermostat_eem::app::__rtic_internal_telemetry_task_FQ::hbebcbb94c6df45de, .L_MergedGlobals+24
	.size	thermostat_eem::app::__rtic_internal_telemetry_task_FQ::hbebcbb94c6df45de, 12
.set thermostat_eem::app::__rtic_internal_ethernet_link_FQ::h69b5903c1ac022cc, .L_MergedGlobals+36
	.size	thermostat_eem::app::__rtic_internal_ethernet_link_FQ::h69b5903c1ac022cc, 12
.set thermostat_eem::app::__rtic_internal_P1_RQ::h47be5949b72b4c5a, .L_MergedGlobals+48
	.size	thermostat_eem::app::__rtic_internal_P1_RQ::h47be5949b72b4c5a, 16
.set thermostat_eem::app::__rtic_internal_MONOTONIC_STORAGE_Mono::h5ee2bb64b7fd93ea, .L_MergedGlobals+64
	.size	thermostat_eem::app::__rtic_internal_MONOTONIC_STORAGE_Mono::h5ee2bb64b7fd93ea, 16
	.section	".note.GNU-stack","",%progbits
	.eabi_attribute	30, 2
	.section	.debug_line,"",%progbits
.Lline_table_start0:
